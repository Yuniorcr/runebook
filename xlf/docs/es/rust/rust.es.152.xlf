<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="d0129491a9c802e31402a256b2ed3248526999bd" translate="yes" xml:space="preserve">
          <source>This enables some memory layout optimization. For example, &lt;code&gt;Option&amp;lt;NonZeroU8&amp;gt;&lt;/code&gt; is the same size as &lt;code&gt;u8&lt;/code&gt;:</source>
          <target state="translated">Esto permite cierta optimizaci&amp;oacute;n del dise&amp;ntilde;o de la memoria. Por ejemplo, &lt;code&gt;Option&amp;lt;NonZeroU8&amp;gt;&lt;/code&gt; tiene el mismo tama&amp;ntilde;o que &lt;code&gt;u8&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="444ef8a1b6149aa40edb45ac918d2fcc6dd0e6a5" translate="yes" xml:space="preserve">
          <source>This enables some memory layout optimization. For example, &lt;code&gt;Option&amp;lt;NonZeroUsize&amp;gt;&lt;/code&gt; is the same size as &lt;code&gt;usize&lt;/code&gt;:</source>
          <target state="translated">Esto permite cierta optimizaci&amp;oacute;n del dise&amp;ntilde;o de la memoria. Por ejemplo, &lt;code&gt;Option&amp;lt;NonZeroUsize&amp;gt;&lt;/code&gt; tiene el mismo tama&amp;ntilde;o que &lt;code&gt;usize&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="05b9c29faea2a683215e0b23ceda6c29cb84253c" translate="yes" xml:space="preserve">
          <source>This enum can contain either an &lt;a href=&quot;struct.ipv4addr&quot;&gt;&lt;code&gt;Ipv4Addr&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;struct.ipv6addr&quot;&gt;&lt;code&gt;Ipv6Addr&lt;/code&gt;&lt;/a&gt;, see their respective documentation for more details.</source>
          <target state="translated">Esta enumeraci&amp;oacute;n puede contener un &lt;a href=&quot;struct.ipv4addr&quot;&gt; &lt;code&gt;Ipv4Addr&lt;/code&gt; &lt;/a&gt; o un &lt;a href=&quot;struct.ipv6addr&quot;&gt; &lt;code&gt;Ipv6Addr&lt;/code&gt; &lt;/a&gt; , consulte su documentaci&amp;oacute;n respectiva para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="760b8f1ec007bba813777fc9f56dd941c92b8841" translate="yes" xml:space="preserve">
          <source>This enum has four variants with different types:</source>
          <target state="translated">Esta lista tiene cuatro variantes con diferentes tipos:</target>
        </trans-unit>
        <trans-unit id="ced6caa3ad1703b55bcd5c2e59bf560b6691cb01" translate="yes" xml:space="preserve">
          <source>This enum has the same role as &lt;a href=&quot;../primitive.never&quot;&gt;the &lt;code&gt;!&lt;/code&gt; &amp;ldquo;never&amp;rdquo; type&lt;/a&gt;, which is unstable in this version of Rust. When &lt;code&gt;!&lt;/code&gt; is stabilized, we plan to make &lt;code&gt;Infallible&lt;/code&gt; a type alias to it:</source>
          <target state="translated">Esta enumeraci&amp;oacute;n tiene el mismo papel que &lt;a href=&quot;../primitive.never&quot;&gt;el &lt;code&gt;!&lt;/code&gt; Tipo &quot;nunca&quot;&lt;/a&gt; , que es inestable en esta versi&amp;oacute;n de Rust. Cuando &lt;code&gt;!&lt;/code&gt; se estabiliza, planeamos hacer &lt;code&gt;Infallible&lt;/code&gt; un alias de tipo:</target>
        </trans-unit>
        <trans-unit id="6ee104c9c1676af30fcb1ff39c18e2ed9e455f59" translate="yes" xml:space="preserve">
          <source>This enum is returned from the &lt;code&gt;Generator::resume&lt;/code&gt; method and indicates the possible return values of a generator. Currently this corresponds to either a suspension point (&lt;code&gt;Yielded&lt;/code&gt;) or a termination point (&lt;code&gt;Complete&lt;/code&gt;).</source>
          <target state="translated">Esta enumeraci&amp;oacute;n se devuelve del m&amp;eacute;todo &lt;code&gt;Generator::resume&lt;/code&gt; e indica los posibles valores de retorno de un generador. Actualmente esto corresponde a un punto de suspensi&amp;oacute;n ( &lt;code&gt;Yielded&lt;/code&gt; ) o un punto de terminaci&amp;oacute;n ( &lt;code&gt;Complete&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b0fad9f14978736d5cc5f3492964033b9a38fd54" translate="yes" xml:space="preserve">
          <source>This enum represent one control message of variable type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1703fcf1fccea6643fefc20e49e4c80e84f95499" translate="yes" xml:space="preserve">
          <source>This enumeration is the list of possible errors that made &lt;a href=&quot;struct.receiver#method.recv_timeout&quot;&gt;&lt;code&gt;recv_timeout&lt;/code&gt;&lt;/a&gt; unable to return data when called. This can occur with both a &lt;a href=&quot;fn.channel&quot;&gt;&lt;code&gt;channel&lt;/code&gt;&lt;/a&gt; and a &lt;a href=&quot;fn.sync_channel&quot;&gt;&lt;code&gt;sync_channel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esta enumeraci&amp;oacute;n es la lista de posibles errores que hicieron que &lt;a href=&quot;struct.receiver#method.recv_timeout&quot;&gt; &lt;code&gt;recv_timeout&lt;/code&gt; &lt;/a&gt; no pudiera devolver datos cuando se llamaba. Esto puede ocurrir tanto con un &lt;a href=&quot;fn.channel&quot;&gt; &lt;code&gt;channel&lt;/code&gt; &lt;/a&gt; como con un &lt;a href=&quot;fn.sync_channel&quot;&gt; &lt;code&gt;sync_channel&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cbe05c4f5a229c7e20d58b03f49460f0df3da02f" translate="yes" xml:space="preserve">
          <source>This enumeration is the list of the possible error outcomes for the &lt;a href=&quot;struct.syncsender#method.try_send&quot;&gt;&lt;code&gt;try_send&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Esta enumeraci&amp;oacute;n es la lista de los posibles resultados de error del m&amp;eacute;todo &lt;a href=&quot;struct.syncsender#method.try_send&quot;&gt; &lt;code&gt;try_send&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6dc63139830daa8f080f2bf636d153d6ed98ad21" translate="yes" xml:space="preserve">
          <source>This enumeration is the list of the possible reasons that &lt;a href=&quot;struct.receiver#method.try_recv&quot;&gt;&lt;code&gt;try_recv&lt;/code&gt;&lt;/a&gt; could not return data when called. This can occur with both a &lt;a href=&quot;fn.channel&quot;&gt;&lt;code&gt;channel&lt;/code&gt;&lt;/a&gt; and a &lt;a href=&quot;fn.sync_channel&quot;&gt;&lt;code&gt;sync_channel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esta enumeraci&amp;oacute;n es la lista de las posibles razones por las que &lt;a href=&quot;struct.receiver#method.try_recv&quot;&gt; &lt;code&gt;try_recv&lt;/code&gt; &lt;/a&gt; no pudo devolver datos cuando se llam&amp;oacute;. Esto puede ocurrir tanto con un &lt;a href=&quot;fn.channel&quot;&gt; &lt;code&gt;channel&lt;/code&gt; &lt;/a&gt; como con un &lt;a href=&quot;fn.sync_channel&quot;&gt; &lt;code&gt;sync_channel&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c1093396faf4de8ad558d41dcf5187f56b3280a8" translate="yes" xml:space="preserve">
          <source>This error also frequently arises with iteration:</source>
          <target state="translated">Este error también se produce frecuentemente con la iteración:</target>
        </trans-unit>
        <trans-unit id="94b9a993ad00befb67d90a954bbd93d2df863b1b" translate="yes" xml:space="preserve">
          <source>This error appears when the curly braces contain an identifier which doesn't match with any of the type parameters or the string &lt;code&gt;Self&lt;/code&gt;. This might happen if you misspelled a type parameter, or if you intended to use literal curly braces. If it is the latter, escape the curly braces with a second curly brace of the same type; e.g., a literal &lt;code&gt;{&lt;/code&gt; is &lt;code&gt;{{&lt;/code&gt;.</source>
          <target state="translated">Este error aparece cuando las llaves contienen un identificador que no coincide con ninguno de los par&amp;aacute;metros de tipo o la cadena &lt;code&gt;Self&lt;/code&gt; . Esto podr&amp;iacute;a suceder si escribi&amp;oacute; mal un par&amp;aacute;metro de tipo o si ten&amp;iacute;a la intenci&amp;oacute;n de usar llaves literalmente. Si es lo &amp;uacute;ltimo, escapa de las llaves con una segunda llave del mismo tipo; por ejemplo, un literal &lt;code&gt;{&lt;/code&gt; es &lt;code&gt;{{&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="584182c12fbcdc7236283566d4fe892f8514a84a" translate="yes" xml:space="preserve">
          <source>This error appears when the curly braces do not contain an identifier. Please add one of the same name as a type parameter. If you intended to use literal braces, use &lt;code&gt;{{&lt;/code&gt; and &lt;code&gt;}}&lt;/code&gt; to escape them.</source>
          <target state="translated">Este error aparece cuando las llaves no contienen un identificador. Agregue uno con el mismo nombre como par&amp;aacute;metro de tipo. Si ten&amp;iacute;a la intenci&amp;oacute;n de usar llaves literales, use &lt;code&gt;{{&lt;/code&gt; y &lt;code&gt;}}&lt;/code&gt; para escapar de ellas.</target>
        </trans-unit>
        <trans-unit id="0250b09263b0cf211b3144438a4935e1e43d799a" translate="yes" xml:space="preserve">
          <source>This error can be fixed by changing &lt;code&gt;demo&lt;/code&gt; so that the destructor does not run while the string-data is borrowed; for example by taking &lt;code&gt;S&lt;/code&gt; by reference:</source>
          <target state="translated">Este error se puede solucionar cambiando la &lt;code&gt;demo&lt;/code&gt; straci&amp;oacute;n para que el destructor no se ejecute mientras se toman prestados los datos de cadena; por ejemplo, tomando &lt;code&gt;S&lt;/code&gt; por referencia:</target>
        </trans-unit>
        <trans-unit id="cf00137495add2df4af51c96509efb72f8de11bd" translate="yes" xml:space="preserve">
          <source>This error can be fixed by creating a reference to the fields of a struct, enum, or tuple using the &lt;code&gt;ref&lt;/code&gt; keyword:</source>
          <target state="translated">Este error se puede solucionar creando una referencia a los campos de una estructura, enumeraci&amp;oacute;n o tupla usando la palabra clave &lt;code&gt;ref&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0dff7bc132443224671e948d9ffe4c7e1624395f" translate="yes" xml:space="preserve">
          <source>This error can be fixed by fully reinitializing the structure in question:</source>
          <target state="translated">Este error puede corregirse reiniciando completamente la estructura en cuestión:</target>
        </trans-unit>
        <trans-unit id="9c719c44866ac61477960cb8b276b7f76f8c6533" translate="yes" xml:space="preserve">
          <source>This error can be fixed by making the container mutable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413b5d16e5f0759b900c5fe5dc8c6c4f80d50366" translate="yes" xml:space="preserve">
          <source>This error can be solved by adding type annotations that provide the missing information to the compiler. In this case, the solution is to use a concrete type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f0e10eb9c6b47c452a0e1f4fb8a082452a2d703" translate="yes" xml:space="preserve">
          <source>This error code indicates a mismatch between the lifetimes appearing in the function signature (i.e., the parameter types and the return type) and the data-flow found in the function body.</source>
          <target state="translated">Este código de error indica un desajuste entre las vidas que aparecen en la firma de la función (es decir,los tipos de parámetros y el tipo de retorno)y el flujo de datos que se encuentra en el cuerpo de la función.</target>
        </trans-unit>
        <trans-unit id="21caa47590bc7c04cd88dfba7269f8c13368e7a3" translate="yes" xml:space="preserve">
          <source>This error generally appears when two items with the same name are imported into a module. Here, the &lt;code&gt;foo&lt;/code&gt; functions are imported and reexported from the &lt;code&gt;collider&lt;/code&gt; module and therefore, when we're using &lt;code&gt;collider::foo()&lt;/code&gt;, both functions collide.</source>
          <target state="translated">Este error generalmente aparece cuando se importan dos elementos con el mismo nombre en un m&amp;oacute;dulo. Aqu&amp;iacute;, las funciones &lt;code&gt;foo&lt;/code&gt; se importan y se vuelven a exportar desde el m&amp;oacute;dulo &lt;code&gt;collider&lt;/code&gt; y, por lo tanto, cuando usamos &lt;code&gt;collider::foo()&lt;/code&gt; , ambas funciones chocan.</target>
        </trans-unit>
        <trans-unit id="3dfae522bf711393bcf17e2c72e0d218bd40909c" translate="yes" xml:space="preserve">
          <source>This error indicates a type mismatch in closure arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f7e9e73655654d551ddbe67dfdca41396aade3d" translate="yes" xml:space="preserve">
          <source>This error indicates a violation of one of Rust's orphan rules for trait implementations. The rule concerns the use of type parameters in an implementation of a foreign trait (a trait defined in another crate), and states that type parameters must be &quot;covered&quot; by a local type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5926fa6825473ce8b14051d29bff524913459d93" translate="yes" xml:space="preserve">
          <source>This error indicates a violation of one of Rust's orphan rules for trait implementations. The rule concerns the use of type parameters in an implementation of a foreign trait (a trait defined in another crate), and states that type parameters must be &quot;covered&quot; by a local type. To understand what this means, it is perhaps easiest to consider a few examples.</source>
          <target state="translated">Este error indica una violación de una de las reglas huérfanas de Rust para la implementación de los rasgos.La regla se refiere al uso de parámetros de tipo en una implementación de un rasgo extranjero (un rasgo definido en otra caja),y establece que los parámetros de tipo deben estar &quot;cubiertos&quot; por un tipo local.Para comprender lo que esto significa,tal vez sea más fácil considerar algunos ejemplos.</target>
        </trans-unit>
        <trans-unit id="62c66f8f6d53d3993670c86c1f09308676282e5b" translate="yes" xml:space="preserve">
          <source>This error indicates a violation of one of Rust's orphan rules for trait implementations. The rule prohibits any implementation of a foreign trait (a trait defined in another crate) where</source>
          <target state="translated">Este error indica una violación de una de las reglas huérfanas de Rust para la implementación de los rasgos.La norma prohíbe cualquier implementación de un rasgo extranjero (un rasgo definido en otra caja)cuando</target>
        </trans-unit>
        <trans-unit id="447a5e9fa4c8cf25c5cd5302f4311b3fbd33ec5e" translate="yes" xml:space="preserve">
          <source>This error indicates that a &lt;code&gt;#[lang = &quot;..&quot;]&lt;/code&gt; attribute was placed on the wrong type of item.</source>
          <target state="translated">Este error indica que se coloc&amp;oacute; un atributo &lt;code&gt;#[lang = &quot;..&quot;]&lt;/code&gt; en el tipo de art&amp;iacute;culo incorrecto.</target>
        </trans-unit>
        <trans-unit id="04b6c6e07e059a0181ccbe377eeeabdfa436d081" translate="yes" xml:space="preserve">
          <source>This error indicates that a &lt;code&gt;#[non_exhaustive]&lt;/code&gt; attribute was incorrectly placed on something other than a struct or enum.</source>
          <target state="translated">Este error indica que un atributo &lt;code&gt;#[non_exhaustive]&lt;/code&gt; se coloc&amp;oacute; incorrectamente en algo que no sea una estructura o enumeraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="7022f431bbd32573cf9101aaa229f54136c6e815" translate="yes" xml:space="preserve">
          <source>This error indicates that a &lt;code&gt;#[repr(..)]&lt;/code&gt; attribute was placed on an unsupported item.</source>
          <target state="translated">Este error indica que se coloc&amp;oacute; un atributo &lt;code&gt;#[repr(..)]&lt;/code&gt; en un elemento no admitido.</target>
        </trans-unit>
        <trans-unit id="ca9d1588d95295137d9296e3cc73990ee881720a" translate="yes" xml:space="preserve">
          <source>This error indicates that a binary assignment operator like &lt;code&gt;+=&lt;/code&gt; or &lt;code&gt;^=&lt;/code&gt; was applied to a type that doesn't support it. For example:</source>
          <target state="translated">Este error indica que se aplic&amp;oacute; un operador de asignaci&amp;oacute;n binaria como &lt;code&gt;+=&lt;/code&gt; o &lt;code&gt;^=&lt;/code&gt; a un tipo que no lo admite. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="942586ad68f246da14ea422c40de5e3f0b9face6" translate="yes" xml:space="preserve">
          <source>This error indicates that a incorrect visibility restriction was specified.</source>
          <target state="translated">Este error indica que se especificó una restricción de visibilidad incorrecta.</target>
        </trans-unit>
        <trans-unit id="0ed5220e5bb81a5a254920c1211412f9ef92a217" translate="yes" xml:space="preserve">
          <source>This error indicates that a lifetime is missing from a type. If it is an error inside a function signature, the problem may be with failing to adhere to the lifetime elision rules (see below).</source>
          <target state="translated">Este error indica que falta una vida entera en un tipo.Si se trata de un error dentro de la firma de una función,el problema puede ser que no se respeten las reglas de elisión de la vida útil (véase más abajo).</target>
        </trans-unit>
        <trans-unit id="163c07e3082230bfd9dd310e7a36d455707b90b1" translate="yes" xml:space="preserve">
          <source>This error indicates that a mutable variable is being used while it is still captured by a closure. Because the closure has borrowed the variable, it is not available for use until the closure goes out of scope.</source>
          <target state="translated">Este error indica que se está utilizando una variable mutable mientras aún es capturada por un cierre.Debido a que el cierre ha tomado prestada la variable,no está disponible para su uso hasta que el cierre quede fuera de alcance.</target>
        </trans-unit>
        <trans-unit id="5f5aeaeedbb41e69e7d361beb7e7f664611c650d" translate="yes" xml:space="preserve">
          <source>This error indicates that a mutable variable is used while it is still captured by a closure. Because the closure has borrowed the variable, it is not available until the closure goes out of scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f276e617d109dc1e2831917bc3e9ec17e8a46ef1" translate="yes" xml:space="preserve">
          <source>This error indicates that a pattern for a struct fails to specify a sub-pattern for every one of the struct's fields. Ensure that each field from the struct's definition is mentioned in the pattern, or use &lt;code&gt;..&lt;/code&gt; to ignore unwanted fields.</source>
          <target state="translated">Este error indica que un patr&amp;oacute;n para una estructura no especifica un subpatr&amp;oacute;n para cada uno de los campos de la estructura. Aseg&amp;uacute;rese de que cada campo de la definici&amp;oacute;n de la estructura se mencione en el patr&amp;oacute;n, o use &lt;code&gt;..&lt;/code&gt; para ignorar los campos no deseados.</target>
        </trans-unit>
        <trans-unit id="cf2673db078cb233aef2cf4d975d04209851d888" translate="yes" xml:space="preserve">
          <source>This error indicates that a pointer to a trait type cannot be implicitly dereferenced by a pattern. Every trait defines a type, but because the size of trait implementors isn't fixed, this type has no compile-time size. Therefore, all accesses to trait types must be through pointers. If you encounter this error you should try to avoid dereferencing the pointer.</source>
          <target state="translated">Este error indica que un puntero a un tipo de rasgo no puede ser implícitamente desviado por un patrón.Cada rasgo define un tipo,pero debido a que el tamaño de los implementadores de rasgos no está fijado,este tipo no tiene un tamaño en tiempo de compilación.Por lo tanto,todos los accesos a los tipos de rasgos deben ser a través de punteros.Si encuentras este error,debes tratar de evitar desreferenciar el puntero.</target>
        </trans-unit>
        <trans-unit id="828017bc333a648d7ba2ba05b6d8defb66538498" translate="yes" xml:space="preserve">
          <source>This error indicates that a struct pattern attempted to extract a non-existent field from a struct. Struct fields are identified by the name used before the colon &lt;code&gt;:&lt;/code&gt; so struct patterns should resemble the declaration of the struct type being matched.</source>
          <target state="translated">Este error indica que un patr&amp;oacute;n de estructura intent&amp;oacute; extraer un campo inexistente de una estructura. Los campos de estructura se identifican por el nombre que se usa antes de los dos puntos &lt;code&gt;:&lt;/code&gt; por lo que los patrones de estructura deben parecerse a la declaraci&amp;oacute;n del tipo de estructura que se est&amp;aacute; haciendo coincidir.</target>
        </trans-unit>
        <trans-unit id="8fe4ff510197fbaaaaa06c8b33b203c1e4dc7f1a" translate="yes" xml:space="preserve">
          <source>This error indicates that a temporary value is being dropped while a borrow is still in active use.</source>
          <target state="translated">Este error indica que un valor temporal está siendo abandonado mientras un préstamo está todavía en uso activo.</target>
        </trans-unit>
        <trans-unit id="29f636e2d8527491e9c968890f3142a6d2d79a49" translate="yes" xml:space="preserve">
          <source>This error indicates that a type or lifetime parameter has been declared but not actually used. Here is an example that demonstrates the error:</source>
          <target state="translated">Este error indica que se ha declarado un tipo o parámetro de vida útil pero no se ha utilizado realmente.Aquí hay un ejemplo que demuestra el error:</target>
        </trans-unit>
        <trans-unit id="021899c7481112f5b1115194dfebb6c6433d75e6" translate="yes" xml:space="preserve">
          <source>This error indicates that a variable usage inside an inner function is invalid because the variable comes from a dynamic environment. Inner functions do not have access to their containing environment.</source>
          <target state="translated">Este error indica que el uso de una variable dentro de una función interna es inválido porque la variable proviene de un entorno dinámico.Las funciones internas no tienen acceso a su entorno de contención.</target>
        </trans-unit>
        <trans-unit id="ee2b7895f62fe245340d50c3f8c134d38d139ea0" translate="yes" xml:space="preserve">
          <source>This error indicates that an &lt;code&gt;#[inline(..)]&lt;/code&gt; attribute was incorrectly placed on something other than a function or method.</source>
          <target state="translated">Este error indica que un atributo &lt;code&gt;#[inline(..)]&lt;/code&gt; se coloc&amp;oacute; incorrectamente en algo que no sea una funci&amp;oacute;n o m&amp;eacute;todo.</target>
        </trans-unit>
        <trans-unit id="b354ce81cf352c1f70206a250c5709ec2f51795d" translate="yes" xml:space="preserve">
          <source>This error indicates that an attempted implementation of a trait method has the wrong number of function parameters.</source>
          <target state="translated">Este error indica que un intento de implementación de un método de rasgos tiene el número incorrecto de parámetros de función.</target>
        </trans-unit>
        <trans-unit id="e0c31ba5c6bda555cd8ea81a836bf176c496c77b" translate="yes" xml:space="preserve">
          <source>This error indicates that an attempted implementation of a trait method has the wrong number of type or const parameters.</source>
          <target state="translated">Este error indica que un intento de aplicación de un método de rasgos tiene el número incorrecto de parámetros de tipo o constancia.</target>
        </trans-unit>
        <trans-unit id="b75e5fdc31d31d1c4e71b1b39da466c4c14335c3" translate="yes" xml:space="preserve">
          <source>This error indicates that an empty match expression is invalid because the type it is matching on is non-empty (there exist values of this type). In safe code it is impossible to create an instance of an empty type, so empty match expressions are almost never desired. This error is typically fixed by adding one or more cases to the match expression.</source>
          <target state="translated">Este error indica que una expresión de coincidencia vacía es inválida porque el tipo en el que se está haciendo la coincidencia no está vacío (existen valores de este tipo).En código seguro es imposible crear una instancia de un tipo vacío,por lo que las expresiones de coincidencia vacías casi nunca son deseadas.Este error se corrige típicamente añadiendo uno o más casos a la expresión de coincidencia.</target>
        </trans-unit>
        <trans-unit id="aa5d0ed3544dd02116d741311bf5dc31cbf1e877" translate="yes" xml:space="preserve">
          <source>This error indicates that during an attempt to build a struct or struct-like enum variant, one of the fields was not provided. Erroneous code example:</source>
          <target state="translated">Este error indica que durante un intento de construir una variante de enumeración estructural,uno de los campos no fue proporcionado.Ejemplo de código erróneo:</target>
        </trans-unit>
        <trans-unit id="4fe613edd2e0d9ed1781cdd172cb95fcc86dda95" translate="yes" xml:space="preserve">
          <source>This error indicates that during an attempt to build a struct or struct-like enum variant, one of the fields was specified more than once. Each field should be specified exactly one time. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e8ed17cc79bcd070351fc2c779882f025c94d0d" translate="yes" xml:space="preserve">
          <source>This error indicates that during an attempt to build a struct or struct-like enum variant, one of the fields was specified more than once. Erroneous code example:</source>
          <target state="translated">Este error indica que durante un intento de construir una variante de enumeración estructural,uno de los campos se especificó más de una vez.Ejemplo de código erróneo:</target>
        </trans-unit>
        <trans-unit id="184a0c9f21c2159367397ab03b1af11810a4b7a9" translate="yes" xml:space="preserve">
          <source>This error indicates that next we need to create an associated function named &lt;code&gt;new&lt;/code&gt; for &lt;code&gt;ThreadPool&lt;/code&gt;. We also know that &lt;code&gt;new&lt;/code&gt; needs to have one parameter that can accept &lt;code&gt;4&lt;/code&gt; as an argument and should return a &lt;code&gt;ThreadPool&lt;/code&gt; instance. Let&amp;rsquo;s implement the simplest &lt;code&gt;new&lt;/code&gt; function that will have those characteristics:</source>
          <target state="translated">Este error indica que a continuaci&amp;oacute;n debemos crear una funci&amp;oacute;n asociada llamada &lt;code&gt;new&lt;/code&gt; para &lt;code&gt;ThreadPool&lt;/code&gt; . Tambi&amp;eacute;n sabemos que &lt;code&gt;new&lt;/code&gt; necesita tener un par&amp;aacute;metro que pueda aceptar &lt;code&gt;4&lt;/code&gt; como argumento y deber&amp;iacute;a devolver una instancia de &lt;code&gt;ThreadPool&lt;/code&gt; . Implementemos la &lt;code&gt;new&lt;/code&gt; funci&amp;oacute;n m&amp;aacute;s simple que tendr&amp;aacute; esas caracter&amp;iacute;sticas:</target>
        </trans-unit>
        <trans-unit id="2dad13e650883f25d2104ae52eca1fef407497bf" translate="yes" xml:space="preserve">
          <source>This error indicates that not enough type parameters were found in a type or trait.</source>
          <target state="translated">Este error indica que no se encontraron suficientes parámetros de tipo en un tipo o rasgo.</target>
        </trans-unit>
        <trans-unit id="ca21a72c98d3df2023442d374a3dadbb098c691b" translate="yes" xml:space="preserve">
          <source>This error indicates that some types or traits depend on each other and therefore cannot be constructed.</source>
          <target state="translated">Este error indica que algunos tipos o rasgos dependen unos de otros y por lo tanto no pueden ser construidos.</target>
        </trans-unit>
        <trans-unit id="04671a501f0a2d188e9fcc11f1a02fbc634b9fe6" translate="yes" xml:space="preserve">
          <source>This error indicates that the bindings in a match arm would require a value to be moved into more than one location, thus violating unique ownership. Code like the following is invalid as it requires the entire &lt;code&gt;Option&amp;lt;String&amp;gt;&lt;/code&gt; to be moved into a variable called &lt;code&gt;op_string&lt;/code&gt; while simultaneously requiring the inner &lt;code&gt;String&lt;/code&gt; to be moved into a variable called &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">Este error indica que las vinculaciones en un brazo de coincidencia requerir&amp;iacute;an que un valor se moviera a m&amp;aacute;s de una ubicaci&amp;oacute;n, violando as&amp;iacute; la propiedad &amp;uacute;nica. Un c&amp;oacute;digo como el siguiente no es v&amp;aacute;lido ya que requiere que toda la &lt;code&gt;Option&amp;lt;String&amp;gt;&lt;/code&gt; se mueva a una variable llamada &lt;code&gt;op_string&lt;/code&gt; mientras que simult&amp;aacute;neamente requiere que la &lt;code&gt;String&lt;/code&gt; interna se mueva a una variable llamada &lt;code&gt;s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0593569b391769294fc0cbd6c435421f4f05566e" translate="yes" xml:space="preserve">
          <source>This error indicates that the compiler cannot guarantee a matching pattern for one or more possible inputs to a match expression. Guaranteed matches are required in order to assign values to match expressions, or alternatively, determine the flow of execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6ec80fb058ca19fb5e7892d541e007d08b04d8f" translate="yes" xml:space="preserve">
          <source>This error indicates that the compiler cannot guarantee a matching pattern for one or more possible inputs to a match expression. Guaranteed matches are required in order to assign values to match expressions, or alternatively, determine the flow of execution. Erroneous code example:</source>
          <target state="translated">Este error indica que el compilador no puede garantizar un patrón de coincidencia para una o más entradas posibles de una expresión de coincidencia.Las coincidencias garantizadas son necesarias para asignar valores a las expresiones coincidentes o,alternativamente,para determinar el flujo de ejecución.Ejemplo de código erróneo:</target>
        </trans-unit>
        <trans-unit id="561856cda5e25152013aec070f3d54bab7aa1df8" translate="yes" xml:space="preserve">
          <source>This error indicates that the compiler found multiple functions with the &lt;code&gt;#[main]&lt;/code&gt; attribute. This is an error because there must be a unique entry point into a Rust program. Example:</source>
          <target state="translated">Este error indica que el compilador encontr&amp;oacute; varias funciones con el atributo &lt;code&gt;#[main]&lt;/code&gt; . Esto es un error porque debe haber un punto de entrada &amp;uacute;nico en un programa de Rust. Ejemplo:</target>
        </trans-unit>
        <trans-unit id="5bea3375dcc80f531e3766516bd9f6d7115c2ccf" translate="yes" xml:space="preserve">
          <source>This error indicates that the compiler found multiple functions with the &lt;code&gt;#[start]&lt;/code&gt; attribute. This is an error because there must be a unique entry point into a Rust program. Example:</source>
          <target state="translated">Este error indica que el compilador encontr&amp;oacute; varias funciones con el atributo &lt;code&gt;#[start]&lt;/code&gt; . Esto es un error porque debe haber un punto de entrada &amp;uacute;nico en un programa de Rust. Ejemplo:</target>
        </trans-unit>
        <trans-unit id="8f30ae6ab3b3757a6fafd59d7ba821bfd1db82b1" translate="yes" xml:space="preserve">
          <source>This error indicates that the compiler was unable to sensibly evaluate a constant expression that had to be evaluated. Attempting to divide by 0 or causing an integer overflow are two ways to induce this error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f36d8b8d1d8446198729b807cb2a4a2419af004e" translate="yes" xml:space="preserve">
          <source>This error indicates that the compiler was unable to sensibly evaluate an constant expression that had to be evaluated. Attempting to divide by 0 or causing integer overflow are two ways to induce this error. For example:</source>
          <target state="translated">Este error indica que el compilador fue incapaz de evaluar sensiblemente una expresión constante que debía ser evaluada.Intentar dividir por 0 o causar un desbordamiento de números enteros son dos maneras de inducir este error.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="6a1e2255560b86b2d9499ff55662d827b519b332" translate="yes" xml:space="preserve">
          <source>This error indicates that the numeric value for the method being passed exists but the type of the numeric value or binding could not be identified.</source>
          <target state="translated">Este error indica que el valor numérico del método que se está pasando existe pero no se ha podido identificar el tipo de valor numérico o de enlace.</target>
        </trans-unit>
        <trans-unit id="148347b598d68fa69c31f92c37c1da55d76c0063" translate="yes" xml:space="preserve">
          <source>This error indicates that the struct, enum or enum variant cannot be instantiated from outside of the defining crate as it has been marked as &lt;code&gt;non_exhaustive&lt;/code&gt; and as such more fields/variants may be added in future that could cause adverse side effects for this code.</source>
          <target state="translated">Este error indica que la estructura, enumeraci&amp;oacute;n o variante de enumeraci&amp;oacute;n no se puede instanciar desde fuera de la caja de definici&amp;oacute;n, ya que se ha marcado como no &lt;code&gt;non_exhaustive&lt;/code&gt; y, por lo tanto, se pueden agregar m&amp;aacute;s campos / variantes en el futuro que podr&amp;iacute;an causar efectos secundarios adversos para este c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="fcad2c51ea5b37a57bae2601eed616fe3e726b2e" translate="yes" xml:space="preserve">
          <source>This error indicates that the struct, enum or enum variant must be matched non-exhaustively as it has been marked as &lt;code&gt;non_exhaustive&lt;/code&gt;.</source>
          <target state="translated">Este error indica que la estructura, la enumeraci&amp;oacute;n o la variante de enumeraci&amp;oacute;n deben coincidir de forma no exhaustiva, ya que se ha marcado como no &lt;code&gt;non_exhaustive&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="37c7a2a28ca533246457e808e16c999f3f050492" translate="yes" xml:space="preserve">
          <source>This error indicates that there is a mismatch between generic parameters and impl Trait parameters in a trait declaration versus its impl.</source>
          <target state="translated">Este error indica que hay un desajuste entre los parámetros genéricos y los parámetros de rasgo implícitos en una declaración de rasgo frente a su implicación.</target>
        </trans-unit>
        <trans-unit id="51a28020fb3170ca33d27d23beb6ff4c2ae9ce5c" translate="yes" xml:space="preserve">
          <source>This error indicates that too many type parameters were found in a type or trait.</source>
          <target state="translated">Este error indica que se encontraron demasiados parámetros de tipo en un tipo o rasgo.</target>
        </trans-unit>
        <trans-unit id="52a40c02e70b32e434b6bbe135867f805601219b" translate="yes" xml:space="preserve">
          <source>This error indicates that type inference did not result in one unique possible type, and extra information is required. In most cases this can be provided by adding a type annotation. Sometimes you need to specify a generic type parameter manually.</source>
          <target state="translated">Este error indica que la inferencia del tipo no dio lugar a un único tipo posible,y se requiere información adicional.En la mayoría de los casos,esto se puede proporcionar añadiendo una anotación de tipo.A veces es necesario especificar manualmente un parámetro de tipo genérico.</target>
        </trans-unit>
        <trans-unit id="4c3b94702358e1162bf8effa04b8b4b7e098714c" translate="yes" xml:space="preserve">
          <source>This error indicates that you are trying to borrow a variable as mutable when it has already been borrowed as immutable.</source>
          <target state="translated">Este error indica que se está tratando de tomar prestada una variable como mutable cuando ya ha sido prestada como inmutable.</target>
        </trans-unit>
        <trans-unit id="5d266dd2a168d28b90102ea5f40d828bae3909b4" translate="yes" xml:space="preserve">
          <source>This error indicates the use of a loop keyword (&lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt;) inside a closure but outside of any loop. Erroneous code example:</source>
          <target state="translated">Este error indica el uso de una palabra clave de bucle ( &lt;code&gt;break&lt;/code&gt; o &lt;code&gt;continue&lt;/code&gt; ) dentro de un cierre pero fuera de cualquier bucle. Ejemplo de c&amp;oacute;digo err&amp;oacute;neo:</target>
        </trans-unit>
        <trans-unit id="a14d78d3da966b89fe122674705e062ddb4c4c41" translate="yes" xml:space="preserve">
          <source>This error indicates the use of a loop keyword (&lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt;) outside of a loop. Without a loop to break out of or continue in, no sensible action can be taken. Erroneous code example:</source>
          <target state="translated">Este error indica el uso de una palabra clave de bucle ( &lt;code&gt;break&lt;/code&gt; o &lt;code&gt;continue&lt;/code&gt; ) fuera de un bucle. Sin un bucle para salir o continuar, no se puede tomar ninguna acci&amp;oacute;n sensata. Ejemplo de c&amp;oacute;digo err&amp;oacute;neo:</target>
        </trans-unit>
        <trans-unit id="50520313e8b1d1b1c6569c98ff40cb57f7812069" translate="yes" xml:space="preserve">
          <source>This error is created by the &lt;a href=&quot;struct.cstr#method.from_bytes_with_nul&quot;&gt;&lt;code&gt;CStr::from_bytes_with_nul&lt;/code&gt;&lt;/a&gt; method. See its documentation for more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b9e91e9541342a47e9d0b1ac521444fa8e68a88" translate="yes" xml:space="preserve">
          <source>This error is created by the &lt;a href=&quot;struct.cstr#method.from_bytes_with_nul&quot;&gt;&lt;code&gt;from_bytes_with_nul&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;struct.cstr&quot;&gt;&lt;code&gt;CStr&lt;/code&gt;&lt;/a&gt;. See its documentation for more.</source>
          <target state="translated">Este error es creado por el &lt;a href=&quot;struct.cstr#method.from_bytes_with_nul&quot;&gt; &lt;code&gt;from_bytes_with_nul&lt;/code&gt; &lt;/a&gt; m&amp;eacute;todo de &lt;a href=&quot;struct.cstr&quot;&gt; &lt;code&gt;CStr&lt;/code&gt; &lt;/a&gt; . Consulte su documentaci&amp;oacute;n para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="bbb5b15b9e8658856b49fb418cbe7dfc72c8452a" translate="yes" xml:space="preserve">
          <source>This error is created by the &lt;a href=&quot;struct.cstring#method.from_vec_with_nul&quot;&gt;&lt;code&gt;CString::from_vec_with_nul&lt;/code&gt;&lt;/a&gt; method. See its documentation for more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f88231c82f77383d008a182af5374b0e8d20578" translate="yes" xml:space="preserve">
          <source>This error is created by the &lt;a href=&quot;struct.cstring#method.new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt;. See its documentation for more.</source>
          <target state="translated">Este error lo crea el &lt;a href=&quot;struct.cstring#method.new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; m&amp;eacute;todo en &lt;a href=&quot;struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt; . Consulte su documentaci&amp;oacute;n para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="e66887716e5bc2fbc972f3ffc3450120cd6c7b7e" translate="yes" xml:space="preserve">
          <source>This error is fairly cryptic because the problem is fairly cryptic. To call a &lt;code&gt;FnOnce&lt;/code&gt; closure that is stored in a &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; (which is what our &lt;code&gt;Job&lt;/code&gt; type alias is), the closure needs to move itself &lt;em&gt;out&lt;/em&gt; of the &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; because the closure takes ownership of &lt;code&gt;self&lt;/code&gt; when we call it. In general, Rust doesn&amp;rsquo;t allow us to move a value out of a &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; because Rust doesn&amp;rsquo;t know how big the value inside the &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; will be: recall in Chapter 15 that we used &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; precisely because we had something of an unknown size that we wanted to store in a &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; to get a value of a known size.</source>
          <target state="translated">Este error es bastante cr&amp;iacute;ptico porque el problema es bastante cr&amp;iacute;ptico. Para llamar a un cierre &lt;code&gt;FnOnce&lt;/code&gt; que est&amp;aacute; almacenado en un &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; (que es el alias de nuestro tipo de &lt;code&gt;Job&lt;/code&gt; ), el cierre necesita moverse &lt;em&gt;fuera&lt;/em&gt; del &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; porque el cierre se apropia de &lt;code&gt;self&lt;/code&gt; cuando lo llamamos. En general, Rust no nos permite sacar un valor de &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; porque Rust no sabe qu&amp;eacute; tan grande ser&amp;aacute; el valor dentro de &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; : recuerde en el Cap&amp;iacute;tulo 15 que usamos &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; precisamente porque ten&amp;iacute;amos algo de tama&amp;ntilde;o desconocido que quer&amp;iacute;amos almacenar en un &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; para obtener un valor de tama&amp;ntilde;o conocido.</target>
        </trans-unit>
        <trans-unit id="ac1c7bfe67c403881a0d5e5220daf766f18ab15b" translate="yes" xml:space="preserve">
          <source>This error is used as the error type for the &lt;a href=&quot;../str/trait.fromstr&quot;&gt;&lt;code&gt;FromStr&lt;/code&gt;&lt;/a&gt; implementation for &lt;a href=&quot;../primitive.f32&quot;&gt;&lt;code&gt;f32&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../primitive.f64&quot;&gt;&lt;code&gt;f64&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Este error se utiliza como tipo de error para &lt;a href=&quot;../str/trait.fromstr&quot;&gt; &lt;code&gt;FromStr&lt;/code&gt; &lt;/a&gt; aplicaci&amp;oacute;n de &lt;a href=&quot;../primitive.f32&quot;&gt; &lt;code&gt;f32&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;../primitive.f64&quot;&gt; &lt;code&gt;f64&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a413bd30b0780353f6f0cb9ec7112a60510b4c1b" translate="yes" xml:space="preserve">
          <source>This error is used as the error type for the &lt;a href=&quot;../str/trait.fromstr&quot;&gt;&lt;code&gt;FromStr&lt;/code&gt;&lt;/a&gt; implementation for &lt;a href=&quot;enum.ipaddr&quot;&gt;&lt;code&gt;IpAddr&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;struct.ipv4addr&quot;&gt;&lt;code&gt;Ipv4Addr&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;struct.ipv6addr&quot;&gt;&lt;code&gt;Ipv6Addr&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;enum.socketaddr&quot;&gt;&lt;code&gt;SocketAddr&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;struct.socketaddrv4&quot;&gt;&lt;code&gt;SocketAddrV4&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;struct.socketaddrv6&quot;&gt;&lt;code&gt;SocketAddrV6&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Este error se utiliza como el tipo de error para el &lt;a href=&quot;../str/trait.fromstr&quot;&gt; &lt;code&gt;FromStr&lt;/code&gt; &lt;/a&gt; aplicaci&amp;oacute;n de &lt;a href=&quot;enum.ipaddr&quot;&gt; &lt;code&gt;IpAddr&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;struct.ipv4addr&quot;&gt; &lt;code&gt;Ipv4Addr&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;struct.ipv6addr&quot;&gt; &lt;code&gt;Ipv6Addr&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;enum.socketaddr&quot;&gt; &lt;code&gt;SocketAddr&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;struct.socketaddrv4&quot;&gt; &lt;code&gt;SocketAddrV4&lt;/code&gt; &lt;/a&gt; y&lt;a href=&quot;struct.socketaddrv6&quot;&gt; &lt;code&gt;SocketAddrV6&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dbd5a817ebd0158354fc9b6704f3a0f2b0fc517f" translate="yes" xml:space="preserve">
          <source>This error is used as the error type for the &lt;code&gt;from_str_radix()&lt;/code&gt; functions on the primitive integer types, such as &lt;a href=&quot;../primitive.i8#method.from_str_radix&quot;&gt;&lt;code&gt;i8::from_str_radix&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Este error se utiliza como tipo de error para el &lt;code&gt;from_str_radix()&lt;/code&gt; funciones from_str_radix () en los tipos de enteros primitivos, como &lt;a href=&quot;../primitive.i8#method.from_str_radix&quot;&gt; &lt;code&gt;i8::from_str_radix&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="022d759f57798a79780636ae9f03f6fedf32312c" translate="yes" xml:space="preserve">
          <source>This error lets us know that either we&amp;rsquo;re passing something to &lt;code&gt;Screen&lt;/code&gt; we didn&amp;rsquo;t mean to pass and we should pass a different type or we should implement &lt;code&gt;Draw&lt;/code&gt; on &lt;code&gt;String&lt;/code&gt; so that &lt;code&gt;Screen&lt;/code&gt; is able to call &lt;code&gt;draw&lt;/code&gt; on it.</source>
          <target state="translated">Este error nos permite saber que estamos pasando algo a la &lt;code&gt;Screen&lt;/code&gt; que no quer&amp;iacute;amos pasar y deber&amp;iacute;amos pasar un tipo diferente o deber&amp;iacute;amos implementar &lt;code&gt;Draw&lt;/code&gt; en &lt;code&gt;String&lt;/code&gt; para que &lt;code&gt;Screen&lt;/code&gt; pueda llamar a &lt;code&gt;draw&lt;/code&gt; en &amp;eacute;l.</target>
        </trans-unit>
        <trans-unit id="7089a49860a1eeefd308980067bc3b5e6f3e5841" translate="yes" xml:space="preserve">
          <source>This error lets you know that Rust has this constant defined more precisely and that your program would be more correct if you used the constant instead. You would then change your code to use the &lt;code&gt;PI&lt;/code&gt; constant. The following code doesn&amp;rsquo;t result in any errors or warnings from Clippy:</source>
          <target state="translated">Este error le permite saber que Rust tiene esta constante definida con mayor precisi&amp;oacute;n y que su programa ser&amp;iacute;a m&amp;aacute;s correcto si usara la constante en su lugar. Luego, cambiar&amp;iacute;a su c&amp;oacute;digo para usar la constante &lt;code&gt;PI&lt;/code&gt; . El siguiente c&amp;oacute;digo no genera ning&amp;uacute;n error o advertencia de Clippy:</target>
        </trans-unit>
        <trans-unit id="7527f99b3dbab9d3281da26cc0de240205ca3ed7" translate="yes" xml:space="preserve">
          <source>This error may also commonly be found when working with unsafe code. For example, when using raw pointers one may wish to specify the lifetime for which the pointed-at data is valid. An initial attempt (below) causes this error:</source>
          <target state="translated">Este error también puede encontrarse comúnmente cuando se trabaja con un código inseguro.Por ejemplo,cuando se utilizan punteros en bruto,puede ser conveniente especificar el tiempo de vida para el que son válidos los datos punteados.Un intento inicial (más abajo)causa este error:</target>
        </trans-unit>
        <trans-unit id="1e7204b5ea49e32896ab0ba12a29a6e3937bc0f3" translate="yes" xml:space="preserve">
          <source>This error means that an attempt was made to match a struct type enum variant as a non-struct type:</source>
          <target state="translated">Este error significa que se intentó hacer coincidir una variante del tipo struct enum como un tipo no estructurado:</target>
        </trans-unit>
        <trans-unit id="76d97f884e0ba6f5c3488397207d55a3b212ce21" translate="yes" xml:space="preserve">
          <source>This error means that an attempt was made to match something which is neither a tuple struct nor a tuple variant. Only these two elements are allowed as a pattern:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1988ee636e2a4d68092372fb6c89de2473339d3" translate="yes" xml:space="preserve">
          <source>This error means that an incorrect number of generic arguments were provided:</source>
          <target state="translated">Este error significa que se proporcionó un número incorrecto de argumentos genéricos:</target>
        </trans-unit>
        <trans-unit id="368e8d1bf22974707354d4d21e3f6ab34ed1757e" translate="yes" xml:space="preserve">
          <source>This error means you can&amp;rsquo;t use this trait as a trait object in this way. If you&amp;rsquo;re interested in more details on object safety, see &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0255-object-safety.md&quot;&gt;Rust RFC 255&lt;/a&gt;.</source>
          <target state="translated">Este error significa que no puede usar este rasgo como un objeto de rasgo de esta manera. Si est&amp;aacute; interesado en obtener m&amp;aacute;s detalles sobre la seguridad de los objetos, consulte &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0255-object-safety.md&quot;&gt;Rust RFC 255&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="027a2fdf6a3f9948a9c92b0f1c99c26f859c6929" translate="yes" xml:space="preserve">
          <source>This error message refers to a feature we haven&amp;rsquo;t covered yet: lifetimes. We&amp;rsquo;ll discuss lifetimes in detail in Chapter 10. But, if you disregard the parts about lifetimes, the message does contain the key to why this code is a problem:</source>
          <target state="translated">Este mensaje de error se refiere a una caracter&amp;iacute;stica que a&amp;uacute;n no hemos cubierto: la vida &amp;uacute;til. Discutiremos las vidas en detalle en el Cap&amp;iacute;tulo 10. Pero, si ignora las partes sobre las vidas, el mensaje contiene la clave de por qu&amp;eacute; este c&amp;oacute;digo es un problema:</target>
        </trans-unit>
        <trans-unit id="b934f7e266f094b4b999e8bf2f04c71dea6d6829" translate="yes" xml:space="preserve">
          <source>This error message states that we&amp;rsquo;re not allowed to explicitly call &lt;code&gt;drop&lt;/code&gt;. The error message uses the term &lt;em&gt;destructor&lt;/em&gt;, which is the general programming term for a function that cleans up an instance. A &lt;em&gt;destructor&lt;/em&gt; is analogous to a &lt;em&gt;constructor&lt;/em&gt;, which creates an instance. The &lt;code&gt;drop&lt;/code&gt; function in Rust is one particular destructor.</source>
          <target state="translated">Este mensaje de error indica que no podemos llamar expl&amp;iacute;citamente a &lt;code&gt;drop&lt;/code&gt; . El mensaje de error usa el t&amp;eacute;rmino &lt;em&gt;destructor&lt;/em&gt; , que es el t&amp;eacute;rmino de programaci&amp;oacute;n general para una funci&amp;oacute;n que limpia una instancia. Un &lt;em&gt;destructor&lt;/em&gt; es an&amp;aacute;logo a un &lt;em&gt;constructor&lt;/em&gt; , que crea una instancia. La funci&amp;oacute;n de &lt;code&gt;drop&lt;/code&gt; en Rust es un destructor particular.</target>
        </trans-unit>
        <trans-unit id="2c2b32b5586db42f3b0dff4da46b1782d86e698e" translate="yes" xml:space="preserve">
          <source>This error occurs because a borrow in a generator persists across a yield point.</source>
          <target state="translated">Este error se produce porque un préstamo en un generador persiste a través de un punto de rendimiento.</target>
        </trans-unit>
        <trans-unit id="1e6bf835d8f1dd37c8b25ebb4f51cc6621c79aa9" translate="yes" xml:space="preserve">
          <source>This error occurs because a borrow of a thread-local variable was made inside a function which outlived the lifetime of the function.</source>
          <target state="translated">Este error se produce porque se hizo un préstamo de una variable local de hilo dentro de una función que sobrevivió a la vida de la función.</target>
        </trans-unit>
        <trans-unit id="249f7bc8f6d82a80564f1c3f396aa42dbc6e451f" translate="yes" xml:space="preserve">
          <source>This error occurs because a value was dropped while it was still borrowed</source>
          <target state="translated">Este error se produce porque un valor se cayó cuando todavía estaba prestado</target>
        </trans-unit>
        <trans-unit id="074bebec9bc1d161aacdccb6e09fa091949d4c0d" translate="yes" xml:space="preserve">
          <source>This error occurs because you tried to mutably borrow a non-mutable variable.</source>
          <target state="translated">Este error ocurre porque usted trató de pedir prestado mutablemente una variable no mutable.</target>
        </trans-unit>
        <trans-unit id="1c3db0f8ef7d737dfd4c2dc90ac02bc9a5c77f3f" translate="yes" xml:space="preserve">
          <source>This error occurs when a bound in an implementation of a trait does not match the bounds specified in the original trait. For example:</source>
          <target state="translated">Este error se produce cuando un límite en la implementación de un rasgo no coincide con los límites especificados en el rasgo original.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="093dfc68eae74dcc328a7c8a1a3d68f0b36d7fb4" translate="yes" xml:space="preserve">
          <source>This error occurs when a method is used on a type which doesn't implement it:</source>
          <target state="translated">Este error se produce cuando se utiliza un método en un tipo que no lo implementa:</target>
        </trans-unit>
        <trans-unit id="da941b6947e460e43f6112767122feb782f16207" translate="yes" xml:space="preserve">
          <source>This error occurs when an &lt;code&gt;if&lt;/code&gt; expression without an &lt;code&gt;else&lt;/code&gt; block is used in a context where a type other than &lt;code&gt;()&lt;/code&gt; is expected, for example a &lt;code&gt;let&lt;/code&gt; expression:</source>
          <target state="translated">Este error ocurre cuando se usa una expresi&amp;oacute;n &lt;code&gt;if&lt;/code&gt; sin un bloque &lt;code&gt;else&lt;/code&gt; en un contexto donde se espera un tipo diferente a &lt;code&gt;()&lt;/code&gt; , por ejemplo, una expresi&amp;oacute;n &lt;code&gt;let&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5a28a2c48baba84d59c80917ee2d999515b5d378" translate="yes" xml:space="preserve">
          <source>This error occurs when an &lt;code&gt;if&lt;/code&gt; expression without an &lt;code&gt;else&lt;/code&gt; block is used in a context where a type other than &lt;code&gt;()&lt;/code&gt; is expected. In the previous code example, the &lt;code&gt;let&lt;/code&gt; expression was expecting a value but since there was no &lt;code&gt;else&lt;/code&gt;, no value was returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0370ddda8b1bb558216506bbbbafb414b273904" translate="yes" xml:space="preserve">
          <source>This error occurs when an attempt is made to assign to a borrowed value.</source>
          <target state="translated">Este error se produce cuando se intenta asignar a un valor prestado.</target>
        </trans-unit>
        <trans-unit id="81568110c66c811e652efe84f4e84d35ccd0ca5f" translate="yes" xml:space="preserve">
          <source>This error occurs when an attempt is made to borrow state past the end of the lifetime of a type that implements the &lt;code&gt;Drop&lt;/code&gt; trait.</source>
          <target state="translated">Este error ocurre cuando se intenta tomar prestado el estado m&amp;aacute;s all&amp;aacute; del final de la vida &amp;uacute;til de un tipo que implementa el rasgo &lt;code&gt;Drop&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="552e357ec5f4118a4e87577f4bd866d88ddeba4b" translate="yes" xml:space="preserve">
          <source>This error occurs when an attempt is made to move a borrowed variable into a closure.</source>
          <target state="translated">Este error se produce cuando se intenta trasladar una variable prestada a un cierre.</target>
        </trans-unit>
        <trans-unit id="08dbd4d1c622d91c2a3b2e7680f087d95c0c0ad4" translate="yes" xml:space="preserve">
          <source>This error occurs when an attempt is made to move out of a value whose type implements the &lt;code&gt;Drop&lt;/code&gt; trait.</source>
          <target state="translated">Este error ocurre cuando se intenta salir de un valor cuyo tipo implementa el rasgo &lt;code&gt;Drop&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a382ee4f257c1e4d223e9634a0678761229064a5" translate="yes" xml:space="preserve">
          <source>This error occurs when an attempt is made to mutate or mutably reference data that a closure has captured immutably.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0cd32a89f254835e1067e05e21bdf36f5041728" translate="yes" xml:space="preserve">
          <source>This error occurs when an attempt is made to mutate or mutably reference data that a closure has captured immutably. Examples of this error are shown below:</source>
          <target state="translated">Este error se produce cuando se intenta mutar o referenciar mutablemente los datos que un cierre ha captado de forma inmutable.A continuación se muestran ejemplos de este error:</target>
        </trans-unit>
        <trans-unit id="6dbb4812461df19f2be9097a66c157fbdbf8c85f" translate="yes" xml:space="preserve">
          <source>This error occurs when an attempt is made to mutate the target of a mutable reference stored inside an immutable container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e494d266acb1b46fd28c9cc0c8ca718e819da16c" translate="yes" xml:space="preserve">
          <source>This error occurs when an attempt is made to partially reinitialize a structure that is currently uninitialized.</source>
          <target state="translated">Este error se produce cuando se intenta reiniciar parcialmente una estructura que actualmente no está inicializada.</target>
        </trans-unit>
        <trans-unit id="8feee21757ea4763c54c8d19077d7ff7e0dd5208" translate="yes" xml:space="preserve">
          <source>This error occurs when an attempt is made to reassign an immutable variable. For example:</source>
          <target state="translated">Este error se produce cuando se intenta reasignar una variable inmutable.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="b105f193c377f1f9fe2f520a0094f3220a7d20d3" translate="yes" xml:space="preserve">
          <source>This error occurs when an attempt is made to use a variable after its contents have been moved elsewhere. For example:</source>
          <target state="translated">Este error se produce cuando se intenta utilizar una variable después de que su contenido se haya trasladado a otro lugar.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="7658c866cb10684f9a43de713daa72ba91346907" translate="yes" xml:space="preserve">
          <source>This error occurs when an attempt is made to use data captured by a closure, when that data may no longer exist. It's most commonly seen when attempting to return a closure as shown in the previous code example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47a25aa9b1a97609269b45b233bf81af91519446" translate="yes" xml:space="preserve">
          <source>This error occurs when an attempt is made to use data captured by a closure, when that data may no longer exist. It's most commonly seen when attempting to return a closure:</source>
          <target state="translated">Este error se produce cuando se intenta utilizar los datos capturados por un cierre,cuando esos datos ya no existen.Se ve más comúnmente cuando se intenta devolver un cierre:</target>
        </trans-unit>
        <trans-unit id="25b45e0aeb2d0b344f458087fd222c2b9143243a" translate="yes" xml:space="preserve">
          <source>This error occurs when an expression was used in a place where the compiler expected an expression of a different type. It can occur in several cases, the most common being when calling a function and passing an argument which has a different type than the matching type in the function declaration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa2c4bec036eb23e59f4739f281ec16e241dd98a" translate="yes" xml:space="preserve">
          <source>This error occurs when the compiler doesn't have enough information to unambiguously choose an implementation.</source>
          <target state="translated">Este error se produce cuando el compilador no tiene suficiente información para elegir inequívocamente una implementación.</target>
        </trans-unit>
        <trans-unit id="b03f07ba71f847bb7aaff9d23af91941f61b2264" translate="yes" xml:space="preserve">
          <source>This error occurs when the compiler is unable to infer the concrete type of a variable. It can occur in several cases, the most common being a mismatch between two types: the type the author explicitly assigned, and the type the compiler inferred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f68d6da4cba1c2fe73a0bdd6ed998a8c685d2f7a" translate="yes" xml:space="preserve">
          <source>This error occurs when the compiler is unable to unambiguously infer the return type of a function or method which is generic on return type, such as the &lt;code&gt;collect&lt;/code&gt; method for &lt;code&gt;Iterator&lt;/code&gt;s.</source>
          <target state="translated">Este error ocurre cuando el compilador no puede inferir sin ambig&amp;uuml;edades el tipo de retorno de una funci&amp;oacute;n o m&amp;eacute;todo que es gen&amp;eacute;rico en el tipo de retorno, como el m&amp;eacute;todo de &lt;code&gt;collect&lt;/code&gt; para &lt;code&gt;Iterator&lt;/code&gt; s.</target>
        </trans-unit>
        <trans-unit id="f8852702dc84baa326e19b865b76e83190126314" translate="yes" xml:space="preserve">
          <source>This error occurs when the compiler was unable to infer the concrete type of a variable. It can occur for several cases, the most common of which is a mismatch in the expected type that the compiler inferred for a variable's initializing expression, and the actual type explicitly assigned to the variable.</source>
          <target state="translated">Este error se produce cuando el compilador no pudo inferir el tipo concreto de una variable.Puede ocurrir en varios casos,el más común de los cuales es un desajuste entre el tipo esperado que el compilador dedujo para la expresión inicial de una variable y el tipo concreto asignado explícitamente a la variable.</target>
        </trans-unit>
        <trans-unit id="40572c6042150247d80f8e73ff85712050d543de" translate="yes" xml:space="preserve">
          <source>This error occurs when there was a recursive trait requirement that overflowed before it could be evaluated. Often this means that there is unbounded recursion in resolving some type bounds.</source>
          <target state="translated">Este error se produce cuando había un requisito de rasgos recursivos que se desbordaba antes de que pudiera ser evaluado.A menudo esto significa que hay una recursividad ilimitada en la resolución de algunos límites de tipo.</target>
        </trans-unit>
        <trans-unit id="4c98fdf7c35ee8cb8fdd6e9ff309c4211fcf94cf" translate="yes" xml:space="preserve">
          <source>This error occurs when there was a recursive trait requirement that overflowed before it could be evaluated. This often means that there is an unbounded recursion in resolving some type bounds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b6569d564fb77649858b1d55f9d8b2a0efd5a34" translate="yes" xml:space="preserve">
          <source>This error occurs when you defined methods or associated functions with same name.</source>
          <target state="translated">Este error se produce cuando se han definido métodos o funciones asociadas con el mismo nombre.</target>
        </trans-unit>
        <trans-unit id="31aab3dcb3c76822f5a50ebdbab3c624e3384795" translate="yes" xml:space="preserve">
          <source>This error points at a file we didn&amp;rsquo;t write, &lt;em&gt;libcore/slice/mod.rs&lt;/em&gt;. That&amp;rsquo;s the implementation of &lt;code&gt;slice&lt;/code&gt; in the Rust source code. The code that gets run when we use &lt;code&gt;[]&lt;/code&gt; on our vector &lt;code&gt;v&lt;/code&gt; is in &lt;em&gt;libcore/slice/mod.rs&lt;/em&gt;, and that is where the &lt;code&gt;panic!&lt;/code&gt; is actually happening.</source>
          <target state="translated">Este error se&amp;ntilde;ala a un archivo que no escribieron, &lt;em&gt;libcore / rebanada / mod.rs&lt;/em&gt; . Esa es la implementaci&amp;oacute;n de &lt;code&gt;slice&lt;/code&gt; en el c&amp;oacute;digo fuente de Rust. El c&amp;oacute;digo que se ejecuta cuando usamos &lt;code&gt;[]&lt;/code&gt; en nuestro vector &lt;code&gt;v&lt;/code&gt; est&amp;aacute; en &lt;em&gt;libcore / slice / mod.rs&lt;/em&gt; , &amp;iexcl;y ah&amp;iacute; es donde &lt;em&gt;entra&lt;/em&gt; el &lt;code&gt;panic!&lt;/code&gt; est&amp;aacute; sucediendo realmente.</target>
        </trans-unit>
        <trans-unit id="daff356f50087f066d8d7f295e45f7db503c47eb" translate="yes" xml:space="preserve">
          <source>This error points out that we&amp;rsquo;re only allowed to use the &lt;code&gt;?&lt;/code&gt; operator in a function that returns &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt;. When you&amp;rsquo;re writing code in a function that doesn&amp;rsquo;t return &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt;, and you want to use &lt;code&gt;?&lt;/code&gt; when you call other functions that return &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt;, you have two choices to fix this problem. One technique is to change the return type of your function to be &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; if you have no restrictions preventing that. The other technique is to use a &lt;code&gt;match&lt;/code&gt; or one of the &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; methods to handle the &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; in whatever way is appropriate.</source>
          <target state="translated">Este error indica que solo podemos usar el &lt;code&gt;?&lt;/code&gt; operador en una funci&amp;oacute;n que devuelve &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; . Cuando est&amp;aacute; escribiendo c&amp;oacute;digo en una funci&amp;oacute;n que no devuelve &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; , y desea usar &lt;code&gt;?&lt;/code&gt; cuando llama a otras funciones que devuelven &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; , tiene dos opciones para solucionar este problema. Una t&amp;eacute;cnica es cambiar el tipo de retorno de su funci&amp;oacute;n para que sea &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; si no tiene restricciones que lo impidan. La otra t&amp;eacute;cnica es usar una &lt;code&gt;match&lt;/code&gt; o uno de los m&amp;eacute;todos &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; para manejar el &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; de la forma que sea apropiada.</target>
        </trans-unit>
        <trans-unit id="ef0f484866e508390ede392520c4e2f457d726bf" translate="yes" xml:space="preserve">
          <source>This error points out that we&amp;rsquo;re only allowed to use the &lt;code&gt;?&lt;/code&gt; operator in a function that returns &lt;code&gt;Result&lt;/code&gt; or &lt;code&gt;Option&lt;/code&gt; or another type that implements &lt;code&gt;std::ops::Try&lt;/code&gt;. When you&amp;rsquo;re writing code in a function that doesn&amp;rsquo;t return one of these types, and you want to use &lt;code&gt;?&lt;/code&gt; when you call other functions that return &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt;, you have two choices to fix this problem. One technique is to change the return type of your function to be &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; if you have no restrictions preventing that. The other technique is to use a &lt;code&gt;match&lt;/code&gt; or one of the &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; methods to handle the &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; in whatever way is appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5d927c97470a6bdf532b94621efe13e0092f99e" translate="yes" xml:space="preserve">
          <source>This error suggests that the expression arm corresponding to the noted pattern will never be reached as for all possible values of the expression being matched, one of the preceding patterns will match.</source>
          <target state="translated">Este error sugiere que nunca se alcanzará el brazo de expresión correspondiente al patrón anotado,ya que para todos los posibles valores de la expresión que se está emparejando,uno de los patrones precedentes coincidirá.</target>
        </trans-unit>
        <trans-unit id="f4cd2a99a6de016ca859c1b751566814099aa1c3" translate="yes" xml:space="preserve">
          <source>This error type&amp;rsquo;s methods can be used to create functionality similar to &lt;code&gt;String::from_utf8_lossy&lt;/code&gt; without allocating heap memory:</source>
          <target state="translated">Los m&amp;eacute;todos de este tipo de error se pueden usar para crear una funcionalidad similar a &lt;code&gt;String::from_utf8_lossy&lt;/code&gt; sin asignar memoria de pila:</target>
        </trans-unit>
        <trans-unit id="fb422fab14fffbfe5c78207ee2ae02a65418bd40" translate="yes" xml:space="preserve">
          <source>This error usually happens when trying to pass in a value to an input inline assembly operand that is actually a pair of values. In particular, this can happen when trying to pass in a slice, for instance a &lt;code&gt;&amp;amp;str&lt;/code&gt;. In Rust, these values are represented internally as a pair of values, the pointer and its length. When passed as an input operand, this pair of values can not be coerced into a register and thus we must fail with an error.</source>
          <target state="translated">Este error suele ocurrir cuando se intenta pasar un valor a un operando de ensamblado en l&amp;iacute;nea de entrada que en realidad es un par de valores. En particular, esto puede suceder al intentar pasar un segmento, por ejemplo, a &lt;code&gt;&amp;amp;str&lt;/code&gt; . En Rust, estos valores se representan internamente como un par de valores, el puntero y su longitud. Cuando se pasa como un operando de entrada, este par de valores no se puede convertir en un registro y, por lo tanto, debemos fallar con un error.</target>
        </trans-unit>
        <trans-unit id="46906d1c89db9bd7d3aa62947de98893bb4109ab" translate="yes" xml:space="preserve">
          <source>This error was returned when attempting to write the internal buffer.</source>
          <target state="translated">Este error fue devuelto al intentar escribir el buffer interno.</target>
        </trans-unit>
        <trans-unit id="3d919bd775721ac4d8e4678ab5d56f5c5d828138" translate="yes" xml:space="preserve">
          <source>This error will be emitted by the compiler when using an invalid receiver type, like in the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f5335a8d7c6f37faeab381d52fe1092a252bd8d" translate="yes" xml:space="preserve">
          <source>This example also shows how to use &lt;code&gt;move&lt;/code&gt;, in order to give ownership of values to a thread.</source>
          <target state="translated">Este ejemplo tambi&amp;eacute;n muestra c&amp;oacute;mo usar &lt;code&gt;move&lt;/code&gt; para otorgar propiedad de valores a un hilo.</target>
        </trans-unit>
        <trans-unit id="175716bea92c9d941f0898dc29c4ed209e64c353" translate="yes" xml:space="preserve">
          <source>This example builds a string, starting with an initial value and continuing with each element from the back until the front:</source>
          <target state="translated">Este ejemplo construye una cadena,comenzando con un valor inicial y continuando con cada elemento desde la parte trasera hasta la delantera:</target>
        </trans-unit>
        <trans-unit id="4d013525fa73f401dcf7648ce7d8e69f8100f085" translate="yes" xml:space="preserve">
          <source>This example creates a &lt;code&gt;Point&lt;/code&gt; struct that implements &lt;a href=&quot;trait.add&quot;&gt;&lt;code&gt;Add&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;trait.sub&quot;&gt;&lt;code&gt;Sub&lt;/code&gt;&lt;/a&gt;, and then demonstrates adding and subtracting two &lt;code&gt;Point&lt;/code&gt;s.</source>
          <target state="translated">Este ejemplo crea una estructura &lt;code&gt;Point&lt;/code&gt; que implementa &lt;a href=&quot;trait.add&quot;&gt; &lt;code&gt;Add&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;trait.sub&quot;&gt; &lt;code&gt;Sub&lt;/code&gt; &lt;/a&gt; , y luego demuestra sumar y restar dos &lt;code&gt;Point&lt;/code&gt; s.</target>
        </trans-unit>
        <trans-unit id="612bd6352093018ae655e26b99b1150fb9f0d9dc" translate="yes" xml:space="preserve">
          <source>This example creates a &lt;code&gt;Point&lt;/code&gt; struct that implements the &lt;code&gt;AddAssign&lt;/code&gt; trait, and then demonstrates add-assigning to a mutable &lt;code&gt;Point&lt;/code&gt;.</source>
          <target state="translated">Este ejemplo crea una estructura &lt;code&gt;Point&lt;/code&gt; que implementa el rasgo &lt;code&gt;AddAssign&lt;/code&gt; y luego demuestra la asignaci&amp;oacute;n de agregar a un &lt;code&gt;Point&lt;/code&gt; mutable .</target>
        </trans-unit>
        <trans-unit id="84b61046cfa323fa19b23ac20e12034ef787e01b" translate="yes" xml:space="preserve">
          <source>This example creates a &lt;code&gt;Point&lt;/code&gt; struct that implements the &lt;code&gt;SubAssign&lt;/code&gt; trait, and then demonstrates sub-assigning to a mutable &lt;code&gt;Point&lt;/code&gt;.</source>
          <target state="translated">Este ejemplo crea una estructura &lt;code&gt;Point&lt;/code&gt; que implementa el rasgo &lt;code&gt;SubAssign&lt;/code&gt; y luego demuestra la subasignaci&amp;oacute;n a un &lt;code&gt;Point&lt;/code&gt; mutable .</target>
        </trans-unit>
        <trans-unit id="979ade7fbba01641154de5a065a6e6890cf54db4" translate="yes" xml:space="preserve">
          <source>This example creates a function with two parameters, both of which are &lt;code&gt;i32&lt;/code&gt; types. The function then prints the values in both of its parameters. Note that function parameters don&amp;rsquo;t all need to be the same type, they just happen to be in this example.</source>
          <target state="translated">Este ejemplo crea una funci&amp;oacute;n con dos par&amp;aacute;metros, ambos tipos &lt;code&gt;i32&lt;/code&gt; . La funci&amp;oacute;n luego imprime los valores en ambos par&amp;aacute;metros. Tenga en cuenta que no es necesario que todos los par&amp;aacute;metros de funci&amp;oacute;n sean del mismo tipo, simplemente son en este ejemplo.</target>
        </trans-unit>
        <trans-unit id="701db2e46c2038eecc101dd4ef0779ff5ad8d4cc" translate="yes" xml:space="preserve">
          <source>This example implements &lt;code&gt;Rem&lt;/code&gt; on a &lt;code&gt;SplitSlice&lt;/code&gt; object. After &lt;code&gt;Rem&lt;/code&gt; is implemented, one can use the &lt;code&gt;%&lt;/code&gt; operator to find out what the remaining elements of the slice would be after splitting it into equal slices of a given length.</source>
          <target state="translated">Este ejemplo implementa &lt;code&gt;Rem&lt;/code&gt; en un objeto &lt;code&gt;SplitSlice&lt;/code&gt; . Una vez implementado &lt;code&gt;Rem&lt;/code&gt; , se puede usar el operador &lt;code&gt;%&lt;/code&gt; para averiguar cu&amp;aacute;les ser&amp;iacute;an los elementos restantes del segmento despu&amp;eacute;s de dividirlo en segmentos iguales de una longitud determinada.</target>
        </trans-unit>
        <trans-unit id="3d81c01c409b8ce1936b460c9219c2266b9648d9" translate="yes" xml:space="preserve">
          <source>This example prints 3, 2, and then 1. The &lt;code&gt;pop&lt;/code&gt; method takes the last element out of the vector and returns &lt;code&gt;Some(value)&lt;/code&gt;. If the vector is empty, &lt;code&gt;pop&lt;/code&gt; returns &lt;code&gt;None&lt;/code&gt;. The &lt;code&gt;while&lt;/code&gt; loop continues running the code in its block as long as &lt;code&gt;pop&lt;/code&gt; returns &lt;code&gt;Some&lt;/code&gt;. When &lt;code&gt;pop&lt;/code&gt; returns &lt;code&gt;None&lt;/code&gt;, the loop stops. We can use &lt;code&gt;while let&lt;/code&gt; to pop every element off our stack.</source>
          <target state="translated">Este ejemplo imprime 3, 2 y luego 1. El m&amp;eacute;todo &lt;code&gt;pop&lt;/code&gt; toma el &amp;uacute;ltimo elemento del vector y devuelve &lt;code&gt;Some(value)&lt;/code&gt; . Si el vector est&amp;aacute; vac&amp;iacute;o, &lt;code&gt;pop&lt;/code&gt; devuelve &lt;code&gt;None&lt;/code&gt; . El &lt;code&gt;while&lt;/code&gt; bucle contin&amp;uacute;a ejecutando el c&amp;oacute;digo en su bloque, siempre y cuando &lt;code&gt;pop&lt;/code&gt; vuelve &lt;code&gt;Some&lt;/code&gt; . Cuando &lt;code&gt;pop&lt;/code&gt; devuelve &lt;code&gt;None&lt;/code&gt; , el bucle se detiene. Podemos usar &lt;code&gt;while let&lt;/code&gt; para sacar todos los elementos de nuestra pila.</target>
        </trans-unit>
        <trans-unit id="1f29d652e237479a6c170562a3189e4859a56b5e" translate="yes" xml:space="preserve">
          <source>This example shows an inner attribute on a function. The function is documented with just the word &quot;Example&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33bd3bf0b7b00466cfe4514bc631cc4d45b75356" translate="yes" xml:space="preserve">
          <source>This example shows an inner attribute on a function. The function will only be available while running tests.</source>
          <target state="translated">Este ejemplo muestra un atributo interno de una función.La función sólo estará disponible mientras se realizan las pruebas.</target>
        </trans-unit>
        <trans-unit id="02dcd48945408a840f3079c83663da1b30b196c7" translate="yes" xml:space="preserve">
          <source>This example shows how one can use &lt;code&gt;allow&lt;/code&gt; and &lt;code&gt;warn&lt;/code&gt; to toggle a particular check on and off:</source>
          <target state="translated">Este ejemplo muestra c&amp;oacute;mo se puede usar &lt;code&gt;allow&lt;/code&gt; y &lt;code&gt;warn&lt;/code&gt; para activar y desactivar una verificaci&amp;oacute;n en particular:</target>
        </trans-unit>
        <trans-unit id="b51a82804a004969c18f750e315e49a925f322a3" translate="yes" xml:space="preserve">
          <source>This example shows how one can use &lt;code&gt;forbid&lt;/code&gt; to disallow uses of &lt;code&gt;allow&lt;/code&gt; for that lint check:</source>
          <target state="translated">Este ejemplo muestra c&amp;oacute;mo se puede usar &lt;code&gt;forbid&lt;/code&gt; para no &lt;code&gt;allow&lt;/code&gt; usos de permitir para esa verificaci&amp;oacute;n de pelusa:</target>
        </trans-unit>
        <trans-unit id="20dcd5999998e80d936e0fa700c4a9a09932a423" translate="yes" xml:space="preserve">
          <source>This example shows how the compiler helps you find errors in your programs. Even though compiler errors can be frustrating, they only mean your program isn&amp;rsquo;t safely doing what you want it to do yet; they do &lt;em&gt;not&lt;/em&gt; mean that you&amp;rsquo;re not a good programmer! Experienced Rustaceans still get compiler errors.</source>
          <target state="translated">Este ejemplo muestra c&amp;oacute;mo el compilador le ayuda a encontrar errores en sus programas. Aunque los errores del compilador pueden ser frustrantes, solo significan que su programa a&amp;uacute;n no est&amp;aacute; haciendo de manera segura lo que usted desea que haga; &amp;iexcl; &lt;em&gt;no&lt;/em&gt; significan que no seas un buen programador! Los rust&amp;aacute;ceos experimentados todav&amp;iacute;a tienen errores de compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="2cb4570e4e31d810429621e0a69fd89abfdb2ea3" translate="yes" xml:space="preserve">
          <source>This example shows using a custom derive attribute to modify the meaning of a generic parameter.</source>
          <target state="translated">Este ejemplo muestra el uso de un atributo de derivación personalizada para modificar el significado de un parámetro genérico.</target>
        </trans-unit>
        <trans-unit id="e1b71afb4f7ccdfd339dd3d129a43084a3b35c6b" translate="yes" xml:space="preserve">
          <source>This example spawns a thread which will update the boolean value and then wait 100 milliseconds before notifying the condvar.</source>
          <target state="translated">Este ejemplo genera un hilo que actualizará el valor booleano y luego esperará 100 milisegundos antes de notificar al condvar.</target>
        </trans-unit>
        <trans-unit id="b7617cea2234e7524bc25112d50668635c06f962" translate="yes" xml:space="preserve">
          <source>This example will print &lt;code&gt;Found an id in range: 5&lt;/code&gt;. By specifying &lt;code&gt;id_variable @&lt;/code&gt; before the range &lt;code&gt;3...7&lt;/code&gt;, we&amp;rsquo;re capturing whatever value matched the range while also testing that the value matched the range pattern.</source>
          <target state="translated">Este ejemplo imprimir&amp;aacute; &lt;code&gt;Found an id in range: 5&lt;/code&gt; . Al especificar &lt;code&gt;id_variable @&lt;/code&gt; antes del rango &lt;code&gt;3...7&lt;/code&gt; , capturamos cualquier valor que coincida con el rango y al mismo tiempo probamos que el valor coincide con el patr&amp;oacute;n de rango.</target>
        </trans-unit>
        <trans-unit id="6bcb3e1c80011a7567e2eb18a8ff65f6e860aa55" translate="yes" xml:space="preserve">
          <source>This example will print &lt;code&gt;Found an id in range: 5&lt;/code&gt;. By specifying &lt;code&gt;id_variable @&lt;/code&gt; before the range &lt;code&gt;3..=7&lt;/code&gt;, we&amp;rsquo;re capturing whatever value matched the range while also testing that the value matched the range pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0792a7553f859fe5307a072fac84a140057b4ecf" translate="yes" xml:space="preserve">
          <source>This example will print &lt;code&gt;less than five: 4&lt;/code&gt;. When &lt;code&gt;num&lt;/code&gt; is compared to the pattern in the first arm, it matches, because &lt;code&gt;Some(4)&lt;/code&gt; matches &lt;code&gt;Some(x)&lt;/code&gt;. Then the match guard checks whether the value in &lt;code&gt;x&lt;/code&gt; is less than &lt;code&gt;5&lt;/code&gt;, and because it is, the first arm is selected.</source>
          <target state="translated">Este ejemplo imprimir&amp;aacute; &lt;code&gt;less than five: 4&lt;/code&gt; . Cuando &lt;code&gt;num&lt;/code&gt; se compara con el patr&amp;oacute;n en el primer brazo, coincide, porque &lt;code&gt;Some(4)&lt;/code&gt; coincide con &lt;code&gt;Some(x)&lt;/code&gt; . Luego, el escolta verifica si el valor en &lt;code&gt;x&lt;/code&gt; es menor que &lt;code&gt;5&lt;/code&gt; y, como lo es, se selecciona el primer brazo.</target>
        </trans-unit>
        <trans-unit id="e9c51ef5db1956234586460cd5d4e3f2d56f3c15" translate="yes" xml:space="preserve">
          <source>This exists solely for &lt;a href=&quot;../mem/fn.forget_unsized&quot;&gt;&lt;code&gt;mem::forget_unsized&lt;/code&gt;&lt;/a&gt;; normal &lt;code&gt;forget&lt;/code&gt; uses &lt;code&gt;ManuallyDrop&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f35b34cb9f0940df9ede968c0941933fe5a63e" translate="yes" xml:space="preserve">
          <source>This explicitly states that you expect the trait object &lt;code&gt;SomeTrait&lt;/code&gt; to contain references (with a maximum lifetime of &lt;code&gt;'a&lt;/code&gt;).</source>
          <target state="translated">Esto establece expl&amp;iacute;citamente que espera que el objeto de rasgo &lt;code&gt;SomeTrait&lt;/code&gt; contenga referencias (con una vida &amp;uacute;til m&amp;aacute;xima de &lt;code&gt;'a&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="55550702354f0f532a45a47534287ba31230892e" translate="yes" xml:space="preserve">
          <source>This expression:</source>
          <target state="translated">Esta expresión:</target>
        </trans-unit>
        <trans-unit id="d4d243a04a2e7c3baa5aaa70386526d20f9c61fb" translate="yes" xml:space="preserve">
          <source>This fails because &lt;code&gt;&amp;amp;mut T&lt;/code&gt; is not &lt;code&gt;Copy&lt;/code&gt;, even when &lt;code&gt;T&lt;/code&gt; is &lt;code&gt;Copy&lt;/code&gt; (this differs from the behavior for &lt;code&gt;&amp;amp;T&lt;/code&gt;, which is always &lt;code&gt;Copy&lt;/code&gt;).</source>
          <target state="translated">Esto falla porque &lt;code&gt;&amp;amp;mut T&lt;/code&gt; no es &lt;code&gt;Copy&lt;/code&gt; , incluso cuando &lt;code&gt;T&lt;/code&gt; es &lt;code&gt;Copy&lt;/code&gt; (esto difiere del comportamiento de &lt;code&gt;&amp;amp;T&lt;/code&gt; , que siempre es &lt;code&gt;Copy&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="96a49ec58cf9d3de1eca61f7643ce5de9d8c4e5e" translate="yes" xml:space="preserve">
          <source>This fails because &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; does not implement &lt;code&gt;Copy&lt;/code&gt; for any &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">Esta falla porque &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; no implementa &lt;code&gt;Copy&lt;/code&gt; para cualquier &lt;code&gt;T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77c78e0cdd88af63c9805574659b7e0844c8f178" translate="yes" xml:space="preserve">
          <source>This fails to compile because &lt;code&gt;T&lt;/code&gt; does not appear in the trait or in the implementing type.</source>
          <target state="translated">Esto no se puede compilar porque &lt;code&gt;T&lt;/code&gt; no aparece en el rasgo o en el tipo de implementaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="586c08bc607fd5a338c048e0f30142b22328caf5" translate="yes" xml:space="preserve">
          <source>This field contains the file system attribute information for a file or directory. For possible values and their descriptions, see &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/fileio/file-attribute-constants&quot;&gt;File Attribute Constants&lt;/a&gt; in the Windows Dev Center.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c5af671ad45076c8c92a16a6b71ec7dd6cf3c8d" translate="yes" xml:space="preserve">
          <source>This field contains the file system attribute information for a file or directory. For possible values and their descriptions, see &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/gg258117.aspx&quot;&gt;File Attribute Constants&lt;/a&gt; in the Windows Dev Center.</source>
          <target state="translated">Este campo contiene la informaci&amp;oacute;n de atributos del sistema de archivos para un archivo o directorio. Para conocer los valores posibles y sus descripciones, consulte &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/gg258117.aspx&quot;&gt;Constantes de atributos de archivo&lt;/a&gt; en el Centro de desarrollo de Windows.</target>
        </trans-unit>
        <trans-unit id="a06da2f86acca1e87efa6c64e9e56d6bba45e46d" translate="yes" xml:space="preserve">
          <source>This field may not be available on all platforms, and will return an &lt;code&gt;Err&lt;/code&gt; on platforms or filesystems where it is not available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed8ac050f10d4961483960b90a8bb5fa116bf7c" translate="yes" xml:space="preserve">
          <source>This field may not be available on all platforms, and will return an &lt;code&gt;Err&lt;/code&gt; on platforms where it is not available.</source>
          <target state="translated">Es posible que este campo no est&amp;eacute; disponible en todas las plataformas y devolver&amp;aacute; un &lt;code&gt;Err&lt;/code&gt; en las plataformas donde no est&amp;eacute; disponible.</target>
        </trans-unit>
        <trans-unit id="5368359fd79a3572b28925e44099327d749ce6f1" translate="yes" xml:space="preserve">
          <source>This file is in the &lt;a href=&quot;https://github.com/toml-lang/toml&quot;&gt;&lt;em&gt;TOML&lt;/em&gt;&lt;/a&gt; (&lt;em&gt;Tom&amp;rsquo;s Obvious, Minimal Language&lt;/em&gt;) format, which is Cargo&amp;rsquo;s configuration format.</source>
          <target state="translated">Este archivo est&amp;aacute; en &lt;a href=&quot;https://github.com/toml-lang/toml&quot;&gt;&lt;em&gt;formato TOML&lt;/em&gt;&lt;/a&gt; ( &lt;em&gt;Tom's Obvious, Minimal Language&lt;/em&gt; ), que es el formato de configuraci&amp;oacute;n de Cargo.</target>
        </trans-unit>
        <trans-unit id="403b498b0ea95a8401971fc9fa18c953b57bf6c7" translate="yes" xml:space="preserve">
          <source>This file is in the &lt;a href=&quot;https://toml.io&quot;&gt;&lt;em&gt;TOML&lt;/em&gt;&lt;/a&gt; (&lt;em&gt;Tom&amp;rsquo;s Obvious, Minimal Language&lt;/em&gt;) format, which is Cargo&amp;rsquo;s configuration format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0537f20b3c4c0b16d4802ffcd175906f9816b83" translate="yes" xml:space="preserve">
          <source>This following example shows the stringified &lt;a href=&quot;https://doc.rust-lang.org/proc_macro/struct.TokenStream.html&quot;&gt;&lt;code&gt;TokenStream&lt;/code&gt;s&lt;/a&gt; that the attribute macros see. The output will show in the output of the compiler. The output is shown in the comments after the function prefixed with &quot;out:&quot;.</source>
          <target state="translated">Este ejemplo muestra las siguientes Stringified &lt;a href=&quot;https://doc.rust-lang.org/proc_macro/struct.TokenStream.html&quot;&gt; &lt;code&gt;TokenStream&lt;/code&gt; s&lt;/a&gt; que las macros de atributos ver. La salida se mostrar&amp;aacute; en la salida del compilador. La salida se muestra en los comentarios despu&amp;eacute;s de la funci&amp;oacute;n con el prefijo &quot;out:&quot;.</target>
        </trans-unit>
        <trans-unit id="a9c265b88652152ca2b28f53cb136d7ff3a25c8d" translate="yes" xml:space="preserve">
          <source>This function &lt;strong&gt;consumes ownership&lt;/strong&gt; of the specified file descriptor. The returned object will take responsibility for closing it when the object goes out of scope.</source>
          <target state="translated">Esta funci&amp;oacute;n &lt;strong&gt;consume la propiedad&lt;/strong&gt; del descriptor de archivo especificado. El objeto devuelto asumir&amp;aacute; la responsabilidad de cerrarlo cuando el objeto quede fuera de alcance.</target>
        </trans-unit>
        <trans-unit id="7770f6814daf86198289168c0cb8b4e0eaa39b97" translate="yes" xml:space="preserve">
          <source>This function &lt;strong&gt;transfers ownership&lt;/strong&gt; of the underlying file descriptor to the caller. Callers are then the unique owners of the file descriptor and must close the descriptor once it's no longer needed.</source>
          <target state="translated">Esta funci&amp;oacute;n &lt;strong&gt;transfiere la propiedad&lt;/strong&gt; del descriptor de archivo subyacente al llamador. Las personas que llaman son los propietarios &amp;uacute;nicos del descriptor de archivo y deben cerrar el descriptor una vez que ya no sea necesario.</target>
        </trans-unit>
        <trans-unit id="9e16870fdc5324388fb513d47d710cb2a9d23e70" translate="yes" xml:space="preserve">
          <source>This function &lt;strong&gt;transfers ownership&lt;/strong&gt; of the underlying handle to the caller. Callers are then the unique owners of the handle and must close it once it's no longer needed.</source>
          <target state="translated">Esta funci&amp;oacute;n &lt;strong&gt;transfiere la propiedad&lt;/strong&gt; del identificador subyacente al llamador. Las personas que llaman son los propietarios &amp;uacute;nicos del identificador y deben cerrarlo una vez que ya no sea necesario.</target>
        </trans-unit>
        <trans-unit id="90c9a08f16b0c10b615b5b0843cebfac39017e99" translate="yes" xml:space="preserve">
          <source>This function &lt;strong&gt;transfers ownership&lt;/strong&gt; of the underlying pthread_t to the caller. Callers are then the unique owners of the pthread_t and must either detach or join the pthread_t once it's no longer needed.</source>
          <target state="translated">Esta funci&amp;oacute;n &lt;strong&gt;transfiere la propiedad&lt;/strong&gt; del pthread_t subyacente al llamador. Las personas que llaman son los propietarios &amp;uacute;nicos del pthread_t y deben separarse o unirse al pthread_t una vez que ya no sea necesario.</target>
        </trans-unit>
        <trans-unit id="06669b18e93261495eb1fcf2252cb895da69c39a" translate="yes" xml:space="preserve">
          <source>This function &lt;strong&gt;transfers ownership&lt;/strong&gt; of the underlying socket to the caller. Callers are then the unique owners of the socket and must close it once it's no longer needed.</source>
          <target state="translated">Esta funci&amp;oacute;n &lt;strong&gt;transfiere la propiedad&lt;/strong&gt; del socket subyacente al llamador. Las personas que llaman son los propietarios &amp;uacute;nicos del socket y deben cerrarlo una vez que ya no sea necesario.</target>
        </trans-unit>
        <trans-unit id="3028ce76268abc4493b0febc5668a0c85baa5e06" translate="yes" xml:space="preserve">
          <source>This function accepts strings such as</source>
          <target state="translated">Esta función acepta cadenas como</target>
        </trans-unit>
        <trans-unit id="3b6b07c29d146488fec502f1e37e5fcc2f92d5fd" translate="yes" xml:space="preserve">
          <source>This function allows inspecting the location, in code, of where an error happened. The returned &lt;code&gt;Backtrace&lt;/code&gt; contains information about the stack trace of the OS thread of execution of where the error originated from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcca4cdb6fc324905436b470716282df197ae1a7" translate="yes" xml:space="preserve">
          <source>This function behaves the same as &lt;code&gt;capture&lt;/code&gt; except that it ignores the values of the &lt;code&gt;RUST_BACKTRACE&lt;/code&gt; and &lt;code&gt;RUST_LIB_BACKTRACE&lt;/code&gt; environment variables, always capturing a backtrace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1eb2ceefa3b664d9a9270981fa8cbdd469bffdd" translate="yes" xml:space="preserve">
          <source>This function can be used for control flow based on &lt;code&gt;Result&lt;/code&gt; values.</source>
          <target state="translated">Esta funci&amp;oacute;n se puede utilizar para controlar el flujo en funci&amp;oacute;n de los valores de &lt;code&gt;Result&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="069d719c6868f05d1ad9a84a0abe1540eb6a83ca" translate="yes" xml:space="preserve">
          <source>This function can be used for control flow based on result values.</source>
          <target state="translated">Esta función puede utilizarse para controlar el flujo basado en los valores de los resultados.</target>
        </trans-unit>
        <trans-unit id="1f2e8570607d30aa900e189937d7916fe8ed3230" translate="yes" xml:space="preserve">
          <source>This function can be used to compose the results of two functions.</source>
          <target state="translated">Esta función puede utilizarse para componer los resultados de dos funciones.</target>
        </trans-unit>
        <trans-unit id="890b1ba5d17963460809400c8357e2da154ed2a6" translate="yes" xml:space="preserve">
          <source>This function can be used to pass through a successful result while handling an error.</source>
          <target state="translated">Esta función puede utilizarse para pasar un resultado exitoso mientras se maneja un error.</target>
        </trans-unit>
        <trans-unit id="f898974fbfac52e97eb29d82afb416cf7dbf9a7a" translate="yes" xml:space="preserve">
          <source>This function can be used to unpack a successful result while handling an error.</source>
          <target state="translated">Esta función puede ser utilizada para desempacar un resultado exitoso mientras se maneja un error.</target>
        </trans-unit>
        <trans-unit id="663e29d3010e4fe834fdfef457c75d87463c66ed" translate="yes" xml:space="preserve">
          <source>This function can be written in a much shorter way, but we&amp;rsquo;re going to start by doing a lot of it manually in order to explore error handling; at the end, we&amp;rsquo;ll show the shorter way. Let&amp;rsquo;s look at the return type of the function first: &lt;code&gt;Result&amp;lt;String, io::Error&amp;gt;&lt;/code&gt;. This means the function is returning a value of the type &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; where the generic parameter &lt;code&gt;T&lt;/code&gt; has been filled in with the concrete type &lt;code&gt;String&lt;/code&gt; and the generic type &lt;code&gt;E&lt;/code&gt; has been filled in with the concrete type &lt;code&gt;io::Error&lt;/code&gt;. If this function succeeds without any problems, the code that calls this function will receive an &lt;code&gt;Ok&lt;/code&gt; value that holds a &lt;code&gt;String&lt;/code&gt;&amp;mdash;the username that this function read from the file. If this function encounters any problems, the code that calls this function will receive an &lt;code&gt;Err&lt;/code&gt; value that holds an instance of &lt;code&gt;io::Error&lt;/code&gt; that contains more information about what the problems were. We chose &lt;code&gt;io::Error&lt;/code&gt; as the return type of this function because that happens to be the type of the error value returned from both of the operations we&amp;rsquo;re calling in this function&amp;rsquo;s body that might fail: the &lt;code&gt;File::open&lt;/code&gt; function and the &lt;code&gt;read_to_string&lt;/code&gt; method.</source>
          <target state="translated">Esta funci&amp;oacute;n se puede escribir de una manera mucho m&amp;aacute;s corta, pero vamos a empezar haciendo muchas de ellas manualmente para explorar el manejo de errores; al final, mostraremos el camino m&amp;aacute;s corto. Veamos primero el tipo de retorno de la funci&amp;oacute;n: &lt;code&gt;Result&amp;lt;String, io::Error&amp;gt;&lt;/code&gt; . Esto significa que la funci&amp;oacute;n est&amp;aacute; devolviendo un valor del tipo &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; donde el par&amp;aacute;metro gen&amp;eacute;rico &lt;code&gt;T&lt;/code&gt; se ha completado con el tipo concreto &lt;code&gt;String&lt;/code&gt; y el tipo gen&amp;eacute;rico &lt;code&gt;E&lt;/code&gt; se ha completado con el tipo concreto &lt;code&gt;io::Error&lt;/code&gt; . Si esta funci&amp;oacute;n tiene &amp;eacute;xito sin ning&amp;uacute;n problema, el c&amp;oacute;digo que llama a esta funci&amp;oacute;n recibir&amp;aacute; un valor &lt;code&gt;Ok&lt;/code&gt; que contiene una &lt;code&gt;String&lt;/code&gt; : El nombre de usuario que esta funci&amp;oacute;n ley&amp;oacute; del archivo. Si esta funci&amp;oacute;n encuentra alg&amp;uacute;n problema, el c&amp;oacute;digo que llama a esta funci&amp;oacute;n recibir&amp;aacute; un valor &lt;code&gt;Err&lt;/code&gt; que contiene una instancia de &lt;code&gt;io::Error&lt;/code&gt; que contiene m&amp;aacute;s informaci&amp;oacute;n sobre cu&amp;aacute;les fueron los problemas. Elegimos &lt;code&gt;io::Error&lt;/code&gt; como el tipo de retorno de esta funci&amp;oacute;n porque resulta ser el tipo de valor de error devuelto por las dos operaciones que llamamos en el cuerpo de esta funci&amp;oacute;n que podr&amp;iacute;an fallar: la funci&amp;oacute;n &lt;code&gt;File::open&lt;/code&gt; y la m&amp;eacute;todo &lt;code&gt;read_to_string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb45099429d3a43cd1fd9c5de5abe0335d7b7e9d" translate="yes" xml:space="preserve">
          <source>This function corresponds to &lt;a href=&quot;../mem/fn.replace&quot;&gt;&lt;code&gt;std::mem::replace&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n corresponde a &lt;a href=&quot;../mem/fn.replace&quot;&gt; &lt;code&gt;std::mem::replace&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bc55369db6754d8ec7579c34bfc5b97438f6a7f6" translate="yes" xml:space="preserve">
          <source>This function corresponds to &lt;a href=&quot;../mem/fn.swap&quot;&gt;&lt;code&gt;std::mem::swap&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n corresponde a &lt;a href=&quot;../mem/fn.swap&quot;&gt; &lt;code&gt;std::mem::swap&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ac167c5922dc46db61626cca7bc837d30e8e8d77" translate="yes" xml:space="preserve">
          <source>This function currently corresponds to &lt;code&gt;opendir&lt;/code&gt;, &lt;code&gt;lstat&lt;/code&gt;, &lt;code&gt;rm&lt;/code&gt; and &lt;code&gt;rmdir&lt;/code&gt; functions on Unix and the &lt;code&gt;FindFirstFile&lt;/code&gt;, &lt;code&gt;GetFileAttributesEx&lt;/code&gt;, &lt;code&gt;DeleteFile&lt;/code&gt;, and &lt;code&gt;RemoveDirectory&lt;/code&gt; functions on Windows. Note that, this &lt;a href=&quot;../io/index#platform-specific-behavior&quot;&gt;may change in the future&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n corresponde actualmente a las funciones &lt;code&gt;opendir&lt;/code&gt; , &lt;code&gt;lstat&lt;/code&gt; , &lt;code&gt;rm&lt;/code&gt; y &lt;code&gt;rmdir&lt;/code&gt; en Unix y las funciones &lt;code&gt;FindFirstFile&lt;/code&gt; , &lt;code&gt;GetFileAttributesEx&lt;/code&gt; , &lt;code&gt;DeleteFile&lt;/code&gt; y &lt;code&gt;RemoveDirectory&lt;/code&gt; en Windows. Tenga en cuenta que esto &lt;a href=&quot;../io/index#platform-specific-behavior&quot;&gt;puede cambiar en el futuro&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bea785a55c87ae52504d49f8f95ea16d8aa3ce9e" translate="yes" xml:space="preserve">
          <source>This function currently corresponds to the &lt;code&gt;chmod&lt;/code&gt; function on Unix and the &lt;code&gt;SetFileAttributes&lt;/code&gt; function on Windows. Note that, this &lt;a href=&quot;../io/index#platform-specific-behavior&quot;&gt;may change in the future&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n corresponde actualmente a la funci&amp;oacute;n &lt;code&gt;chmod&lt;/code&gt; en Unix y la funci&amp;oacute;n &lt;code&gt;SetFileAttributes&lt;/code&gt; en Windows. Tenga en cuenta que esto &lt;a href=&quot;../io/index#platform-specific-behavior&quot;&gt;puede cambiar en el futuro&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="04e383479b2228c3ffffa98975698e9dda256dbb" translate="yes" xml:space="preserve">
          <source>This function currently corresponds to the &lt;code&gt;fchmod&lt;/code&gt; function on Unix and the &lt;code&gt;SetFileInformationByHandle&lt;/code&gt; function on Windows. Note that, this &lt;a href=&quot;../io/index#platform-specific-behavior&quot;&gt;may change in the future&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n corresponde actualmente a la funci&amp;oacute;n &lt;code&gt;fchmod&lt;/code&gt; en Unix y la funci&amp;oacute;n &lt;code&gt;SetFileInformationByHandle&lt;/code&gt; en Windows. Tenga en cuenta que esto &lt;a href=&quot;../io/index#platform-specific-behavior&quot;&gt;puede cambiar en el futuro&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0176ddcd073fa8b60d6460114db8d5951e367349" translate="yes" xml:space="preserve">
          <source>This function currently corresponds to the &lt;code&gt;link&lt;/code&gt; function on Unix and the &lt;code&gt;CreateHardLink&lt;/code&gt; function on Windows. Note that, this &lt;a href=&quot;../io/index#platform-specific-behavior&quot;&gt;may change in the future&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n corresponde actualmente a la funci&amp;oacute;n de &lt;code&gt;link&lt;/code&gt; en Unix y la funci&amp;oacute;n &lt;code&gt;CreateHardLink&lt;/code&gt; en Windows. Tenga en cuenta que esto &lt;a href=&quot;../io/index#platform-specific-behavior&quot;&gt;puede cambiar en el futuro&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="21169ffe61676853807722591cc30f485744220c" translate="yes" xml:space="preserve">
          <source>This function currently corresponds to the &lt;code&gt;linkat&lt;/code&gt; function with no flags on Unix and the &lt;code&gt;CreateHardLink&lt;/code&gt; function on Windows. Note that, this &lt;a href=&quot;../io/index#platform-specific-behavior&quot;&gt;may change in the future&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01e2694d82da90e8f24cd10e750a58377e07410c" translate="yes" xml:space="preserve">
          <source>This function currently corresponds to the &lt;code&gt;lstat&lt;/code&gt; function on Unix and the &lt;code&gt;GetFileAttributesEx&lt;/code&gt; function on Windows. Note that, this &lt;a href=&quot;../io/index#platform-specific-behavior&quot;&gt;may change in the future&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n corresponde actualmente a la funci&amp;oacute;n &lt;code&gt;lstat&lt;/code&gt; en Unix y la funci&amp;oacute;n &lt;code&gt;GetFileAttributesEx&lt;/code&gt; en Windows. Tenga en cuenta que esto &lt;a href=&quot;../io/index#platform-specific-behavior&quot;&gt;puede cambiar en el futuro&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3537e3f2c9af1f7a17489b68fe05b364816b75fc" translate="yes" xml:space="preserve">
          <source>This function currently corresponds to the &lt;code&gt;mkdir&lt;/code&gt; function on Unix and the &lt;code&gt;CreateDirectory&lt;/code&gt; function on Windows. Note that, this &lt;a href=&quot;../io/index#platform-specific-behavior&quot;&gt;may change in the future&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n corresponde actualmente a la funci&amp;oacute;n &lt;code&gt;mkdir&lt;/code&gt; en Unix y la funci&amp;oacute;n &lt;code&gt;CreateDirectory&lt;/code&gt; en Windows. Tenga en cuenta que esto &lt;a href=&quot;../io/index#platform-specific-behavior&quot;&gt;puede cambiar en el futuro&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4ffbba2d718a3b3920d07fee5dfb64d2a84ce583" translate="yes" xml:space="preserve">
          <source>This function currently corresponds to the &lt;code&gt;open&lt;/code&gt; function in Unix with &lt;code&gt;O_RDONLY&lt;/code&gt; for &lt;code&gt;from&lt;/code&gt; and &lt;code&gt;O_WRONLY&lt;/code&gt;, &lt;code&gt;O_CREAT&lt;/code&gt;, and &lt;code&gt;O_TRUNC&lt;/code&gt; for &lt;code&gt;to&lt;/code&gt;. &lt;code&gt;O_CLOEXEC&lt;/code&gt; is set for returned file descriptors. On Windows, this function currently corresponds to &lt;code&gt;CopyFileEx&lt;/code&gt;. Alternate NTFS streams are copied but only the size of the main stream is returned by this function. On MacOS, this function corresponds to &lt;code&gt;fclonefileat&lt;/code&gt; and &lt;code&gt;fcopyfile&lt;/code&gt;. Note that, this &lt;a href=&quot;../io/index#platform-specific-behavior&quot;&gt;may change in the future&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n corresponde actualmente a la funci&amp;oacute;n &lt;code&gt;open&lt;/code&gt; en Unix con &lt;code&gt;O_RDONLY&lt;/code&gt; para &lt;code&gt;from&lt;/code&gt; y &lt;code&gt;O_WRONLY&lt;/code&gt; , &lt;code&gt;O_CREAT&lt;/code&gt; y &lt;code&gt;O_TRUNC&lt;/code&gt; para &lt;code&gt;to&lt;/code&gt; . &lt;code&gt;O_CLOEXEC&lt;/code&gt; est&amp;aacute; configurado para descriptores de archivos devueltos. En Windows, esta funci&amp;oacute;n corresponde actualmente a &lt;code&gt;CopyFileEx&lt;/code&gt; . Se copian secuencias NTFS alternativas, pero esta funci&amp;oacute;n solo devuelve el tama&amp;ntilde;o de la secuencia principal. En MacOS, esta funci&amp;oacute;n corresponde a &lt;code&gt;fclonefileat&lt;/code&gt; y &lt;code&gt;fcopyfile&lt;/code&gt; . Tenga en cuenta que esto &lt;a href=&quot;../io/index#platform-specific-behavior&quot;&gt;puede cambiar en el futuro&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="69a3d5683d593b686853078a406cbc99ddb7840f" translate="yes" xml:space="preserve">
          <source>This function currently corresponds to the &lt;code&gt;opendir&lt;/code&gt; function on Unix and the &lt;code&gt;FindFirstFile&lt;/code&gt; function on Windows. Advancing the iterator currently corresponds to &lt;code&gt;readdir&lt;/code&gt; on Unix and &lt;code&gt;FindNextFile&lt;/code&gt; on Windows. Note that, this &lt;a href=&quot;../io/index#platform-specific-behavior&quot;&gt;may change in the future&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85bdcb1c22d0b90cfc515b44a49195abde2937e0" translate="yes" xml:space="preserve">
          <source>This function currently corresponds to the &lt;code&gt;opendir&lt;/code&gt; function on Unix and the &lt;code&gt;FindFirstFile&lt;/code&gt; function on Windows. Note that, this &lt;a href=&quot;../io/index#platform-specific-behavior&quot;&gt;may change in the future&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n corresponde actualmente a la funci&amp;oacute;n &lt;code&gt;opendir&lt;/code&gt; en Unix y la funci&amp;oacute;n &lt;code&gt;FindFirstFile&lt;/code&gt; en Windows. Tenga en cuenta que esto &lt;a href=&quot;../io/index#platform-specific-behavior&quot;&gt;puede cambiar en el futuro&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c6d0089b9c1b95a34e4ecb4a009ec095c9db172d" translate="yes" xml:space="preserve">
          <source>This function currently corresponds to the &lt;code&gt;readlink&lt;/code&gt; function on Unix and the &lt;code&gt;CreateFile&lt;/code&gt; function with &lt;code&gt;FILE_FLAG_OPEN_REPARSE_POINT&lt;/code&gt; and &lt;code&gt;FILE_FLAG_BACKUP_SEMANTICS&lt;/code&gt; flags on Windows. Note that, this &lt;a href=&quot;../io/index#platform-specific-behavior&quot;&gt;may change in the future&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n corresponde actualmente a la &lt;code&gt;readlink&lt;/code&gt; funci&amp;oacute;n en Unix y el &lt;code&gt;CreateFile&lt;/code&gt; funci&amp;oacute;n con &lt;code&gt;FILE_FLAG_OPEN_REPARSE_POINT&lt;/code&gt; y &lt;code&gt;FILE_FLAG_BACKUP_SEMANTICS&lt;/code&gt; banderas en las ventanas. Tenga en cuenta que esto &lt;a href=&quot;../io/index#platform-specific-behavior&quot;&gt;puede cambiar en el futuro&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="83d811fb4fcc08f1492a059a3536fbb7a2a90ca2" translate="yes" xml:space="preserve">
          <source>This function currently corresponds to the &lt;code&gt;realpath&lt;/code&gt; function on Unix and the &lt;code&gt;CreateFile&lt;/code&gt; and &lt;code&gt;GetFinalPathNameByHandle&lt;/code&gt; functions on Windows. Note that, this &lt;a href=&quot;../io/index#platform-specific-behavior&quot;&gt;may change in the future&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n corresponde actualmente a la &lt;code&gt;realpath&lt;/code&gt; funci&amp;oacute;n en Unix y el &lt;code&gt;CreateFile&lt;/code&gt; y &lt;code&gt;GetFinalPathNameByHandle&lt;/code&gt; funciones en Windows. Tenga en cuenta que esto &lt;a href=&quot;../io/index#platform-specific-behavior&quot;&gt;puede cambiar en el futuro&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e8892007c2c9e02432f47cff4848a4e40ebbc10c" translate="yes" xml:space="preserve">
          <source>This function currently corresponds to the &lt;code&gt;rename&lt;/code&gt; function on Unix and the &lt;code&gt;MoveFileEx&lt;/code&gt; function with the &lt;code&gt;MOVEFILE_REPLACE_EXISTING&lt;/code&gt; flag on Windows.</source>
          <target state="translated">Esta funci&amp;oacute;n corresponde actualmente a la funci&amp;oacute;n de &lt;code&gt;rename&lt;/code&gt; en Unix y la funci&amp;oacute;n &lt;code&gt;MoveFileEx&lt;/code&gt; con el indicador &lt;code&gt;MOVEFILE_REPLACE_EXISTING&lt;/code&gt; en Windows.</target>
        </trans-unit>
        <trans-unit id="8dd8f559f50531dc710476fe85e80e2f8d9753bd" translate="yes" xml:space="preserve">
          <source>This function currently corresponds to the &lt;code&gt;rmdir&lt;/code&gt; function on Unix and the &lt;code&gt;RemoveDirectory&lt;/code&gt; function on Windows. Note that, this &lt;a href=&quot;../io/index#platform-specific-behavior&quot;&gt;may change in the future&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n corresponde actualmente a la funci&amp;oacute;n &lt;code&gt;rmdir&lt;/code&gt; en Unix y la funci&amp;oacute;n &lt;code&gt;RemoveDirectory&lt;/code&gt; en Windows. Tenga en cuenta que esto &lt;a href=&quot;../io/index#platform-specific-behavior&quot;&gt;puede cambiar en el futuro&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b504889b373cb94fdb7ee56e28d937c2f36d6f0b" translate="yes" xml:space="preserve">
          <source>This function currently corresponds to the &lt;code&gt;stat&lt;/code&gt; function on Unix and the &lt;code&gt;GetFileAttributesEx&lt;/code&gt; function on Windows. Note that, this &lt;a href=&quot;../io/index#platform-specific-behavior&quot;&gt;may change in the future&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n corresponde actualmente a la funci&amp;oacute;n &lt;code&gt;stat&lt;/code&gt; en Unix y la funci&amp;oacute;n &lt;code&gt;GetFileAttributesEx&lt;/code&gt; en Windows. Tenga en cuenta que esto &lt;a href=&quot;../io/index#platform-specific-behavior&quot;&gt;puede cambiar en el futuro&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6672293739936665c26201ef3156432a0e98fd87" translate="yes" xml:space="preserve">
          <source>This function currently corresponds to the &lt;code&gt;unlink&lt;/code&gt; function on Unix and the &lt;code&gt;DeleteFile&lt;/code&gt; function on Windows. Note that, this &lt;a href=&quot;../io/index#platform-specific-behavior&quot;&gt;may change in the future&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n corresponde actualmente a la funci&amp;oacute;n de &lt;code&gt;unlink&lt;/code&gt; en Unix y la funci&amp;oacute;n &lt;code&gt;DeleteFile&lt;/code&gt; en Windows. Tenga en cuenta que esto &lt;a href=&quot;../io/index#platform-specific-behavior&quot;&gt;puede cambiar en el futuro&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c94bdac48da7a0fc40fd1e5a086497b625f64825" translate="yes" xml:space="preserve">
          <source>This function does &lt;strong&gt;not&lt;/strong&gt; follow symbolic links and it will simply remove the symbolic link itself.</source>
          <target state="translated">Esta funci&amp;oacute;n &lt;strong&gt;no&lt;/strong&gt; sigue enlaces simb&amp;oacute;licos y simplemente eliminar&amp;aacute; el enlace simb&amp;oacute;lico en s&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="977a8c203f0461d37e9d1afc3c85702bdcf54979" translate="yes" xml:space="preserve">
          <source>This function does not block.</source>
          <target state="translated">Esta función no se bloquea.</target>
        </trans-unit>
        <trans-unit id="99013d0e9f610e4b4ac531acb8d3cae6c5f35caf" translate="yes" xml:space="preserve">
          <source>This function does not provide any guarantees about whether it blocks waiting for data, but if an object needs to block for a read and cannot, it will typically signal this via an &lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; return value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f6f2506f47f0d38fd935eda8f1d3f32af31d36c" translate="yes" xml:space="preserve">
          <source>This function does not provide any guarantees about whether it blocks waiting for data, but if an object needs to block for a read but cannot it will typically signal this via an &lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; return value.</source>
          <target state="translated">Esta funci&amp;oacute;n no ofrece ninguna garant&amp;iacute;a sobre si bloquea la espera de datos, pero si un objeto necesita bloquearse para una lectura pero no puede, normalmente lo indicar&amp;aacute; mediante un valor de retorno &lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c9eb6fee31ded1ada354009451436d0884930106" translate="yes" xml:space="preserve">
          <source>This function does not provide any guarantees with respect to the ordering of whether contentious readers or writers will acquire the lock first.</source>
          <target state="translated">Esta función no ofrece ninguna garantía con respecto al ordenamiento de si los lectores o escritores contenciosos adquirirán primero el candado.</target>
        </trans-unit>
        <trans-unit id="710d2720b9947751fee0e57d2b8d496c47712e72" translate="yes" xml:space="preserve">
          <source>This function does not resolve trait objects, meaning that &lt;code&gt;type_name_of_val(&amp;amp;7u32 as &amp;amp;dyn Debug)&lt;/code&gt; may return &lt;code&gt;&quot;dyn Debug&quot;&lt;/code&gt;, but not &lt;code&gt;&quot;u32&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4305826482cc10423eedc0c48122ffd5b51fb63b" translate="yes" xml:space="preserve">
          <source>This function doesn't create the file if it doesn't exist. Use the &lt;a href=&quot;#method.create&quot;&gt;&lt;code&gt;create&lt;/code&gt;&lt;/a&gt; method to do so.</source>
          <target state="translated">Esta funci&amp;oacute;n no crea el archivo si no existe. Utilice el m&amp;eacute;todo de &lt;a href=&quot;#method.create&quot;&gt; &lt;code&gt;create&lt;/code&gt; &lt;/a&gt; para hacerlo.</target>
        </trans-unit>
        <trans-unit id="33592db8fb3f9eb9295ccd92b371a923eae06e5a" translate="yes" xml:space="preserve">
          <source>This function doesn't create the file if it doesn't exist. Use the &lt;a href=&quot;struct.openoptions#method.create&quot;&gt;&lt;code&gt;OpenOptions::create&lt;/code&gt;&lt;/a&gt; method to do so.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ecd58992bf3950332fa012ed014d7ac0b8bc7f" translate="yes" xml:space="preserve">
          <source>This function first gets the total length of the slice. Then it asserts that the index given as a parameter is within the slice by checking whether it&amp;rsquo;s less than or equal to the length. The assertion means that if we pass an index that is greater than the index to split the slice at, the function will panic before it attempts to use that index.</source>
          <target state="translated">Esta funci&amp;oacute;n primero obtiene la longitud total del corte. Luego afirma que el &amp;iacute;ndice dado como par&amp;aacute;metro est&amp;aacute; dentro del segmento al verificar si es menor o igual que la longitud. La afirmaci&amp;oacute;n significa que si pasamos un &amp;iacute;ndice que es mayor que el &amp;iacute;ndice en el que dividir el segmento, la funci&amp;oacute;n entrar&amp;aacute; en p&amp;aacute;nico antes de intentar usar ese &amp;iacute;ndice.</target>
        </trans-unit>
        <trans-unit id="ef704585a456099301abe7c7cdfceffbef996018" translate="yes" xml:space="preserve">
          <source>This function first gets the total length of the slice. Then it asserts that the index given as a parameter is within the slice by checking whether it&amp;rsquo;s less than or equal to the length. The assertion means that if we pass an index that is greater than the length to split the slice at, the function will panic before it attempts to use that index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="457e092a949142d636a9e03fab0c159238f5daa4" translate="yes" xml:space="preserve">
          <source>This function forwards calls to the &lt;a href=&quot;trait.globalalloc#method.alloc_zeroed&quot;&gt;&lt;code&gt;GlobalAlloc::alloc_zeroed&lt;/code&gt;&lt;/a&gt; method of the allocator registered with the &lt;code&gt;#[global_allocator]&lt;/code&gt; attribute if there is one, or the &lt;code&gt;std&lt;/code&gt; crate&amp;rsquo;s default.</source>
          <target state="translated">Esta funci&amp;oacute;n desv&amp;iacute;a las llamadas a la &lt;a href=&quot;trait.globalalloc#method.alloc_zeroed&quot;&gt; &lt;code&gt;GlobalAlloc::alloc_zeroed&lt;/code&gt; &lt;/a&gt; m&amp;eacute;todo de la asignador registrado con el &lt;code&gt;#[global_allocator]&lt;/code&gt; atributo si lo hay, o la &lt;code&gt;std&lt;/code&gt; por defecto de caja.</target>
        </trans-unit>
        <trans-unit id="dac6968f4833b95b4cfc0a37edb3317e41dafb8d" translate="yes" xml:space="preserve">
          <source>This function forwards calls to the &lt;a href=&quot;trait.globalalloc#method.realloc&quot;&gt;&lt;code&gt;GlobalAlloc::realloc&lt;/code&gt;&lt;/a&gt; method of the allocator registered with the &lt;code&gt;#[global_allocator]&lt;/code&gt; attribute if there is one, or the &lt;code&gt;std&lt;/code&gt; crate&amp;rsquo;s default.</source>
          <target state="translated">Esta funci&amp;oacute;n desv&amp;iacute;a las llamadas a la &lt;a href=&quot;trait.globalalloc#method.realloc&quot;&gt; &lt;code&gt;GlobalAlloc::realloc&lt;/code&gt; &lt;/a&gt; m&amp;eacute;todo de la asignador registrado con el &lt;code&gt;#[global_allocator]&lt;/code&gt; atributo si lo hay, o la &lt;code&gt;std&lt;/code&gt; por defecto de caja.</target>
        </trans-unit>
        <trans-unit id="0ee226de8b2847b4bcaa66f0141bab39ef9c2e4e" translate="yes" xml:space="preserve">
          <source>This function forwards calls to the &lt;a href=&quot;trait.globalalloc#tymethod.alloc&quot;&gt;&lt;code&gt;GlobalAlloc::alloc&lt;/code&gt;&lt;/a&gt; method of the allocator registered with the &lt;code&gt;#[global_allocator]&lt;/code&gt; attribute if there is one, or the &lt;code&gt;std&lt;/code&gt; crate&amp;rsquo;s default.</source>
          <target state="translated">Esta funci&amp;oacute;n desv&amp;iacute;a las llamadas a la &lt;a href=&quot;trait.globalalloc#tymethod.alloc&quot;&gt; &lt;code&gt;GlobalAlloc::alloc&lt;/code&gt; &lt;/a&gt; m&amp;eacute;todo de la asignador registrado con el &lt;code&gt;#[global_allocator]&lt;/code&gt; atributo si lo hay, o la &lt;code&gt;std&lt;/code&gt; por defecto de caja.</target>
        </trans-unit>
        <trans-unit id="43408a3e60cf657f5104a853eae37001a5663e2b" translate="yes" xml:space="preserve">
          <source>This function forwards calls to the &lt;a href=&quot;trait.globalalloc#tymethod.dealloc&quot;&gt;&lt;code&gt;GlobalAlloc::dealloc&lt;/code&gt;&lt;/a&gt; method of the allocator registered with the &lt;code&gt;#[global_allocator]&lt;/code&gt; attribute if there is one, or the &lt;code&gt;std&lt;/code&gt; crate&amp;rsquo;s default.</source>
          <target state="translated">Esta funci&amp;oacute;n desv&amp;iacute;a las llamadas a la &lt;a href=&quot;trait.globalalloc#tymethod.dealloc&quot;&gt; &lt;code&gt;GlobalAlloc::dealloc&lt;/code&gt; &lt;/a&gt; m&amp;eacute;todo de la asignador registrado con el &lt;code&gt;#[global_allocator]&lt;/code&gt; atributo si lo hay, o la &lt;code&gt;std&lt;/code&gt; por defecto de caja.</target>
        </trans-unit>
        <trans-unit id="438ebff47f84838c22c79fbc8bfdda182cd513dc" translate="yes" xml:space="preserve">
          <source>This function gets called when a &lt;a href=&quot;struct.rawwaker&quot;&gt;&lt;code&gt;RawWaker&lt;/code&gt;&lt;/a&gt; gets dropped.</source>
          <target state="translated">Esta funci&amp;oacute;n se llama cuando se &lt;a href=&quot;struct.rawwaker&quot;&gt; &lt;code&gt;RawWaker&lt;/code&gt; &lt;/a&gt; un RawWaker .</target>
        </trans-unit>
        <trans-unit id="13819f0b7aa144e5ea6bcb9cc9f9a6808e198851" translate="yes" xml:space="preserve">
          <source>This function has the same error semantics as &lt;a href=&quot;#method.read_until&quot;&gt;&lt;code&gt;read_until&lt;/code&gt;&lt;/a&gt; and will also return an error if the read bytes are not valid UTF-8. If an I/O error is encountered then &lt;code&gt;buf&lt;/code&gt; may contain some bytes already read in the event that all data read so far was valid UTF-8.</source>
          <target state="translated">Esta funci&amp;oacute;n tiene la misma sem&amp;aacute;ntica de error que &lt;a href=&quot;#method.read_until&quot;&gt; &lt;code&gt;read_until&lt;/code&gt; &lt;/a&gt; y tambi&amp;eacute;n devolver&amp;aacute; un error si los bytes le&amp;iacute;dos no son UTF-8 v&amp;aacute;lidos. Si se encuentra un error de E / S, entonces &lt;code&gt;buf&lt;/code&gt; puede contener algunos bytes ya le&amp;iacute;dos en caso de que todos los datos le&amp;iacute;dos hasta el momento fueran UTF-8 v&amp;aacute;lidos.</target>
        </trans-unit>
        <trans-unit id="2b30023fb932961fde08dc32d5756888772fda90" translate="yes" xml:space="preserve">
          <source>This function has the same error semantics as &lt;a href=&quot;trait.bufread#method.read_until&quot;&gt;&lt;code&gt;read_until&lt;/code&gt;&lt;/a&gt; and will also return an error if the read bytes are not valid UTF-8. If an I/O error is encountered then &lt;code&gt;buf&lt;/code&gt; may contain some bytes already read in the event that all data read so far was valid UTF-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f52e89cf7de02d11dddd72bc5753735b903e55b9" translate="yes" xml:space="preserve">
          <source>This function has the same safety guarantees as the &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt;&lt;code&gt;Iterator::size_hint&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adea46a33368b546562d3adbbc93c24db07769c5" translate="yes" xml:space="preserve">
          <source>This function has the same safety guarantees as the &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt;&lt;code&gt;size_hint&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">Esta funci&amp;oacute;n tiene las mismas garant&amp;iacute;as de seguridad que la funci&amp;oacute;n &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt; &lt;code&gt;size_hint&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1b144c49949055dde44dc3050173804acf39c11f" translate="yes" xml:space="preserve">
          <source>This function internally uses the &lt;a href=&quot;#method.write_all&quot;&gt;&lt;code&gt;write_all&lt;/code&gt;&lt;/a&gt; method on this trait and hence will continuously write data so long as no errors are received. This also means that partial writes are not indicated in this signature.</source>
          <target state="translated">Esta funci&amp;oacute;n utiliza internamente el m&amp;eacute;todo &lt;a href=&quot;#method.write_all&quot;&gt; &lt;code&gt;write_all&lt;/code&gt; &lt;/a&gt; en este rasgo y, por lo tanto, escribir&amp;aacute; datos continuamente siempre que no se reciban errores. Esto tambi&amp;eacute;n significa que las escrituras parciales no se indican en esta firma.</target>
        </trans-unit>
        <trans-unit id="66530779d87bba553e9df64d147255f7af9fe886" translate="yes" xml:space="preserve">
          <source>This function internally uses the &lt;a href=&quot;trait.write#method.write_all&quot;&gt;&lt;code&gt;write_all&lt;/code&gt;&lt;/a&gt; method on this trait and hence will continuously write data so long as no errors are received. This also means that partial writes are not indicated in this signature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f9b7d260474b82b56786f2b96849de01b420191" translate="yes" xml:space="preserve">
          <source>This function is a lower-level call. It needs to be paired with the &lt;a href=&quot;#tymethod.consume&quot;&gt;&lt;code&gt;consume&lt;/code&gt;&lt;/a&gt; method to function properly. When calling this method, none of the contents will be &quot;read&quot; in the sense that later calling &lt;code&gt;read&lt;/code&gt; may return the same contents. As such, &lt;a href=&quot;#tymethod.consume&quot;&gt;&lt;code&gt;consume&lt;/code&gt;&lt;/a&gt; must be called with the number of bytes that are consumed from this buffer to ensure that the bytes are never returned twice.</source>
          <target state="translated">Esta funci&amp;oacute;n es una llamada de nivel inferior. Debe emparejarse con el m&amp;eacute;todo de &lt;a href=&quot;#tymethod.consume&quot;&gt; &lt;code&gt;consume&lt;/code&gt; &lt;/a&gt; para que funcione correctamente. Al llamar a este m&amp;eacute;todo, ninguno de los contenidos se &quot;leer&amp;aacute;&quot; en el sentido de que una llamada posterior a &lt;code&gt;read&lt;/code&gt; puede devolver el mismo contenido. Como tal, se debe llamar a &lt;a href=&quot;#tymethod.consume&quot;&gt; &lt;code&gt;consume&lt;/code&gt; &lt;/a&gt; con la cantidad de bytes que se consumen de este b&amp;uacute;fer para garantizar que los bytes nunca se devuelvan dos veces.</target>
        </trans-unit>
        <trans-unit id="1da3425b653a05b924f0c013401f366dcdf5aa2c" translate="yes" xml:space="preserve">
          <source>This function is a lower-level call. It needs to be paired with the &lt;a href=&quot;#tymethod.fill_buf&quot;&gt;&lt;code&gt;fill_buf&lt;/code&gt;&lt;/a&gt; method to function properly. This function does not perform any I/O, it simply informs this object that some amount of its buffer, returned from &lt;a href=&quot;#tymethod.fill_buf&quot;&gt;&lt;code&gt;fill_buf&lt;/code&gt;&lt;/a&gt;, has been consumed and should no longer be returned. As such, this function may do odd things if &lt;a href=&quot;#tymethod.fill_buf&quot;&gt;&lt;code&gt;fill_buf&lt;/code&gt;&lt;/a&gt; isn't called before calling it.</source>
          <target state="translated">Esta funci&amp;oacute;n es una llamada de nivel inferior. Debe emparejarse con el m&amp;eacute;todo &lt;a href=&quot;#tymethod.fill_buf&quot;&gt; &lt;code&gt;fill_buf&lt;/code&gt; &lt;/a&gt; para que funcione correctamente. Esta funci&amp;oacute;n no realiza ninguna E / S, simplemente informa a este objeto que parte de su b&amp;uacute;fer, devuelto por &lt;a href=&quot;#tymethod.fill_buf&quot;&gt; &lt;code&gt;fill_buf&lt;/code&gt; &lt;/a&gt; , se ha consumido y ya no deber&amp;iacute;a devolverse. Como tal, esta funci&amp;oacute;n puede hacer cosas extra&amp;ntilde;as si no se llama a &lt;a href=&quot;#tymethod.fill_buf&quot;&gt; &lt;code&gt;fill_buf&lt;/code&gt; &lt;/a&gt; antes de llamarla.</target>
        </trans-unit>
        <trans-unit id="854ee5963ab7cb501fb556356449a0a75bec7aa8" translate="yes" xml:space="preserve">
          <source>This function is a lower-level call. It needs to be paired with the &lt;a href=&quot;trait.bufread#tymethod.consume&quot;&gt;&lt;code&gt;consume&lt;/code&gt;&lt;/a&gt; method to function properly. When calling this method, none of the contents will be &quot;read&quot; in the sense that later calling &lt;code&gt;read&lt;/code&gt; may return the same contents. As such, &lt;a href=&quot;trait.bufread#tymethod.consume&quot;&gt;&lt;code&gt;consume&lt;/code&gt;&lt;/a&gt; must be called with the number of bytes that are consumed from this buffer to ensure that the bytes are never returned twice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="579c281433d14ce69320e4d857132a7a2c6352d3" translate="yes" xml:space="preserve">
          <source>This function is a lower-level call. It needs to be paired with the &lt;a href=&quot;trait.bufread#tymethod.fill_buf&quot;&gt;&lt;code&gt;fill_buf&lt;/code&gt;&lt;/a&gt; method to function properly. This function does not perform any I/O, it simply informs this object that some amount of its buffer, returned from &lt;a href=&quot;trait.bufread#tymethod.fill_buf&quot;&gt;&lt;code&gt;fill_buf&lt;/code&gt;&lt;/a&gt;, has been consumed and should no longer be returned. As such, this function may do odd things if &lt;a href=&quot;trait.bufread#tymethod.fill_buf&quot;&gt;&lt;code&gt;fill_buf&lt;/code&gt;&lt;/a&gt; isn't called before calling it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="415a263593c43f00d8f5a632e9e771b274ca8329" translate="yes" xml:space="preserve">
          <source>This function is a no-op, and does not even read from &lt;code&gt;dummy&lt;/code&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n no es operativa y ni siquiera lee del &lt;code&gt;dummy&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="04e44698b394de41883f1cf69eb125285be21b0e" translate="yes" xml:space="preserve">
          <source>This function is also unsafe as the primitives currently returned have the contract that they are the sole owner of the file descriptor they are wrapping. Usage of this function could accidentally allow violating this contract which can cause memory unsafety in code that relies on it being true.</source>
          <target state="translated">Esta función también es insegura,ya que los primitivos devueltos actualmente tienen el contrato de que son los únicos propietarios del descriptor de archivo que están envolviendo.El uso de esta función podría permitir accidentalmente violar este contrato lo que puede causar inseguridad de memoria en el código que se basa en que es cierto.</target>
        </trans-unit>
        <trans-unit id="f34531fffd31ebc3903cc0f2c5f5bc232a9d53da" translate="yes" xml:space="preserve">
          <source>This function is blocking and should be used carefully: it is possible for an attacker to continuously send bytes without ever sending a newline or EOF.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="767fc2a16ab91407b9680a74099aea95b9c90341" translate="yes" xml:space="preserve">
          <source>This function is blocking and should be used carefully: it is possible for an attacker to continuously send bytes without ever sending the delimiter or EOF.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4f07981812bfb90d5d613f3cd12334bfad99018" translate="yes" xml:space="preserve">
          <source>This function is blocking, and should not be used in &lt;code&gt;async&lt;/code&gt; functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2491a3d7b07b5d574df89b38429aea33453977ac" translate="yes" xml:space="preserve">
          <source>This function is different from &lt;a href=&quot;../../thread/fn.yield_now&quot;&gt;&lt;code&gt;std::thread::yield_now&lt;/code&gt;&lt;/a&gt; which directly yields to the system's scheduler, whereas &lt;code&gt;spin_loop_hint&lt;/code&gt; does not interact with the operating system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98d00324eb55b3a641f30a2bb642d7084ef611a4" translate="yes" xml:space="preserve">
          <source>This function is different from &lt;a href=&quot;../thread/fn.yield_now&quot;&gt;&lt;code&gt;thread::yield_now&lt;/code&gt;&lt;/a&gt; which directly yields to the system's scheduler, whereas &lt;code&gt;spin_loop&lt;/code&gt; does not interact with the operating system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2844b634a91113f81bf8561b54a56d96807ba95f" translate="yes" xml:space="preserve">
          <source>This function is different than &lt;a href=&quot;../../thread/fn.yield_now&quot;&gt;&lt;code&gt;std::thread::yield_now&lt;/code&gt;&lt;/a&gt; which directly yields to the system's scheduler, whereas &lt;code&gt;spin_loop_hint&lt;/code&gt; only signals the processor that it is entering a busy-wait spin-loop without yielding control to the system's scheduler.</source>
          <target state="translated">Esta funci&amp;oacute;n es diferente de &lt;a href=&quot;../../thread/fn.yield_now&quot;&gt; &lt;code&gt;std::thread::yield_now&lt;/code&gt; &lt;/a&gt; que cede directamente al programador del sistema, mientras que &lt;code&gt;spin_loop_hint&lt;/code&gt; solo le indica al procesador que est&amp;aacute; entrando en un bucle de giro de espera ocupado sin ceder el control al programador del sistema.</target>
        </trans-unit>
        <trans-unit id="98f804e178831934e2704907d9977fcb07b49649" translate="yes" xml:space="preserve">
          <source>This function is different than &lt;a href=&quot;../thread/fn.yield_now&quot;&gt;&lt;code&gt;std::thread::yield_now&lt;/code&gt;&lt;/a&gt; which directly yields to the system's scheduler, whereas &lt;code&gt;spin_loop&lt;/code&gt; only signals the processor that it is entering a busy-wait spin-loop without yielding control to the system's scheduler.</source>
          <target state="translated">Esta funci&amp;oacute;n es diferente de &lt;a href=&quot;../thread/fn.yield_now&quot;&gt; &lt;code&gt;std::thread::yield_now&lt;/code&gt; &lt;/a&gt; que cede directamente al programador del sistema, mientras que &lt;code&gt;spin_loop&lt;/code&gt; solo le indica al procesador que est&amp;aacute; entrando en un bucle de giro de espera ocupado sin ceder el control al programador del sistema.</target>
        </trans-unit>
        <trans-unit id="41b9515d2076760cfa3f4b5d6d17d095ddb905fd" translate="yes" xml:space="preserve">
          <source>This function is expected to be deprecated in favor of &lt;a href=&quot;../../hint/fn.spin_loop&quot;&gt;&lt;code&gt;hint::spin_loop&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="467a74dd68a231eab8ded24aa170197676eb9466" translate="yes" xml:space="preserve">
          <source>This function is expected to be deprecated in favor of the &lt;code&gt;alloc&lt;/code&gt; method of the &lt;a href=&quot;struct.global&quot;&gt;&lt;code&gt;Global&lt;/code&gt;&lt;/a&gt; type when it and the &lt;a href=&quot;trait.alloc&quot;&gt;&lt;code&gt;Alloc&lt;/code&gt;&lt;/a&gt; trait become stable.</source>
          <target state="translated">Se espera que esta funci&amp;oacute;n quede obsoleta en favor del m&amp;eacute;todo &lt;code&gt;alloc&lt;/code&gt; del tipo &lt;a href=&quot;struct.global&quot;&gt; &lt;code&gt;Global&lt;/code&gt; &lt;/a&gt; cuando este y el rasgo &lt;a href=&quot;trait.alloc&quot;&gt; &lt;code&gt;Alloc&lt;/code&gt; &lt;/a&gt; se estabilicen.</target>
        </trans-unit>
        <trans-unit id="b99b444be238e8b895735ba0a1305ae0f8a074c7" translate="yes" xml:space="preserve">
          <source>This function is expected to be deprecated in favor of the &lt;code&gt;alloc&lt;/code&gt; method of the &lt;a href=&quot;struct.global&quot;&gt;&lt;code&gt;Global&lt;/code&gt;&lt;/a&gt; type when it and the &lt;a href=&quot;trait.allocator&quot;&gt;&lt;code&gt;Allocator&lt;/code&gt;&lt;/a&gt; trait become stable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af165703deff9d928fee107e2b077ae27c60ea8e" translate="yes" xml:space="preserve">
          <source>This function is expected to be deprecated in favor of the &lt;code&gt;alloc&lt;/code&gt; method of the &lt;a href=&quot;struct.global&quot;&gt;&lt;code&gt;Global&lt;/code&gt;&lt;/a&gt; type when it and the &lt;a href=&quot;trait.allocref&quot;&gt;&lt;code&gt;AllocRef&lt;/code&gt;&lt;/a&gt; trait become stable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6654c3116763d1cd428eebcad450e10896b561da" translate="yes" xml:space="preserve">
          <source>This function is expected to be deprecated in favor of the &lt;code&gt;alloc_zeroed&lt;/code&gt; method of the &lt;a href=&quot;struct.global&quot;&gt;&lt;code&gt;Global&lt;/code&gt;&lt;/a&gt; type when it and the &lt;a href=&quot;trait.alloc&quot;&gt;&lt;code&gt;Alloc&lt;/code&gt;&lt;/a&gt; trait become stable.</source>
          <target state="translated">Se espera que esta funci&amp;oacute;n quede obsoleta en favor del m&amp;eacute;todo &lt;code&gt;alloc_zeroed&lt;/code&gt; del tipo &lt;a href=&quot;struct.global&quot;&gt; &lt;code&gt;Global&lt;/code&gt; &lt;/a&gt; cuando este y el rasgo &lt;a href=&quot;trait.alloc&quot;&gt; &lt;code&gt;Alloc&lt;/code&gt; &lt;/a&gt; se estabilicen.</target>
        </trans-unit>
        <trans-unit id="c7978c6c99bcb0bfa61713bb6f008fffa8ca6068" translate="yes" xml:space="preserve">
          <source>This function is expected to be deprecated in favor of the &lt;code&gt;alloc_zeroed&lt;/code&gt; method of the &lt;a href=&quot;struct.global&quot;&gt;&lt;code&gt;Global&lt;/code&gt;&lt;/a&gt; type when it and the &lt;a href=&quot;trait.allocator&quot;&gt;&lt;code&gt;Allocator&lt;/code&gt;&lt;/a&gt; trait become stable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcbf3e248baf2acbd0ca22a0a9243de796c9b484" translate="yes" xml:space="preserve">
          <source>This function is expected to be deprecated in favor of the &lt;code&gt;alloc_zeroed&lt;/code&gt; method of the &lt;a href=&quot;struct.global&quot;&gt;&lt;code&gt;Global&lt;/code&gt;&lt;/a&gt; type when it and the &lt;a href=&quot;trait.allocref&quot;&gt;&lt;code&gt;AllocRef&lt;/code&gt;&lt;/a&gt; trait become stable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0400d9b530af2cdc75200e564b1d3df4717e5b0d" translate="yes" xml:space="preserve">
          <source>This function is expected to be deprecated in favor of the &lt;code&gt;dealloc&lt;/code&gt; method of the &lt;a href=&quot;struct.global&quot;&gt;&lt;code&gt;Global&lt;/code&gt;&lt;/a&gt; type when it and the &lt;a href=&quot;trait.alloc&quot;&gt;&lt;code&gt;Alloc&lt;/code&gt;&lt;/a&gt; trait become stable.</source>
          <target state="translated">Se espera que esta funci&amp;oacute;n quede obsoleta en favor del m&amp;eacute;todo &lt;code&gt;dealloc&lt;/code&gt; del tipo &lt;a href=&quot;struct.global&quot;&gt; &lt;code&gt;Global&lt;/code&gt; &lt;/a&gt; cuando este y el rasgo &lt;a href=&quot;trait.alloc&quot;&gt; &lt;code&gt;Alloc&lt;/code&gt; &lt;/a&gt; se estabilicen.</target>
        </trans-unit>
        <trans-unit id="a8b61d41d166bb1c78751280bc5439d73580399f" translate="yes" xml:space="preserve">
          <source>This function is expected to be deprecated in favor of the &lt;code&gt;dealloc&lt;/code&gt; method of the &lt;a href=&quot;struct.global&quot;&gt;&lt;code&gt;Global&lt;/code&gt;&lt;/a&gt; type when it and the &lt;a href=&quot;trait.allocator&quot;&gt;&lt;code&gt;Allocator&lt;/code&gt;&lt;/a&gt; trait become stable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed58253cb2bb6abe90cf553f72f373e1d0723cc" translate="yes" xml:space="preserve">
          <source>This function is expected to be deprecated in favor of the &lt;code&gt;dealloc&lt;/code&gt; method of the &lt;a href=&quot;struct.global&quot;&gt;&lt;code&gt;Global&lt;/code&gt;&lt;/a&gt; type when it and the &lt;a href=&quot;trait.allocref&quot;&gt;&lt;code&gt;AllocRef&lt;/code&gt;&lt;/a&gt; trait become stable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c9fc6e063817eb54b121ff88e105f246093f7ff" translate="yes" xml:space="preserve">
          <source>This function is expected to be deprecated in favor of the &lt;code&gt;realloc&lt;/code&gt; method of the &lt;a href=&quot;struct.global&quot;&gt;&lt;code&gt;Global&lt;/code&gt;&lt;/a&gt; type when it and the &lt;a href=&quot;trait.alloc&quot;&gt;&lt;code&gt;Alloc&lt;/code&gt;&lt;/a&gt; trait become stable.</source>
          <target state="translated">Se espera que esta funci&amp;oacute;n quede obsoleta en favor del m&amp;eacute;todo de &lt;code&gt;realloc&lt;/code&gt; del tipo &lt;a href=&quot;struct.global&quot;&gt; &lt;code&gt;Global&lt;/code&gt; &lt;/a&gt; cuando este y el rasgo &lt;a href=&quot;trait.alloc&quot;&gt; &lt;code&gt;Alloc&lt;/code&gt; &lt;/a&gt; se estabilicen.</target>
        </trans-unit>
        <trans-unit id="15aa09ac5eb8ebd0a5e1dff85588ffec210b0c21" translate="yes" xml:space="preserve">
          <source>This function is expected to be deprecated in favor of the &lt;code&gt;realloc&lt;/code&gt; method of the &lt;a href=&quot;struct.global&quot;&gt;&lt;code&gt;Global&lt;/code&gt;&lt;/a&gt; type when it and the &lt;a href=&quot;trait.allocator&quot;&gt;&lt;code&gt;Allocator&lt;/code&gt;&lt;/a&gt; trait become stable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa62f51911ddb19be8f5aa47587e29e20dee089f" translate="yes" xml:space="preserve">
          <source>This function is expected to be deprecated in favor of the &lt;code&gt;realloc&lt;/code&gt; method of the &lt;a href=&quot;struct.global&quot;&gt;&lt;code&gt;Global&lt;/code&gt;&lt;/a&gt; type when it and the &lt;a href=&quot;trait.allocref&quot;&gt;&lt;code&gt;AllocRef&lt;/code&gt;&lt;/a&gt; trait become stable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b11361fb076bd1f28fd827ccd142c64af2b467e" translate="yes" xml:space="preserve">
          <source>This function is just a shim intended to be removed when the &lt;code&gt;unsized_locals&lt;/code&gt; feature gets stabilized.</source>
          <target state="translated">Esta funci&amp;oacute;n es solo un suplemento que se eliminar&amp;aacute; cuando se estabilice la funci&amp;oacute;n &lt;code&gt;unsized_locals&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc7e9741757bc42e41e144d227e772dfb6ad20fc" translate="yes" xml:space="preserve">
          <source>This function is mainly useful for data that lives for the remainder of the program's life. Dropping the returned reference will cause a memory leak.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="177431c922c0d0a7a204582e17b86736e812c93b" translate="yes" xml:space="preserve">
          <source>This function is mainly useful for data that lives for the remainder of the program's life. Dropping the returned reference will cause a memory leak. If this is not acceptable, the reference should first be wrapped with the &lt;a href=&quot;struct.box#method.from_raw&quot;&gt;&lt;code&gt;Box::from_raw&lt;/code&gt;&lt;/a&gt; function producing a &lt;code&gt;Box&lt;/code&gt;. This &lt;code&gt;Box&lt;/code&gt; can then be dropped which will properly destroy &lt;code&gt;T&lt;/code&gt; and release the allocated memory.</source>
          <target state="translated">Esta funci&amp;oacute;n es principalmente &amp;uacute;til para los datos que se conservan durante el resto de la vida del programa. Eliminar la referencia devuelta provocar&amp;aacute; una p&amp;eacute;rdida de memoria. Si esto no es aceptable, la referencia debe estar envuelta primero con la funci&amp;oacute;n &lt;a href=&quot;struct.box#method.from_raw&quot;&gt; &lt;code&gt;Box::from_raw&lt;/code&gt; &lt;/a&gt; produciendo un &lt;code&gt;Box&lt;/code&gt; . Esta &lt;code&gt;Box&lt;/code&gt; se puede eliminar, lo que destruir&amp;aacute; adecuadamente &lt;code&gt;T&lt;/code&gt; y liberar&amp;aacute; la memoria asignada.</target>
        </trans-unit>
        <trans-unit id="59cb1896e3dcd115f785bf2479cb4580b1b9722d" translate="yes" xml:space="preserve">
          <source>This function is not magic; it is literally defined as</source>
          <target state="translated">Esta función no es mágica;se define literalmente como</target>
        </trans-unit>
        <trans-unit id="cc2ffe8b61942162bfcfde0b12c33ce86e8880cb" translate="yes" xml:space="preserve">
          <source>This function is only safe to call if the following conditions hold:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeccb3e706f48a212133104a654e31843b7b7b92" translate="yes" xml:space="preserve">
          <source>This function is primarily used for optimization purposes.</source>
          <target state="translated">Esta función se utiliza principalmente con fines de optimización.</target>
        </trans-unit>
        <trans-unit id="93c7910f6179639ce884370e8d94a5595d080311" translate="yes" xml:space="preserve">
          <source>This function is primarily useful for allowing byte-wise pointer arithmetic on potentially fat pointers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cd0464bff7e9c8dd1499717db18b2f31952ba8c" translate="yes" xml:space="preserve">
          <source>This function is safe, but actually using the return value is unsafe. See the documentation of &lt;a href=&quot;../slice/fn.from_raw_parts&quot;&gt;&lt;code&gt;slice::from_raw_parts&lt;/code&gt;&lt;/a&gt; for slice safety requirements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c5699202ba358abe356e82ca7c6c5715bfdeae" translate="yes" xml:space="preserve">
          <source>This function is safe, but actually using the return value is unsafe. See the documentation of &lt;a href=&quot;../slice/fn.from_raw_parts_mut&quot;&gt;&lt;code&gt;slice::from_raw_parts_mut&lt;/code&gt;&lt;/a&gt; for slice safety requirements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="451ae39575c352f08886704c7ffa48d2181b8a99" translate="yes" xml:space="preserve">
          <source>This function is safe, but dereferencing the return value is unsafe. See the documentation of &lt;a href=&quot;../slice/fn.from_raw_parts&quot;&gt;&lt;code&gt;slice::from_raw_parts&lt;/code&gt;&lt;/a&gt; for slice safety requirements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a4d03cae95a52ccbe2043ee8d63640e5a40a11f" translate="yes" xml:space="preserve">
          <source>This function is safe, even when the non-null raw slice cannot be dereferenced to a slice because the pointer does not have a valid address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f368bea1b2408b163770a1c33d9edf8ea07be6d6" translate="yes" xml:space="preserve">
          <source>This function is safe, even when the raw slice cannot be cast to a slice reference because the pointer is null or unaligned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a9053fe38824d2de0054cbaba771d8a6b62c54f" translate="yes" xml:space="preserve">
          <source>This function is semantically equivalent to &lt;a href=&quot;../mem/fn.replace&quot;&gt;&lt;code&gt;mem::replace&lt;/code&gt;&lt;/a&gt; except that it operates on raw pointers instead of references. When references are available, &lt;a href=&quot;../mem/fn.replace&quot;&gt;&lt;code&gt;mem::replace&lt;/code&gt;&lt;/a&gt; should be preferred.</source>
          <target state="translated">Esta funci&amp;oacute;n es sem&amp;aacute;nticamente equivalente a &lt;a href=&quot;../mem/fn.replace&quot;&gt; &lt;code&gt;mem::replace&lt;/code&gt; &lt;/a&gt; excepto que opera en punteros sin formato en lugar de referencias. Cuando hay referencias disponibles, se debe preferir &lt;a href=&quot;../mem/fn.replace&quot;&gt; &lt;code&gt;mem::replace&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7bc2ee69e11ff49cf8f44aa7be972ea956317ef2" translate="yes" xml:space="preserve">
          <source>This function is similar to &lt;a href=&quot;struct.file#method.sync_all&quot;&gt;&lt;code&gt;sync_all&lt;/code&gt;&lt;/a&gt;, except that it may not synchronize file metadata to the filesystem.</source>
          <target state="translated">Esta funci&amp;oacute;n es similar a &lt;a href=&quot;struct.file#method.sync_all&quot;&gt; &lt;code&gt;sync_all&lt;/code&gt; &lt;/a&gt; , excepto que puede que no sincronice los metadatos del archivo con el sistema de archivos.</target>
        </trans-unit>
        <trans-unit id="c9cbe9f2a91fb1ea199b620a6bb920ab34b40788" translate="yes" xml:space="preserve">
          <source>This function is similar to &lt;code&gt;wake&lt;/code&gt;, but must not consume the provided data pointer.</source>
          <target state="translated">Esta funci&amp;oacute;n es similar a la &lt;code&gt;wake&lt;/code&gt; , pero no debe consumir el puntero de datos proporcionado.</target>
        </trans-unit>
        <trans-unit id="3817c9c59ae829a4e4b6db71acecc27e54fc335a" translate="yes" xml:space="preserve">
          <source>This function is similar to the &lt;a href=&quot;../boxed/struct.box#method.leak&quot;&gt;&lt;code&gt;leak&lt;/code&gt;&lt;/a&gt; function on &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt; except that there is no way to recover the leaked memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ebf22d46bf6517393acc377fdd446867946954" translate="yes" xml:space="preserve">
          <source>This function is similar to the &lt;code&gt;leak&lt;/code&gt; function on &lt;code&gt;Box&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2a62d49d2d0f2fe0fb6a0071ccf5e43d3885dc1" translate="yes" xml:space="preserve">
          <source>This function is the equivalent of &lt;a href=&quot;#method.to_bytes&quot;&gt;&lt;code&gt;to_bytes&lt;/code&gt;&lt;/a&gt; except that it will retain the trailing nul terminator instead of chopping it off.</source>
          <target state="translated">Esta funci&amp;oacute;n es equivalente a &lt;a href=&quot;#method.to_bytes&quot;&gt; &lt;code&gt;to_bytes&lt;/code&gt; &lt;/a&gt; excepto que retendr&amp;aacute; el terminador nulo final en lugar de cortarlo.</target>
        </trans-unit>
        <trans-unit id="aa81adf357f1575ab28bd1d9c5804caf46b4ba04" translate="yes" xml:space="preserve">
          <source>This function is the equivalent of &lt;a href=&quot;struct.cstr#method.to_bytes&quot;&gt;&lt;code&gt;CStr::to_bytes&lt;/code&gt;&lt;/a&gt; except that it will retain the trailing nul terminator instead of chopping it off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbca71aedd00db40d26ceff11e63bc8c656a9f3e" translate="yes" xml:space="preserve">
          <source>This function is the inverse of &lt;a href=&quot;#method.offset&quot;&gt;&lt;code&gt;offset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n es la inversa de la &lt;a href=&quot;#method.offset&quot;&gt; &lt;code&gt;offset&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="60af8a75ca29fd4b9524979a42c65b475dac17ca" translate="yes" xml:space="preserve">
          <source>This function is the inverse of &lt;a href=&quot;#method.offset-1&quot;&gt;&lt;code&gt;offset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n es la inversa de la &lt;a href=&quot;#method.offset-1&quot;&gt; &lt;code&gt;offset&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a968e659e413eae940af237b572b89fdec65a1f7" translate="yes" xml:space="preserve">
          <source>This function is the mirror of &lt;a href=&quot;#method.guaranteed_eq&quot;&gt;&lt;code&gt;guaranteed_eq&lt;/code&gt;&lt;/a&gt;, but not its inverse. There are pointer comparisons for which both functions return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df5c6e62763bfc43519897ed41868fc1d62d6938" translate="yes" xml:space="preserve">
          <source>This function is the mirror of &lt;a href=&quot;#method.guaranteed_ne&quot;&gt;&lt;code&gt;guaranteed_ne&lt;/code&gt;&lt;/a&gt;, but not its inverse. There are pointer comparisons for which both functions return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4e91aa4b5730d86849f9ad126912325901a438a" translate="yes" xml:space="preserve">
          <source>This function is unsafe as it does not verify the preconditions from &lt;a href=&quot;#method.from_size_align&quot;&gt;&lt;code&gt;Layout::from_size_align&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n no es segura ya que no verifica las condiciones previas de &lt;a href=&quot;#method.from_size_align&quot;&gt; &lt;code&gt;Layout::from_size_align&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8570a34fff9bbf02e64d50247313e6b25b11941e" translate="yes" xml:space="preserve">
          <source>This function is unsafe as it does not verify the preconditions from &lt;a href=&quot;struct.layout#method.from_size_align&quot;&gt;&lt;code&gt;Layout::from_size_align&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0adf1d1fbca05371274b33d836dbb8ba3b0da96" translate="yes" xml:space="preserve">
          <source>This function is unsafe as there is no guarantee that the given pointer is valid for &lt;code&gt;len&lt;/code&gt; elements, nor whether the lifetime inferred is a suitable lifetime for the returned slice.</source>
          <target state="translated">Esta funci&amp;oacute;n no es segura ya que no hay garant&amp;iacute;a de que el puntero dado sea v&amp;aacute;lido para los elementos &lt;code&gt;len&lt;/code&gt; , ni de que el tiempo de vida inferido sea adecuado para el segmento devuelto.</target>
        </trans-unit>
        <trans-unit id="ead8661237451bd45c2559207ff2f0d2dcefd5f7" translate="yes" xml:space="preserve">
          <source>This function is unsafe because improper use may lead to memory problems. For example, a double-free may occur if the function is called twice on the same raw pointer.</source>
          <target state="translated">Esta función no es segura porque su uso incorrecto puede provocar problemas de memoria.Por ejemplo,se puede producir un doble libre si la función se llama dos veces en el mismo puntero crudo.</target>
        </trans-unit>
        <trans-unit id="35f3e90c9d123dc330088febbcb755f29e299a96" translate="yes" xml:space="preserve">
          <source>This function is unsafe because improper use may lead to memory unsafety, even if the returned &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; is never accessed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8bd102f6698ee49286a5c128925e7efc3ca2420" translate="yes" xml:space="preserve">
          <source>This function is unsafe because improper use may lead to memory unsafety, even if the returned &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; is never accessed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f0606f18b84a9d14096f66fc981df0b42c6d0bf" translate="yes" xml:space="preserve">
          <source>This function is unsafe because it does not check that the bytes passed to it are valid UTF-8. If this constraint is violated, it may cause memory unsafety issues with future users of the &lt;code&gt;String&lt;/code&gt;, as the rest of the standard library assumes that &lt;code&gt;String&lt;/code&gt;s are valid UTF-8.</source>
          <target state="translated">Esta funci&amp;oacute;n no es segura porque no comprueba que los bytes que se le pasan sean UTF-8 v&amp;aacute;lidos. Si se viola esta restricci&amp;oacute;n, puede causar problemas de inseguridad en la memoria con futuros usuarios de &lt;code&gt;String&lt;/code&gt; , ya que el resto de la biblioteca est&amp;aacute;ndar asume que &lt;code&gt;String&lt;/code&gt; s son UTF-8 v&amp;aacute;lidos.</target>
        </trans-unit>
        <trans-unit id="36c2b1be1ffd545e988489f24fde5b599256ff94" translate="yes" xml:space="preserve">
          <source>This function is unsafe because it does not check that the bytes passed to it are valid UTF-8. If this constraint is violated, undefined behavior results, as the rest of Rust assumes that &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt;s are valid UTF-8.</source>
          <target state="translated">Esta funci&amp;oacute;n no es segura porque no comprueba que los bytes que se le pasan sean UTF-8 v&amp;aacute;lidos. Si se viola esta restricci&amp;oacute;n, se produce un comportamiento indefinido, ya que el resto de Rust asume que &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt; s son UTF-8 v&amp;aacute;lidos.</target>
        </trans-unit>
        <trans-unit id="d26d0eb0451d8006697165ba21e7f4a6d2affd96" translate="yes" xml:space="preserve">
          <source>This function is unsafe because undefined behavior can result if the caller does not ensure all of the following:</source>
          <target state="translated">Esta función es insegura porque puede resultar en un comportamiento indefinido si la persona que llama no asegura todo lo siguiente:</target>
        </trans-unit>
        <trans-unit id="42a04935e77664a45c1ca55344796f0f9622e5b5" translate="yes" xml:space="preserve">
          <source>This function is unsafe because undefined behavior can result if the caller does not ensure both:</source>
          <target state="translated">Esta función es insegura porque puede resultar un comportamiento indefinido si la persona que llama no asegura ambas cosas:</target>
        </trans-unit>
        <trans-unit id="b81cd2be550f8d99eeb1700fa914c58868e2867c" translate="yes" xml:space="preserve">
          <source>This function is unsafe because undefined behavior can result if the caller does not ensure that &lt;code&gt;layout&lt;/code&gt; has non-zero size.</source>
          <target state="translated">Esta funci&amp;oacute;n no es segura porque puede producirse un comportamiento indefinido si la persona que llama no se asegura de que el &lt;code&gt;layout&lt;/code&gt; tenga un tama&amp;ntilde;o distinto de cero.</target>
        </trans-unit>
        <trans-unit id="454ec0a5acadcaac0aa85170f5ed93cb46c13302" translate="yes" xml:space="preserve">
          <source>This function is unsafe for the same reasons as &lt;a href=&quot;fn.from_raw_parts&quot;&gt;&lt;code&gt;from_raw_parts&lt;/code&gt;&lt;/a&gt;, as well as not being able to provide a non-aliasing guarantee of the returned mutable slice. &lt;code&gt;data&lt;/code&gt; must be non-null and aligned even for zero-length slices as with &lt;a href=&quot;fn.from_raw_parts&quot;&gt;&lt;code&gt;from_raw_parts&lt;/code&gt;&lt;/a&gt;. The total size of the slice must be no larger than &lt;code&gt;isize::MAX&lt;/code&gt;&lt;strong&gt;bytes&lt;/strong&gt; in memory.</source>
          <target state="translated">Esta funci&amp;oacute;n no es segura por las mismas razones que &lt;a href=&quot;fn.from_raw_parts&quot;&gt; &lt;code&gt;from_raw_parts&lt;/code&gt; &lt;/a&gt; , adem&amp;aacute;s de no poder proporcionar una garant&amp;iacute;a sin alias del segmento mutable devuelto. &lt;code&gt;data&lt;/code&gt; deben ser no nulos y estar alineados incluso para cortes de longitud cero como con &lt;a href=&quot;fn.from_raw_parts&quot;&gt; &lt;code&gt;from_raw_parts&lt;/code&gt; &lt;/a&gt; . El tama&amp;ntilde;o total del segmento no debe ser mayor que &lt;code&gt;isize::MAX&lt;/code&gt; &lt;strong&gt;bytes&lt;/strong&gt; en la memoria.</target>
        </trans-unit>
        <trans-unit id="eecdc0e72496ca31779009b14276f9c964f0fc63" translate="yes" xml:space="preserve">
          <source>This function is unsafe for the same reasons that &lt;code&gt;alloc&lt;/code&gt; is.</source>
          <target state="translated">Esta funci&amp;oacute;n no es segura por las mismas razones que &lt;code&gt;alloc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f46ccfd28f902efc152ad3d0bc725d272999fa8f" translate="yes" xml:space="preserve">
          <source>This function is unsafe for the same reasons that &lt;code&gt;alloc&lt;/code&gt; is. However the allocated block of memory is guaranteed to be initialized.</source>
          <target state="translated">Esta funci&amp;oacute;n no es segura por las mismas razones que &lt;code&gt;alloc&lt;/code&gt; . Sin embargo, se garantiza que el bloque de memoria asignado se inicializar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="c8935ef267a58bf14edf52661928291938f416d8" translate="yes" xml:space="preserve">
          <source>This function is unsafe for the same reasons that &lt;code&gt;realloc&lt;/code&gt; is.</source>
          <target state="translated">Esta funci&amp;oacute;n no es segura por las mismas razones que &lt;code&gt;realloc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="010c54d09909e31d21b794c4e10275c4b255b332" translate="yes" xml:space="preserve">
          <source>This function is unsafe, as it may construct invalid &lt;code&gt;char&lt;/code&gt; values.</source>
          <target state="translated">Esta funci&amp;oacute;n no es segura, ya que puede &lt;code&gt;char&lt;/code&gt; valores de caracteres no v&amp;aacute;lidos .</target>
        </trans-unit>
        <trans-unit id="71a1e970e4af15e1e28b626518e246fe2beaa9ff" translate="yes" xml:space="preserve">
          <source>This function is unsafe. You must guarantee that the data you return will not move so long as the argument value does not move (for example, because it is one of the fields of that value), and also that you do not move out of the argument you receive to the interior function.</source>
          <target state="translated">Esta función es insegura.Debes garantizar que los datos que devuelves no se moverán mientras el valor del argumento no se mueva (por ejemplo,porque es uno de los campos de ese valor),y también que no te muevas del argumento que recibes a la función interior.</target>
        </trans-unit>
        <trans-unit id="39a3dbf4634bdba5a0505dade8771f96ac64c22f" translate="yes" xml:space="preserve">
          <source>This function is unsafe. You must guarantee that you will continue to treat the pointer &lt;code&gt;P&lt;/code&gt; as pinned after you call this function, so that the invariants on the &lt;code&gt;Pin&lt;/code&gt; type can be upheld. If the code using the resulting &lt;code&gt;P&lt;/code&gt; does not continue to maintain the pinning invariants that is a violation of the API contract and may lead to undefined behavior in later (safe) operations.</source>
          <target state="translated">Esta funci&amp;oacute;n no es segura. Debe garantizar que seguir&amp;aacute; tratando el puntero &lt;code&gt;P&lt;/code&gt; como anclado despu&amp;eacute;s de llamar a esta funci&amp;oacute;n, de modo que se puedan mantener las invariantes en el tipo de &lt;code&gt;Pin&lt;/code&gt; . Si el c&amp;oacute;digo que usa la &lt;code&gt;P&lt;/code&gt; resultante no contin&amp;uacute;a manteniendo los invariantes de fijaci&amp;oacute;n, eso es una violaci&amp;oacute;n del contrato de API y puede conducir a un comportamiento indefinido en operaciones posteriores (seguras).</target>
        </trans-unit>
        <trans-unit id="6c0c82733953c468905548df35ad6822c84f6c7f" translate="yes" xml:space="preserve">
          <source>This function is unsafe. You must guarantee that you will never move the data out of the mutable reference you receive when you call this function, so that the invariants on the &lt;code&gt;Pin&lt;/code&gt; type can be upheld.</source>
          <target state="translated">Esta funci&amp;oacute;n no es segura. Debe garantizar que nunca sacar&amp;aacute; los datos de la referencia mutable que recibe cuando llama a esta funci&amp;oacute;n, de modo que se puedan mantener las invariantes en el tipo de &lt;code&gt;Pin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a2e566f884f51c3384b3aa58f5bde7f2e2df2f79" translate="yes" xml:space="preserve">
          <source>This function is used to generically create I/O errors which do not originate from the OS itself. The &lt;code&gt;error&lt;/code&gt; argument is an arbitrary payload which will be contained in this &lt;a href=&quot;struct.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94b97e70917e2ec0dff12c2bd6e40f05c9be7d64" translate="yes" xml:space="preserve">
          <source>This function is used to generically create I/O errors which do not originate from the OS itself. The &lt;code&gt;error&lt;/code&gt; argument is an arbitrary payload which will be contained in this &lt;code&gt;Error&lt;/code&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n se utiliza para crear de forma gen&amp;eacute;rica errores de E / S que no se originan en el propio sistema operativo. El argumento de &lt;code&gt;error&lt;/code&gt; es una carga &amp;uacute;til arbitraria que estar&amp;aacute; contenida en este &lt;code&gt;Error&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5970a37a4fd89e4e4191139591e16ccec329bf2a" translate="yes" xml:space="preserve">
          <source>This function is useful for interacting with foreign interfaces which use two pointers to refer to a range of elements in memory, as is common in C++.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf849f4d8fe700d85a6260475a19ac69c25acf8" translate="yes" xml:space="preserve">
          <source>This function is very easy to write, thanks to &lt;code&gt;match&lt;/code&gt;, and will look like Listing 6-5.</source>
          <target state="translated">Esta funci&amp;oacute;n es muy f&amp;aacute;cil de escribir, gracias a la &lt;code&gt;match&lt;/code&gt; , y se ver&amp;aacute; como el Listado 6-5.</target>
        </trans-unit>
        <trans-unit id="19c2bab36fa633ea4bf26b73afdd5bd0e16edc9a" translate="yes" xml:space="preserve">
          <source>This function is, in some sense, the opposite of &lt;a href=&quot;#method.zip&quot;&gt;&lt;code&gt;zip&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n es, en cierto sentido, lo opuesto a &lt;a href=&quot;#method.zip&quot;&gt; &lt;code&gt;zip&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a37c6f8dc5c32c647225cb24a1c4f508d03c0fdf" translate="yes" xml:space="preserve">
          <source>This function is, in some sense, the opposite of &lt;a href=&quot;trait.iterator#method.zip&quot;&gt;&lt;code&gt;zip&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee7b59ee419592da35ea7242eb2e8123baaf3cf" translate="yes" xml:space="preserve">
          <source>This function may &lt;a href=&quot;../macro.panic&quot;&gt;&lt;code&gt;panic!&lt;/code&gt;&lt;/a&gt; if it is used with more than one mutex over time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f705e261edec6d4798f68322cebb8b5768877e5d" translate="yes" xml:space="preserve">
          <source>This function may fail as the underlying system clock is susceptible to drift and updates (e.g., the system clock could go backwards), so this function may not always succeed. If successful, &lt;a href=&quot;../result/enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;struct.duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt; is returned where the duration represents the amount of time elapsed from this time measurement to the current time.</source>
          <target state="translated">Esta funci&amp;oacute;n puede fallar ya que el reloj del sistema subyacente es susceptible a cambios y actualizaciones (por ejemplo, el reloj del sistema podr&amp;iacute;a retroceder), por lo que es posible que esta funci&amp;oacute;n no siempre tenga &amp;eacute;xito. Si tiene &amp;eacute;xito, se devuelve &lt;a href=&quot;../result/enum.result#variant.Ok&quot;&gt; &lt;code&gt;Ok&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(&lt;/code&gt; &lt;a href=&quot;struct.duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt; &lt;code&gt;)&lt;/code&gt; donde la duraci&amp;oacute;n representa la cantidad de tiempo transcurrido desde esta medici&amp;oacute;n de tiempo hasta el tiempo actual.</target>
        </trans-unit>
        <trans-unit id="a43d8a17e850a82c732c367bf89a844d3d96e4fe" translate="yes" xml:space="preserve">
          <source>This function may fail because measurements taken earlier are not guaranteed to always be before later measurements (due to anomalies such as the system clock being adjusted either forwards or backwards).</source>
          <target state="translated">Esta función puede fallar porque no se garantiza que las mediciones tomadas antes sean siempre antes de las mediciones posteriores (debido a anomalías como el reloj del sistema que se ajusta hacia adelante o hacia atrás).</target>
        </trans-unit>
        <trans-unit id="8dd49c0cb240e2dbb52b64ec4b25e571052a70a5" translate="yes" xml:space="preserve">
          <source>This function may fail because measurements taken earlier are not guaranteed to always be before later measurements (due to anomalies such as the system clock being adjusted either forwards or backwards). &lt;a href=&quot;struct.instant&quot;&gt;&lt;code&gt;Instant&lt;/code&gt;&lt;/a&gt; can be used to measure elapsed time without this risk of failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5904fd4e8b5ae82205f779a00c5c8f588077b44a" translate="yes" xml:space="preserve">
          <source>This function may panic if &lt;code&gt;key&lt;/code&gt; is empty, contains an ASCII equals sign &lt;code&gt;'='&lt;/code&gt; or the NUL character &lt;code&gt;'\0'&lt;/code&gt;, or when the value contains the NUL character.</source>
          <target state="translated">Esta funci&amp;oacute;n puede entrar en p&amp;aacute;nico si la &lt;code&gt;key&lt;/code&gt; est&amp;aacute; vac&amp;iacute;a, contiene un signo igual ASCII &lt;code&gt;'='&lt;/code&gt; o el car&amp;aacute;cter NUL &lt;code&gt;'\0'&lt;/code&gt; , o cuando el valor contiene el car&amp;aacute;cter NUL.</target>
        </trans-unit>
        <trans-unit id="9a0dc67c9d122eb74decfcdabf36a2e9b439b108" translate="yes" xml:space="preserve">
          <source>This function may panic if it is called after the &lt;code&gt;Complete&lt;/code&gt; variant has been returned previously. While generator literals in the language are guaranteed to panic on resuming after &lt;code&gt;Complete&lt;/code&gt;, this is not guaranteed for all implementations of the &lt;code&gt;Generator&lt;/code&gt; trait.</source>
          <target state="translated">Esta funci&amp;oacute;n puede entrar en p&amp;aacute;nico si se llama despu&amp;eacute;s de que se haya devuelto previamente la variante &lt;code&gt;Complete&lt;/code&gt; . Si bien se garantiza que los literales del generador en el idioma entren en p&amp;aacute;nico al reanudarse despu&amp;eacute;s de &lt;code&gt;Complete&lt;/code&gt; , esto no est&amp;aacute; garantizado para todas las implementaciones del rasgo &lt;code&gt;Generator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22c11ebcd140410550c98ffdd0ada9fb8238ab32" translate="yes" xml:space="preserve">
          <source>This function may panic if the current time is earlier than this instant, which is something that can happen if an &lt;code&gt;Instant&lt;/code&gt; is produced synthetically.</source>
          <target state="translated">Esta funci&amp;oacute;n puede entrar en p&amp;aacute;nico si la hora actual es anterior a este instante, que es algo que puede suceder si un &lt;code&gt;Instant&lt;/code&gt; se produce sint&amp;eacute;ticamente.</target>
        </trans-unit>
        <trans-unit id="24a0a37cf3864874d04875e7b90815fd8bf61604" translate="yes" xml:space="preserve">
          <source>This function may panic if the resulting point in time cannot be represented by the underlying data structure. See &lt;a href=&quot;../time/struct.instant#method.checked_add&quot;&gt;&lt;code&gt;Instant::checked_add&lt;/code&gt;&lt;/a&gt; for a version without panic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aed85a838914397cfff90a6f158e84b7b3b4829" translate="yes" xml:space="preserve">
          <source>This function may panic if the resulting point in time cannot be represented by the underlying data structure. See &lt;a href=&quot;../time/struct.instant#method.checked_add&quot;&gt;&lt;code&gt;checked_add&lt;/code&gt;&lt;/a&gt; for a version without panic.</source>
          <target state="translated">Esta funci&amp;oacute;n puede entrar en p&amp;aacute;nico si el punto en el tiempo resultante no puede ser representado por la estructura de datos subyacente. Consulte &lt;a href=&quot;../time/struct.instant#method.checked_add&quot;&gt; &lt;code&gt;checked_add&lt;/code&gt; &lt;/a&gt; para obtener una versi&amp;oacute;n sin p&amp;aacute;nico.</target>
        </trans-unit>
        <trans-unit id="9bc75e1d489664d08b58daa300cbacf1f7764cb4" translate="yes" xml:space="preserve">
          <source>This function may panic if the resulting point in time cannot be represented by the underlying data structure. See &lt;a href=&quot;../time/struct.systemtime#method.checked_add&quot;&gt;&lt;code&gt;SystemTime::checked_add&lt;/code&gt;&lt;/a&gt; for a version without panic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="366269740ca74a1798b4e975775caf12fd1ce852" translate="yes" xml:space="preserve">
          <source>This function may panic if the resulting point in time cannot be represented by the underlying data structure. See &lt;a href=&quot;../time/struct.systemtime#method.checked_add&quot;&gt;&lt;code&gt;checked_add&lt;/code&gt;&lt;/a&gt; for a version without panic.</source>
          <target state="translated">Esta funci&amp;oacute;n puede entrar en p&amp;aacute;nico si el punto en el tiempo resultante no puede ser representado por la estructura de datos subyacente. Consulte &lt;a href=&quot;../time/struct.systemtime#method.checked_add&quot;&gt; &lt;code&gt;checked_add&lt;/code&gt; &lt;/a&gt; para obtener una versi&amp;oacute;n sin p&amp;aacute;nico.</target>
        </trans-unit>
        <trans-unit id="401bf91c85ca55e966355c7f85b21d7639dab4cd" translate="yes" xml:space="preserve">
          <source>This function may panic if the resulting point in time cannot be represented by the underlying data structure. See &lt;a href=&quot;struct.instant#method.checked_add&quot;&gt;&lt;code&gt;Instant::checked_add&lt;/code&gt;&lt;/a&gt; for a version without panic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f02bfc3fdf0149848c26b5693e3c3c2e193c842" translate="yes" xml:space="preserve">
          <source>This function may panic if the resulting point in time cannot be represented by the underlying data structure. See &lt;a href=&quot;struct.instant#method.checked_add&quot;&gt;&lt;code&gt;checked_add&lt;/code&gt;&lt;/a&gt; for a version without panic.</source>
          <target state="translated">Esta funci&amp;oacute;n puede entrar en p&amp;aacute;nico si el punto en el tiempo resultante no puede ser representado por la estructura de datos subyacente. Consulte &lt;a href=&quot;struct.instant#method.checked_add&quot;&gt; &lt;code&gt;checked_add&lt;/code&gt; &lt;/a&gt; para obtener una versi&amp;oacute;n sin p&amp;aacute;nico.</target>
        </trans-unit>
        <trans-unit id="6625bc40abfc907779e7819cb337a56bc6be6b98" translate="yes" xml:space="preserve">
          <source>This function may panic if the resulting point in time cannot be represented by the underlying data structure. See &lt;a href=&quot;struct.systemtime#method.checked_add&quot;&gt;&lt;code&gt;SystemTime::checked_add&lt;/code&gt;&lt;/a&gt; for a version without panic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df93ffa2c06e7d9c793296fff9096b1f4a09746a" translate="yes" xml:space="preserve">
          <source>This function may panic if the resulting point in time cannot be represented by the underlying data structure. See &lt;a href=&quot;struct.systemtime#method.checked_add&quot;&gt;&lt;code&gt;checked_add&lt;/code&gt;&lt;/a&gt; for a version without panic.</source>
          <target state="translated">Esta funci&amp;oacute;n puede entrar en p&amp;aacute;nico si el punto en el tiempo resultante no puede ser representado por la estructura de datos subyacente. Consulte &lt;a href=&quot;struct.systemtime#method.checked_add&quot;&gt; &lt;code&gt;checked_add&lt;/code&gt; &lt;/a&gt; para obtener una versi&amp;oacute;n sin p&amp;aacute;nico.</target>
        </trans-unit>
        <trans-unit id="f047ee1947a40935115c87e9ff5da84ba7c716fb" translate="yes" xml:space="preserve">
          <source>This function may panic on some platforms if a thread attempts to join itself or otherwise may create a deadlock with joining threads.</source>
          <target state="translated">Esta función puede entrar en pánico en algunas plataformas si un hilo intenta unirse a sí mismo o puede crear un punto muerto con los hilos de unión.</target>
        </trans-unit>
        <trans-unit id="2aa9c9fbe6e7d8e79dbcc09f82ff622cc49e7e8c" translate="yes" xml:space="preserve">
          <source>This function might panic if the iterator has more than &lt;a href=&quot;../usize/constant.max&quot;&gt;&lt;code&gt;usize::MAX&lt;/code&gt;&lt;/a&gt; elements.</source>
          <target state="translated">Esta funci&amp;oacute;n puede entrar en p&amp;aacute;nico si el iterador tiene m&amp;aacute;s de &lt;a href=&quot;../usize/constant.max&quot;&gt; &lt;code&gt;usize::MAX&lt;/code&gt; &lt;/a&gt; elementos.</target>
        </trans-unit>
        <trans-unit id="d1fc6a40a80536289c51eca2e61adf3162489e6d" translate="yes" xml:space="preserve">
          <source>This function might panic if the iterator has more than &lt;code&gt;usize::MAX&lt;/code&gt; non-matching elements.</source>
          <target state="translated">Esta funci&amp;oacute;n puede entrar en p&amp;aacute;nico si el iterador tiene m&amp;aacute;s de &lt;code&gt;usize::MAX&lt;/code&gt; elementos no coincidentes.</target>
        </trans-unit>
        <trans-unit id="e85b3c94c6e63ddd25298570364b3a6122b73135" translate="yes" xml:space="preserve">
          <source>This function might panic when called if the lock is already held by the current thread.</source>
          <target state="translated">Esta función puede entrar en pánico cuando se llama si el bloqueo ya está sostenido por el hilo actual.</target>
        </trans-unit>
        <trans-unit id="b3552c30ec404d25019fce8d0e95a821dc885077" translate="yes" xml:space="preserve">
          <source>This function panics if &lt;code&gt;T&lt;/code&gt; is a Zero-Sized Type (&quot;ZST&quot;).</source>
          <target state="translated">Esta funci&amp;oacute;n entra en p&amp;aacute;nico si &lt;code&gt;T&lt;/code&gt; es un tipo de tama&amp;ntilde;o cero (&quot;ZST&quot;).</target>
        </trans-unit>
        <trans-unit id="101814bfeeecf8436008ed4880368756ae5c8d29" translate="yes" xml:space="preserve">
          <source>This function panics if &lt;code&gt;T&lt;/code&gt; is a zero-sized type.</source>
          <target state="translated">Esta funci&amp;oacute;n entra en p&amp;aacute;nico si &lt;code&gt;T&lt;/code&gt; es un tipo de tama&amp;ntilde;o cero.</target>
        </trans-unit>
        <trans-unit id="9eaa9b63e5ef7b899f75363fe8681ac3e3da2fd4" translate="yes" xml:space="preserve">
          <source>This function panics if &lt;code&gt;radix&lt;/code&gt; is not in the range from 2 to 36.</source>
          <target state="translated">Esta funci&amp;oacute;n entra en p&amp;aacute;nico si &lt;code&gt;radix&lt;/code&gt; no est&amp;aacute; en el rango de 2 a 36.</target>
        </trans-unit>
        <trans-unit id="f62c2a73ad1ab98a4ef40a980a80cd47e78cfc5e" translate="yes" xml:space="preserve">
          <source>This function reads as many bytes as necessary to completely fill the specified buffer &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n lee tantos bytes como sea necesario para llenar completamente el b&amp;uacute;fer especificado &lt;code&gt;buf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c39eec7f7794b4915b46c58cff436d679c91fcab" translate="yes" xml:space="preserve">
          <source>This function reads the value of &lt;code&gt;errno&lt;/code&gt; for the target platform (e.g. &lt;code&gt;GetLastError&lt;/code&gt; on Windows) and will return a corresponding instance of &lt;a href=&quot;struct.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; for the error code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32152f76d2e83d5c89836d9aa45ce33c14bc03d9" translate="yes" xml:space="preserve">
          <source>This function reads the value of &lt;code&gt;errno&lt;/code&gt; for the target platform (e.g. &lt;code&gt;GetLastError&lt;/code&gt; on Windows) and will return a corresponding instance of &lt;code&gt;Error&lt;/code&gt; for the error code.</source>
          <target state="translated">Esta funci&amp;oacute;n lee el valor de &lt;code&gt;errno&lt;/code&gt; para la plataforma de destino (por ejemplo, &lt;code&gt;GetLastError&lt;/code&gt; en Windows) y devolver&amp;aacute; una instancia correspondiente de &lt;code&gt;Error&lt;/code&gt; para el c&amp;oacute;digo de error.</target>
        </trans-unit>
        <trans-unit id="1cc405a72fa71224d4a044b7593cdccf93a633ec" translate="yes" xml:space="preserve">
          <source>This function returning &lt;code&gt;false&lt;/code&gt; does not mean that &lt;a href=&quot;struct.once&quot;&gt;&lt;code&gt;Once&lt;/code&gt;&lt;/a&gt; has not been executed. For example, it may have been executed in the time between when &lt;code&gt;is_completed&lt;/code&gt; starts executing and when it returns, in which case the &lt;code&gt;false&lt;/code&gt; return value would be stale (but still permissible).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ed95f7312c1878141bc36d8d210b9fa11581c5" translate="yes" xml:space="preserve">
          <source>This function returns a &lt;a href=&quot;../borrow/enum.cow&quot;&gt;&lt;code&gt;Cow&amp;lt;'a, str&amp;gt;&lt;/code&gt;&lt;/a&gt;. If our byte slice is invalid UTF-8, then we need to insert the replacement characters, which will change the size of the string, and hence, require a &lt;code&gt;String&lt;/code&gt;. But if it's already valid UTF-8, we don't need a new allocation. This return type allows us to handle both cases.</source>
          <target state="translated">Esta funci&amp;oacute;n devuelve una &lt;a href=&quot;../borrow/enum.cow&quot;&gt; &lt;code&gt;Cow&amp;lt;'a, str&amp;gt;&lt;/code&gt; &lt;/a&gt; . Si nuestro segmento de bytes no es v&amp;aacute;lido en UTF-8, entonces necesitamos insertar los caracteres de reemplazo, lo que cambiar&amp;aacute; el tama&amp;ntilde;o de la cadena y, por lo tanto, requerir&amp;aacute; una &lt;code&gt;String&lt;/code&gt; . Pero si ya es UTF-8 v&amp;aacute;lido, no necesitamos una nueva asignaci&amp;oacute;n. Este tipo de retorno nos permite manejar ambos casos.</target>
        </trans-unit>
        <trans-unit id="12ee7d651a482e6bf7ef02b5e21ea7e98deba17a" translate="yes" xml:space="preserve">
          <source>This function returns a new OpenOptions object that you can use to open or create a file with specific options if &lt;code&gt;open()&lt;/code&gt; or &lt;code&gt;create()&lt;/code&gt; are not appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f72ba6fb91e1ce3e00f9d70494a4d758f1ff97b" translate="yes" xml:space="preserve">
          <source>This function returns a new instance of &lt;code&gt;Read&lt;/code&gt; which will read at most &lt;code&gt;limit&lt;/code&gt; bytes, after which it will always return EOF (&lt;a href=&quot;../result/enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok(0)&lt;/code&gt;&lt;/a&gt;). Any read errors will not count towards the number of bytes read and future calls to &lt;a href=&quot;trait.read#tymethod.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; may succeed.</source>
          <target state="translated">Esta funci&amp;oacute;n devuelve una nueva instancia de &lt;code&gt;Read&lt;/code&gt; que leer&amp;aacute; como m&amp;aacute;ximo los bytes &lt;code&gt;limit&lt;/code&gt; , despu&amp;eacute;s de lo cual siempre devolver&amp;aacute; EOF ( &lt;a href=&quot;../result/enum.result#variant.Ok&quot;&gt; &lt;code&gt;Ok(0)&lt;/code&gt; &lt;/a&gt; ). Cualquier error de lectura no contar&amp;aacute; para el n&amp;uacute;mero de bytes le&amp;iacute;dos y las futuras llamadas a &lt;a href=&quot;trait.read#tymethod.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt; pueden tener &amp;eacute;xito.</target>
        </trans-unit>
        <trans-unit id="ef0ad46bb886f62fbf2201ba9b9f859d8daf73a5" translate="yes" xml:space="preserve">
          <source>This function returns:</source>
          <target state="translated">Esta función regresa:</target>
        </trans-unit>
        <trans-unit id="e286b47aa27a1649f35422e9cb038c26279f95e3" translate="yes" xml:space="preserve">
          <source>This function runs the destructor of the contained value and thus the wrapped value now represents uninitialized data. It is up to the user of this method to ensure the uninitialized data is not actually used.</source>
          <target state="translated">Esta función ejecuta el destructor del valor contenido y,por lo tanto,el valor envuelto representa ahora datos no inicializados.Depende del usuario de este método asegurarse de que los datos no inicializados no se utilicen realmente.</target>
        </trans-unit>
        <trans-unit id="d626c9a67f6c1bb6dde6295b947e23c4df085081" translate="yes" xml:space="preserve">
          <source>This function runs the destructor of the contained value. Other than changes made by the destructor itself, the memory is left unchanged, and so as far as the compiler is concerned still holds a bit-pattern which is valid for the type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7791922c183e6e6d1b0127e9349abae66c275dd6" translate="yes" xml:space="preserve">
          <source>This function semantically moves out the contained value without preventing further usage, leaving the state of this container unchanged. It is your responsibility to ensure that this &lt;code&gt;ManuallyDrop&lt;/code&gt; is not used again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e07f846f13b5b07afd4d29501d5ea48bcae4f64b" translate="yes" xml:space="preserve">
          <source>This function semantically moves out the contained value without preventing further usage. It is up to the user of this method to ensure that this container is not used again.</source>
          <target state="translated">Esta función desplaza semánticamente el valor contenido sin impedir su uso posterior.Depende del usuario de este método asegurarse de que este contenedor no se vuelva a utilizar.</target>
        </trans-unit>
        <trans-unit id="b73fe46d5d15372cef97957fc6bcb2aba3a35b19" translate="yes" xml:space="preserve">
          <source>This function specifies a new multicast group for this socket to join. The address must be a valid multicast address, and &lt;code&gt;interface&lt;/code&gt; is the address of the local interface with which the system should join the multicast group. If it's equal to &lt;code&gt;INADDR_ANY&lt;/code&gt; then an appropriate interface is chosen by the system.</source>
          <target state="translated">Esta funci&amp;oacute;n especifica un nuevo grupo de multidifusi&amp;oacute;n para que se una a este socket. La direcci&amp;oacute;n debe ser una direcci&amp;oacute;n de multidifusi&amp;oacute;n v&amp;aacute;lida y la &lt;code&gt;interface&lt;/code&gt; es la direcci&amp;oacute;n de la interfaz local con la que el sistema debe unirse al grupo de multidifusi&amp;oacute;n. Si es igual a &lt;code&gt;INADDR_ANY&lt;/code&gt; , el sistema elige una interfaz adecuada.</target>
        </trans-unit>
        <trans-unit id="1f12ea05478bb3baf501603f551862b3ebf72f88" translate="yes" xml:space="preserve">
          <source>This function specifies a new multicast group for this socket to join. The address must be a valid multicast address, and &lt;code&gt;interface&lt;/code&gt; is the index of the interface to join/leave (or 0 to indicate any interface).</source>
          <target state="translated">Esta funci&amp;oacute;n especifica un nuevo grupo de multidifusi&amp;oacute;n para que se una a este socket. La direcci&amp;oacute;n debe ser una direcci&amp;oacute;n de multidifusi&amp;oacute;n v&amp;aacute;lida, y la &lt;code&gt;interface&lt;/code&gt; es el &amp;iacute;ndice de la interfaz para unirse / salir (o 0 para indicar cualquier interfaz).</target>
        </trans-unit>
        <trans-unit id="24119e41ff16fdb059a46c613efe17ad7fc57293" translate="yes" xml:space="preserve">
          <source>This function takes a string slice and emits it to the internal buffer after applying the relevant formatting flags specified. The flags recognized for generic strings are:</source>
          <target state="translated">Esta función toma un trozo de cadena y lo emite a la memoria intermedia interna después de aplicar los correspondientes indicadores de formato especificados.Los flags reconocidos para las cadenas genéricas son</target>
        </trans-unit>
        <trans-unit id="5aebd3cecb06bef11683a2b627652c498c3d60b0" translate="yes" xml:space="preserve">
          <source>This function will &lt;a href=&quot;../macro.panic&quot;&gt;&lt;code&gt;panic!&lt;/code&gt;&lt;/a&gt; if it is used with more than one mutex over time. Each condition variable is dynamically bound to exactly one mutex to ensure defined behavior across platforms. If this functionality is not desired, then unsafe primitives in &lt;code&gt;sys&lt;/code&gt; are provided.</source>
          <target state="translated">&amp;iexcl;Esta funci&amp;oacute;n entrar&amp;aacute; en &lt;a href=&quot;../macro.panic&quot;&gt; &lt;code&gt;panic!&lt;/code&gt; &lt;/a&gt;si se usa con m&amp;aacute;s de un mutex a lo largo del tiempo. Cada variable de condici&amp;oacute;n est&amp;aacute; vinculada din&amp;aacute;micamente a exactamente un mutex para garantizar un comportamiento definido en todas las plataformas. Si no se desea esta funcionalidad, se proporcionan primitivas inseguras en &lt;code&gt;sys&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="78327b333ccf6b689aaecb9ee26d119fa6c5777a" translate="yes" xml:space="preserve">
          <source>This function will &lt;code&gt;panic!()&lt;/code&gt; if the key currently has its destructor running, and it &lt;strong&gt;may&lt;/strong&gt; panic if the destructor has previously been run for this thread.</source>
          <target state="translated">&amp;iexcl;Esta funci&amp;oacute;n entrar&amp;aacute; en &lt;code&gt;panic!()&lt;/code&gt; Si la clave tiene actualmente su destructor ejecut&amp;aacute;ndose, y &lt;strong&gt;puede&lt;/strong&gt; entrar en p&amp;aacute;nico si el destructor se ha ejecutado previamente para este hilo.</target>
        </trans-unit>
        <trans-unit id="de2e867f0f0c2461353251de2093fad37d9de75b" translate="yes" xml:space="preserve">
          <source>This function will &lt;em&gt;block&lt;/em&gt; until space in the internal buffer becomes available or a receiver is available to hand off the message to.</source>
          <target state="translated">Esta funci&amp;oacute;n se &lt;em&gt;bloquear&amp;aacute;&lt;/em&gt; hasta que haya espacio disponible en el b&amp;uacute;fer interno o hasta que haya un receptor disponible para entregar el mensaje.</target>
        </trans-unit>
        <trans-unit id="aa7ba2de98a6c309498a7c489e34ef4ae855d255" translate="yes" xml:space="preserve">
          <source>This function will &lt;strong&gt;consume ownership&lt;/strong&gt; of the handle given, passing responsibility for closing the handle to the returned object.</source>
          <target state="translated">Esta funci&amp;oacute;n &lt;strong&gt;consumir&amp;aacute; la propiedad&lt;/strong&gt; del identificador dado, pasando la responsabilidad de cerrar el identificador al objeto devuelto.</target>
        </trans-unit>
        <trans-unit id="b6de52c208f12c4efe8542e2cc11b06fa42d2cf9" translate="yes" xml:space="preserve">
          <source>This function will &lt;strong&gt;consume ownership&lt;/strong&gt; of the socket provided and it will be closed when the returned object goes out of scope.</source>
          <target state="translated">Esta funci&amp;oacute;n &lt;strong&gt;consumir&amp;aacute; la propiedad&lt;/strong&gt; del socket proporcionado y se cerrar&amp;aacute; cuando el objeto devuelto salga del alcance.</target>
        </trans-unit>
        <trans-unit id="34a9593fc439cb6bab67a9e273e42357e335b574" translate="yes" xml:space="preserve">
          <source>This function will &lt;strong&gt;overwrite&lt;/strong&gt; the contents of &lt;code&gt;to&lt;/code&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n &lt;strong&gt;sobrescribir&amp;aacute;&lt;/strong&gt; el contenido de &lt;code&gt;to&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b50d15cbddd54c77fb77c9639aae5bb9352e901e" translate="yes" xml:space="preserve">
          <source>This function will always block the current thread if there is no data available and it's possible for more data to be sent. Once a message is sent to the corresponding &lt;a href=&quot;struct.sender&quot;&gt;&lt;code&gt;Sender&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;struct.syncsender&quot;&gt;&lt;code&gt;SyncSender&lt;/code&gt;&lt;/a&gt;), then this receiver will wake up and return that message.</source>
          <target state="translated">Esta funci&amp;oacute;n siempre bloquear&amp;aacute; el hilo actual si no hay datos disponibles y es posible que se env&amp;iacute;en m&amp;aacute;s datos. Una vez que se env&amp;iacute;a un mensaje al &lt;a href=&quot;struct.sender&quot;&gt; &lt;code&gt;Sender&lt;/code&gt; &lt;/a&gt; correspondiente (o &lt;a href=&quot;struct.syncsender&quot;&gt; &lt;code&gt;SyncSender&lt;/code&gt; &lt;/a&gt; ), este receptor se activar&amp;aacute; y devolver&amp;aacute; ese mensaje.</target>
        </trans-unit>
        <trans-unit id="2f7bc7c7785b26db5d2ba1d43d57ec9e10153387" translate="yes" xml:space="preserve">
          <source>This function will atomically unlock the mutex specified (represented by &lt;code&gt;guard&lt;/code&gt;) and block the current thread. This means that any calls to &lt;a href=&quot;#method.notify_one&quot;&gt;&lt;code&gt;notify_one&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#method.notify_all&quot;&gt;&lt;code&gt;notify_all&lt;/code&gt;&lt;/a&gt; which happen logically after the mutex is unlocked are candidates to wake this thread up. When this function call returns, the lock specified will have been re-acquired.</source>
          <target state="translated">Esta funci&amp;oacute;n desbloquear&amp;aacute; at&amp;oacute;micamente el mutex especificado (representado por &lt;code&gt;guard&lt;/code&gt; ) y bloquear&amp;aacute; el hilo actual. Esto significa que cualquier llamada a &lt;a href=&quot;#method.notify_one&quot;&gt; &lt;code&gt;notify_one&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;#method.notify_all&quot;&gt; &lt;code&gt;notify_all&lt;/code&gt; &lt;/a&gt; que suceda l&amp;oacute;gicamente despu&amp;eacute;s de que se desbloquee el mutex es candidata a activar este hilo. Cuando esta llamada de funci&amp;oacute;n regrese, el bloqueo especificado habr&amp;aacute; sido recuperado.</target>
        </trans-unit>
        <trans-unit id="07010b30f6fb56afc898bded5d3cc83a49e39776" translate="yes" xml:space="preserve">
          <source>This function will atomically unlock the mutex specified (represented by &lt;code&gt;guard&lt;/code&gt;) and block the current thread. This means that any calls to &lt;a href=&quot;struct.condvar#method.notify_one&quot;&gt;&lt;code&gt;notify_one&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;struct.condvar#method.notify_all&quot;&gt;&lt;code&gt;notify_all&lt;/code&gt;&lt;/a&gt; which happen logically after the mutex is unlocked are candidates to wake this thread up. When this function call returns, the lock specified will have been re-acquired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d633c453ad140c0449c1db8cbeeaa851bc2659b6" translate="yes" xml:space="preserve">
          <source>This function will attempt to ensure that all in-memory data reaches the filesystem before returning.</source>
          <target state="translated">Esta función intentará asegurar que todos los datos en memoria lleguen al sistema de archivos antes de regresar.</target>
        </trans-unit>
        <trans-unit id="3cdc162bace3b7e0f3af0944a143fb84bab4d03d" translate="yes" xml:space="preserve">
          <source>This function will attempt to write the entire contents of &lt;code&gt;buf&lt;/code&gt;, but the entire write may not succeed, or the write may also generate an error. A call to &lt;code&gt;write&lt;/code&gt; represents &lt;em&gt;at most one&lt;/em&gt; attempt to write to any wrapped object.</source>
          <target state="translated">Esta funci&amp;oacute;n intentar&amp;aacute; escribir todo el contenido de &lt;code&gt;buf&lt;/code&gt; , pero es posible que no se complete la escritura o que la escritura tambi&amp;eacute;n genere un error. Una llamada a &lt;code&gt;write&lt;/code&gt; representa &lt;em&gt;como m&amp;aacute;ximo un&lt;/em&gt; intento de escribir en cualquier objeto envuelto.</target>
        </trans-unit>
        <trans-unit id="41d06b3c8e4189760b322760b47992d4717d7848" translate="yes" xml:space="preserve">
          <source>This function will be a noop if the &lt;code&gt;RUST_BACKTRACE&lt;/code&gt; or &lt;code&gt;RUST_LIB_BACKTRACE&lt;/code&gt; backtrace variables are both not set. If either environment variable is set and enabled then this function will actually capture a backtrace. Capturing a backtrace can be both memory intensive and slow, so these environment variables allow liberally using &lt;code&gt;Backtrace::capture&lt;/code&gt; and only incurring a slowdown when the environment variables are set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d59143ff7e9860f113062c67363bd75c2092c35a" translate="yes" xml:space="preserve">
          <source>This function will be called when &lt;code&gt;wake&lt;/code&gt; is called on the &lt;a href=&quot;struct.waker&quot;&gt;&lt;code&gt;Waker&lt;/code&gt;&lt;/a&gt;. It must wake up the task associated with this &lt;a href=&quot;struct.rawwaker&quot;&gt;&lt;code&gt;RawWaker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n se llama cuando &lt;code&gt;wake&lt;/code&gt; se llama en la &lt;a href=&quot;struct.waker&quot;&gt; &lt;code&gt;Waker&lt;/code&gt; &lt;/a&gt; . Debe despertar la tarea asociada con este &lt;a href=&quot;struct.rawwaker&quot;&gt; &lt;code&gt;RawWaker&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="12cb59dc2a2a1b37303ef992097df532faaa8b94" translate="yes" xml:space="preserve">
          <source>This function will be called when &lt;code&gt;wake_by_ref&lt;/code&gt; is called on the &lt;a href=&quot;struct.waker&quot;&gt;&lt;code&gt;Waker&lt;/code&gt;&lt;/a&gt;. It must wake up the task associated with this &lt;a href=&quot;struct.rawwaker&quot;&gt;&lt;code&gt;RawWaker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n se llamar&amp;aacute; cuando se llame a &lt;code&gt;wake_by_ref&lt;/code&gt; en el &lt;a href=&quot;struct.waker&quot;&gt; &lt;code&gt;Waker&lt;/code&gt; &lt;/a&gt; . Debe despertar la tarea asociada con este &lt;a href=&quot;struct.rawwaker&quot;&gt; &lt;code&gt;RawWaker&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="76c72888278b0a8cb4941353a709e0ecd237c2c8" translate="yes" xml:space="preserve">
          <source>This function will be called when the &lt;a href=&quot;struct.rawwaker&quot;&gt;&lt;code&gt;RawWaker&lt;/code&gt;&lt;/a&gt; gets cloned, e.g. when the &lt;a href=&quot;struct.waker&quot;&gt;&lt;code&gt;Waker&lt;/code&gt;&lt;/a&gt; in which the &lt;a href=&quot;struct.rawwaker&quot;&gt;&lt;code&gt;RawWaker&lt;/code&gt;&lt;/a&gt; is stored gets cloned.</source>
          <target state="translated">Esta funci&amp;oacute;n se llamar&amp;aacute; cuando se &lt;a href=&quot;struct.rawwaker&quot;&gt; &lt;code&gt;RawWaker&lt;/code&gt; &lt;/a&gt; el RawWaker , por ejemplo, cuando se clone el &lt;a href=&quot;struct.waker&quot;&gt; &lt;code&gt;Waker&lt;/code&gt; &lt;/a&gt; en el que se almacena &lt;a href=&quot;struct.rawwaker&quot;&gt; &lt;code&gt;RawWaker&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="83e27c1cac935244e1d8ce7e9b3bc5a49eb326cd" translate="yes" xml:space="preserve">
          <source>This function will block the calling thread until a new TCP connection is established. When established, the corresponding &lt;a href=&quot;struct.tcpstream&quot;&gt;&lt;code&gt;TcpStream&lt;/code&gt;&lt;/a&gt; and the remote peer's address will be returned.</source>
          <target state="translated">Esta funci&amp;oacute;n bloquear&amp;aacute; el hilo de llamada hasta que se establezca una nueva conexi&amp;oacute;n TCP. Cuando se establezca, se &lt;a href=&quot;struct.tcpstream&quot;&gt; &lt;code&gt;TcpStream&lt;/code&gt; &lt;/a&gt; el TcpStream correspondiente y la direcci&amp;oacute;n del par remoto.</target>
        </trans-unit>
        <trans-unit id="b771e75bfd99083821bb9279c74d5a51cd594b6a" translate="yes" xml:space="preserve">
          <source>This function will block the calling thread until a new Unix connection is established. When established, the corresponding &lt;a href=&quot;struct.unixstream&quot;&gt;&lt;code&gt;UnixStream&lt;/code&gt;&lt;/a&gt; and the remote peer's address will be returned.</source>
          <target state="translated">Esta funci&amp;oacute;n bloquear&amp;aacute; el hilo de llamada hasta que se establezca una nueva conexi&amp;oacute;n Unix. Cuando se establezca, se &lt;a href=&quot;struct.unixstream&quot;&gt; &lt;code&gt;UnixStream&lt;/code&gt; &lt;/a&gt; el UnixStream correspondiente y la direcci&amp;oacute;n del par remoto.</target>
        </trans-unit>
        <trans-unit id="4d1cb142862a95e8531c0e6c5eeff4f29562add6" translate="yes" xml:space="preserve">
          <source>This function will block the local thread until it is available to acquire the mutex. Upon returning, the thread is the only thread with the lock held. An RAII guard is returned to allow scoped unlock of the lock. When the guard goes out of scope, the mutex will be unlocked.</source>
          <target state="translated">Esta función bloqueará el hilo local hasta que esté disponible para adquirir el mutex.Al regresar,el hilo es el único hilo que tiene el bloqueo.Se devuelve un protector RAII para permitir el desbloqueo del bloqueo.Cuando la guarda se sale del alcance,el mutex se desbloquea.</target>
        </trans-unit>
        <trans-unit id="1061d2d5e43718addf8cd833a952b821898f457c" translate="yes" xml:space="preserve">
          <source>This function will capture a stack backtrace of the current OS thread of execution, returning a &lt;code&gt;Backtrace&lt;/code&gt; type which can be later used to print the entire stack trace or render it to a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e63b5a3d38dde4813e2c02e7906910d9bbecad76" translate="yes" xml:space="preserve">
          <source>This function will cast the provided &lt;code&gt;bytes&lt;/code&gt; to a &lt;code&gt;CStr&lt;/code&gt; wrapper after ensuring that the byte slice is nul-terminated and does not contain any interior nul bytes.</source>
          <target state="translated">Esta funci&amp;oacute;n enviar&amp;aacute; los &lt;code&gt;bytes&lt;/code&gt; proporcionados a un contenedor &lt;code&gt;CStr&lt;/code&gt; despu&amp;eacute;s de asegurarse de que el segmento de bytes tenga una terminaci&amp;oacute;n nula y no contenga ning&amp;uacute;n byte nulo interior.</target>
        </trans-unit>
        <trans-unit id="8c3891c10a9a0ae62223a6915ab48a717d1803e4" translate="yes" xml:space="preserve">
          <source>This function will cast the provided &lt;code&gt;bytes&lt;/code&gt; to a &lt;code&gt;CStr&lt;/code&gt; wrapper without performing any sanity checks. The provided slice &lt;strong&gt;must&lt;/strong&gt; be nul-terminated and not contain any interior nul bytes.</source>
          <target state="translated">Esta funci&amp;oacute;n enviar&amp;aacute; los &lt;code&gt;bytes&lt;/code&gt; proporcionados a un contenedor &lt;code&gt;CStr&lt;/code&gt; sin realizar ninguna comprobaci&amp;oacute;n de cordura. El segmento proporcionado &lt;strong&gt;debe&lt;/strong&gt; terminar en nulo y no contener bytes nulos interiores.</target>
        </trans-unit>
        <trans-unit id="8f259ce0614bcf2d0063ac4400649f231860a760" translate="yes" xml:space="preserve">
          <source>This function will cause all pending and future I/O calls on the specified portions to immediately return with an appropriate value (see the documentation of &lt;a href=&quot;../../../net/enum.shutdown&quot;&gt;&lt;code&gt;Shutdown&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Esta funci&amp;oacute;n har&amp;aacute; que todas las llamadas de E / S pendientes y futuras en las partes especificadas regresen inmediatamente con un valor apropiado (consulte la documentaci&amp;oacute;n de &lt;a href=&quot;../../../net/enum.shutdown&quot;&gt; &lt;code&gt;Shutdown&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f2081c3bcdd573e767785b3929fff378af8293c8" translate="yes" xml:space="preserve">
          <source>This function will cause all pending and future I/O on the specified portions to return immediately with an appropriate value (see the documentation of &lt;a href=&quot;enum.shutdown&quot;&gt;&lt;code&gt;Shutdown&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Esta funci&amp;oacute;n har&amp;aacute; que todas las E / S pendientes y futuras en las partes especificadas regresen inmediatamente con un valor apropiado (consulte la documentaci&amp;oacute;n de &lt;a href=&quot;enum.shutdown&quot;&gt; &lt;code&gt;Shutdown&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e9782cf601eece8d5d886326b28d5030905f50d6" translate="yes" xml:space="preserve">
          <source>This function will consume the provided data and use the underlying bytes to construct a new string, ensuring that there is a trailing 0 byte. This trailing 0 byte will be appended by this function; the provided data should &lt;em&gt;not&lt;/em&gt; contain any 0 bytes in it.</source>
          <target state="translated">Esta funci&amp;oacute;n consumir&amp;aacute; los datos proporcionados y usar&amp;aacute; los bytes subyacentes para construir una nueva cadena, asegurando que haya un byte 0 al final. Esta funci&amp;oacute;n agregar&amp;aacute; este byte final 0; los datos proporcionados &lt;em&gt;no&lt;/em&gt; deben contener 0 bytes.</target>
        </trans-unit>
        <trans-unit id="4a81f58ae0af06c0e29ed9547bff428e9a075df5" translate="yes" xml:space="preserve">
          <source>This function will continuously read data from &lt;code&gt;reader&lt;/code&gt; and then write it into &lt;code&gt;writer&lt;/code&gt; in a streaming fashion until &lt;code&gt;reader&lt;/code&gt; returns EOF.</source>
          <target state="translated">Esta funci&amp;oacute;n leer&amp;aacute; continuamente los datos del &lt;code&gt;reader&lt;/code&gt; y luego los escribir&amp;aacute; en el &lt;code&gt;writer&lt;/code&gt; en forma de flujo continuo hasta que el &lt;code&gt;reader&lt;/code&gt; devuelva EOF.</target>
        </trans-unit>
        <trans-unit id="74b77ba5c4f9d07323cf0380138b2c4acac538aa" translate="yes" xml:space="preserve">
          <source>This function will correctly account for the flags provided as well as the minimum width. It will not take precision into account.</source>
          <target state="translated">Esta función dará cuenta correctamente de las banderas proporcionadas,así como del ancho mínimo.No tendrá en cuenta la precisión.</target>
        </trans-unit>
        <trans-unit id="0e2de984561c8e2a215768e0c15afc535bb75bf0" translate="yes" xml:space="preserve">
          <source>This function will create a file if it does not exist, and will entirely replace its contents if it does.</source>
          <target state="translated">Esta función creará un archivo si no existe,y reemplazará completamente su contenido si lo hace.</target>
        </trans-unit>
        <trans-unit id="f65976cf8345e044488976485c5a6e346af5a578" translate="yes" xml:space="preserve">
          <source>This function will create a file if it does not exist, and will truncate it if it does.</source>
          <target state="translated">Esta función creará un archivo si no existe,y lo truncará si existe.</target>
        </trans-unit>
        <trans-unit id="0e1b8893ba63c7e2758784f05b5644780ac55d15" translate="yes" xml:space="preserve">
          <source>This function will ignore all instances of &lt;a href=&quot;enum.errorkind#variant.Interrupted&quot;&gt;&lt;code&gt;ErrorKind::Interrupted&lt;/code&gt;&lt;/a&gt; and will otherwise return any errors returned by &lt;a href=&quot;#tymethod.fill_buf&quot;&gt;&lt;code&gt;fill_buf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n ignorar&amp;aacute; todas las instancias de &lt;a href=&quot;enum.errorkind#variant.Interrupted&quot;&gt; &lt;code&gt;ErrorKind::Interrupted&lt;/code&gt; &lt;/a&gt; y, de lo contrario, devolver&amp;aacute; cualquier error devuelto por &lt;a href=&quot;#tymethod.fill_buf&quot;&gt; &lt;code&gt;fill_buf&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a56b9fb350dbbed0024c336c03c94d6b856e68cd" translate="yes" xml:space="preserve">
          <source>This function will ignore all instances of &lt;a href=&quot;enum.errorkind#variant.Interrupted&quot;&gt;&lt;code&gt;ErrorKind::Interrupted&lt;/code&gt;&lt;/a&gt; and will otherwise return any errors returned by &lt;a href=&quot;trait.bufread#tymethod.fill_buf&quot;&gt;&lt;code&gt;fill_buf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="326c8120454de566fb3a6866a530ebb7b6b992dc" translate="yes" xml:space="preserve">
          <source>This function will never panic, but it may return &lt;a href=&quot;../../result/enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; if the &lt;a href=&quot;struct.receiver&quot;&gt;&lt;code&gt;Receiver&lt;/code&gt;&lt;/a&gt; has disconnected and is no longer able to receive information.</source>
          <target state="translated">Esta funci&amp;oacute;n nunca entrar&amp;aacute; en p&amp;aacute;nico, pero puede devolver &lt;a href=&quot;../../result/enum.result#variant.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; &lt;/a&gt; si el &lt;a href=&quot;struct.receiver&quot;&gt; &lt;code&gt;Receiver&lt;/code&gt; &lt;/a&gt; ha desconectado y ya no puede recibir informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="9fc6b983aea89da54a39cad92dbfed108559d536" translate="yes" xml:space="preserve">
          <source>This function will never return and will immediately terminate the current process. The exit code is passed through to the underlying OS and will be available for consumption by another process.</source>
          <target state="translated">Esta función nunca volverá y terminará inmediatamente el proceso actual.El código de salida se pasa al sistema operativo subyacente y estará disponible para ser consumido por otro proceso.</target>
        </trans-unit>
        <trans-unit id="c4fd0f129a9f8ea495fd3f5d41ad244c1f805fd1" translate="yes" xml:space="preserve">
          <source>This function will not block the calling thread and will only check to see if the child process has exited or not. If the child has exited then on Unix the process ID is reaped. This function is guaranteed to repeatedly return a successful exit status so long as the child has already exited.</source>
          <target state="translated">Esta función no bloqueará el hilo de llamada y sólo comprobará si el proceso hijo ha salido o no.Si el hijo ha salido,entonces en Unix el ID del proceso es cosechado.Esta función está garantizada para devolver repetidamente un estado de salida exitoso siempre y cuando el niño ya haya salido.</target>
        </trans-unit>
        <trans-unit id="db8a9f6074ffbe2434b96b3349b436c824d317bf" translate="yes" xml:space="preserve">
          <source>This function will not return while other writers or other readers currently have access to the lock.</source>
          <target state="translated">Esta función no regresará mientras otros escritores u otros lectores tengan acceso a la cerradura.</target>
        </trans-unit>
        <trans-unit id="f40a0312ebfb2b0e54e13329e7ace227d51b5cf1" translate="yes" xml:space="preserve">
          <source>This function will not traverse symlinks if this entry points at a symlink.</source>
          <target state="translated">Esta función no atravesará los enlaces simbólicos si esta entrada apunta a un enlace simbólico.</target>
        </trans-unit>
        <trans-unit id="30de93c6705afd606c5b68502e92fede48ab8cb8" translate="yes" xml:space="preserve">
          <source>This function will not traverse symlinks if this entry points at a symlink. To traverse symlinks use &lt;a href=&quot;fn.metadata&quot;&gt;&lt;code&gt;fs::metadata&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;struct.file#method.metadata&quot;&gt;&lt;code&gt;fs::File::metadata&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c834f424a9053dbdf6234c9da264d70e8ba7b880" translate="yes" xml:space="preserve">
          <source>This function will panic if &lt;code&gt;earlier&lt;/code&gt; is later than &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n entrar&amp;aacute; en p&amp;aacute;nico si &lt;code&gt;earlier&lt;/code&gt; es m&amp;aacute;s tarde que &lt;code&gt;self&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="255f788a8373ceb0a89289a41ca323624e5b7999" translate="yes" xml:space="preserve">
          <source>This function will panic if &lt;code&gt;k&lt;/code&gt; is greater than the length of the slice. Note that &lt;code&gt;k == self.len()&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; panic and is a no-op rotation.</source>
          <target state="translated">Esta funci&amp;oacute;n entrar&amp;aacute; en p&amp;aacute;nico si &lt;code&gt;k&lt;/code&gt; es mayor que la longitud del corte. Tenga en cuenta que &lt;code&gt;k == self.len()&lt;/code&gt; Qu&amp;eacute; &lt;em&gt;no&lt;/em&gt; cunda el p&amp;aacute;nico y es una rotaci&amp;oacute;n no-op.</target>
        </trans-unit>
        <trans-unit id="95270b721e4d05b72ba071aee1067eda4042613d" translate="yes" xml:space="preserve">
          <source>This function will panic if &lt;code&gt;mid&lt;/code&gt; is greater than the length of the slice. Note that &lt;code&gt;mid == self.len()&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; panic and is a no-op rotation.</source>
          <target state="translated">Esta funci&amp;oacute;n entrar&amp;aacute; en p&amp;aacute;nico si &lt;code&gt;mid&lt;/code&gt; es mayor que la longitud del corte. Tenga en cuenta que &lt;code&gt;mid == self.len()&lt;/code&gt; no &lt;em&gt;no&lt;/em&gt; entrar en p&amp;aacute;nico y es una rotaci&amp;oacute;n no-op.</target>
        </trans-unit>
        <trans-unit id="e717b0d6a1e36e01967338ee832d65ba4d48839e" translate="yes" xml:space="preserve">
          <source>This function will panic if &lt;code&gt;rhs&lt;/code&gt; is 0 or the division results in overflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46e96193daf65415936b126b06264ed8418f5b5e" translate="yes" xml:space="preserve">
          <source>This function will panic if &lt;code&gt;rhs&lt;/code&gt; is 0.</source>
          <target state="translated">Esta funci&amp;oacute;n entrar&amp;aacute; en p&amp;aacute;nico si &lt;code&gt;rhs&lt;/code&gt; es 0.</target>
        </trans-unit>
        <trans-unit id="d72d270dceb6908b40e770de6a7cca4ee6d954fb" translate="yes" xml:space="preserve">
          <source>This function will panic if either range exceeds the end of the slice, or if the end of &lt;code&gt;src&lt;/code&gt; is before the start.</source>
          <target state="translated">Esta funci&amp;oacute;n entrar&amp;aacute; en p&amp;aacute;nico si cualquiera de los rangos excede el final del segmento, o si el final de &lt;code&gt;src&lt;/code&gt; es antes del inicio.</target>
        </trans-unit>
        <trans-unit id="ffa5cde970751a9af3f3c95b9bc636f122bbdd4f" translate="yes" xml:space="preserve">
          <source>This function will panic if the capacity would overflow.</source>
          <target state="translated">Esta función entrará en pánico si la capacidad se desborda.</target>
        </trans-unit>
        <trans-unit id="157be01a917f2466c041055463b9f02120a94753" translate="yes" xml:space="preserve">
          <source>This function will panic if the position of the inner reader is smaller than the amount of buffered data. That can happen if the inner reader has an incorrect implementation of &lt;a href=&quot;trait.seek#method.stream_position&quot;&gt;&lt;code&gt;Seek::stream_position&lt;/code&gt;&lt;/a&gt;, or if the position has gone out of sync due to calling &lt;a href=&quot;trait.seek#tymethod.seek&quot;&gt;&lt;code&gt;Seek::seek&lt;/code&gt;&lt;/a&gt; directly on the underlying reader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="000897a350419f9fea274e80815181a20fc49025" translate="yes" xml:space="preserve">
          <source>This function will panic if the two slices have different lengths, or if the implementation of &lt;code&gt;Clone&lt;/code&gt; panics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b80c161450352b3f264fa270e71aafac41ce5a3b" translate="yes" xml:space="preserve">
          <source>This function will panic if the two slices have different lengths.</source>
          <target state="translated">Esta función entrará en pánico si los dos trozos tienen longitudes diferentes.</target>
        </trans-unit>
        <trans-unit id="f9a04d3eaea11b5bf70c2b1e292fe13090c46ff0" translate="yes" xml:space="preserve">
          <source>This function will read bytes from the underlying stream until the delimiter or EOF is found. Once found, all bytes up to, and including, the delimiter (if found) will be appended to &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n leer&amp;aacute; bytes de la secuencia subyacente hasta que se encuentre el delimitador o EOF. Una vez encontrado, todos los bytes hasta, inclusive, el delimitador (si se encuentra) se agregar&amp;aacute;n a &lt;code&gt;buf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1dad503d6df9a455b05b17e9982a9b93c55eab53" translate="yes" xml:space="preserve">
          <source>This function will read bytes from the underlying stream until the newline delimiter (the 0xA byte) or EOF is found. Once found, all bytes up to, and including, the delimiter (if found) will be appended to &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n leer&amp;aacute; bytes de la secuencia subyacente hasta que se encuentre el delimitador de nueva l&amp;iacute;nea (el byte 0xA) o EOF. Una vez encontrado, todos los bytes hasta, inclusive, el delimitador (si se encuentra) se agregar&amp;aacute;n a &lt;code&gt;buf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4641b6a37e2fa63178c9c82e80780dcf197015e4" translate="yes" xml:space="preserve">
          <source>This function will read bytes from the underlying stream until the newline delimiter (the &lt;code&gt;0xA&lt;/code&gt; byte) or EOF is found. Once found, all bytes up to, and including, the delimiter (if found) will be appended to &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5509bdb3a49d4f3afca9be3c4e49fc0d8f43d023" translate="yes" xml:space="preserve">
          <source>This function will resume execution of the generator or start execution if it hasn't already. This call will return back into the generator's last suspension point, resuming execution from the latest &lt;code&gt;yield&lt;/code&gt;. The generator will continue executing until it either yields or returns, at which point this function will return.</source>
          <target state="translated">Esta funci&amp;oacute;n reanudar&amp;aacute; la ejecuci&amp;oacute;n del generador o iniciar&amp;aacute; la ejecuci&amp;oacute;n si a&amp;uacute;n no lo ha hecho. Esta llamada volver&amp;aacute; al &amp;uacute;ltimo punto de suspensi&amp;oacute;n del generador, reanudando la ejecuci&amp;oacute;n desde el &amp;uacute;ltimo &lt;code&gt;yield&lt;/code&gt; . El generador continuar&amp;aacute; ejecut&amp;aacute;ndose hasta que ceda o regrese, momento en el que esta funci&amp;oacute;n regresar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="379fb0237a1103a33f0bdfcecfb22299eb043557" translate="yes" xml:space="preserve">
          <source>This function will return &lt;code&gt;Ok&lt;/code&gt; with the closure's result if the closure does not panic, and will return &lt;code&gt;Err(cause)&lt;/code&gt; if the closure panics. The &lt;code&gt;cause&lt;/code&gt; returned is the object with which panic was originally invoked.</source>
          <target state="translated">Esta funci&amp;oacute;n devolver&amp;aacute; &lt;code&gt;Ok&lt;/code&gt; con el resultado del cierre si el cierre no entra en p&amp;aacute;nico, y devolver&amp;aacute; &lt;code&gt;Err(cause)&lt;/code&gt; si el cierre entra en p&amp;aacute;nico. La &lt;code&gt;cause&lt;/code&gt; devuelta es el objeto con el que se invoc&amp;oacute; originalmente el p&amp;aacute;nico.</target>
        </trans-unit>
        <trans-unit id="d89140f93781fe909c3c1a3e0e29b63c7e369dd7" translate="yes" xml:space="preserve">
          <source>This function will return an I/O error if the underlying reader was read, but returned an error.</source>
          <target state="translated">Esta función devolverá un error de E/S si el lector subyacente fue leído,pero devolvió un error.</target>
        </trans-unit>
        <trans-unit id="53872c0f37fe2cee76394788d7b1f123503054e5" translate="yes" xml:space="preserve">
          <source>This function will return an error if &lt;code&gt;path&lt;/code&gt; does not already exist. Other errors may also be returned according to &lt;a href=&quot;struct.openoptions#method.open&quot;&gt;&lt;code&gt;OpenOptions::open&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n devolver&amp;aacute; un error si la &lt;code&gt;path&lt;/code&gt; a&amp;uacute;n no existe. Tambi&amp;eacute;n se pueden devolver otros errores de acuerdo con &lt;a href=&quot;struct.openoptions#method.open&quot;&gt; &lt;code&gt;OpenOptions::open&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="89c6971a5e8debeb3922f37bf3a67af3e6b7d708" translate="yes" xml:space="preserve">
          <source>This function will return an error if the RwLock is poisoned. An RwLock is poisoned whenever a writer panics while holding an exclusive lock. An error will be returned when the lock is acquired.</source>
          <target state="translated">Esta función devolverá un error si el RwLock está envenenado.Un RwLock se envenena cuando un escritor entra en pánico mientras mantiene un candado exclusivo.Se devolverá un error cuando se adquiera el candado.</target>
        </trans-unit>
        <trans-unit id="dd9f12f8f4834cac09e7d8702d9c30c5d7a3ff26" translate="yes" xml:space="preserve">
          <source>This function will return an error if the RwLock is poisoned. An RwLock is poisoned whenever a writer panics while holding an exclusive lock. An error will only be returned if the lock would have otherwise been acquired.</source>
          <target state="translated">Esta función devolverá un error si el RwLock está envenenado.Un RwLock se envenena cuando un escritor entra en pánico mientras mantiene un candado exclusivo.Sólo se devolverá un error si el candado se hubiera adquirido de otra manera.</target>
        </trans-unit>
        <trans-unit id="853f4abcb0adc2f4d392d459e3d4bcbfc1ffde02" translate="yes" xml:space="preserve">
          <source>This function will return an error if the RwLock is poisoned. An RwLock is poisoned whenever a writer panics while holding an exclusive lock. The failure will occur immediately after the lock has been acquired.</source>
          <target state="translated">Esta función devolverá un error si el RwLock está envenenado.Un RwLock se envenena cuando un escritor entra en pánico mientras mantiene un candado exclusivo.El fallo ocurrirá inmediatamente después de que el candado haya sido adquirido.</target>
        </trans-unit>
        <trans-unit id="08332f9ce278762f6fd52afefe704489d0688f37" translate="yes" xml:space="preserve">
          <source>This function will return an error if the file is not opened for writing.</source>
          <target state="translated">Esta función devolverá un error si el archivo no se abre para escribir.</target>
        </trans-unit>
        <trans-unit id="cdbfb4a0b16adba4591761f7aedf5e4a9ea34196" translate="yes" xml:space="preserve">
          <source>This function will return an error if the file is not opened for writing. Also, std::io::ErrorKind::InvalidInput will be returned if the desired length would cause an overflow due to the implementation specifics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6cdf441223c3eb9f4334399883d69c73ecd1bf4" translate="yes" xml:space="preserve">
          <source>This function will return an error if the mutex being waited on is poisoned when this thread re-acquires the lock. For more information, see information about &lt;a href=&quot;struct.mutex#poisoning&quot;&gt;poisoning&lt;/a&gt; on the &lt;a href=&quot;struct.mutex&quot;&gt;&lt;code&gt;Mutex&lt;/code&gt;&lt;/a&gt; type.</source>
          <target state="translated">Esta funci&amp;oacute;n devolver&amp;aacute; un error si el mutex que se est&amp;aacute; esperando est&amp;aacute; envenenado cuando este hilo recupere el bloqueo. Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte la informaci&amp;oacute;n sobre el &lt;a href=&quot;struct.mutex#poisoning&quot;&gt;envenenamiento&lt;/a&gt; en el tipo &lt;a href=&quot;struct.mutex&quot;&gt; &lt;code&gt;Mutex&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="27a931587ff628dc51ea9585254e81a44150f056" translate="yes" xml:space="preserve">
          <source>This function will return an error if the supplied bytes contain an internal 0 byte. The &lt;a href=&quot;struct.nulerror&quot;&gt;&lt;code&gt;NulError&lt;/code&gt;&lt;/a&gt; returned will contain the bytes as well as the position of the nul byte.</source>
          <target state="translated">Esta funci&amp;oacute;n devolver&amp;aacute; un error si los bytes proporcionados contienen un byte 0 interno. El &lt;a href=&quot;struct.nulerror&quot;&gt; &lt;code&gt;NulError&lt;/code&gt; &lt;/a&gt; devuelto contendr&amp;aacute; los bytes, as&amp;iacute; como la posici&amp;oacute;n del byte nulo.</target>
        </trans-unit>
        <trans-unit id="dbf84289e9d9e4926b496bd897b3083ec6312b71" translate="yes" xml:space="preserve">
          <source>This function will return an error if the user lacks permission change attributes on the underlying file. It may also return an error in other os-specific unspecified cases.</source>
          <target state="translated">Esta función devolverá un error si el usuario carece de atributos de cambio de permiso en el archivo subyacente.También puede devolver un error en otros casos no especificados específicos del sistema operativo.</target>
        </trans-unit>
        <trans-unit id="5d42b76127c0c24013b14924e889090949109ff6" translate="yes" xml:space="preserve">
          <source>This function will return an error immediately if any call to &lt;a href=&quot;trait.read#tymethod.read&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;trait.write#tymethod.write&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; returns an error. All instances of &lt;a href=&quot;enum.errorkind#variant.Interrupted&quot;&gt;&lt;code&gt;ErrorKind::Interrupted&lt;/code&gt;&lt;/a&gt; are handled by this function and the underlying operation is retried.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6020fefae74dafb3cbf7677aedde54d28946007d" translate="yes" xml:space="preserve">
          <source>This function will return an error immediately if any call to &lt;code&gt;read&lt;/code&gt; or &lt;code&gt;write&lt;/code&gt; returns an error. All instances of &lt;code&gt;ErrorKind::Interrupted&lt;/code&gt; are handled by this function and the underlying operation is retried.</source>
          <target state="translated">Esta funci&amp;oacute;n devolver&amp;aacute; un error inmediatamente si cualquier llamada a &lt;code&gt;read&lt;/code&gt; o &lt;code&gt;write&lt;/code&gt; devuelve un error. Todas las instancias de &lt;code&gt;ErrorKind::Interrupted&lt;/code&gt; son manejadas por esta funci&amp;oacute;n y se reintenta la operaci&amp;oacute;n subyacente.</target>
        </trans-unit>
        <trans-unit id="789ed5daa8073ac179354d082eb69d8ff28cdee6" translate="yes" xml:space="preserve">
          <source>This function will return an error in the following situations, but is not limited to just these cases:</source>
          <target state="translated">Esta función devolverá un error en las siguientes situaciones,pero no se limita sólo a estos casos:</target>
        </trans-unit>
        <trans-unit id="6c2926688126ed0bb4700cfc41330adcd34075d1" translate="yes" xml:space="preserve">
          <source>This function will return an error under a number of different circumstances. Some of these error conditions are listed here, together with their &lt;a href=&quot;../io/enum.errorkind&quot;&gt;&lt;code&gt;ErrorKind&lt;/code&gt;&lt;/a&gt;. The mapping to &lt;a href=&quot;../io/enum.errorkind&quot;&gt;&lt;code&gt;ErrorKind&lt;/code&gt;&lt;/a&gt;s is not part of the compatibility contract of the function, especially the &lt;code&gt;Other&lt;/code&gt; kind might change to more specific kinds in the future.</source>
          <target state="translated">Esta funci&amp;oacute;n devolver&amp;aacute; un error en varias circunstancias diferentes. Algunas de estas condiciones de error se enumeran aqu&amp;iacute;, junto con su &lt;a href=&quot;../io/enum.errorkind&quot;&gt; &lt;code&gt;ErrorKind&lt;/code&gt; &lt;/a&gt; . El mapeo a &lt;a href=&quot;../io/enum.errorkind&quot;&gt; &lt;code&gt;ErrorKind&lt;/code&gt; &lt;/a&gt; s no es parte del contrato de compatibilidad de la funci&amp;oacute;n, especialmente el &lt;code&gt;Other&lt;/code&gt; tipo podr&amp;iacute;a cambiar a tipos m&amp;aacute;s espec&amp;iacute;ficos en el futuro.</target>
        </trans-unit>
        <trans-unit id="dbf346cba719ecc4a64a28fdc51747223ea1ead1" translate="yes" xml:space="preserve">
          <source>This function will return an error under a number of different circumstances. Some of these error conditions are listed here, together with their &lt;a href=&quot;../io/enum.errorkind&quot;&gt;&lt;code&gt;io::ErrorKind&lt;/code&gt;&lt;/a&gt;. The mapping to &lt;a href=&quot;../io/enum.errorkind&quot;&gt;&lt;code&gt;io::ErrorKind&lt;/code&gt;&lt;/a&gt;s is not part of the compatibility contract of the function, especially the &lt;a href=&quot;../io/enum.errorkind#variant.Other&quot;&gt;&lt;code&gt;Other&lt;/code&gt;&lt;/a&gt; kind might change to more specific kinds in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6a8bd83b584fa0f13cb1bcd08f12c3e0060dff9" translate="yes" xml:space="preserve">
          <source>This function will return an instance of &lt;a href=&quot;struct.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; on error.</source>
          <target state="translated">Esta funci&amp;oacute;n devolver&amp;aacute; una instancia de &lt;a href=&quot;struct.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; en caso de error.</target>
        </trans-unit>
        <trans-unit id="6fae4edeb2bc2b830762c223977c0f9e31e7f71d" translate="yes" xml:space="preserve">
          <source>This function will return any I/O error reported while formatting.</source>
          <target state="translated">Esta función devolverá cualquier error de E/S reportado durante el formateo.</target>
        </trans-unit>
        <trans-unit id="82d9dcac7df30707ace2de701aba5471ae21281c" translate="yes" xml:space="preserve">
          <source>This function will return the first error of non-&lt;a href=&quot;../../../io/enum.errorkind#variant.Interrupted&quot;&gt;&lt;code&gt;ErrorKind::Interrupted&lt;/code&gt;&lt;/a&gt; kind that &lt;a href=&quot;#tymethod.write_at&quot;&gt;&lt;code&gt;write_at&lt;/code&gt;&lt;/a&gt; returns.</source>
          <target state="translated">Esta funci&amp;oacute;n devolver&amp;aacute; el primer error de tipo no &lt;a href=&quot;../../../io/enum.errorkind#variant.Interrupted&quot;&gt; &lt;code&gt;ErrorKind::Interrupted&lt;/code&gt; &lt;/a&gt; que devuelve &lt;a href=&quot;#tymethod.write_at&quot;&gt; &lt;code&gt;write_at&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cbfac2234e26fd5ad38b1fb7d157edb650781848" translate="yes" xml:space="preserve">
          <source>This function will return the first error of non-&lt;a href=&quot;../../../io/enum.errorkind#variant.Interrupted&quot;&gt;&lt;code&gt;io::ErrorKind::Interrupted&lt;/code&gt;&lt;/a&gt; kind that &lt;a href=&quot;trait.fileext#tymethod.write_at&quot;&gt;&lt;code&gt;write_at&lt;/code&gt;&lt;/a&gt; returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e505864f4a28d60809a69e771d2b212f82c7410c" translate="yes" xml:space="preserve">
          <source>This function will return the first error of non-&lt;a href=&quot;enum.errorkind#variant.Interrupted&quot;&gt;&lt;code&gt;ErrorKind::Interrupted&lt;/code&gt;&lt;/a&gt; kind that &lt;a href=&quot;#tymethod.write&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; returns.</source>
          <target state="translated">Esta funci&amp;oacute;n devolver&amp;aacute; el primer error de tipo no &lt;a href=&quot;enum.errorkind#variant.Interrupted&quot;&gt; &lt;code&gt;ErrorKind::Interrupted&lt;/code&gt; &lt;/a&gt; que devuelve la &lt;a href=&quot;#tymethod.write&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e4e34f750f27d3b0d205fe34d5653142bb6c6abe" translate="yes" xml:space="preserve">
          <source>This function will return the first error of non-&lt;a href=&quot;enum.errorkind#variant.Interrupted&quot;&gt;&lt;code&gt;ErrorKind::Interrupted&lt;/code&gt;&lt;/a&gt; kind that &lt;a href=&quot;trait.write#tymethod.write&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="749cf49b6adfac5a93f23dcbbade901579686611" translate="yes" xml:space="preserve">
          <source>This function will still &lt;code&gt;panic!()&lt;/code&gt; if the key is uninitialized and the key's initializer panics.</source>
          <target state="translated">&amp;iexcl;Esta funci&amp;oacute;n a&amp;uacute;n entrar&amp;aacute; en &lt;code&gt;panic!()&lt;/code&gt; Si la tecla no est&amp;aacute; inicializada y el inicializador de la tecla entra en p&amp;aacute;nico.</target>
        </trans-unit>
        <trans-unit id="aa2dcaf81660e38d976b3c073799f64e35c409b8" translate="yes" xml:space="preserve">
          <source>This function will traverse symbolic links to query information about the destination file.</source>
          <target state="translated">Esta función atravesará enlaces simbólicos para consultar información sobre el archivo de destino.</target>
        </trans-unit>
        <trans-unit id="7a60f9a71c97e3c48d6ddbb61757095cfb7454e6" translate="yes" xml:space="preserve">
          <source>This function will traverse symbolic links to query information about the destination file. In case of broken symbolic links this will return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n recorrer&amp;aacute; enlaces simb&amp;oacute;licos para consultar informaci&amp;oacute;n sobre el archivo de destino. En caso de enlaces simb&amp;oacute;licos rotos, esto devolver&amp;aacute; &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e2e9a4f19c05867342225932a802795ba8df8be2" translate="yes" xml:space="preserve">
          <source>This function will unsafely assume the pointer &lt;code&gt;src&lt;/code&gt; is valid for &lt;a href=&quot;fn.size_of&quot;&gt;&lt;code&gt;size_of::&amp;lt;U&amp;gt;&lt;/code&gt;&lt;/a&gt; bytes by transmuting &lt;code&gt;&amp;amp;T&lt;/code&gt; to &lt;code&gt;&amp;amp;U&lt;/code&gt; and then reading the &lt;code&gt;&amp;amp;U&lt;/code&gt; (except that this is done in a way that is correct even when &lt;code&gt;&amp;amp;U&lt;/code&gt; makes stricter alignment requirements than &lt;code&gt;&amp;amp;T&lt;/code&gt;). It will also unsafely create a copy of the contained value instead of moving out of &lt;code&gt;src&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2144ac018e241484dd88280c401709723264165b" translate="yes" xml:space="preserve">
          <source>This function will unsafely assume the pointer &lt;code&gt;src&lt;/code&gt; is valid for &lt;a href=&quot;fn.size_of&quot;&gt;&lt;code&gt;size_of::&amp;lt;U&amp;gt;&lt;/code&gt;&lt;/a&gt; bytes by transmuting &lt;code&gt;&amp;amp;T&lt;/code&gt; to &lt;code&gt;&amp;amp;U&lt;/code&gt; and then reading the &lt;code&gt;&amp;amp;U&lt;/code&gt;. It will also unsafely create a copy of the contained value instead of moving out of &lt;code&gt;src&lt;/code&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n no segura asumir el puntero &lt;code&gt;src&lt;/code&gt; es v&amp;aacute;lida para &lt;a href=&quot;fn.size_of&quot;&gt; &lt;code&gt;size_of::&amp;lt;U&amp;gt;&lt;/code&gt; &lt;/a&gt; bytes por transmutaci&amp;oacute;n &lt;code&gt;&amp;amp;T&lt;/code&gt; a &lt;code&gt;&amp;amp;U&lt;/code&gt; y luego de leer el &lt;code&gt;&amp;amp;U&lt;/code&gt; . Tambi&amp;eacute;n crear&amp;aacute; de forma insegura una copia del valor contenido en lugar de salir de &lt;code&gt;src&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be98532def31c781d65ddc0b9dc20df02eb564e6" translate="yes" xml:space="preserve">
          <source>This function will wrap the provided &lt;code&gt;ptr&lt;/code&gt; with a &lt;code&gt;CStr&lt;/code&gt; wrapper, which allows inspection and interoperation of non-owned C strings. The total size of the raw C string must be smaller than &lt;code&gt;isize::MAX&lt;/code&gt;&lt;strong&gt;bytes&lt;/strong&gt; in memory due to calling the &lt;code&gt;slice::from_raw_parts&lt;/code&gt; function. This method is unsafe for a number of reasons:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5bb3f5f774e85331b120930c24070df4dbb7ef1" translate="yes" xml:space="preserve">
          <source>This function will wrap the provided &lt;code&gt;ptr&lt;/code&gt; with a &lt;code&gt;CStr&lt;/code&gt; wrapper, which allows inspection and interoperation of non-owned C strings. This method is unsafe for a number of reasons:</source>
          <target state="translated">Esta funci&amp;oacute;n envolver&amp;aacute; el &lt;code&gt;ptr&lt;/code&gt; proporcionado con un envoltorio &lt;code&gt;CStr&lt;/code&gt; , que permite la inspecci&amp;oacute;n y la interoperaci&amp;oacute;n de cadenas C no propias . Este m&amp;eacute;todo no es seguro por varias razones:</target>
        </trans-unit>
        <trans-unit id="eb6de22f90abba9d8b2e22f07508357043cd45b1" translate="yes" xml:space="preserve">
          <source>This function will yield errors whenever &lt;a href=&quot;#method.read_until&quot;&gt;&lt;code&gt;read_until&lt;/code&gt;&lt;/a&gt; would have also yielded an error.</source>
          <target state="translated">Esta funci&amp;oacute;n producir&amp;aacute; errores siempre que &lt;a href=&quot;#method.read_until&quot;&gt; &lt;code&gt;read_until&lt;/code&gt; &lt;/a&gt; tambi&amp;eacute;n haya producido un error.</target>
        </trans-unit>
        <trans-unit id="0ec10f22723b4146e4ed97d9a1ccb195f6666569" translate="yes" xml:space="preserve">
          <source>This function will yield errors whenever &lt;a href=&quot;trait.bufread#method.read_until&quot;&gt;&lt;code&gt;read_until&lt;/code&gt;&lt;/a&gt; would have also yielded an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="761c3823fedfe961f64b60f5bbf8dadb1c015978" translate="yes" xml:space="preserve">
          <source>This function works on a best-effort basis, and may return false even when the &lt;code&gt;Waker&lt;/code&gt;s would awaken the same task. However, if this function returns &lt;code&gt;true&lt;/code&gt;, it is guaranteed that the &lt;code&gt;Waker&lt;/code&gt;s will awaken the same task.</source>
          <target state="translated">Esta funci&amp;oacute;n funciona sobre la base del mejor esfuerzo y puede devolver falso incluso cuando los &lt;code&gt;Waker&lt;/code&gt; despiertan la misma tarea. Sin embargo, si esta funci&amp;oacute;n devuelve &lt;code&gt;true&lt;/code&gt; , se garantiza que los &lt;code&gt;Waker&lt;/code&gt; despertar&amp;aacute;n la misma tarea.</target>
        </trans-unit>
        <trans-unit id="0fef1eb994767850b63d5d3191f1364d1d996711" translate="yes" xml:space="preserve">
          <source>This function works similar to &lt;a href=&quot;../iter/trait.iterator#method.filter&quot;&gt;&lt;code&gt;Iterator::filter()&lt;/code&gt;&lt;/a&gt;. You can imagine the &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; being an iterator over one or zero elements. &lt;code&gt;filter()&lt;/code&gt; lets you decide which elements to keep.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae0840523d6333733f66bb75a006add83e1ec36" translate="yes" xml:space="preserve">
          <source>This function works similar to &lt;code&gt;Iterator::filter()&lt;/code&gt;. You can imagine the &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; being an iterator over one or zero elements. &lt;code&gt;filter()&lt;/code&gt; lets you decide which elements to keep.</source>
          <target state="translated">Esta funci&amp;oacute;n funciona de manera similar a &lt;code&gt;Iterator::filter()&lt;/code&gt; . Puede imaginarse que &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; es un iterador sobre uno o cero elementos. &lt;code&gt;filter()&lt;/code&gt; permite decidir qu&amp;eacute; elementos conservar.</target>
        </trans-unit>
        <trans-unit id="113d936138ddc7ae4f63a1a50d8105ac5a7add0d" translate="yes" xml:space="preserve">
          <source>This function&amp;rsquo;s signature is less cluttered: the function name, parameter list, and return type are close together, similar to a function without lots of trait bounds.</source>
          <target state="translated">La firma de esta funci&amp;oacute;n est&amp;aacute; menos desordenada: el nombre de la funci&amp;oacute;n, la lista de par&amp;aacute;metros y el tipo de retorno est&amp;aacute;n muy juntos, similar a una funci&amp;oacute;n sin muchos l&amp;iacute;mites de rasgos.</target>
        </trans-unit>
        <trans-unit id="23da01dd3aa4ebf7371ab6dbecf83fca400f0b49" translate="yes" xml:space="preserve">
          <source>This function's behavior is unexpected and probably not what you want. Consider using a crate from crates.io instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59db1f1ce2d556d00a44653625d9c4310aa82a71" translate="yes" xml:space="preserve">
          <source>This function, &lt;code&gt;first_word&lt;/code&gt;, has a &lt;code&gt;&amp;amp;String&lt;/code&gt; as a parameter. We don&amp;rsquo;t want ownership, so this is fine. But what should we return? We don&amp;rsquo;t really have a way to talk about &lt;em&gt;part&lt;/em&gt; of a string. However, we could return the index of the end of the word. Let&amp;rsquo;s try that, as shown in Listing 4-7.</source>
          <target state="translated">Esta funci&amp;oacute;n, &lt;code&gt;first_word&lt;/code&gt; , tiene un &lt;code&gt;&amp;amp;String&lt;/code&gt; como par&amp;aacute;metro. No queremos propiedad, as&amp;iacute; que est&amp;aacute; bien. Pero, &amp;iquest;qu&amp;eacute; debemos devolver? Realmente no tenemos una forma de hablar sobre &lt;em&gt;parte&lt;/em&gt; de una cadena. Sin embargo, podr&amp;iacute;amos devolver el &amp;iacute;ndice del final de la palabra. Intent&amp;eacute;moslo, como se muestra en el Listado 4-7.</target>
        </trans-unit>
        <trans-unit id="c0b65dd63b8d87baa6cb2781b4c83fe9b710f211" translate="yes" xml:space="preserve">
          <source>This function, unlike &lt;code&gt;spawn&lt;/code&gt;, will &lt;strong&gt;not&lt;/strong&gt;&lt;code&gt;fork&lt;/code&gt; the process to create a new child. Like spawn, however, the default behavior for the stdio descriptors will be to inherited from the current process.</source>
          <target state="translated">Esta funci&amp;oacute;n, a diferencia de &lt;code&gt;spawn&lt;/code&gt; , &lt;strong&gt;no &lt;/strong&gt; &lt;code&gt;fork&lt;/code&gt; el proceso para crear un nuevo hijo. Sin embargo, al igual que spawn, el comportamiento predeterminado de los descriptores stdio ser&amp;aacute; heredado del proceso actual.</target>
        </trans-unit>
        <trans-unit id="a7e07fc3dba284598652a13174e554562e5525f8" translate="yes" xml:space="preserve">
          <source>This handle encapsulates a &lt;a href=&quot;struct.rawwaker&quot;&gt;&lt;code&gt;RawWaker&lt;/code&gt;&lt;/a&gt; instance, which defines the executor-specific wakeup behavior.</source>
          <target state="translated">Este identificador encapsula una instancia de &lt;a href=&quot;struct.rawwaker&quot;&gt; &lt;code&gt;RawWaker&lt;/code&gt; &lt;/a&gt; , que define el comportamiento de activaci&amp;oacute;n espec&amp;iacute;fico del ejecutor.</target>
        </trans-unit>
        <trans-unit id="d605d26d55dc2758f0b6de9e17a49a349f074534" translate="yes" xml:space="preserve">
          <source>This handle implements both the &lt;a href=&quot;trait.read&quot;&gt;&lt;code&gt;Read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;trait.bufread&quot;&gt;&lt;code&gt;BufRead&lt;/code&gt;&lt;/a&gt; traits, and is constructed via the &lt;a href=&quot;struct.stdin#method.lock&quot;&gt;&lt;code&gt;Stdin::lock&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Este identificador implementa los rasgos &lt;a href=&quot;trait.read&quot;&gt; &lt;code&gt;Read&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;trait.bufread&quot;&gt; &lt;code&gt;BufRead&lt;/code&gt; &lt;/a&gt; , y se construye mediante el m&amp;eacute;todo &lt;a href=&quot;struct.stdin#method.lock&quot;&gt; &lt;code&gt;Stdin::lock&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f7258bae2e88ec63ae3dd338b65d64451a9b331b" translate="yes" xml:space="preserve">
          <source>This handle implements the &lt;a href=&quot;trait.write&quot;&gt;&lt;code&gt;Write&lt;/code&gt;&lt;/a&gt; trait, and is constructed via the &lt;a href=&quot;struct.stdout#method.lock&quot;&gt;&lt;code&gt;Stdout::lock&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Este identificador implementa el rasgo &lt;a href=&quot;trait.write&quot;&gt; &lt;code&gt;Write&lt;/code&gt; &lt;/a&gt; y se construye mediante el m&amp;eacute;todo &lt;a href=&quot;struct.stdout#method.lock&quot;&gt; &lt;code&gt;Stdout::lock&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d288bcdc54960c2a1210bed705519ebb1c8b509b" translate="yes" xml:space="preserve">
          <source>This handle implements the &lt;code&gt;Read&lt;/code&gt; trait, but beware that concurrent reads of &lt;code&gt;Stdin&lt;/code&gt; must be executed with care.</source>
          <target state="translated">Este identificador implementa el rasgo de &lt;code&gt;Read&lt;/code&gt; , pero tenga en cuenta que las lecturas simult&amp;aacute;neas de &lt;code&gt;Stdin&lt;/code&gt; deben ejecutarse con cuidado.</target>
        </trans-unit>
        <trans-unit id="01441d3c1d26b75fb46c2c721477af0652ee7979" translate="yes" xml:space="preserve">
          <source>This handle implements the &lt;code&gt;Write&lt;/code&gt; trait and is constructed via the &lt;a href=&quot;struct.stderr#method.lock&quot;&gt;&lt;code&gt;Stderr::lock&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Este identificador implementa el rasgo &lt;code&gt;Write&lt;/code&gt; y se construye mediante el m&amp;eacute;todo &lt;a href=&quot;struct.stderr#method.lock&quot;&gt; &lt;code&gt;Stderr::lock&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2708f4eb8582ea4d70309feff62a1d2748e13184" translate="yes" xml:space="preserve">
          <source>This handle is not buffered.</source>
          <target state="translated">Este mango no está amortiguado.</target>
        </trans-unit>
        <trans-unit id="6c48d5f61a1b6b181a01656b1e94697dc7bb9249" translate="yes" xml:space="preserve">
          <source>This happens because the pointer returned by &lt;code&gt;as_ptr&lt;/code&gt; does not carry any lifetime information and the &lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; is deallocated immediately after the &lt;code&gt;CString::new(&quot;Hello&quot;).expect(&quot;CString::new failed&quot;).as_ptr()&lt;/code&gt; expression is evaluated. To fix the problem, bind the &lt;code&gt;CString&lt;/code&gt; to a local variable:</source>
          <target state="translated">Esto sucede porque el puntero devuelto por &lt;code&gt;as_ptr&lt;/code&gt; no contiene informaci&amp;oacute;n de por vida y el &lt;a href=&quot;struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt; se desasigna inmediatamente despu&amp;eacute;s de que se eval&amp;uacute;a la expresi&amp;oacute;n &lt;code&gt;CString::new(&quot;Hello&quot;).expect(&quot;CString::new failed&quot;).as_ptr()&lt;/code&gt; . Para solucionar el problema, vincule &lt;code&gt;CString&lt;/code&gt; a una variable local:</target>
        </trans-unit>
        <trans-unit id="6047b82331195849fba72da79674452a117df64d" translate="yes" xml:space="preserve">
          <source>This happens when a trait has a method like the following:</source>
          <target state="translated">Esto sucede cuando un rasgo tiene un método como el siguiente:</target>
        </trans-unit>
        <trans-unit id="863bad715d4f6d1bd75efa3884a2cc5b250ca381" translate="yes" xml:space="preserve">
          <source>This has the same behavior as the &lt;a href=&quot;../string/struct.string#method.push_str&quot;&gt;&lt;code&gt;push_str&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Tiene el mismo comportamiento que el m&amp;eacute;todo &lt;a href=&quot;../string/struct.string#method.push_str&quot;&gt; &lt;code&gt;push_str&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6a3c452ab4ee63f33d895b0f991faaa23887feb8" translate="yes" xml:space="preserve">
          <source>This has the same behavior as the &lt;a href=&quot;struct.string#method.push_str&quot;&gt;&lt;code&gt;push_str&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Tiene el mismo comportamiento que el m&amp;eacute;todo &lt;a href=&quot;struct.string#method.push_str&quot;&gt; &lt;code&gt;push_str&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b58a8c2add590746e5048b4f132cbbc19047500f" translate="yes" xml:space="preserve">
          <source>This has the same effect as &lt;a href=&quot;union.maybeuninit#method.zeroed&quot;&gt;&lt;code&gt;MaybeUninit::zeroed().assume_init()&lt;/code&gt;&lt;/a&gt;. It is useful for FFI sometimes, but should generally be avoided.</source>
          <target state="translated">Esto tiene el mismo efecto que &lt;a href=&quot;union.maybeuninit#method.zeroed&quot;&gt; &lt;code&gt;MaybeUninit::zeroed().assume_init()&lt;/code&gt; &lt;/a&gt; . A veces es &amp;uacute;til para FFI, pero generalmente debe evitarse.</target>
        </trans-unit>
        <trans-unit id="c7eb4340faf9e85d2da20b4776ce2bebbe29c12a" translate="yes" xml:space="preserve">
          <source>This has the same lifetime as the original slice, and so the iterator can continue to be used while this exists.</source>
          <target state="translated">Tiene la misma vida útil que la rebanada original,por lo que el iterador puede seguir siendo utilizado mientras exista.</target>
        </trans-unit>
        <trans-unit id="65d35375dd8acb85bc9eba434584e8313fb0a245" translate="yes" xml:space="preserve">
          <source>This hasher is not guaranteed to be the same as all other &lt;code&gt;DefaultHasher&lt;/code&gt; instances, but is the same as all other &lt;code&gt;DefaultHasher&lt;/code&gt; instances created through &lt;code&gt;new&lt;/code&gt; or &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">No se garantiza que este hash sea el mismo que todas las dem&amp;aacute;s instancias de &lt;code&gt;DefaultHasher&lt;/code&gt; , pero es el mismo que todas las dem&amp;aacute;s instancias de &lt;code&gt;DefaultHasher&lt;/code&gt; creadas mediante &lt;code&gt;new&lt;/code&gt; o &lt;code&gt;default&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="90feee4915436dfe2be982f4c15a9da7834c5004" translate="yes" xml:space="preserve">
          <source>This implementation is specialized for slice iterators, where it uses &lt;a href=&quot;../primitive.slice#method.copy_from_slice&quot;&gt;&lt;code&gt;copy_from_slice&lt;/code&gt;&lt;/a&gt; to append the entire slice at once.</source>
          <target state="translated">Esta implementaci&amp;oacute;n est&amp;aacute; especializada para iteradores de corte, donde usa &lt;a href=&quot;../primitive.slice#method.copy_from_slice&quot;&gt; &lt;code&gt;copy_from_slice&lt;/code&gt; &lt;/a&gt; para agregar el corte completo a la vez.</target>
        </trans-unit>
        <trans-unit id="0b6b99c1c8632506c647afb83336adc1ee13b73f" translate="yes" xml:space="preserve">
          <source>This information corresponds to the &lt;code&gt;sin6_flowinfo&lt;/code&gt; field in C's &lt;code&gt;netinet/in.h&lt;/code&gt;, as specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc2553#section-3.3&quot;&gt;IETF RFC 2553, Section 3.3&lt;/a&gt;. It combines information about the flow label and the traffic class as specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc2460&quot;&gt;IETF RFC 2460&lt;/a&gt;, respectively &lt;a href=&quot;https://tools.ietf.org/html/rfc2460#section-6&quot;&gt;Section 6&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc2460#section-7&quot;&gt;Section 7&lt;/a&gt;.</source>
          <target state="translated">Esta informaci&amp;oacute;n corresponde a la &lt;code&gt;sin6_flowinfo&lt;/code&gt; campo en C de &lt;code&gt;netinet/in.h&lt;/code&gt; , seg&amp;uacute;n lo especificado en &lt;a href=&quot;https://tools.ietf.org/html/rfc2553#section-3.3&quot;&gt;IETF RFC 2553, secci&amp;oacute;n 3.3&lt;/a&gt; . Combina informaci&amp;oacute;n sobre la etiqueta de flujo y la clase de tr&amp;aacute;fico como se especifica en &lt;a href=&quot;https://tools.ietf.org/html/rfc2460&quot;&gt;IETF RFC 2460&lt;/a&gt; , respectivamente, &lt;a href=&quot;https://tools.ietf.org/html/rfc2460#section-6&quot;&gt;Secci&amp;oacute;n 6&lt;/a&gt; y &lt;a href=&quot;https://tools.ietf.org/html/rfc2460#section-7&quot;&gt;Secci&amp;oacute;n 7&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3af31b70c11ef4a3b608a04beaf7ba9284e068c3" translate="yes" xml:space="preserve">
          <source>This information corresponds to the &lt;code&gt;sin6_scope_id&lt;/code&gt; field in C's &lt;code&gt;netinet/in.h&lt;/code&gt;, as specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc2553#section-3.3&quot;&gt;IETF RFC 2553, Section 3.3&lt;/a&gt;.</source>
          <target state="translated">Esta informaci&amp;oacute;n corresponde al campo &lt;code&gt;sin6_scope_id&lt;/code&gt; en C's &lt;code&gt;netinet/in.h&lt;/code&gt; , como se especifica en &lt;a href=&quot;https://tools.ietf.org/html/rfc2553#section-3.3&quot;&gt;IETF RFC 2553, Secci&amp;oacute;n 3.3&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ec67651ac375d4791b71fe8abc3629f814f16ccf" translate="yes" xml:space="preserve">
          <source>This information is a hint and implementations are not required to preserve it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63ed31757d724807cc9238c95c5432cd39c9735a" translate="yes" xml:space="preserve">
          <source>This instance may reach &lt;code&gt;EOF&lt;/code&gt; after reading fewer bytes than indicated by this method if the underlying &lt;a href=&quot;trait.read&quot;&gt;&lt;code&gt;Read&lt;/code&gt;&lt;/a&gt; instance reaches EOF.</source>
          <target state="translated">Esta instancia puede alcanzar &lt;code&gt;EOF&lt;/code&gt; despu&amp;eacute;s de leer menos bytes de los indicados por este m&amp;eacute;todo si la instancia de &lt;a href=&quot;trait.read&quot;&gt; &lt;code&gt;Read&lt;/code&gt; &lt;/a&gt; subyacente alcanza EOF.</target>
        </trans-unit>
        <trans-unit id="3e890a8fb1ba0d0cd9928016f0c75ede3fcfd9a0" translate="yes" xml:space="preserve">
          <source>This intrinsic does not have a stable counterpart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4ee533fa428c42a5629056a56b7692fc9445d45" translate="yes" xml:space="preserve">
          <source>This intrinsic should not be used outside of the compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa64cf4a4634521305dce783239fdfdeec13027" translate="yes" xml:space="preserve">
          <source>This is a &quot;helper marker trait&quot; used to provide impl blocks for the &lt;a href=&quot;trait.unwindsafe&quot;&gt;&lt;code&gt;UnwindSafe&lt;/code&gt;&lt;/a&gt; trait, for more information see that documentation.</source>
          <target state="translated">Este es un &quot;rasgo de marcador auxiliar&quot; que se utiliza para proporcionar bloques &lt;a href=&quot;trait.unwindsafe&quot;&gt; &lt;code&gt;UnwindSafe&lt;/code&gt; &lt;/a&gt; para el rasgo UnwindSafe . Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte esa documentaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="dca2a0780f1a583478627dae521a3cd19fa18332" translate="yes" xml:space="preserve">
          <source>This is a convenience function for using &lt;a href=&quot;struct.file#method.create&quot;&gt;&lt;code&gt;File::create&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../io/trait.write#method.write_all&quot;&gt;&lt;code&gt;write_all&lt;/code&gt;&lt;/a&gt; with fewer imports.</source>
          <target state="translated">Esta es una funci&amp;oacute;n conveniente para usar &lt;a href=&quot;struct.file#method.create&quot;&gt; &lt;code&gt;File::create&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;../io/trait.write#method.write_all&quot;&gt; &lt;code&gt;write_all&lt;/code&gt; &lt;/a&gt; con menos importaciones.</target>
        </trans-unit>
        <trans-unit id="8a3e47d631d6356541264338a28634452afdd7c3" translate="yes" xml:space="preserve">
          <source>This is a convenience function for using &lt;a href=&quot;struct.file#method.open&quot;&gt;&lt;code&gt;File::open&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../io/trait.read#method.read_to_end&quot;&gt;&lt;code&gt;read_to_end&lt;/code&gt;&lt;/a&gt; with fewer imports and without an intermediate variable. It pre-allocates a buffer based on the file size when available, so it is generally faster than reading into a vector created with &lt;a href=&quot;../vec/struct.vec#method.new&quot;&gt;&lt;code&gt;Vec::new()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187131cff0eb9e697908b49a26f702ec337c3799" translate="yes" xml:space="preserve">
          <source>This is a convenience function for using &lt;a href=&quot;struct.file#method.open&quot;&gt;&lt;code&gt;File::open&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../io/trait.read#method.read_to_end&quot;&gt;&lt;code&gt;read_to_end&lt;/code&gt;&lt;/a&gt; with fewer imports and without an intermediate variable. It pre-allocates a buffer based on the file size when available, so it is generally faster than reading into a vector created with &lt;code&gt;Vec::new()&lt;/code&gt;.</source>
          <target state="translated">Esta es una funci&amp;oacute;n conveniente para usar &lt;a href=&quot;struct.file#method.open&quot;&gt; &lt;code&gt;File::open&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;../io/trait.read#method.read_to_end&quot;&gt; &lt;code&gt;read_to_end&lt;/code&gt; &lt;/a&gt; con menos importaciones y sin una variable intermedia. Preasigna un b&amp;uacute;fer basado en el tama&amp;ntilde;o del archivo cuando est&amp;aacute; disponible, por lo que generalmente es m&amp;aacute;s r&amp;aacute;pido que leer en un vector creado con &lt;code&gt;Vec::new()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ad096cd1a7e9fdbf72506102cbfdd2fbcf9b981" translate="yes" xml:space="preserve">
          <source>This is a convenience function for using &lt;a href=&quot;struct.file#method.open&quot;&gt;&lt;code&gt;File::open&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../io/trait.read#method.read_to_string&quot;&gt;&lt;code&gt;read_to_string&lt;/code&gt;&lt;/a&gt; with fewer imports and without an intermediate variable. It pre-allocates a buffer based on the file size when available, so it is generally faster than reading into a string created with &lt;a href=&quot;../string/struct.string#method.new&quot;&gt;&lt;code&gt;String::new()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c7392177420bfa03e5c328d086366669dabd90c" translate="yes" xml:space="preserve">
          <source>This is a convenience function for using &lt;a href=&quot;struct.file#method.open&quot;&gt;&lt;code&gt;File::open&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../io/trait.read#method.read_to_string&quot;&gt;&lt;code&gt;read_to_string&lt;/code&gt;&lt;/a&gt; with fewer imports and without an intermediate variable. It pre-allocates a buffer based on the file size when available, so it is generally faster than reading into a string created with &lt;code&gt;String::new()&lt;/code&gt;.</source>
          <target state="translated">Esta es una funci&amp;oacute;n conveniente para usar &lt;a href=&quot;struct.file#method.open&quot;&gt; &lt;code&gt;File::open&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;../io/trait.read#method.read_to_string&quot;&gt; &lt;code&gt;read_to_string&lt;/code&gt; &lt;/a&gt; con menos importaciones y sin una variable intermedia. Preasigna un b&amp;uacute;fer basado en el tama&amp;ntilde;o del archivo cuando est&amp;aacute; disponible, por lo que generalmente es m&amp;aacute;s r&amp;aacute;pido que leer una cadena creada con &lt;code&gt;String::new()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6368465bb72af615f875d8e839f3e68ea414aaaa" translate="yes" xml:space="preserve">
          <source>This is a convenience function that coerces errors to false. If you want to check errors, call &lt;a href=&quot;../fs/fn.metadata&quot;&gt;&lt;code&gt;fs::metadata&lt;/code&gt;&lt;/a&gt; and handle its &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt;. Then call &lt;a href=&quot;../fs/struct.metadata#method.is_dir&quot;&gt;&lt;code&gt;fs::Metadata::is_dir&lt;/code&gt;&lt;/a&gt; if it was &lt;a href=&quot;../result/enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ec158d2dde1ce8ee75d1772394d851e65f39fd6" translate="yes" xml:space="preserve">
          <source>This is a convenience function that coerces errors to false. If you want to check errors, call &lt;a href=&quot;../fs/fn.metadata&quot;&gt;&lt;code&gt;fs::metadata&lt;/code&gt;&lt;/a&gt; and handle its &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt;. Then call &lt;a href=&quot;../fs/struct.metadata#method.is_file&quot;&gt;&lt;code&gt;fs::Metadata::is_file&lt;/code&gt;&lt;/a&gt; if it was &lt;a href=&quot;../result/enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f680ca8918b755dd586b16c26d23dbb3dd42957" translate="yes" xml:space="preserve">
          <source>This is a convenience function that coerces errors to false. If you want to check errors, call &lt;a href=&quot;../fs/fn.metadata&quot;&gt;&lt;code&gt;fs::metadata&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac9be08ca6ab3c0d6956dc411e028285b59848d" translate="yes" xml:space="preserve">
          <source>This is a convenience function that coerces errors to false. If you want to check errors, call &lt;a href=&quot;../fs/fn.metadata&quot;&gt;fs::metadata&lt;/a&gt; and handle its Result. Then call &lt;a href=&quot;../fs/struct.metadata#method.is_dir&quot;&gt;fs::Metadata::is_dir&lt;/a&gt; if it was Ok.</source>
          <target state="translated">Esta es una funci&amp;oacute;n de conveniencia que convierte los errores en falso. Si desea verificar errores, llame a &lt;a href=&quot;../fs/fn.metadata&quot;&gt;fs :: metadata&lt;/a&gt; y maneje su Resultado. Luego llame a &lt;a href=&quot;../fs/struct.metadata#method.is_dir&quot;&gt;fs :: Metadata :: is_dir&lt;/a&gt; si estaba bien.</target>
        </trans-unit>
        <trans-unit id="78d539aab76737f8cf396eefb6d1ce6f5b6f255b" translate="yes" xml:space="preserve">
          <source>This is a convenience function that coerces errors to false. If you want to check errors, call &lt;a href=&quot;../fs/fn.metadata&quot;&gt;fs::metadata&lt;/a&gt; and handle its Result. Then call &lt;a href=&quot;../fs/struct.metadata#method.is_file&quot;&gt;fs::Metadata::is_file&lt;/a&gt; if it was Ok.</source>
          <target state="translated">Esta es una funci&amp;oacute;n de conveniencia que convierte los errores en falso. Si desea verificar errores, llame a &lt;a href=&quot;../fs/fn.metadata&quot;&gt;fs :: metadata&lt;/a&gt; y maneje su Resultado. Luego llame a &lt;a href=&quot;../fs/struct.metadata#method.is_file&quot;&gt;fs :: Metadata :: is_file&lt;/a&gt; si estaba bien.</target>
        </trans-unit>
        <trans-unit id="63bfc9edacf3bb27391de3d729c554b4c3c2df6a" translate="yes" xml:space="preserve">
          <source>This is a convenience function that coerces errors to false. If you want to check errors, call &lt;a href=&quot;../fs/fn.metadata&quot;&gt;fs::metadata&lt;/a&gt;.</source>
          <target state="translated">Esta es una funci&amp;oacute;n de conveniencia que convierte los errores en falso. Si desea verificar los errores, llame a &lt;a href=&quot;../fs/fn.metadata&quot;&gt;fs :: metadata&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="748753921bdcefd01924d5e43ae2dad4f042e3b3" translate="yes" xml:space="preserve">
          <source>This is a cost-free conversion.</source>
          <target state="translated">Esta es una conversión gratuita.</target>
        </trans-unit>
        <trans-unit id="0bed32ad8a4ac210351c4fe08ac569f4ede1369a" translate="yes" xml:space="preserve">
          <source>This is a curious macro used to safely pass around an opaque object describing the format string. This object does not require any heap allocations to create, and it only references information on the stack. Under the hood, all of the related macros are implemented in terms of this. First off, some example usage is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29fa7c971247c161eeccc64d10b730dfdf57cf6f" translate="yes" xml:space="preserve">
          <source>This is a curious macro which is used to safely pass around an opaque object describing the format string. This object does not require any heap allocations to create, and it only references information on the stack. Under the hood, all of the related macros are implemented in terms of this. First off, some example usage is:</source>
          <target state="translated">Esta es una curiosa macro que se utiliza para pasar con seguridad un objeto opaco que describe el formato de la cadena.Este objeto no requiere ninguna asignación de pila para crear,y sólo hace referencia a la información de la pila.Bajo el capó,todas las macros relacionadas se implementan en términos de esto.En primer lugar,algunos ejemplos de uso son:</target>
        </trans-unit>
        <trans-unit id="a5cb34f6e2e869f23ba4b01f87c2789e85bd0de1" translate="yes" xml:space="preserve">
          <source>This is a generic method to go from &lt;code&gt;&amp;amp;Pin&amp;lt;Pointer&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; to &lt;code&gt;Pin&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt;. It is safe because, as part of the contract of &lt;code&gt;Pin::new_unchecked&lt;/code&gt;, the pointee cannot move after &lt;code&gt;Pin&amp;lt;Pointer&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; got created. &quot;Malicious&quot; implementations of &lt;code&gt;Pointer::Deref&lt;/code&gt; are likewise ruled out by the contract of &lt;code&gt;Pin::new_unchecked&lt;/code&gt;.</source>
          <target state="translated">Este es un m&amp;eacute;todo gen&amp;eacute;rico para ir de &lt;code&gt;&amp;amp;Pin&amp;lt;Pointer&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; a &lt;code&gt;Pin&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; . Es seguro porque, como parte del contrato de &lt;code&gt;Pin::new_unchecked&lt;/code&gt; , el puntero no puede moverse despu&amp;eacute;s de que se haya creado el &lt;code&gt;Pin&amp;lt;Pointer&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; . Las implementaciones &quot;maliciosas&quot; de &lt;code&gt;Pointer::Deref&lt;/code&gt; tambi&amp;eacute;n est&amp;aacute;n descartadas por el contrato de &lt;code&gt;Pin::new_unchecked&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56c4f5951c7828ae5ee50cc814a919ce365cfc61" translate="yes" xml:space="preserve">
          <source>This is a generic method to go from &lt;code&gt;&amp;amp;mut Pin&amp;lt;Pointer&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; to &lt;code&gt;Pin&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt;. It is safe because, as part of the contract of &lt;code&gt;Pin::new_unchecked&lt;/code&gt;, the pointee cannot move after &lt;code&gt;Pin&amp;lt;Pointer&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; got created. &quot;Malicious&quot; implementations of &lt;code&gt;Pointer::DerefMut&lt;/code&gt; are likewise ruled out by the contract of &lt;code&gt;Pin::new_unchecked&lt;/code&gt;.</source>
          <target state="translated">Este es un m&amp;eacute;todo gen&amp;eacute;rico para pasar de &lt;code&gt;&amp;amp;mut Pin&amp;lt;Pointer&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; a &lt;code&gt;Pin&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; . Es seguro porque, como parte del contrato de &lt;code&gt;Pin::new_unchecked&lt;/code&gt; , el puntero no puede moverse despu&amp;eacute;s de que se haya creado el &lt;code&gt;Pin&amp;lt;Pointer&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; . Las implementaciones &quot;maliciosas&quot; de &lt;code&gt;Pointer::DerefMut&lt;/code&gt; tambi&amp;eacute;n est&amp;aacute;n descartadas por el contrato de &lt;code&gt;Pin::new_unchecked&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="89763ee5b7958c417ffa6362fe62836bd12504df" translate="yes" xml:space="preserve">
          <source>This is a great time to build a more substantial program to get used to reading and writing Rust code. So, in Chapter 2, we&amp;rsquo;ll build a guessing game program. If you would rather start by learning how common programming concepts work in Rust, see Chapter 3 and then return to Chapter 2.</source>
          <target state="translated">Este es un buen momento para construir un programa m&amp;aacute;s sustancial para acostumbrarse a leer y escribir c&amp;oacute;digo Rust. Entonces, en el Cap&amp;iacute;tulo 2, crearemos un programa de juego de adivinanzas. Si prefiere comenzar por aprender c&amp;oacute;mo funcionan los conceptos de programaci&amp;oacute;n comunes en Rust, consulte el Cap&amp;iacute;tulo 3 y luego regrese al Cap&amp;iacute;tulo 2.</target>
        </trans-unit>
        <trans-unit id="bafda2af6137ec515a17c15aeff3f2735f4091da" translate="yes" xml:space="preserve">
          <source>This is a hack to work around a limitation in our type system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b462da8b85a8420993ace33b35e2459c3b0f94de" translate="yes" xml:space="preserve">
          <source>This is a hack to workaround a limitation in our type-system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ca2eb8b4f8037d6f9bc35aac9a7c204a66255a" translate="yes" xml:space="preserve">
          <source>This is a larger example that implements &lt;a href=&quot;http://en.wikipedia.org/wiki/Dijkstra%27s_algorithm&quot;&gt;Dijkstra's algorithm&lt;/a&gt; to solve the &lt;a href=&quot;http://en.wikipedia.org/wiki/Shortest_path_problem&quot;&gt;shortest path problem&lt;/a&gt; on a &lt;a href=&quot;http://en.wikipedia.org/wiki/Directed_graph&quot;&gt;directed graph&lt;/a&gt;. It shows how to use &lt;a href=&quot;struct.binaryheap&quot;&gt;&lt;code&gt;BinaryHeap&lt;/code&gt;&lt;/a&gt; with custom types.</source>
          <target state="translated">Este es un ejemplo m&amp;aacute;s grande que implementa &lt;a href=&quot;http://en.wikipedia.org/wiki/Dijkstra%27s_algorithm&quot;&gt;el algoritmo de Dijkstra&lt;/a&gt; para resolver el problema de la &lt;a href=&quot;http://en.wikipedia.org/wiki/Shortest_path_problem&quot;&gt;ruta m&amp;aacute;s corta&lt;/a&gt; en un &lt;a href=&quot;http://en.wikipedia.org/wiki/Directed_graph&quot;&gt;gr&amp;aacute;fico dirigido&lt;/a&gt; . Muestra c&amp;oacute;mo usar &lt;a href=&quot;struct.binaryheap&quot;&gt; &lt;code&gt;BinaryHeap&lt;/code&gt; &lt;/a&gt; con tipos personalizados.</target>
        </trans-unit>
        <trans-unit id="0ce22a5b8db2ccd4642599318fe60aee2faa03ed" translate="yes" xml:space="preserve">
          <source>This is a larger example that implements &lt;a href=&quot;https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm&quot;&gt;Dijkstra's algorithm&lt;/a&gt; to solve the &lt;a href=&quot;https://en.wikipedia.org/wiki/Shortest_path_problem&quot;&gt;shortest path problem&lt;/a&gt; on a &lt;a href=&quot;https://en.wikipedia.org/wiki/Directed_graph&quot;&gt;directed graph&lt;/a&gt;. It shows how to use &lt;a href=&quot;../struct.binaryheap&quot;&gt;&lt;code&gt;BinaryHeap&lt;/code&gt;&lt;/a&gt; with custom types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c511330b7bfd645fe1ae62ba92f808907b836b" translate="yes" xml:space="preserve">
          <source>This is a low-level operation that maintains none of the normal invariants of the type. Normally changing the length of a vector is done using one of the safe operations instead, such as &lt;a href=&quot;#method.truncate&quot;&gt;&lt;code&gt;truncate&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#method.resize&quot;&gt;&lt;code&gt;resize&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#method.extend-1&quot;&gt;&lt;code&gt;extend&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#method.clear&quot;&gt;&lt;code&gt;clear&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esta es una operaci&amp;oacute;n de bajo nivel que no mantiene ninguno de los invariantes normales del tipo. Normalmente, el cambio de la longitud de un vector se realiza mediante una de las operaciones seguras, como &lt;a href=&quot;#method.truncate&quot;&gt; &lt;code&gt;truncate&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#method.resize&quot;&gt; &lt;code&gt;resize&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#method.extend-1&quot;&gt; &lt;code&gt;extend&lt;/code&gt; er&lt;/a&gt; o &lt;a href=&quot;#method.clear&quot;&gt; &lt;code&gt;clear&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f83da737778161016a797e059513bd95b7a1b562" translate="yes" xml:space="preserve">
          <source>This is a low-level operation that maintains none of the normal invariants of the type. Normally changing the length of a vector is done using one of the safe operations instead, such as &lt;a href=&quot;struct.vec#method.truncate&quot;&gt;&lt;code&gt;truncate&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;struct.vec#method.resize&quot;&gt;&lt;code&gt;resize&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../iter/trait.extend#tymethod.extend&quot;&gt;&lt;code&gt;extend&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;struct.vec#method.clear&quot;&gt;&lt;code&gt;clear&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5a83358209b9d321dd626221b446c20e90a835f" translate="yes" xml:space="preserve">
          <source>This is a lower-level version of &lt;a href=&quot;enum.entry&quot;&gt;&lt;code&gt;Entry&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esta es una versi&amp;oacute;n de nivel inferior de &lt;a href=&quot;enum.entry&quot;&gt; &lt;code&gt;Entry&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d779513c1e09f65a072541be686df3371c86d19d" translate="yes" xml:space="preserve">
          <source>This is a minimal HTML5 document with a heading and some text. To return this from the server when a request is received, we&amp;rsquo;ll modify &lt;code&gt;handle_connection&lt;/code&gt; as shown in Listing 20-5 to read the HTML file, add it to the response as a body, and send it.</source>
          <target state="translated">Este es un documento HTML5 m&amp;iacute;nimo con un encabezado y algo de texto. Para devolver esto desde el servidor cuando se recibe una solicitud, modificaremos &lt;code&gt;handle_connection&lt;/code&gt; como se muestra en el Listado 20-5 para leer el archivo HTML, agregarlo a la respuesta como cuerpo y enviarlo.</target>
        </trans-unit>
        <trans-unit id="b1799e7b3d355702a52652e9f785dc24c41920f9" translate="yes" xml:space="preserve">
          <source>This is a parameter for the &quot;minimum width&quot; that the format should take up. If the value's string does not fill up this many characters, then the padding specified by fill/alignment will be used to take up the required space (see below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a7bcaac4b774ad822d1d354cccc21a6015fca6e" translate="yes" xml:space="preserve">
          <source>This is a parameter for the &quot;minimum width&quot; that the format should take up. If the value's string does not fill up this many characters, then the padding specified by fill/alignment will be used to take up the required space.</source>
          <target state="translated">Este es un parámetro para el &quot;ancho mínimo&quot; que el formato debe ocupar.Si la cadena del valor no llena tantos caracteres,entonces el relleno especificado por relleno/alineación se utilizará para ocupar el espacio requerido.</target>
        </trans-unit>
        <trans-unit id="b084ef158428b63f0e7eeac68dee8b3d095bdb3c" translate="yes" xml:space="preserve">
          <source>This is a situation in which interior mutability can help! We&amp;rsquo;ll store the &lt;code&gt;sent_messages&lt;/code&gt; within a &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;, and then the &lt;code&gt;send&lt;/code&gt; message will be able to modify &lt;code&gt;sent_messages&lt;/code&gt; to store the messages we&amp;rsquo;ve seen. Listing 15-22 shows what that looks like:</source>
          <target state="translated">&amp;iexcl;Esta es una situaci&amp;oacute;n en la que la mutabilidad interior puede ayudar! Almacenaremos los &lt;code&gt;sent_messages&lt;/code&gt; dentro de una &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; , y luego el mensaje &lt;code&gt;send&lt;/code&gt; podr&amp;aacute; modificar &lt;code&gt;sent_messages&lt;/code&gt; para almacenar los mensajes que hemos visto. El Listado 15-22 muestra c&amp;oacute;mo se ve:</target>
        </trans-unit>
        <trans-unit id="871d091695de2003c7e2185527248e9604155d93" translate="yes" xml:space="preserve">
          <source>This is a syntax error at the level of attribute declarations. The proper syntax for &lt;code&gt;align&lt;/code&gt; representation hint is the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e698a362ad50285269b0f450993154391ed3fb9c" translate="yes" xml:space="preserve">
          <source>This is a syntax error at the level of attribute declarations. The proper syntax for macro imports is the following:</source>
          <target state="translated">Se trata de un error de sintaxis a nivel de declaraciones de atributos.La sintaxis adecuada para las importaciones de macros es la siguiente:</target>
        </trans-unit>
        <trans-unit id="7207d1f263b95ee330100ad60d168c6bbd00e341" translate="yes" xml:space="preserve">
          <source>This is a very simple case, of course. In more complex cases, we may wish to have more than one reference to the value that was borrowed -- in those cases, something like the &lt;code&gt;Rc&lt;/code&gt; or &lt;code&gt;Arc&lt;/code&gt; types may be useful.</source>
          <target state="translated">Este es un caso muy simple, por supuesto. En casos m&amp;aacute;s complejos, es posible que deseemos tener m&amp;aacute;s de una referencia al valor que se tom&amp;oacute; prestado; en esos casos, algo como los tipos &lt;code&gt;Rc&lt;/code&gt; o &lt;code&gt;Arc&lt;/code&gt; puede ser &amp;uacute;til.</target>
        </trans-unit>
        <trans-unit id="795aa426a1aadc3299f800d117f15424e179c91c" translate="yes" xml:space="preserve">
          <source>This is a wrapper around a kind of pointer which makes that pointer &quot;pin&quot; its value in place, preventing the value referenced by that pointer from being moved unless it implements &lt;a href=&quot;../marker/trait.unpin&quot;&gt;&lt;code&gt;Unpin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Este es un envoltorio alrededor de una especie de puntero que hace que ese puntero &quot;fije&quot; su valor en su lugar, evitando que el valor al que hace referencia ese puntero se mueva a menos que implemente &lt;a href=&quot;../marker/trait.unpin&quot;&gt; &lt;code&gt;Unpin&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="40cc1dd050d81853f1d6473844a8f5105ed4ba71" translate="yes" xml:space="preserve">
          <source>This is also available via &lt;a href=&quot;../convert/trait.from&quot;&gt;&lt;code&gt;From&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n est&amp;aacute; disponible a trav&amp;eacute;s de &lt;a href=&quot;../convert/trait.from&quot;&gt; &lt;code&gt;From&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="69c7de76e4d6cac4ead699615a01132090109223" translate="yes" xml:space="preserve">
          <source>This is an &lt;code&gt;O(n)&lt;/code&gt; operation as it requires copying every element in the buffer.</source>
          <target state="translated">Esta es una operaci&amp;oacute;n &lt;code&gt;O(n)&lt;/code&gt; ya que requiere copiar cada elemento en el b&amp;uacute;fer.</target>
        </trans-unit>
        <trans-unit id="7714852846e41026b7148ab604a67c761a44e811" translate="yes" xml:space="preserve">
          <source>This is an &lt;code&gt;O(n)&lt;/code&gt; operation, as it requires copying every element in the buffer.</source>
          <target state="translated">Esta es una operaci&amp;oacute;n &lt;code&gt;O(n)&lt;/code&gt; , ya que requiere copiar cada elemento en el b&amp;uacute;fer.</target>
        </trans-unit>
        <trans-unit id="0851cea6a2c1ead7bc3e7afcac1e76a989dd5af9" translate="yes" xml:space="preserve">
          <source>This is an &lt;em&gt;O&lt;/em&gt;(&lt;em&gt;n&lt;/em&gt;) operation as it requires copying every element in the buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebfdb05e0c25e262e85513236d16ce28096eaa2c" translate="yes" xml:space="preserve">
          <source>This is an &lt;em&gt;O&lt;/em&gt;(&lt;em&gt;n&lt;/em&gt;) operation, as it requires copying every element in the buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7773930b7607b5b74b44eb47accc2cfca7d33e4" translate="yes" xml:space="preserve">
          <source>This is an &lt;em&gt;unsized&lt;/em&gt; type, meaning that it must always be used behind a pointer like &lt;code&gt;&amp;amp;&lt;/code&gt; or &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;. For an owned version of this type, see &lt;a href=&quot;struct.pathbuf&quot;&gt;&lt;code&gt;PathBuf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Este es un tipo sin &lt;em&gt;tama&amp;ntilde;o&lt;/em&gt; , lo que significa que siempre debe usarse detr&amp;aacute;s de un puntero como &lt;code&gt;&amp;amp;&lt;/code&gt; o &lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; . Para obtener una versi&amp;oacute;n propia de este tipo, consulte &lt;a href=&quot;struct.pathbuf&quot;&gt; &lt;code&gt;PathBuf&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ae5b715f0a76526280a5abae050e91bd520680ba" translate="yes" xml:space="preserve">
          <source>This is an absolute path starting with &lt;code&gt;std&lt;/code&gt;, the name of the standard library crate.</source>
          <target state="translated">Esta es una ruta absoluta que comienza con &lt;code&gt;std&lt;/code&gt; , el nombre de la caja de la biblioteca est&amp;aacute;ndar.</target>
        </trans-unit>
        <trans-unit id="fb3851cbc0fb3af560d20b0226cbd7a0adc72483" translate="yes" xml:space="preserve">
          <source>This is an alias to &lt;a href=&quot;../fs/fn.canonicalize&quot;&gt;&lt;code&gt;fs::canonicalize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Este es un alias para &lt;a href=&quot;../fs/fn.canonicalize&quot;&gt; &lt;code&gt;fs::canonicalize&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ccff757092656f4cd5645f893d07b3a2270144b9" translate="yes" xml:space="preserve">
          <source>This is an alias to &lt;a href=&quot;../fs/fn.metadata&quot;&gt;&lt;code&gt;fs::metadata&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Este es un alias para &lt;a href=&quot;../fs/fn.metadata&quot;&gt; &lt;code&gt;fs::metadata&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fe9cf4a133a88b8bc470c4394f4eb8cf3b306e68" translate="yes" xml:space="preserve">
          <source>This is an alias to &lt;a href=&quot;../fs/fn.read_dir&quot;&gt;&lt;code&gt;fs::read_dir&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Este es un alias para &lt;a href=&quot;../fs/fn.read_dir&quot;&gt; &lt;code&gt;fs::read_dir&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f461dafd60906d9babd38850b381951321bafa0a" translate="yes" xml:space="preserve">
          <source>This is an alias to &lt;a href=&quot;../fs/fn.read_link&quot;&gt;&lt;code&gt;fs::read_link&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Este es un alias para &lt;a href=&quot;../fs/fn.read_link&quot;&gt; &lt;code&gt;fs::read_link&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8a772f821d093dc45f53501fe5deb3218dd74356" translate="yes" xml:space="preserve">
          <source>This is an alias to &lt;a href=&quot;../fs/fn.symlink_metadata&quot;&gt;&lt;code&gt;fs::symlink_metadata&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Este es un alias para &lt;a href=&quot;../fs/fn.symlink_metadata&quot;&gt; &lt;code&gt;fs::symlink_metadata&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d34ac7564172d2ff8117857aff9df3320c42fae5" translate="yes" xml:space="preserve">
          <source>This is an associated function that needs to be used as &lt;code&gt;Ref::clone(...)&lt;/code&gt;. A &lt;code&gt;Clone&lt;/code&gt; implementation or a method would interfere with the widespread use of &lt;code&gt;r.borrow().clone()&lt;/code&gt; to clone the contents of a &lt;code&gt;RefCell&lt;/code&gt;.</source>
          <target state="translated">Esta es una funci&amp;oacute;n asociada que debe usarse como &lt;code&gt;Ref::clone(...)&lt;/code&gt; . Una implementaci&amp;oacute;n &lt;code&gt;Clone&lt;/code&gt; o un m&amp;eacute;todo interferir&amp;iacute;a con el uso generalizado de &lt;code&gt;r.borrow().clone()&lt;/code&gt; para clonar el contenido de una &lt;code&gt;RefCell&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0de597cdfc25d4b695eb376a8a0838157803d015" translate="yes" xml:space="preserve">
          <source>This is an associated function that needs to be used as &lt;code&gt;Ref::leak(...)&lt;/code&gt;. A method would interfere with methods of the same name on the contents of a &lt;code&gt;RefCell&lt;/code&gt; used through &lt;code&gt;Deref&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f83e3e547dadb3f845f93bfeaf6231ee030e91c8" translate="yes" xml:space="preserve">
          <source>This is an associated function that needs to be used as &lt;code&gt;Ref::map(...)&lt;/code&gt;. A method would interfere with methods of the same name on the contents of a &lt;code&gt;RefCell&lt;/code&gt; used through &lt;code&gt;Deref&lt;/code&gt;.</source>
          <target state="translated">Esta es una funci&amp;oacute;n asociada que debe usarse como &lt;code&gt;Ref::map(...)&lt;/code&gt; . Un m&amp;eacute;todo interferir&amp;iacute;a con m&amp;eacute;todos del mismo nombre en el contenido de una &lt;code&gt;RefCell&lt;/code&gt; utilizada a trav&amp;eacute;s de &lt;code&gt;Deref&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f18aedd0b02030c35b1012078adf973833d874e" translate="yes" xml:space="preserve">
          <source>This is an associated function that needs to be used as &lt;code&gt;Ref::map_split(...)&lt;/code&gt;. A method would interfere with methods of the same name on the contents of a &lt;code&gt;RefCell&lt;/code&gt; used through &lt;code&gt;Deref&lt;/code&gt;.</source>
          <target state="translated">Esta es una funci&amp;oacute;n asociada que debe usarse como &lt;code&gt;Ref::map_split(...)&lt;/code&gt; . Un m&amp;eacute;todo interferir&amp;iacute;a con m&amp;eacute;todos del mismo nombre en el contenido de una &lt;code&gt;RefCell&lt;/code&gt; utilizada a trav&amp;eacute;s de &lt;code&gt;Deref&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b9124c09eb61044a9051beed91e77bd6ffcbf176" translate="yes" xml:space="preserve">
          <source>This is an associated function that needs to be used as &lt;code&gt;RefMut::leak(...)&lt;/code&gt;. A method would interfere with methods of the same name on the contents of a &lt;code&gt;RefCell&lt;/code&gt; used through &lt;code&gt;Deref&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14ab5139ea01a60d2224bebc358fd7f5a09aee7b" translate="yes" xml:space="preserve">
          <source>This is an associated function that needs to be used as &lt;code&gt;RefMut::map(...)&lt;/code&gt;. A method would interfere with methods of the same name on the contents of a &lt;code&gt;RefCell&lt;/code&gt; used through &lt;code&gt;Deref&lt;/code&gt;.</source>
          <target state="translated">Esta es una funci&amp;oacute;n asociada que debe usarse como &lt;code&gt;RefMut::map(...)&lt;/code&gt; . Un m&amp;eacute;todo interferir&amp;iacute;a con m&amp;eacute;todos del mismo nombre en el contenido de una &lt;code&gt;RefCell&lt;/code&gt; utilizada a trav&amp;eacute;s de &lt;code&gt;Deref&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="202f23e551bc61ba34f51a486b60ddfce30150ab" translate="yes" xml:space="preserve">
          <source>This is an associated function that needs to be used as &lt;code&gt;RefMut::map_split(...)&lt;/code&gt;. A method would interfere with methods of the same name on the contents of a &lt;code&gt;RefCell&lt;/code&gt; used through &lt;code&gt;Deref&lt;/code&gt;.</source>
          <target state="translated">Esta es una funci&amp;oacute;n asociada que debe usarse como &lt;code&gt;RefMut::map_split(...)&lt;/code&gt; . Un m&amp;eacute;todo interferir&amp;iacute;a con m&amp;eacute;todos del mismo nombre en el contenido de una &lt;code&gt;RefCell&lt;/code&gt; utilizada a trav&amp;eacute;s de &lt;code&gt;Deref&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb3bd037be08bb82591900e7ddf468637a2b8c80" translate="yes" xml:space="preserve">
          <source>This is appropriate for initializing uninitialized memory, or overwriting memory that has previously been &lt;a href=&quot;fn.read&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; from.</source>
          <target state="translated">Esto es apropiado para inicializar la memoria no inicializada o sobrescribir la memoria que se ha &lt;a href=&quot;fn.read&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt; previamente .</target>
        </trans-unit>
        <trans-unit id="856709efbf0ee049257184bc9760c0b3d18a43eb" translate="yes" xml:space="preserve">
          <source>This is appropriate for initializing uninitialized memory, or overwriting memory that has previously been read with &lt;a href=&quot;fn.read_unaligned&quot;&gt;&lt;code&gt;read_unaligned&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esto es apropiado para inicializar la memoria no inicializada o sobrescribir la memoria que se ha le&amp;iacute;do previamente con &lt;a href=&quot;fn.read_unaligned&quot;&gt; &lt;code&gt;read_unaligned&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9049d14f9f0cb6f47694e4f8dd6256baa32e595c" translate="yes" xml:space="preserve">
          <source>This is based on &lt;code&gt;malloc&lt;/code&gt; on Unix platforms and &lt;code&gt;HeapAlloc&lt;/code&gt; on Windows, plus related functions.</source>
          <target state="translated">Esto se basa en &lt;code&gt;malloc&lt;/code&gt; en plataformas Unix y &lt;code&gt;HeapAlloc&lt;/code&gt; en Windows, adem&amp;aacute;s de funciones relacionadas.</target>
        </trans-unit>
        <trans-unit id="d9e17b1971fcc8ebac923ca9bdcdbe86fd7ccc27" translate="yes" xml:space="preserve">
          <source>This is because &lt;code&gt;AddAssign&lt;/code&gt; is not automatically implemented, so you need to manually implement it for your type.</source>
          <target state="translated">Esto se debe a que &lt;code&gt;AddAssign&lt;/code&gt; no se implementa autom&amp;aacute;ticamente, por lo que debe implementarlo manualmente para su tipo.</target>
        </trans-unit>
        <trans-unit id="5c0cfc8e697e9e04f2ac8988522860bd36ed371a" translate="yes" xml:space="preserve">
          <source>This is because cell types do operations that are not thread-safe. Due to this, they don't implement Sync and thus can't be placed in statics.</source>
          <target state="translated">Esto se debe a que los tipos de células realizan operaciones que no son seguras para los hilos.Debido a esto,no implementan la sincronización y por lo tanto no pueden ser colocados en estática.</target>
        </trans-unit>
        <trans-unit id="43247ccf0e7189f6826d62c195b63176c827f652" translate="yes" xml:space="preserve">
          <source>This is because of a type mismatch between the associated type of some trait (e.g., &lt;code&gt;T::Bar&lt;/code&gt;, where &lt;code&gt;T&lt;/code&gt; implements &lt;code&gt;trait Quux { type Bar; }&lt;/code&gt;) and another type &lt;code&gt;U&lt;/code&gt; that is required to be equal to &lt;code&gt;T::Bar&lt;/code&gt;, but is not. Examples follow.</source>
          <target state="translated">Esto se debe a una discrepancia de tipos entre el tipo asociado de alg&amp;uacute;n rasgo (por ejemplo, &lt;code&gt;T::Bar&lt;/code&gt; , donde &lt;code&gt;T&lt;/code&gt; implementa el &lt;code&gt;trait Quux { type Bar; }&lt;/code&gt; ) y otro tipo &lt;code&gt;U&lt;/code&gt; que debe ser igual a &lt;code&gt;T::Bar&lt;/code&gt; , pero no es. A continuaci&amp;oacute;n se muestran algunos ejemplos.</target>
        </trans-unit>
        <trans-unit id="0e543293d9c4cb900df2afb34a1c801950192149" translate="yes" xml:space="preserve">
          <source>This is because there could exist &lt;code&gt;V&lt;/code&gt; types with multiple &lt;code&gt;Borrow&amp;lt;[_]&amp;gt;&lt;/code&gt; impls, such that multiple &lt;code&gt;T&lt;/code&gt; types would apply:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a641717e833808f9f0bc4f5f362a54b6a1faff5b" translate="yes" xml:space="preserve">
          <source>This is borrow-generalized version of &lt;code&gt;Clone::clone_from&lt;/code&gt;.</source>
          <target state="translated">Esta es la versi&amp;oacute;n generalizada prestada de &lt;code&gt;Clone::clone_from&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="834216017331c86ca1e125eb990783c9079a99f6" translate="yes" xml:space="preserve">
          <source>This is called the &amp;ldquo;train model&amp;rdquo; because every six weeks, a release &amp;ldquo;leaves the station&amp;rdquo;, but still has to take a journey through the beta channel before it arrives as a stable release.</source>
          <target state="translated">A esto se le llama el &quot;modelo de tren&quot; porque cada seis semanas, una versi&amp;oacute;n &quot;sale de la estaci&amp;oacute;n&quot;, pero a&amp;uacute;n tiene que hacer un viaje a trav&amp;eacute;s del canal beta antes de llegar como una versi&amp;oacute;n estable.</target>
        </trans-unit>
        <trans-unit id="d83e7e82097d376958eb95d5e51d98e6719f2542" translate="yes" xml:space="preserve">
          <source>This is catastrophic, it means we can first pin the content of the &lt;a href=&quot;../cell/struct.refcell&quot;&gt;&lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; (using &lt;code&gt;RefCell::get_pin_mut&lt;/code&gt;) and then move that content using the mutable reference we got later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e339d64ba30c9973394f6282049233c7be4f71" translate="yes" xml:space="preserve">
          <source>This is catastrophic, it means we can first pin the content of the &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; (using &lt;code&gt;RefCell::get_pin_mut&lt;/code&gt;) and then move that content using the mutable reference we got later.</source>
          <target state="translated">Esto es catastr&amp;oacute;fico, significa que primero podemos anclar el contenido de &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; (usando &lt;code&gt;RefCell::get_pin_mut&lt;/code&gt; ) y luego mover ese contenido usando la referencia mutable que obtuvimos m&amp;aacute;s tarde.</target>
        </trans-unit>
        <trans-unit id="9ed19556018375489742916bfb6ea73b08918fbf" translate="yes" xml:space="preserve">
          <source>This is commonly used to adapt a single value generator into a &lt;a href=&quot;trait.iterator#method.chain&quot;&gt;&lt;code&gt;chain()&lt;/code&gt;&lt;/a&gt; of other kinds of iteration. Maybe you have an iterator that covers almost everything, but you need an extra special case. Maybe you have a function which works on iterators, but you only need to process one value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67913f9219472099fcca84773f5f227006ffbcce" translate="yes" xml:space="preserve">
          <source>This is commonly used to adapt a single value generator into a &lt;a href=&quot;trait.iterator#method.chain&quot;&gt;&lt;code&gt;chain&lt;/code&gt;&lt;/a&gt; of other kinds of iteration. Maybe you have an iterator that covers almost everything, but you need an extra special case. Maybe you have a function which works on iterators, but you only need to process one value.</source>
          <target state="translated">Esto se usa com&amp;uacute;nmente para adaptar un generador de valor &amp;uacute;nico en una &lt;a href=&quot;trait.iterator#method.chain&quot;&gt; &lt;code&gt;chain&lt;/code&gt; &lt;/a&gt; de otros tipos de iteraci&amp;oacute;n. Tal vez tenga un iterador que cubra casi todo, pero necesita un caso especial adicional. Tal vez tenga una funci&amp;oacute;n que funcione en iteradores, pero solo necesita procesar un valor.</target>
        </trans-unit>
        <trans-unit id="507d399d0caa748ec0f687d63827f62d38ea93b1" translate="yes" xml:space="preserve">
          <source>This is commonly used to adapt a single value into a &lt;a href=&quot;trait.iterator#method.chain&quot;&gt;&lt;code&gt;chain()&lt;/code&gt;&lt;/a&gt; of other kinds of iteration. Maybe you have an iterator that covers almost everything, but you need an extra special case. Maybe you have a function which works on iterators, but you only need to process one value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="764e0240ad7ec9a9585ed8305ceb8e8099f2723d" translate="yes" xml:space="preserve">
          <source>This is commonly used to adapt a single value into a &lt;a href=&quot;trait.iterator#method.chain&quot;&gt;&lt;code&gt;chain&lt;/code&gt;&lt;/a&gt; of other kinds of iteration. Maybe you have an iterator that covers almost everything, but you need an extra special case. Maybe you have a function which works on iterators, but you only need to process one value.</source>
          <target state="translated">Esto se usa com&amp;uacute;nmente para adaptar un valor &amp;uacute;nico en una &lt;a href=&quot;trait.iterator#method.chain&quot;&gt; &lt;code&gt;chain&lt;/code&gt; &lt;/a&gt; de otros tipos de iteraciones. Tal vez tenga un iterador que cubra casi todo, pero necesita un caso especial adicional. Tal vez tenga una funci&amp;oacute;n que funcione en iteradores, pero solo necesita procesar un valor.</target>
        </trans-unit>
        <trans-unit id="f239b530d28c30ec1070f1658b16620a287e3251" translate="yes" xml:space="preserve">
          <source>This is correct (explicit):</source>
          <target state="translated">Esto es correcto (explícito):</target>
        </trans-unit>
        <trans-unit id="7d6342cfa6f9200a801992dcf925b5cee5be4a5b" translate="yes" xml:space="preserve">
          <source>This is currently identical to &lt;code&gt;transmute::&amp;lt;f32, u32&amp;gt;(self)&lt;/code&gt; on all platforms.</source>
          <target state="translated">Esto es actualmente id&amp;eacute;ntico a &lt;code&gt;transmute::&amp;lt;f32, u32&amp;gt;(self)&lt;/code&gt; en todas las plataformas.</target>
        </trans-unit>
        <trans-unit id="a48f92d085d1c5423be432a065e6504acd5a4a36" translate="yes" xml:space="preserve">
          <source>This is currently identical to &lt;code&gt;transmute::&amp;lt;f64, u64&amp;gt;(self)&lt;/code&gt; on all platforms.</source>
          <target state="translated">Actualmente es id&amp;eacute;ntico a &lt;code&gt;transmute::&amp;lt;f64, u64&amp;gt;(self)&lt;/code&gt; en todas las plataformas.</target>
        </trans-unit>
        <trans-unit id="918c5990ef12f35794f26c0b83e42a5d2ef0c694" translate="yes" xml:space="preserve">
          <source>This is currently identical to &lt;code&gt;transmute::&amp;lt;u32, f32&amp;gt;(v)&lt;/code&gt; on all platforms. It turns out this is incredibly portable, for two reasons:</source>
          <target state="translated">Actualmente es id&amp;eacute;ntico a &lt;code&gt;transmute::&amp;lt;u32, f32&amp;gt;(v)&lt;/code&gt; en todas las plataformas. Resulta que esto es incre&amp;iacute;blemente port&amp;aacute;til, por dos razones:</target>
        </trans-unit>
        <trans-unit id="00309d71e504692e129d008c7a1eff96961c44fc" translate="yes" xml:space="preserve">
          <source>This is currently identical to &lt;code&gt;transmute::&amp;lt;u64, f64&amp;gt;(v)&lt;/code&gt; on all platforms. It turns out this is incredibly portable, for two reasons:</source>
          <target state="translated">Actualmente es id&amp;eacute;ntico a &lt;code&gt;transmute::&amp;lt;u64, f64&amp;gt;(v)&lt;/code&gt; en todas las plataformas. Resulta que esto es incre&amp;iacute;blemente port&amp;aacute;til, por dos razones:</target>
        </trans-unit>
        <trans-unit id="de7179edea4813efbd79fdfefd23f0fcc07d0700" translate="yes" xml:space="preserve">
          <source>This is defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc5737&quot;&gt;IETF RFC 5737&lt;/a&gt;:</source>
          <target state="translated">Esto se define en &lt;a href=&quot;https://tools.ietf.org/html/rfc5737&quot;&gt;IETF RFC 5737&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="59a6ad6e6ae513088e0c1bb8ed9888b474a9dbba" translate="yes" xml:space="preserve">
          <source>This is designed to be used in conjunction with &lt;a href=&quot;fn.catch_unwind&quot;&gt;&lt;code&gt;catch_unwind&lt;/code&gt;&lt;/a&gt; to, for example, carry a panic across a layer of C code.</source>
          <target state="translated">Esto est&amp;aacute; dise&amp;ntilde;ado para usarse junto con &lt;a href=&quot;fn.catch_unwind&quot;&gt; &lt;code&gt;catch_unwind&lt;/code&gt; &lt;/a&gt; para, por ejemplo, llevar un p&amp;aacute;nico a trav&amp;eacute;s de una capa de c&amp;oacute;digo C.</target>
        </trans-unit>
        <trans-unit id="5fdeff8202418046160b5ede029f4ae17e4cb706" translate="yes" xml:space="preserve">
          <source>This is different than the &lt;code&gt;C&lt;/code&gt; representation because a struct with the &lt;code&gt;C&lt;/code&gt; representation will always have the ABI of a &lt;code&gt;C&lt;/code&gt;&lt;code&gt;struct&lt;/code&gt; while, for example, a struct with the &lt;code&gt;transparent&lt;/code&gt; representation with a primitive field will have the ABI of the primitive field.</source>
          <target state="translated">Esto es diferente a la representaci&amp;oacute;n en &lt;code&gt;C&lt;/code&gt; porque una estructura con la representaci&amp;oacute;n en &lt;code&gt;C&lt;/code&gt; siempre tendr&amp;aacute; el ABI de una &lt;code&gt;struct&lt;/code&gt; &lt;code&gt;C&lt;/code&gt; mientras que, por ejemplo, una estructura con la representaci&amp;oacute;n &lt;code&gt;transparent&lt;/code&gt; e con un campo primitivo tendr&amp;aacute; el ABI del campo primitivo.</target>
        </trans-unit>
        <trans-unit id="f40a48629593c80076df828df6524a31bbb5832c" translate="yes" xml:space="preserve">
          <source>This is done as if by the Euclidean division algorithm -- given &lt;code&gt;r = self.rem_euclid(rhs)&lt;/code&gt;, &lt;code&gt;self = rhs * self.div_euclid(rhs) + r&lt;/code&gt;, and &lt;code&gt;0 &amp;lt;= r &amp;lt; abs(rhs)&lt;/code&gt;.</source>
          <target state="translated">Esto se hace como si lo hiciera el algoritmo de divisi&amp;oacute;n euclidiana, dado &lt;code&gt;r = self.rem_euclid(rhs)&lt;/code&gt; , &lt;code&gt;self = rhs * self.div_euclid(rhs) + r&lt;/code&gt; , y &lt;code&gt;0 &amp;lt;= r &amp;lt; abs(rhs)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="261341fb7dbde0853cc1e229f30dada63a712ac0" translate="yes" xml:space="preserve">
          <source>This is enforced by the Rust compiler. However, there are situations where this rule is not flexible enough. Sometimes it is required to have multiple references to an object and yet mutate it.</source>
          <target state="translated">Esto lo hace el compilador de óxido.Sin embargo,hay situaciones en las que esta regla no es lo suficientemente flexible.A veces se requiere tener múltiples referencias a un objeto y aún así mutarlo.</target>
        </trans-unit>
        <trans-unit id="1a48a3285621637ef35ee331d4de4979ad866379" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;self.seek(SeekFrom::Current(0))&lt;/code&gt;.</source>
          <target state="translated">Esto es equivalente a &lt;code&gt;self.seek(SeekFrom::Current(0))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea3c08c47d3f2c239e1b0612d35fd093489ce76f" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;to_ascii_lowercase(a) == to_ascii_lowercase(b)&lt;/code&gt;.</source>
          <target state="translated">Esto es equivalente a &lt;code&gt;to_ascii_lowercase(a) == to_ascii_lowercase(b)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a97a7d1bcb8cd7cc77582edff43cedf5b5f9e7ec" translate="yes" xml:space="preserve">
          <source>This is equivalent to adding the result of &lt;code&gt;padding_needed_for&lt;/code&gt; to the layout's current size.</source>
          <target state="translated">Esto es equivalente a agregar el resultado de &lt;code&gt;padding_needed_for&lt;/code&gt; al tama&amp;ntilde;o actual del dise&amp;ntilde;o.</target>
        </trans-unit>
        <trans-unit id="cd40c4706f12ddab3deeab19ddffb1056c56c24a" translate="yes" xml:space="preserve">
          <source>This is equivalent to casting &lt;code&gt;self&lt;/code&gt; to &lt;code&gt;*const T&lt;/code&gt;, but more type-safe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1cc6c65ebdd0a382483c4dc8c7f13d29cc10dc3" translate="yes" xml:space="preserve">
          <source>This is equivalent to casting &lt;code&gt;self&lt;/code&gt; to &lt;code&gt;*mut T&lt;/code&gt;, but more type-safe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6cc1d085b275d07a515f10b6c1293ccce68e246" translate="yes" xml:space="preserve">
          <source>This is equivalent to sending a SIGKILL on Unix platforms.</source>
          <target state="translated">Esto equivale a enviar un SIGKILL en plataformas Unix.</target>
        </trans-unit>
        <trans-unit id="f985a290d8b35439e1509532b1f307ab14186afb" translate="yes" xml:space="preserve">
          <source>This is equivalent to the &lt;code&gt;Deref&lt;/code&gt; impl, but is explicit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb80b753a6a285f62ca3be46d0ca7ebb71f7211" translate="yes" xml:space="preserve">
          <source>This is equivalent to using a &lt;a href=&quot;../../book/ch03-05-control-flow#looping-through-a-collection-with-for&quot;&gt;&lt;code&gt;for&lt;/code&gt;&lt;/a&gt; loop on the iterator, although &lt;code&gt;break&lt;/code&gt; and &lt;code&gt;continue&lt;/code&gt; are not possible from a closure. It's generally more idiomatic to use a &lt;code&gt;for&lt;/code&gt; loop, but &lt;code&gt;for_each&lt;/code&gt; may be more legible when processing items at the end of longer iterator chains. In some cases &lt;code&gt;for_each&lt;/code&gt; may also be faster than a loop, because it will use internal iteration on adaptors like &lt;code&gt;Chain&lt;/code&gt;.</source>
          <target state="translated">Esto es equivalente a usar un bucle &lt;a href=&quot;../../book/ch03-05-control-flow#looping-through-a-collection-with-for&quot;&gt; &lt;code&gt;for&lt;/code&gt; &lt;/a&gt; en el iterador, aunque no es posible &lt;code&gt;break&lt;/code&gt; y &lt;code&gt;continue&lt;/code&gt; desde un cierre. Por lo general, es m&amp;aacute;s idiom&amp;aacute;tico usar un bucle &lt;code&gt;for&lt;/code&gt; , pero &lt;code&gt;for_each&lt;/code&gt; puede ser m&amp;aacute;s legible cuando se procesan elementos al final de cadenas de iteradores m&amp;aacute;s largas. En algunos casos, &lt;code&gt;for_each&lt;/code&gt; tambi&amp;eacute;n puede ser m&amp;aacute;s r&amp;aacute;pido que un bucle, porque usar&amp;aacute; iteraci&amp;oacute;n interna en adaptadores como &lt;code&gt;Chain&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="85aa708c3c4c286a53847d7118e6789eccd018b1" translate="yes" xml:space="preserve">
          <source>This is essentially the reversed version of &lt;a href=&quot;trait.iterator#method.nth&quot;&gt;&lt;code&gt;Iterator::nth()&lt;/code&gt;&lt;/a&gt;. Although like most indexing operations, the count starts from zero, so &lt;code&gt;nth_back(0)&lt;/code&gt; returns the first value from the end, &lt;code&gt;nth_back(1)&lt;/code&gt; the second, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d5fc7a87669eb5a575d2a14569feb14339d998c" translate="yes" xml:space="preserve">
          <source>This is essentially the reversed version of &lt;a href=&quot;trait.iterator#method.nth&quot;&gt;&lt;code&gt;nth&lt;/code&gt;&lt;/a&gt;. Although like most indexing operations, the count starts from zero, so &lt;code&gt;nth_back(0)&lt;/code&gt; returns the first value fro the end, &lt;code&gt;nth_back(1)&lt;/code&gt; the second, and so on.</source>
          <target state="translated">Esta es esencialmente la versi&amp;oacute;n inversa de &lt;a href=&quot;trait.iterator#method.nth&quot;&gt; &lt;code&gt;nth&lt;/code&gt; &lt;/a&gt; . Aunque como la mayor&amp;iacute;a de las operaciones de indexaci&amp;oacute;n, el recuento comienza desde cero, entonces &lt;code&gt;nth_back(0)&lt;/code&gt; devuelve el primer valor del final, &lt;code&gt;nth_back(1)&lt;/code&gt; el segundo, y as&amp;iacute; sucesivamente.</target>
        </trans-unit>
        <trans-unit id="da357ed847b3be924604524d54de90650dc840c5" translate="yes" xml:space="preserve">
          <source>This is exactly the kind of guarantee that the intrusive linked list from the previous section needs to function correctly.</source>
          <target state="translated">Este es exactamente el tipo de garantía que la lista de enlaces intrusivos de la sección anterior necesita para funcionar correctamente.</target>
        </trans-unit>
        <trans-unit id="bb45c58beba541079b29f983c2bd8c56db26b71e" translate="yes" xml:space="preserve">
          <source>This is exploited by the compiler for various optimizations, such as eliding run-time checks and optimizing &lt;code&gt;enum&lt;/code&gt; layout.</source>
          <target state="translated">El compilador explota esto para varias optimizaciones, como eludir las comprobaciones en tiempo de ejecuci&amp;oacute;n y optimizar el dise&amp;ntilde;o de &lt;code&gt;enum&lt;/code&gt; eraci&amp;oacute;n .</target>
        </trans-unit>
        <trans-unit id="2800cba431c3f0317ff7290328c22feda7e8a245" translate="yes" xml:space="preserve">
          <source>This is fixed by declaring the impl block like this:</source>
          <target state="translated">Esto se arregla declarando el bloque implícito de esta manera:</target>
        </trans-unit>
        <trans-unit id="7800b5b60ece10a2bb3977b34790a457f9ba1d9b" translate="yes" xml:space="preserve">
          <source>This is generally created by methods like &lt;a href=&quot;struct.mutex#method.lock&quot;&gt;&lt;code&gt;Mutex::lock&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;struct.rwlock#method.read&quot;&gt;&lt;code&gt;RwLock::read&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esto generalmente se crea mediante m&amp;eacute;todos como &lt;a href=&quot;struct.mutex#method.lock&quot;&gt; &lt;code&gt;Mutex::lock&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;struct.rwlock#method.read&quot;&gt; &lt;code&gt;RwLock::read&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d04e3acde7f8ef92dfb6b7b52b3e3c3811cad1e0" translate="yes" xml:space="preserve">
          <source>This is generally not recommended, use with caution! For a safe alternative see &lt;a href=&quot;#method.get&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esto generalmente no se recomienda, &amp;iexcl;util&amp;iacute;celo con precauci&amp;oacute;n! Para obtener una alternativa segura, consulte &lt;a href=&quot;#method.get&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4bd5c92d6bc3bc69b3d544b464184377050cce05" translate="yes" xml:space="preserve">
          <source>This is generally not recommended, use with caution! For a safe alternative see &lt;a href=&quot;#method.get_mut&quot;&gt;&lt;code&gt;get_mut&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esto generalmente no se recomienda, &amp;iexcl;util&amp;iacute;celo con precauci&amp;oacute;n! Para obtener una alternativa segura, consulte &lt;a href=&quot;#method.get_mut&quot;&gt; &lt;code&gt;get_mut&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1be3a48c43f2cbe9f66bb8b317aa83c1345f1b36" translate="yes" xml:space="preserve">
          <source>This is generally not recommended, use with caution! For a safe alternative see &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ops/trait.index&quot;&gt;&lt;code&gt;Index&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f2e569769a80d9853e1327c13dd3289346f0be" translate="yes" xml:space="preserve">
          <source>This is generally not recommended, use with caution! For a safe alternative see &lt;a href=&quot;primitive.str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;ops/trait.index&quot;&gt;&lt;code&gt;Index&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esto generalmente no se recomienda, &amp;iexcl;util&amp;iacute;celo con precauci&amp;oacute;n! Para obtener una alternativa segura, consulte &lt;a href=&quot;primitive.str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; e &lt;a href=&quot;ops/trait.index&quot;&gt; &lt;code&gt;Index&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5835397a3648f1790072b1697b1686de073dd8a5" translate="yes" xml:space="preserve">
          <source>This is highly unsafe, due to the number of invariants that aren't checked:</source>
          <target state="translated">Esto es muy inseguro,debido al número de invariantes que no se comprueban:</target>
        </trans-unit>
        <trans-unit id="75907ab0f8297b43f4704528d57293015e32b770" translate="yes" xml:space="preserve">
          <source>This is implemented as an intrinsic to avoid converting to and from an integer, since the conversion inhibits certain optimizations.</source>
          <target state="translated">Esto se implementa como algo intrínseco para evitar la conversión a y desde un entero,ya que la conversión inhibe ciertas optimizaciones.</target>
        </trans-unit>
        <trans-unit id="11f5a22e0c8092b2e830a298d3f000dd528e1ac9" translate="yes" xml:space="preserve">
          <source>This is implemented as an intrinsic to avoid converting to and from an integer, since the conversion would throw away aliasing information.</source>
          <target state="translated">Esto se implementa como algo intrínseco para evitar la conversión hacia y desde un número entero,ya que la conversión tiraría la información de alias.</target>
        </trans-unit>
        <trans-unit id="0d148f9608c961194f7d8d82b9462e528bb48245" translate="yes" xml:space="preserve">
          <source>This is in contrast to the default behaviour of &lt;a href=&quot;../macro.panic&quot;&gt;&lt;code&gt;panic!&lt;/code&gt;&lt;/a&gt; which unwinds the current thread's stack and calls all destructors. When &lt;code&gt;panic=&quot;abort&quot;&lt;/code&gt; is set, either as an argument to &lt;code&gt;rustc&lt;/code&gt; or in a crate's Cargo.toml, &lt;a href=&quot;../macro.panic&quot;&gt;&lt;code&gt;panic!&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;abort&lt;/code&gt; are similar. However, &lt;a href=&quot;../macro.panic&quot;&gt;&lt;code&gt;panic!&lt;/code&gt;&lt;/a&gt; will still call the &lt;a href=&quot;../panic/fn.set_hook&quot;&gt;panic hook&lt;/a&gt; while &lt;code&gt;abort&lt;/code&gt; will not.</source>
          <target state="translated">Esto contrasta con el comportamiento predeterminado del &lt;a href=&quot;../macro.panic&quot;&gt; &lt;code&gt;panic!&lt;/code&gt; &lt;/a&gt;que desenrolla la pila del hilo actual y llama a todos los destructores. Cuando se establece &lt;code&gt;panic=&quot;abort&quot;&lt;/code&gt; , ya sea como un argumento para &lt;code&gt;rustc&lt;/code&gt; o en el Cargo.toml de una caja, &lt;a href=&quot;../macro.panic&quot;&gt; &lt;code&gt;panic!&lt;/code&gt; &lt;/a&gt;y &lt;code&gt;abort&lt;/code&gt; ar son similares. Sin embargo, &lt;a href=&quot;../macro.panic&quot;&gt; &lt;code&gt;panic!&lt;/code&gt; &lt;/a&gt;seguir&amp;aacute; llamando al &lt;a href=&quot;../panic/fn.set_hook&quot;&gt;gancho de p&amp;aacute;nico&lt;/a&gt; mientras que &lt;code&gt;abort&lt;/code&gt; ar no lo har&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="4ae8371c0715e2fc1f945296e51fa6a1f4eac55c" translate="yes" xml:space="preserve">
          <source>This is intended for diagnostic use. The exact contents and format of the string are not specified, other than being a best-effort description of the type. For example, &lt;code&gt;type_name_of_val::&amp;lt;Option&amp;lt;String&amp;gt;&amp;gt;(None)&lt;/code&gt; could return &lt;code&gt;&quot;Option&amp;lt;String&amp;gt;&quot;&lt;/code&gt; or &lt;code&gt;&quot;std::option::Option&amp;lt;std::string::String&amp;gt;&quot;&lt;/code&gt;, but not &lt;code&gt;&quot;foobar&quot;&lt;/code&gt;. In addition, the output may change between versions of the compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8ec787ed30362b911645f3b84c9e12d95cf9472" translate="yes" xml:space="preserve">
          <source>This is intended for diagnostic use. The exact contents and format of the string returned are not specified, other than being a best-effort description of the type. For example, amongst the strings that &lt;code&gt;type_name::&amp;lt;Option&amp;lt;String&amp;gt;&amp;gt;()&lt;/code&gt; might return are &lt;code&gt;&quot;Option&amp;lt;String&amp;gt;&quot;&lt;/code&gt; and &lt;code&gt;&quot;std::option::Option&amp;lt;std::string::String&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc319fa8d54bb7f30ec3fbd3c75a33f269dda0d" translate="yes" xml:space="preserve">
          <source>This is intended for use cases that must synchronize content, but don't need the metadata on disk. The goal of this method is to reduce disk operations.</source>
          <target state="translated">Esto está pensado para los casos de uso que deben sincronizar el contenido,pero que no necesitan los metadatos en el disco.El objetivo de este método es reducir las operaciones de disco.</target>
        </trans-unit>
        <trans-unit id="b4baa659f5df3a480bf1bbe9b4f50e4e5030b61c" translate="yes" xml:space="preserve">
          <source>This is lossless: calling &lt;a href=&quot;trait.osstrext#tymethod.encode_wide&quot;&gt;&lt;code&gt;OsStrExt::encode_wide&lt;/code&gt;&lt;/a&gt; on the resulting string will always return the original code units.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a817bf3dc422e9202ff238105af54d744a0e12d" translate="yes" xml:space="preserve">
          <source>This is lossless: calling &lt;a href=&quot;trait.osstrext#tymethod.encode_wide&quot;&gt;&lt;code&gt;encode_wide&lt;/code&gt;&lt;/a&gt; on the resulting string will always return the original code units.</source>
          <target state="translated">Esto no tiene p&amp;eacute;rdidas: llamar a &lt;a href=&quot;trait.osstrext#tymethod.encode_wide&quot;&gt; &lt;code&gt;encode_wide&lt;/code&gt; &lt;/a&gt; en la cadena resultante siempre devolver&amp;aacute; las unidades de c&amp;oacute;digo originales.</target>
        </trans-unit>
        <trans-unit id="628dc171fde34c2da2657493d9e0d1f50a03e413" translate="yes" xml:space="preserve">
          <source>This is lossless: calling &lt;a href=&quot;trait.osstringext#tymethod.from_wide&quot;&gt;&lt;code&gt;OsString::from_wide&lt;/code&gt;&lt;/a&gt; and then &lt;code&gt;encode_wide&lt;/code&gt; on the result will yield the original code units. Note that the encoding does not add a final null terminator.</source>
          <target state="translated">Esto no tiene p&amp;eacute;rdidas: llamar a &lt;a href=&quot;trait.osstringext#tymethod.from_wide&quot;&gt; &lt;code&gt;OsString::from_wide&lt;/code&gt; &lt;/a&gt; y luego &lt;code&gt;encode_wide&lt;/code&gt; en el resultado producir&amp;aacute; las unidades de c&amp;oacute;digo originales. Tenga en cuenta que la codificaci&amp;oacute;n no agrega un terminador nulo final.</target>
        </trans-unit>
        <trans-unit id="77e982184c9ea4360d1954dd63bc884090bdd324" translate="yes" xml:space="preserve">
          <source>This is lossless: calling &lt;a href=&quot;trait.osstringext#tymethod.from_wide&quot;&gt;&lt;code&gt;OsStringExt::from_wide&lt;/code&gt;&lt;/a&gt; and then &lt;code&gt;encode_wide&lt;/code&gt; on the result will yield the original code units. Note that the encoding does not add a final null terminator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0151e5762979bf36757d9fa68f187e7676c048da" translate="yes" xml:space="preserve">
          <source>This is more useful when combined with higher-level abstractions, like collecting to a &lt;code&gt;Result&amp;lt;(), E&amp;gt;&lt;/code&gt; where you only care about errors:</source>
          <target state="translated">Esto es m&amp;aacute;s &amp;uacute;til cuando se combina con abstracciones de nivel superior, como recopilar en un &lt;code&gt;Result&amp;lt;(), E&amp;gt;&lt;/code&gt; donde solo le importan los errores:</target>
        </trans-unit>
        <trans-unit id="10329d9d786a635bdda96b8986fb374a569f8990" translate="yes" xml:space="preserve">
          <source>This is normally only useful in macro generated code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2fe1510c25bad6c81eb0b6402e2bd1a4066b7f9" translate="yes" xml:space="preserve">
          <source>This is not currently supported: &lt;code&gt;v&lt;/code&gt; should be defined as &lt;code&gt;Vec&amp;lt;&amp;amp;str&amp;gt;&lt;/code&gt;. Parentheses are currently only used with generic types when defining parameters for &lt;code&gt;Fn&lt;/code&gt;-family traits.</source>
          <target state="translated">Actualmente no se admite: &lt;code&gt;v&lt;/code&gt; debe definirse como &lt;code&gt;Vec&amp;lt;&amp;amp;str&amp;gt;&lt;/code&gt; . Actualmente, los par&amp;eacute;ntesis solo se usan con tipos gen&amp;eacute;ricos al definir par&amp;aacute;metros para rasgos de familia &lt;code&gt;Fn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="711ce4ce5401a3c09d45281217695490f1c55a87" translate="yes" xml:space="preserve">
          <source>This is often the correct thing to use when building data structures using raw pointers, but is ultimately more dangerous to use because of its additional properties. If you're not sure if you should use &lt;code&gt;NonNull&amp;lt;T&amp;gt;&lt;/code&gt;, just use &lt;code&gt;*mut T&lt;/code&gt;!</source>
          <target state="translated">A menudo, esto es lo correcto cuando se construyen estructuras de datos usando punteros sin procesar, pero en &amp;uacute;ltima instancia, es m&amp;aacute;s peligroso de usar debido a sus propiedades adicionales. Si no est&amp;aacute; seguro de si debe usar &lt;code&gt;NonNull&amp;lt;T&amp;gt;&lt;/code&gt; , simplemente use &lt;code&gt;*mut T&lt;/code&gt; !</target>
        </trans-unit>
        <trans-unit id="fa820eea81b725c2fa4febe2a3901035a1fc9e49" translate="yes" xml:space="preserve">
          <source>This is one of the reasons Rust projects that provide a binary have a straightforward &lt;em&gt;src/main.rs&lt;/em&gt; file that calls logic that lives in the &lt;em&gt;src/lib.rs&lt;/em&gt; file. Using that structure, integration tests &lt;em&gt;can&lt;/em&gt; test the library crate with &lt;code&gt;use&lt;/code&gt; to make the important functionality available. If the important functionality works, the small amount of code in the &lt;em&gt;src/main.rs&lt;/em&gt; file will work as well, and that small amount of code doesn&amp;rsquo;t need to be tested.</source>
          <target state="translated">Esta es una de las razones por las que los proyectos de Rust que proporcionan un binario tienen un archivo &lt;em&gt;src / main.rs sencillo&lt;/em&gt; que llama a la l&amp;oacute;gica que vive en el archivo &lt;em&gt;src / lib.rs. &lt;/em&gt;Usando esa estructura, las pruebas de integraci&amp;oacute;n &lt;em&gt;pueden&lt;/em&gt; probar la caja de la biblioteca con el &lt;code&gt;use&lt;/code&gt; para hacer disponible la funcionalidad importante. Si la funcionalidad importante funciona, la peque&amp;ntilde;a cantidad de c&amp;oacute;digo en el archivo &lt;em&gt;src / main.rs&lt;/em&gt; tambi&amp;eacute;n funcionar&amp;aacute;, y esa peque&amp;ntilde;a cantidad de c&amp;oacute;digo no necesita ser probada.</target>
        </trans-unit>
        <trans-unit id="73e2aa9ae5cc887b643d8522a473733b99e09722" translate="yes" xml:space="preserve">
          <source>This is only available on unix platforms and must be imported in order to call the method. Windows platforms have a corresponding &lt;code&gt;AsRawHandle&lt;/code&gt; and &lt;code&gt;AsRawSocket&lt;/code&gt; set of traits.</source>
          <target state="translated">Esto solo est&amp;aacute; disponible en plataformas Unix y debe importarse para poder llamar al m&amp;eacute;todo. Plataformas de Windows tienen un correspondiente &lt;code&gt;AsRawHandle&lt;/code&gt; y &lt;code&gt;AsRawSocket&lt;/code&gt; conjunto de caracter&amp;iacute;sticas .</target>
        </trans-unit>
        <trans-unit id="b95758d57810f70a3e0dda910c113e0c41898398" translate="yes" xml:space="preserve">
          <source>This is only possible if the iterator has an end, so &lt;code&gt;rev()&lt;/code&gt; only works on &lt;a href=&quot;trait.doubleendediterator&quot;&gt;&lt;code&gt;DoubleEndedIterator&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="translated">Esto solo es posible si el iterador tiene un final, por lo que &lt;code&gt;rev()&lt;/code&gt; solo funciona en &lt;a href=&quot;trait.doubleendediterator&quot;&gt; &lt;code&gt;DoubleEndedIterator&lt;/code&gt; &lt;/a&gt; s.</target>
        </trans-unit>
        <trans-unit id="3a074412ade07f77d614925409e4080a4208783e" translate="yes" xml:space="preserve">
          <source>This is optimal if:</source>
          <target state="translated">Esto es óptimo si:</target>
        </trans-unit>
        <trans-unit id="37e51cab1c9ec8f6780dbae6b990b1f230875324" translate="yes" xml:space="preserve">
          <source>This is primarily due to ABI incompatibilities between the two attributes. See &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/2091-inline-semantic.md&quot;&gt;RFC 2091&lt;/a&gt; for details on this and other limitations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d34b82a0a85b619783fe065420d506ce185b6196" translate="yes" xml:space="preserve">
          <source>This is purely an optimization hint, and may be implemented conservatively: it may return &lt;code&gt;true&lt;/code&gt; for types that don't actually need to be dropped. As such always returning &lt;code&gt;true&lt;/code&gt; would be a valid implementation of this function. However if this function actually returns &lt;code&gt;false&lt;/code&gt;, then you can be certain dropping &lt;code&gt;T&lt;/code&gt; has no side effect.</source>
          <target state="translated">Esto es puramente una sugerencia de optimizaci&amp;oacute;n y puede implementarse de manera conservadora: puede devolver &lt;code&gt;true&lt;/code&gt; para los tipos que en realidad no necesitan descartarse. Como tal, devolver siempre &lt;code&gt;true&lt;/code&gt; ser&amp;iacute;a una implementaci&amp;oacute;n v&amp;aacute;lida de esta funci&amp;oacute;n. Sin embargo, si esta funci&amp;oacute;n realmente devuelve &lt;code&gt;false&lt;/code&gt; , entonces puede estar seguro de que eliminar &lt;code&gt;T&lt;/code&gt; no tiene ning&amp;uacute;n efecto secundario.</target>
        </trans-unit>
        <trans-unit id="5e7810a8956ac37cd206f449b307f75cea11f52b" translate="yes" xml:space="preserve">
          <source>This is returned in a Result by either the &lt;a href=&quot;struct.command#method.output&quot;&gt;&lt;code&gt;output&lt;/code&gt;&lt;/a&gt; method of a &lt;a href=&quot;struct.command&quot;&gt;&lt;code&gt;Command&lt;/code&gt;&lt;/a&gt;, or the &lt;a href=&quot;struct.child#method.wait_with_output&quot;&gt;&lt;code&gt;wait_with_output&lt;/code&gt;&lt;/a&gt; method of a &lt;a href=&quot;struct.child&quot;&gt;&lt;code&gt;Child&lt;/code&gt;&lt;/a&gt; process.</source>
          <target state="translated">Esto se devuelve en un resultado mediante el m&amp;eacute;todo de &lt;a href=&quot;struct.command#method.output&quot;&gt; &lt;code&gt;output&lt;/code&gt; &lt;/a&gt; de un &lt;a href=&quot;struct.command&quot;&gt; &lt;code&gt;Command&lt;/code&gt; &lt;/a&gt; o el m&amp;eacute;todo &lt;a href=&quot;struct.child#method.wait_with_output&quot;&gt; &lt;code&gt;wait_with_output&lt;/code&gt; &lt;/a&gt; de un &lt;a href=&quot;struct.child&quot;&gt; &lt;code&gt;Child&lt;/code&gt; &lt;/a&gt; proceso .</target>
        </trans-unit>
        <trans-unit id="b6ad57d3243660eeae5c83dc6d6e37580997866e" translate="yes" xml:space="preserve">
          <source>This is safe because it is not possible to move out of a shared reference. It may seem like there is an issue here with interior mutability: in fact, it &lt;em&gt;is&lt;/em&gt; possible to move a &lt;code&gt;T&lt;/code&gt; out of a &lt;code&gt;&amp;amp;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;. However, this is not a problem as long as there does not also exist a &lt;code&gt;Pin&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; pointing to the same data, and &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; does not let you create a pinned reference to its contents. See the discussion on &lt;a href=&quot;index#projections-and-structural-pinning&quot;&gt;&quot;pinning projections&quot;&lt;/a&gt; for further details.</source>
          <target state="translated">Esto es seguro porque no es posible salir de una referencia compartida. Puede parecer que aqu&amp;iacute; hay un problema con la mutabilidad interior: de hecho, &lt;em&gt;es&lt;/em&gt; posible sacar una &lt;code&gt;T&lt;/code&gt; de un &lt;code&gt;&amp;amp;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; . Sin embargo, esto no es un problema siempre que no exista un &lt;code&gt;Pin&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; apunte a los mismos datos, y &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; no le permite crear una referencia fija a su contenido. Consulte la discusi&amp;oacute;n sobre &lt;a href=&quot;index#projections-and-structural-pinning&quot;&gt;&quot;Fijar proyecciones&quot;&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="559d85299736482aa3edc92867921c11931dac34" translate="yes" xml:space="preserve">
          <source>This is safe because passing &lt;code&gt;self&lt;/code&gt; by value guarantees that no other threads are concurrently accessing the atomic data.</source>
          <target state="translated">Esto es seguro porque se pasa a &lt;code&gt;self&lt;/code&gt; por valor garantiza que ning&amp;uacute;n otro subproceso acceda al mismo tiempo a los datos at&amp;oacute;micos.</target>
        </trans-unit>
        <trans-unit id="fdcd86e75de03ac238cab2145da08762d1c1fa0e" translate="yes" xml:space="preserve">
          <source>This is safe because the mutable reference guarantees that no other threads are concurrently accessing the atomic data.</source>
          <target state="translated">Esto es seguro porque la referencia mutable garantiza que ningún otro hilo accede simultáneamente a los datos atómicos.</target>
        </trans-unit>
        <trans-unit id="a603b8208d8f49fcc985893385a8e118d832cdea" translate="yes" xml:space="preserve">
          <source>This is safe, because &lt;code&gt;T&lt;/code&gt; is borrowed for the &lt;code&gt;'static&lt;/code&gt; lifetime, which never ends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62f1c9ceb59d3f4f94d3d3fedf2ebcb7110ae8d6" translate="yes" xml:space="preserve">
          <source>This is semantically equivalent to calling &lt;a href=&quot;../ptr/fn.read&quot;&gt;&lt;code&gt;ptr::read&lt;/code&gt;&lt;/a&gt; and discarding the result, but has the following advantages:</source>
          <target state="translated">Esto es sem&amp;aacute;nticamente equivalente a llamar a &lt;a href=&quot;../ptr/fn.read&quot;&gt; &lt;code&gt;ptr::read&lt;/code&gt; &lt;/a&gt; y descartar el resultado, pero tiene las siguientes ventajas:</target>
        </trans-unit>
        <trans-unit id="f8249e0d4f2746bf5b8aa8a678e0e1e5a321179d" translate="yes" xml:space="preserve">
          <source>This is semantically equivalent to calling &lt;a href=&quot;fn.read&quot;&gt;&lt;code&gt;ptr::read&lt;/code&gt;&lt;/a&gt; and discarding the result, but has the following advantages:</source>
          <target state="translated">Esto es sem&amp;aacute;nticamente equivalente a llamar a &lt;a href=&quot;fn.read&quot;&gt; &lt;code&gt;ptr::read&lt;/code&gt; &lt;/a&gt; y descartar el resultado, pero tiene las siguientes ventajas:</target>
        </trans-unit>
        <trans-unit id="3f02e339323ce653dbff1ca427dde093c5fbdbad" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;../primitive.slice#method.clone_from_slice&quot;&gt;&lt;code&gt;slice::clone_from_slice&lt;/code&gt;&lt;/a&gt; but does not drop existing elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="358e0f225467b03900d6e8992dde5d0b7bc40738" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;../primitive.slice#method.copy_from_slice&quot;&gt;&lt;code&gt;slice::copy_from_slice&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb69e9b77c8f67d2dd23964f55732bc6174eb1f3" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;struct.mutex#poisoning&quot;&gt;poisoning with mutexes&lt;/a&gt;.</source>
          <target state="translated">Esto es similar al &lt;a href=&quot;struct.mutex#poisoning&quot;&gt;envenenamiento con mutex&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="323433898b799fb03eed09fdd2d727e9828c9a3d" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;wake&lt;/code&gt;, but may be slightly less efficient in the case where an owned &lt;code&gt;Waker&lt;/code&gt; is available. This method should be preferred to calling &lt;code&gt;waker.clone().wake()&lt;/code&gt;.</source>
          <target state="translated">Esto es similar a la &lt;code&gt;wake&lt;/code&gt; , pero puede ser un poco menos eficiente en el caso de que est&amp;eacute; disponible una &lt;code&gt;Waker&lt;/code&gt; propia . Este m&amp;eacute;todo debe preferirse a llamar a &lt;code&gt;waker.clone().wake()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67ff9ed313be1a208e09d5213c1e87906d1b8ae8" translate="yes" xml:space="preserve">
          <source>This is similar to taking a reference to the whole &lt;code&gt;String&lt;/code&gt; but with the extra &lt;code&gt;[0..5]&lt;/code&gt; bit. Rather than a reference to the entire &lt;code&gt;String&lt;/code&gt;, it&amp;rsquo;s a reference to a portion of the &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">Esto es similar a tomar una referencia a la &lt;code&gt;String&lt;/code&gt; completa pero con el bit adicional &lt;code&gt;[0..5]&lt;/code&gt; . En lugar de una referencia a la &lt;code&gt;String&lt;/code&gt; completa , es una referencia a una parte de la &lt;code&gt;String&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8e7a7ddaef0be30145306f6816d2b3ff35a14d32" translate="yes" xml:space="preserve">
          <source>This is similar to the second sub-error, but subtler. It happens in situations like the following:</source>
          <target state="translated">Esto es similar al segundo sub-error,pero más sutil.Ocurre en situaciones como las siguientes:</target>
        </trans-unit>
        <trans-unit id="7512abd4f4f8baf21d2fa3f6cea905e84ac77b34" translate="yes" xml:space="preserve">
          <source>This is simply a special - but common - case of the previous: hiding mutability for operations that appear to be immutable. The &lt;code&gt;clone&lt;/code&gt; method is expected to not change the source value, and is declared to take &lt;code&gt;&amp;amp;self&lt;/code&gt;, not &lt;code&gt;&amp;amp;mut self&lt;/code&gt;. Therefore, any mutation that happens in the &lt;code&gt;clone&lt;/code&gt; method must use cell types. For example, &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; maintains its reference counts within a &lt;code&gt;Cell&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Este es simplemente un caso especial, pero com&amp;uacute;n, del anterior: ocultar la mutabilidad para operaciones que parecen inmutables. Se espera que el m&amp;eacute;todo de &lt;code&gt;clone&lt;/code&gt; no cambie el valor de la fuente y se declara que toma &lt;code&gt;&amp;amp;self&lt;/code&gt; , no &lt;code&gt;&amp;amp;mut self&lt;/code&gt; . Por lo tanto, cualquier mutaci&amp;oacute;n que ocurra en el m&amp;eacute;todo de &lt;code&gt;clone&lt;/code&gt; debe usar tipos de c&amp;eacute;lulas. Por ejemplo, &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; mantiene sus recuentos de referencia dentro de una &lt;code&gt;Cell&amp;lt;T&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="022f67943cd560f4bdb5afc8c97b7f6c6d3167eb" translate="yes" xml:space="preserve">
          <source>This is sometimes done as part of an FFI:</source>
          <target state="translated">Esto se hace a veces como parte de un FFI:</target>
        </trans-unit>
        <trans-unit id="29a8f7be9a323b371a4c7f94c367da9cdcb60e7e" translate="yes" xml:space="preserve">
          <source>This is supported on &lt;strong&gt;(Android or DragonFly BSD or Emscripten or FreeBSD or Linux or NetBSD or OpenBSD) and Unix&lt;/strong&gt; only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cd9f4e2b3a9d48a4944f59c96788167ca07951a" translate="yes" xml:space="preserve">
          <source>This is supported on &lt;strong&gt;Android or DragonFly BSD or Emscripten or FreeBSD or Linux or NetBSD or OpenBSD&lt;/strong&gt; only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c76ae31cc8e606b25f4d72f00019a489e501ce07" translate="yes" xml:space="preserve">
          <source>This is supported on &lt;strong&gt;Linux&lt;/strong&gt; only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100ddfe0611f62c2fe34cd0d08120e1dfeacd050" translate="yes" xml:space="preserve">
          <source>This is supported on &lt;strong&gt;Unix&lt;/strong&gt; only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="820275ba907af27ec04ee3e4464292d92354d5b6" translate="yes" xml:space="preserve">
          <source>This is supported on &lt;strong&gt;Windows&lt;/strong&gt; only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce79f7fec51f65c567a6d4b960b891ab223ea0af" translate="yes" xml:space="preserve">
          <source>This is supported on Linux only.</source>
          <target state="translated">Esto sólo está soportado en Linux.</target>
        </trans-unit>
        <trans-unit id="5d02662201a60807bdb13970d8ae5dbd58d92a03" translate="yes" xml:space="preserve">
          <source>This is supported on Unix only.</source>
          <target state="translated">Esto está soportado sólo en Unix.</target>
        </trans-unit>
        <trans-unit id="fe81960399abac0748704c3a05349d9cd7f1ac2c" translate="yes" xml:space="preserve">
          <source>This is supported on Windows only.</source>
          <target state="translated">Esto sólo es compatible con Windows.</target>
        </trans-unit>
        <trans-unit id="7dbd409e3c209511b0279195cd6826fb5e1a2b3b" translate="yes" xml:space="preserve">
          <source>This is the &lt;code&gt;longest&lt;/code&gt; function from Listing 10-22 that returns the longer of two string slices. But now it has an extra parameter named &lt;code&gt;ann&lt;/code&gt; of the generic type &lt;code&gt;T&lt;/code&gt;, which can be filled in by any type that implements the &lt;code&gt;Display&lt;/code&gt; trait as specified by the &lt;code&gt;where&lt;/code&gt; clause. This extra parameter will be printed before the function compares the lengths of the string slices, which is why the &lt;code&gt;Display&lt;/code&gt; trait bound is necessary. Because lifetimes are a type of generic, the declarations of the lifetime parameter &lt;code&gt;'a&lt;/code&gt; and the generic type parameter &lt;code&gt;T&lt;/code&gt; go in the same list inside the angle brackets after the function name.</source>
          <target state="translated">Esta es la funci&amp;oacute;n &lt;code&gt;longest&lt;/code&gt; del Listado 10-22 que devuelve el m&amp;aacute;s largo de dos cortes de cadena. Pero ahora tiene un par&amp;aacute;metro adicional llamado &lt;code&gt;ann&lt;/code&gt; del tipo gen&amp;eacute;rico &lt;code&gt;T&lt;/code&gt; , que puede ser completado por cualquier tipo que implemente el rasgo &lt;code&gt;Display&lt;/code&gt; como lo especifica la cl&amp;aacute;usula &lt;code&gt;where&lt;/code&gt; . Este par&amp;aacute;metro adicional se imprimir&amp;aacute; antes de que la funci&amp;oacute;n compare las longitudes de los cortes de cadena, por lo que es necesario el l&amp;iacute;mite del rasgo de &lt;code&gt;Display&lt;/code&gt; . Debido a que los tiempos de vida son un tipo de gen&amp;eacute;rico, las declaraciones del par&amp;aacute;metro de tiempo de vida &lt;code&gt;'a&lt;/code&gt; ay el par&amp;aacute;metro de tipo gen&amp;eacute;rico &lt;code&gt;T&lt;/code&gt; van en la misma lista dentro de los corchetes angulares despu&amp;eacute;s del nombre de la funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="771b5400b1697f2e03b3ff52d8994e98c72fb56e" translate="yes" xml:space="preserve">
          <source>This is the alignment used for struct fields. It may be smaller than the preferred alignment.</source>
          <target state="translated">Esta es la alineación usada para los campos de estructura.Puede ser más pequeño que la alineación preferida.</target>
        </trans-unit>
        <trans-unit id="d7e12ec340db516b6de450f2a63092abb536959d" translate="yes" xml:space="preserve">
          <source>This is the const generic equivalent of &lt;a href=&quot;#method.windows&quot;&gt;&lt;code&gt;windows&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ea5fa4cdf245151000dcd8208cd57fa7396ef40" translate="yes" xml:space="preserve">
          <source>This is the correct syntax:</source>
          <target state="translated">Esta es la sintaxis correcta:</target>
        </trans-unit>
        <trans-unit id="8a3edb9de97e0819d33135bbb50051a98c123c3a" translate="yes" xml:space="preserve">
          <source>This is the difference between &lt;code&gt;1.0&lt;/code&gt; and the next larger representable number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="540ad0b8406b1727e0f455b9b013663295117df7" translate="yes" xml:space="preserve">
          <source>This is the difference between &lt;code&gt;1.0&lt;/code&gt; and the next largest representable number.</source>
          <target state="translated">Esta es la diferencia entre &lt;code&gt;1.0&lt;/code&gt; y el siguiente n&amp;uacute;mero representable m&amp;aacute;s grande.</target>
        </trans-unit>
        <trans-unit id="c620ac5f199d804600d9e6fa867d20d7e4f16f11" translate="yes" xml:space="preserve">
          <source>This is the first example of Rust&amp;rsquo;s safety principles in action. In many low-level languages, this kind of check is not done, and when you provide an incorrect index, invalid memory can be accessed. Rust protects you against this kind of error by immediately exiting instead of allowing the memory access and continuing. Chapter 9 discusses more of Rust&amp;rsquo;s error handling.</source>
          <target state="translated">Este es el primer ejemplo de los principios de seguridad de Rust en acci&amp;oacute;n. En muchos lenguajes de bajo nivel, este tipo de verificaci&amp;oacute;n no se realiza y, cuando proporciona un &amp;iacute;ndice incorrecto, se puede acceder a una memoria no v&amp;aacute;lida. Rust lo protege contra este tipo de error saliendo inmediatamente en lugar de permitir el acceso a la memoria y continuar. El cap&amp;iacute;tulo 9 trata m&amp;aacute;s sobre el manejo de errores de Rust.</target>
        </trans-unit>
        <trans-unit id="96d082bf8459464d47b35442a1fa45813a325a53" translate="yes" xml:space="preserve">
          <source>This is the main iterator trait. For more about the concept of iterators generally, please see the &lt;a href=&quot;index&quot;&gt;module-level documentation&lt;/a&gt;. In particular, you may want to know how to &lt;a href=&quot;index#implementing-iterator&quot;&gt;implement &lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Este es el rasgo principal del iterador. Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre el concepto de iteradores en general, consulte la &lt;a href=&quot;index&quot;&gt;documentaci&amp;oacute;n a nivel de m&amp;oacute;dulo&lt;/a&gt; . En particular, es posible que desee saber c&amp;oacute;mo &lt;a href=&quot;index#implementing-iterator&quot;&gt;implementar &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b386764c4159d37f683e85f4c4afa8c88d4fe909" translate="yes" xml:space="preserve">
          <source>This is the non-panicking alternative to indexing the &lt;code&gt;str&lt;/code&gt;. Returns &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; whenever equivalent indexing operation would panic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="289f1434eafb60316aca77ad31a00e3c0eb9323a" translate="yes" xml:space="preserve">
          <source>This is the non-panicking alternative to indexing the &lt;code&gt;str&lt;/code&gt;. Returns &lt;a href=&quot;option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; whenever equivalent indexing operation would panic.</source>
          <target state="translated">Esta es la alternativa sin p&amp;aacute;nico a la indexaci&amp;oacute;n de &lt;code&gt;str&lt;/code&gt; . Devuelve &lt;a href=&quot;option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; cuando la operaci&amp;oacute;n de indexaci&amp;oacute;n equivalente entra en p&amp;aacute;nico.</target>
        </trans-unit>
        <trans-unit id="759018d521d201d38bc076c0727a5d9a6e429fac" translate="yes" xml:space="preserve">
          <source>This is the non-panicking variant of &lt;a href=&quot;#method.borrow&quot;&gt;&lt;code&gt;borrow&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esta es la variante de &lt;a href=&quot;#method.borrow&quot;&gt; &lt;code&gt;borrow&lt;/code&gt; &lt;/a&gt; sin p&amp;aacute;nico .</target>
        </trans-unit>
        <trans-unit id="70fed40b0a485aa104ed49c92498ff0b436cf03b" translate="yes" xml:space="preserve">
          <source>This is the non-panicking variant of &lt;a href=&quot;#method.borrow_mut&quot;&gt;&lt;code&gt;borrow_mut&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&amp;Eacute;sta es la variante que no &lt;a href=&quot;#method.borrow_mut&quot;&gt; &lt;code&gt;borrow_mut&lt;/code&gt; &lt;/a&gt; entrar el p&amp;aacute;nico de proud_mut .</target>
        </trans-unit>
        <trans-unit id="ccd5e95eaa2f4ad9676aca34c8e9ba1ff21b3015" translate="yes" xml:space="preserve">
          <source>This is the reverse version of &lt;a href=&quot;../../iter/trait.iterator#method.try_fold&quot;&gt;&lt;code&gt;Iterator::try_fold()&lt;/code&gt;&lt;/a&gt;: it takes elements starting from the back of the iterator. &lt;a href=&quot;../../iter/trait.doubleendediterator#method.try_rfold&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd0528fc88151b305168bd5debfa38b6c659b612" translate="yes" xml:space="preserve">
          <source>This is the reverse version of &lt;a href=&quot;../iter/trait.iterator#method.try_fold&quot;&gt;&lt;code&gt;Iterator::try_fold()&lt;/code&gt;&lt;/a&gt;: it takes elements starting from the back of the iterator. &lt;a href=&quot;../iter/trait.doubleendediterator#method.try_rfold&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0fe748271e612bae240bf98e735a830b559c459" translate="yes" xml:space="preserve">
          <source>This is the reverse version of &lt;a href=&quot;iter/trait.iterator#method.try_fold&quot;&gt;&lt;code&gt;Iterator::try_fold()&lt;/code&gt;&lt;/a&gt;: it takes elements starting from the back of the iterator. &lt;a href=&quot;iter/trait.doubleendediterator#method.try_rfold&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d3a0dba802b6e4f6285d94d4683f5056846f9fd" translate="yes" xml:space="preserve">
          <source>This is the reverse version of &lt;a href=&quot;trait.iterator#method.fold&quot;&gt;&lt;code&gt;Iterator::fold()&lt;/code&gt;&lt;/a&gt;: it takes elements starting from the back of the iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce445e189c1252f0055062d54b89751ff0fb729" translate="yes" xml:space="preserve">
          <source>This is the reverse version of &lt;a href=&quot;trait.iterator#method.fold&quot;&gt;&lt;code&gt;fold()&lt;/code&gt;&lt;/a&gt;: it takes elements starting from the back of the iterator.</source>
          <target state="translated">Esta es la versi&amp;oacute;n inversa de &lt;a href=&quot;trait.iterator#method.fold&quot;&gt; &lt;code&gt;fold()&lt;/code&gt; &lt;/a&gt; : toma elementos comenzando desde la parte posterior del iterador.</target>
        </trans-unit>
        <trans-unit id="bc1780a770503660513f01fa15c1efc71fef0175" translate="yes" xml:space="preserve">
          <source>This is the reverse version of &lt;a href=&quot;trait.iterator#method.try_fold&quot;&gt;&lt;code&gt;Iterator::try_fold()&lt;/code&gt;&lt;/a&gt;: it takes elements starting from the back of the iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe6ff5d62e332d4883802b0cf8675d53b663b171" translate="yes" xml:space="preserve">
          <source>This is the reverse version of &lt;a href=&quot;trait.iterator#method.try_fold&quot;&gt;&lt;code&gt;Iterator::try_fold()&lt;/code&gt;&lt;/a&gt;: it takes elements starting from the back of the iterator. &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f33f9266690c3f1f82aab587ca29e140daa7ab" translate="yes" xml:space="preserve">
          <source>This is the reverse version of &lt;a href=&quot;trait.iterator#method.try_fold&quot;&gt;&lt;code&gt;try_fold()&lt;/code&gt;&lt;/a&gt;: it takes elements starting from the back of the iterator.</source>
          <target state="translated">Esta es la versi&amp;oacute;n inversa de &lt;a href=&quot;trait.iterator#method.try_fold&quot;&gt; &lt;code&gt;try_fold()&lt;/code&gt; &lt;/a&gt; : toma elementos comenzando desde la parte posterior del iterador.</target>
        </trans-unit>
        <trans-unit id="d46122a89a465fda704ceb8118ba4c1126be2832" translate="yes" xml:space="preserve">
          <source>This is the reverse version of [&lt;code&gt;try_fold()&lt;/code&gt;]: it takes elements starting from the back of the iterator. &lt;a href=&quot;../../iter/trait.doubleendediterator#method.try_rfold&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Esta es la versi&amp;oacute;n inversa de [ &lt;code&gt;try_fold()&lt;/code&gt; ]: toma elementos comenzando desde la parte posterior del iterador. &lt;a href=&quot;../../iter/trait.doubleendediterator#method.try_rfold&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f495531f8eacf0a1680dc0219ed83707197faddd" translate="yes" xml:space="preserve">
          <source>This is the reverse version of [&lt;code&gt;try_fold()&lt;/code&gt;]: it takes elements starting from the back of the iterator. &lt;a href=&quot;../iter/trait.doubleendediterator#method.try_rfold&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Esta es la versi&amp;oacute;n inversa de [ &lt;code&gt;try_fold()&lt;/code&gt; ]: toma elementos comenzando desde la parte posterior del iterador. &lt;a href=&quot;../iter/trait.doubleendediterator#method.try_rfold&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0ec81940d41390cbbcb80997a4e3d957d2b9a317" translate="yes" xml:space="preserve">
          <source>This is the reverse version of [&lt;code&gt;try_fold()&lt;/code&gt;]: it takes elements starting from the back of the iterator. &lt;a href=&quot;iter/trait.doubleendediterator#method.try_rfold&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Esta es la versi&amp;oacute;n inversa de [ &lt;code&gt;try_fold()&lt;/code&gt; ]: toma elementos comenzando desde la parte posterior del iterador. &lt;a href=&quot;iter/trait.doubleendediterator#method.try_rfold&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5ff3fa51ad38f312277040719826a7c977bbcd8a" translate="yes" xml:space="preserve">
          <source>This is the reverse version of [&lt;code&gt;try_fold()&lt;/code&gt;]: it takes elements starting from the back of the iterator. &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Esta es la versi&amp;oacute;n inversa de [ &lt;code&gt;try_fold()&lt;/code&gt; ]: toma elementos comenzando desde la parte posterior del iterador. &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="383e94e01b1343c9d6bcfb23e7f045e384d94336" translate="yes" xml:space="preserve">
          <source>This is the same as using the &lt;code&gt;==&lt;/code&gt; operator, but less generic: the arguments have to be &lt;code&gt;*const T&lt;/code&gt; raw pointers, not anything that implements &lt;code&gt;PartialEq&lt;/code&gt;.</source>
          <target state="translated">Esto es lo mismo que usar el operador &lt;code&gt;==&lt;/code&gt; , pero menos gen&amp;eacute;rico: los argumentos deben ser punteros en bruto &lt;code&gt;*const T&lt;/code&gt; , no cualquier cosa que implemente &lt;code&gt;PartialEq&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22b2f39cdef64a09df83167c24366e9e24591fdf" translate="yes" xml:space="preserve">
          <source>This is the unchecked alternative to indexing the &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">Esta es la alternativa no verificada para indexar &lt;code&gt;str&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="589a4243aa6d42e7fc5ac36f0baed5a47e1de444" translate="yes" xml:space="preserve">
          <source>This is used for object safety, to check that a method's receiver type can be dispatched on.</source>
          <target state="translated">Esto se utiliza para la seguridad de los objetos,para comprobar que el tipo de receptor de un método puede ser despachado.</target>
        </trans-unit>
        <trans-unit id="9aea807f1415223ad9d946b1ace7fbf6d55fe5aa" translate="yes" xml:space="preserve">
          <source>This is used when the programmer knows that the thread will have nothing to do for some time, and thus avoid wasting computing time.</source>
          <target state="translated">Se utiliza cuando el programador sabe que el hilo no tendrá nada que hacer durante algún tiempo,y así evitar la pérdida de tiempo de computación.</target>
        </trans-unit>
        <trans-unit id="5ce1e416198eb464ee0a2977f8013c35c0e89565" translate="yes" xml:space="preserve">
          <source>This is useful any time that the compiler can't determine that some code is unreachable. For example:</source>
          <target state="translated">Esto es útil en cualquier momento en que el compilador no pueda determinar que algún código es inalcanzable.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="85e4c5ffc08236fd25e25201dcbaaa8757900c78" translate="yes" xml:space="preserve">
          <source>This is useful for</source>
          <target state="translated">Esto es útil para</target>
        </trans-unit>
        <trans-unit id="a885d8fe460e46c9230b0d468a457bef6acf54a6" translate="yes" xml:space="preserve">
          <source>This is useful for a flavor of &quot;optimistic check&quot; before deciding to block on a receiver.</source>
          <target state="translated">Esto es útil para un sabor de &quot;chequeo optimista&quot; antes de decidir el bloqueo de un receptor.</target>
        </trans-unit>
        <trans-unit id="79e1d9086d9f417d98c9a3f1df01e78fe0db96d9" translate="yes" xml:space="preserve">
          <source>This is useful for initializing types which lazily allocate, like &lt;code&gt;Vec::new&lt;/code&gt; does.</source>
          <target state="translated">Esto es &amp;uacute;til para inicializar tipos que se asignan de manera perezosa, como lo hace &lt;code&gt;Vec::new&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="08ec962229a27774cdabf85bddcaa5d6f625b9ff" translate="yes" xml:space="preserve">
          <source>This is useful to allow applying iterator adaptors while still retaining ownership of the original iterator.</source>
          <target state="translated">Esto es útil para permitir la aplicación de los adaptadores del iterador,conservando al mismo tiempo la propiedad del iterador original.</target>
        </trans-unit>
        <trans-unit id="920763b96fccf7eb85a93a16a5bdd675d6fd634c" translate="yes" xml:space="preserve">
          <source>This is useful when the ownership of the underlying resource was previously transferred to code outside of Rust, for example by transmitting the raw file descriptor to C code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c983c1aa2c476c3f346d2a87a469f6be7bac78d1" translate="yes" xml:space="preserve">
          <source>This is useful when you are doing a type conversion that may trivially succeed but may also need special handling. For example, there is no way to convert an &lt;a href=&quot;../primitive.i64&quot;&gt;&lt;code&gt;i64&lt;/code&gt;&lt;/a&gt; into an &lt;a href=&quot;../primitive.i32&quot;&gt;&lt;code&gt;i32&lt;/code&gt;&lt;/a&gt; using the &lt;a href=&quot;trait.from&quot;&gt;&lt;code&gt;From&lt;/code&gt;&lt;/a&gt; trait, because an &lt;a href=&quot;../primitive.i64&quot;&gt;&lt;code&gt;i64&lt;/code&gt;&lt;/a&gt; may contain a value that an &lt;a href=&quot;../primitive.i32&quot;&gt;&lt;code&gt;i32&lt;/code&gt;&lt;/a&gt; cannot represent and so the conversion would lose data. This might be handled by truncating the &lt;a href=&quot;../primitive.i64&quot;&gt;&lt;code&gt;i64&lt;/code&gt;&lt;/a&gt; to an &lt;a href=&quot;../primitive.i32&quot;&gt;&lt;code&gt;i32&lt;/code&gt;&lt;/a&gt; (essentially giving the &lt;a href=&quot;../primitive.i64&quot;&gt;&lt;code&gt;i64&lt;/code&gt;&lt;/a&gt;'s value modulo &lt;a href=&quot;../i32/constant.max&quot;&gt;&lt;code&gt;i32::MAX&lt;/code&gt;&lt;/a&gt;) or by simply returning &lt;a href=&quot;../i32/constant.max&quot;&gt;&lt;code&gt;i32::MAX&lt;/code&gt;&lt;/a&gt;, or by some other method. The &lt;a href=&quot;trait.from&quot;&gt;&lt;code&gt;From&lt;/code&gt;&lt;/a&gt; trait is intended for perfect conversions, so the &lt;code&gt;TryFrom&lt;/code&gt; trait informs the programmer when a type conversion could go bad and lets them decide how to handle it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63ccb84e9a4faa353cb290ddc5e855748a76c17b" translate="yes" xml:space="preserve">
          <source>This is useful when you are doing a type conversion that may trivially succeed but may also need special handling. For example, there is no way to convert an &lt;code&gt;i64&lt;/code&gt; into an &lt;code&gt;i32&lt;/code&gt; using the &lt;a href=&quot;trait.from&quot;&gt;&lt;code&gt;From&lt;/code&gt;&lt;/a&gt; trait, because an &lt;code&gt;i64&lt;/code&gt; may contain a value that an &lt;code&gt;i32&lt;/code&gt; cannot represent and so the conversion would lose data. This might be handled by truncating the &lt;code&gt;i64&lt;/code&gt; to an &lt;code&gt;i32&lt;/code&gt; (essentially giving the &lt;code&gt;i64&lt;/code&gt;'s value modulo &lt;code&gt;i32::MAX&lt;/code&gt;) or by simply returning &lt;code&gt;i32::MAX&lt;/code&gt;, or by some other method. The &lt;code&gt;From&lt;/code&gt; trait is intended for perfect conversions, so the &lt;code&gt;TryFrom&lt;/code&gt; trait informs the programmer when a type conversion could go bad and lets them decide how to handle it.</source>
          <target state="translated">Esto es &amp;uacute;til cuando est&amp;aacute; haciendo una conversi&amp;oacute;n de tipos que puede tener &amp;eacute;xito trivialmente pero que tambi&amp;eacute;n puede necesitar un manejo especial. Por ejemplo, no hay forma de convertir un &lt;code&gt;i64&lt;/code&gt; en un &lt;code&gt;i32&lt;/code&gt; usando el rasgo &lt;a href=&quot;trait.from&quot;&gt; &lt;code&gt;From&lt;/code&gt; &lt;/a&gt; , porque un &lt;code&gt;i64&lt;/code&gt; puede contener un valor que un &lt;code&gt;i32&lt;/code&gt; no puede representar y, por lo tanto, la conversi&amp;oacute;n perder&amp;iacute;a datos. Esto podr&amp;iacute;a manejarse truncando el &lt;code&gt;i64&lt;/code&gt; a un &lt;code&gt;i32&lt;/code&gt; (esencialmente dando el &lt;code&gt;i64&lt;/code&gt; del i64 m&amp;oacute;dulo &lt;code&gt;i32::MAX&lt;/code&gt; ) o simplemente devolviendo &lt;code&gt;i32::MAX&lt;/code&gt; , o por alg&amp;uacute;n otro m&amp;eacute;todo. El rasgo &lt;code&gt;From&lt;/code&gt; est&amp;aacute; destinado a conversiones perfectas, por lo que &lt;code&gt;TryFrom&lt;/code&gt; trait informa al programador cuando una conversi&amp;oacute;n de tipo podr&amp;iacute;a salir mal y le permite decidir c&amp;oacute;mo manejarla.</target>
        </trans-unit>
        <trans-unit id="878335df341d736b2b477f7d269d41d041479a70" translate="yes" xml:space="preserve">
          <source>This is useful when you have an iterator of iterators or an iterator of things that can be turned into iterators and you want to remove one level of indirection.</source>
          <target state="translated">Esto es útil cuando se tiene un iterador de iteradores o un iterador de cosas que pueden convertirse en iteradores y se quiere eliminar un nivel de indirección.</target>
        </trans-unit>
        <trans-unit id="bc06069272831e3fab63600d60da8286a4aa9faf" translate="yes" xml:space="preserve">
          <source>This is useful when you have an iterator over &lt;code&gt;&amp;amp;T&lt;/code&gt;, but you need an iterator over &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">Esto es &amp;uacute;til cuando se tiene un iterador sobre &lt;code&gt;&amp;amp;T&lt;/code&gt; , pero se necesita un iterador sobre &lt;code&gt;T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="28c350dd4bfc1f4f50a6db4a558fce8f481fa714" translate="yes" xml:space="preserve">
          <source>This is useful when you wish to output a formatted list of items as a part of your &lt;a href=&quot;trait.debug#tymethod.fmt&quot;&gt;&lt;code&gt;Debug::fmt&lt;/code&gt;&lt;/a&gt; implementation.</source>
          <target state="translated">Esto es &amp;uacute;til cuando desea generar una lista formateada de elementos como parte de su implementaci&amp;oacute;n &lt;a href=&quot;trait.debug#tymethod.fmt&quot;&gt; &lt;code&gt;Debug::fmt&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="023c37d743c95a28f62cb66dc28c6981840e275e" translate="yes" xml:space="preserve">
          <source>This is useful when you wish to output a formatted map as a part of your &lt;a href=&quot;trait.debug#tymethod.fmt&quot;&gt;&lt;code&gt;Debug::fmt&lt;/code&gt;&lt;/a&gt; implementation.</source>
          <target state="translated">Esto es &amp;uacute;til cuando desea generar un mapa formateado como parte de su implementaci&amp;oacute;n &lt;a href=&quot;trait.debug#tymethod.fmt&quot;&gt; &lt;code&gt;Debug::fmt&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5a019c845f0ac55c26e73d5fc98b9e29c14a5266" translate="yes" xml:space="preserve">
          <source>This is useful when you wish to output a formatted set of items as a part of your &lt;a href=&quot;trait.debug#tymethod.fmt&quot;&gt;&lt;code&gt;Debug::fmt&lt;/code&gt;&lt;/a&gt; implementation.</source>
          <target state="translated">Esto es &amp;uacute;til cuando desea generar un conjunto formateado de elementos como parte de su implementaci&amp;oacute;n &lt;a href=&quot;trait.debug#tymethod.fmt&quot;&gt; &lt;code&gt;Debug::fmt&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="742e4efaa0964cab1a9b13d64aa3f1ee505fbe93" translate="yes" xml:space="preserve">
          <source>This is useful when you wish to output a formatted struct as a part of your &lt;a href=&quot;trait.debug#tymethod.fmt&quot;&gt;&lt;code&gt;Debug::fmt&lt;/code&gt;&lt;/a&gt; implementation.</source>
          <target state="translated">Esto es &amp;uacute;til cuando desea generar una estructura formateada como parte de su implementaci&amp;oacute;n &lt;a href=&quot;trait.debug#tymethod.fmt&quot;&gt; &lt;code&gt;Debug::fmt&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7450774ae735743f9affac51ccc2935a02180916" translate="yes" xml:space="preserve">
          <source>This is useful when you wish to output a formatted tuple as a part of your &lt;a href=&quot;trait.debug#tymethod.fmt&quot;&gt;&lt;code&gt;Debug::fmt&lt;/code&gt;&lt;/a&gt; implementation.</source>
          <target state="translated">Esto es &amp;uacute;til cuando desea generar una tupla formateada como parte de su implementaci&amp;oacute;n &lt;a href=&quot;trait.debug#tymethod.fmt&quot;&gt; &lt;code&gt;Debug::fmt&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="678189b9778744d56a77a9ddbd180a89dff66dd0" translate="yes" xml:space="preserve">
          <source>This is usually not needed when writing safe code, as &lt;a href=&quot;../sync/struct.mutex&quot;&gt;&lt;code&gt;Mutex&lt;/code&gt;es&lt;/a&gt; already poison themselves when a thread panics while holding the lock.</source>
          <target state="translated">Esto por lo general no es necesario cuando la escritura de c&amp;oacute;digo seguro, como &lt;a href=&quot;../sync/struct.mutex&quot;&gt; &lt;code&gt;Mutex&lt;/code&gt; es&lt;/a&gt; que ya se envenenan cuando un hilo entra en p&amp;aacute;nico mientras mantiene el bloqueo.</target>
        </trans-unit>
        <trans-unit id="73513599023f5ddb254ee6ed0d00bccac264c338" translate="yes" xml:space="preserve">
          <source>This is usually the same as &lt;code&gt;size_of::&amp;lt;T&amp;gt;()&lt;/code&gt;. However, when &lt;code&gt;T&lt;/code&gt;&lt;em&gt;has&lt;/em&gt; no statically-known size, e.g., a slice &lt;a href=&quot;../primitive.slice&quot;&gt;&lt;code&gt;[T]&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;../../book/ch17-02-trait-objects&quot;&gt;trait object&lt;/a&gt;, then &lt;code&gt;size_of_val&lt;/code&gt; can be used to get the dynamically-known size.</source>
          <target state="translated">Suele ser lo mismo que &lt;code&gt;size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; . Sin embargo, cuando &lt;code&gt;T&lt;/code&gt; no &lt;em&gt;tiene&lt;/em&gt; un tama&amp;ntilde;o conocido est&amp;aacute;ticamente, por ejemplo, un corte &lt;a href=&quot;../primitive.slice&quot;&gt; &lt;code&gt;[T]&lt;/code&gt; &lt;/a&gt; o un &lt;a href=&quot;../../book/ch17-02-trait-objects&quot;&gt;objeto de rasgo&lt;/a&gt; , entonces &lt;code&gt;size_of_val&lt;/code&gt; se puede usar para obtener el tama&amp;ntilde;o conocido din&amp;aacute;micamente.</target>
        </trans-unit>
        <trans-unit id="8b96a4f28b82d88010bb7132ad9ee35ef317464c" translate="yes" xml:space="preserve">
          <source>This is usually the same as &lt;code&gt;size_of::&amp;lt;T&amp;gt;()&lt;/code&gt;. However, when &lt;code&gt;T&lt;/code&gt;&lt;em&gt;has&lt;/em&gt; no statically-known size, e.g., a slice &lt;a href=&quot;../primitive.slice&quot;&gt;&lt;code&gt;[T]&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;../../book/ch17-02-trait-objects&quot;&gt;trait object&lt;/a&gt;, then &lt;code&gt;size_of_val_raw&lt;/code&gt; can be used to get the dynamically-known size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8abe6d863c59136664f0a7528f19c0cd3ff2fed7" translate="yes" xml:space="preserve">
          <source>This isn&amp;rsquo;t the exact signature that&amp;rsquo;s in the standard library: in the standard library, &lt;code&gt;add&lt;/code&gt; is defined using generics. Here, we&amp;rsquo;re looking at the signature of &lt;code&gt;add&lt;/code&gt; with concrete types substituted for the generic ones, which is what happens when we call this method with &lt;code&gt;String&lt;/code&gt; values. We&amp;rsquo;ll discuss generics in Chapter 10. This signature gives us the clues we need to understand the tricky bits of the &lt;code&gt;+&lt;/code&gt; operator.</source>
          <target state="translated">Esta no es la firma exacta que est&amp;aacute; en la biblioteca est&amp;aacute;ndar: en la biblioteca est&amp;aacute;ndar, &lt;code&gt;add&lt;/code&gt; se define usando gen&amp;eacute;ricos. Aqu&amp;iacute;, estamos viendo la firma de &lt;code&gt;add&lt;/code&gt; con tipos concretos sustituidos por los gen&amp;eacute;ricos, que es lo que sucede cuando llamamos a este m&amp;eacute;todo con valores &lt;code&gt;String&lt;/code&gt; . Discutiremos los gen&amp;eacute;ricos en el Cap&amp;iacute;tulo 10. Esta firma nos da las pistas que necesitamos para comprender los aspectos complicados del operador &lt;code&gt;+&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="677e3e0ad58a3857efcf5b71bd28f251f1ad71c2" translate="yes" xml:space="preserve">
          <source>This isn&amp;rsquo;t the last you&amp;rsquo;ll see of concurrency in this book: the project in Chapter 20 will use the concepts in this chapter in a more realistic situation than the smaller examples discussed here.</source>
          <target state="translated">Esta no es la &amp;uacute;ltima vez que ver&amp;aacute; simultaneidad en este libro: el proyecto del Cap&amp;iacute;tulo 20 utilizar&amp;aacute; los conceptos de este cap&amp;iacute;tulo en una situaci&amp;oacute;n m&amp;aacute;s realista que los ejemplos m&amp;aacute;s peque&amp;ntilde;os que se analizan aqu&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="c724cabc6d2e28a46495b5e9f7308161c3ff4773" translate="yes" xml:space="preserve">
          <source>This isn't allowed, but using a trait to implement a method is a good solution. Example:</source>
          <target state="translated">Esto no está permitido,pero usar un rasgo para implementar un método es una buena solución.Ejemplo:</target>
        </trans-unit>
        <trans-unit id="89a100ed08885eb96e8a08b563ffa2fce44e1756" translate="yes" xml:space="preserve">
          <source>This isn't allowed, but using a trait to implement a method or constant is a good solution. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c15fbb2556c65982174521dc6e82a15681dc164d" translate="yes" xml:space="preserve">
          <source>This isn't typically the method you want; these addresses don't typically function on modern systems. Use &lt;code&gt;to_ipv6_mapped&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca75bc59c45502aa721dfcf6b2008b560ce93b8c" translate="yes" xml:space="preserve">
          <source>This issue also ties into the second problem: although &lt;code&gt;query&lt;/code&gt; and &lt;code&gt;filename&lt;/code&gt; are configuration variables to our program, variables like &lt;code&gt;contents&lt;/code&gt; are used to perform the program&amp;rsquo;s logic. The longer &lt;code&gt;main&lt;/code&gt; becomes, the more variables we&amp;rsquo;ll need to bring into scope; the more variables we have in scope, the harder it will be to keep track of the purpose of each. It&amp;rsquo;s best to group the configuration variables into one structure to make their purpose clear.</source>
          <target state="translated">Este problema tambi&amp;eacute;n se relaciona con el segundo problema: aunque la &lt;code&gt;query&lt;/code&gt; y el &lt;code&gt;filename&lt;/code&gt; son variables de configuraci&amp;oacute;n de nuestro programa, variables como el &lt;code&gt;contents&lt;/code&gt; se utilizan para realizar la l&amp;oacute;gica del programa. Cuanto m&amp;aacute;s largo sea el &lt;code&gt;main&lt;/code&gt; , m&amp;aacute;s variables tendremos que incorporar al alcance; cuantas m&amp;aacute;s variables tengamos en el alcance, m&amp;aacute;s dif&amp;iacute;cil ser&amp;aacute; hacer un seguimiento del prop&amp;oacute;sito de cada una. Es mejor agrupar las variables de configuraci&amp;oacute;n en una estructura para aclarar su prop&amp;oacute;sito.</target>
        </trans-unit>
        <trans-unit id="f6ff2f3673f7e2d10b1136073892f6a7e26909fe" translate="yes" xml:space="preserve">
          <source>This iterator is &lt;a href=&quot;../iter/trait.fusediterator&quot;&gt;fused&lt;/a&gt;, but the specific values of &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; after iteration has finished are &lt;strong&gt;unspecified&lt;/strong&gt; other than that &lt;a href=&quot;#method.is_empty&quot;&gt;&lt;code&gt;.is_empty()&lt;/code&gt;&lt;/a&gt; will return &lt;code&gt;true&lt;/code&gt; once no more values will be produced.</source>
          <target state="translated">Este iterador est&amp;aacute; &lt;a href=&quot;../iter/trait.fusediterator&quot;&gt;fusionado&lt;/a&gt; , pero los valores espec&amp;iacute;ficos de &lt;code&gt;start&lt;/code&gt; y &lt;code&gt;end&lt;/code&gt; vez finalizada la iteraci&amp;oacute;n &lt;strong&gt;no&lt;/strong&gt; est&amp;aacute;n &lt;strong&gt;especificados,&lt;/strong&gt; aparte de eso &lt;a href=&quot;#method.is_empty&quot;&gt; &lt;code&gt;.is_empty()&lt;/code&gt; &lt;/a&gt; devolver&amp;aacute; &lt;code&gt;true&lt;/code&gt; una vez que no se produzcan m&amp;aacute;s valores.</target>
        </trans-unit>
        <trans-unit id="b1db674404809b8384b33fb85e1f59e9aa55c87a" translate="yes" xml:space="preserve">
          <source>This iterator is &lt;a href=&quot;../iter/trait.fusediterator&quot;&gt;fused&lt;/a&gt;, but the specific values of &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; after iteration has finished are &lt;strong&gt;unspecified&lt;/strong&gt; other than that &lt;a href=&quot;struct.rangeinclusive#method.is_empty&quot;&gt;&lt;code&gt;.is_empty()&lt;/code&gt;&lt;/a&gt; will return &lt;code&gt;true&lt;/code&gt; once no more values will be produced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ff5b740b07569a5d9914bbdea6a0fe28474b82" translate="yes" xml:space="preserve">
          <source>This iterator is returned from the &lt;a href=&quot;fn.read_dir&quot;&gt;&lt;code&gt;read_dir&lt;/code&gt;&lt;/a&gt; function of this module and will yield instances of &lt;a href=&quot;../io/type.result&quot;&gt;&lt;code&gt;io::Result&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;struct.direntry&quot;&gt;&lt;code&gt;DirEntry&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;. Through a &lt;a href=&quot;struct.direntry&quot;&gt;&lt;code&gt;DirEntry&lt;/code&gt;&lt;/a&gt; information like the entry's path and possibly other metadata can be learned.</source>
          <target state="translated">Este iterador se devuelve del &lt;a href=&quot;fn.read_dir&quot;&gt; &lt;code&gt;read_dir&lt;/code&gt; &lt;/a&gt;funci&amp;oacute;n read_dir de este m&amp;oacute;dulo y producir&amp;aacute; instancias de&lt;a href=&quot;../io/type.result&quot;&gt; &lt;code&gt;io::Result&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;struct.direntry&quot;&gt; &lt;code&gt;DirEntry&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; . A trav&amp;eacute;s de un&lt;a href=&quot;struct.direntry&quot;&gt; &lt;code&gt;DirEntry&lt;/code&gt; se puede aprender&lt;/a&gt; informaci&amp;oacute;n como la ruta de la entrada y posiblemente otros metadatos.</target>
        </trans-unit>
        <trans-unit id="039cfdd22f7232d788dc3924aaf58e6af89b9b42" translate="yes" xml:space="preserve">
          <source>This iterator will block whenever &lt;a href=&quot;../../iter/trait.iterator#tymethod.next&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt; is called, waiting for a new message, and &lt;a href=&quot;../../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; will be returned if the corresponding channel has hung up.</source>
          <target state="translated">Este iterador se bloquear&amp;aacute; cada vez que se llame a &lt;a href=&quot;../../iter/trait.iterator#tymethod.next&quot;&gt; &lt;code&gt;next&lt;/code&gt; &lt;/a&gt; , esperando un nuevo mensaje, y se devolver&amp;aacute; &lt;a href=&quot;../../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; si el canal correspondiente ha colgado.</target>
        </trans-unit>
        <trans-unit id="47622e0905704752b067e8fb130b53a4d875da6d" translate="yes" xml:space="preserve">
          <source>This iterator will block whenever &lt;a href=&quot;../../iter/trait.iterator#tymethod.next&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt; is called, waiting for a new message, and &lt;a href=&quot;../../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; will be returned when the corresponding channel has hung up.</source>
          <target state="translated">Este iterador se bloquear&amp;aacute; cada vez que se llame a &lt;a href=&quot;../../iter/trait.iterator#tymethod.next&quot;&gt; &lt;code&gt;next&lt;/code&gt; &lt;/a&gt; , esperando un nuevo mensaje, y se devolver&amp;aacute; &lt;a href=&quot;../../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; cuando el canal correspondiente haya colgado.</target>
        </trans-unit>
        <trans-unit id="3d5f1a4f383a40c5608e98cdb7f233b0d0bd50b4" translate="yes" xml:space="preserve">
          <source>This iterator will never block the caller in order to wait for data to become available. Instead, it will return &lt;a href=&quot;../../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Este iterador nunca bloquear&amp;aacute; a la persona que llama para esperar a que los datos est&amp;eacute;n disponibles. En su lugar, devolver&amp;aacute; &lt;a href=&quot;../../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2ded90014878b45a9d1013952a0eeccef1815fa3" translate="yes" xml:space="preserve">
          <source>This iterator yields mutable references to the slice's elements, so while the element type of the slice is &lt;code&gt;i32&lt;/code&gt;, the element type of the iterator is &lt;code&gt;&amp;amp;mut i32&lt;/code&gt;.</source>
          <target state="translated">Este iterador produce referencias mutables a los elementos del segmento, por lo que mientras el tipo de elemento del segmento es &lt;code&gt;i32&lt;/code&gt; , el tipo de elemento del iterador es &lt;code&gt;&amp;amp;mut i32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f11293328eb4e550149e3eb11d18b4b99dadeb4a" translate="yes" xml:space="preserve">
          <source>This key uses the fastest possible implementation available to it for the target platform. It is instantiated with the &lt;a href=&quot;../macro.thread_local&quot;&gt;&lt;code&gt;thread_local!&lt;/code&gt;&lt;/a&gt; macro and the primary method is the &lt;a href=&quot;struct.localkey#method.with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Esta clave utiliza la implementaci&amp;oacute;n m&amp;aacute;s r&amp;aacute;pida posible disponible para la plataforma de destino. &amp;iexcl;Se &lt;a href=&quot;../macro.thread_local&quot;&gt; &lt;code&gt;thread_local!&lt;/code&gt; &lt;/a&gt; instancia con thread_local! macro y el m&amp;eacute;todo principal es el m&amp;eacute;todo &lt;a href=&quot;struct.localkey#method.with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8ba72c9f8d060c616c313ff46104db0834e023c2" translate="yes" xml:space="preserve">
          <source>This kind of reordering is handled transparently by the CPU.</source>
          <target state="translated">Este tipo de reordenación se maneja de forma transparente por la CPU.</target>
        </trans-unit>
        <trans-unit id="01e9e67a62e244fe3547a3a6a38b452018a02bd0" translate="yes" xml:space="preserve">
          <source>This kind of string &lt;em&gt;can&lt;/em&gt; be mutated:</source>
          <target state="translated">Este tipo de cadena &lt;em&gt;se&lt;/em&gt; puede modificar:</target>
        </trans-unit>
        <trans-unit id="a40000b09a25d1541d4b670c6d1a695e653d4397" translate="yes" xml:space="preserve">
          <source>This last example is different because it is not possible to use the suffix syntax with a floating point literal ending in a period. &lt;code&gt;2.f64&lt;/code&gt; would attempt to call a method named &lt;code&gt;f64&lt;/code&gt; on &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">Este &amp;uacute;ltimo ejemplo es diferente porque no es posible usar la sintaxis de sufijo con un literal de coma flotante que termina en un punto. &lt;code&gt;2.f64&lt;/code&gt; intentar&amp;iacute;a llamar a un m&amp;eacute;todo llamado &lt;code&gt;f64&lt;/code&gt; en &lt;code&gt;2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d48b41e91473a0fe92d3d1ed63ecf51de63aefff" translate="yes" xml:space="preserve">
          <source>This length is in bytes, not &lt;a href=&quot;../char/index&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;s or graphemes. In other words, it may not be what a human considers the length of the string.</source>
          <target state="translated">Esta longitud es en bytes, no &lt;a href=&quot;../char/index&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt; s o grafemas. En otras palabras, puede que no sea lo que un humano considera la longitud de la cuerda.</target>
        </trans-unit>
        <trans-unit id="73dde2c319f588f84c6b8fc0596849d35bbf8b64" translate="yes" xml:space="preserve">
          <source>This length is in bytes, not &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;s or graphemes. In other words, it may not be what a human considers the length of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="903d848487fc64b3813a8038fcea8db3d845066a" translate="yes" xml:space="preserve">
          <source>This length is in bytes, not &lt;a href=&quot;char/index&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;s or graphemes. In other words, it may not be what a human considers the length of the string.</source>
          <target state="translated">Esta longitud es en bytes, no &lt;a href=&quot;char/index&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt; s o grafemas. En otras palabras, puede que no sea lo que un humano considera la longitud de la cuerda.</target>
        </trans-unit>
        <trans-unit id="7b4fe84d99fc580ad8ef75775e9a6a1acf338c01" translate="yes" xml:space="preserve">
          <source>This length is in bytes, not &lt;a href=&quot;primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;s or graphemes. In other words, it may not be what a human considers the length of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f8980a7dcbb36debff75ad398d722c2e476b435" translate="yes" xml:space="preserve">
          <source>This limitation may be removed in a future version of Rust.</source>
          <target state="translated">Esta limitación puede ser eliminada en una futura versión de Rust.</target>
        </trans-unit>
        <trans-unit id="65d7d6e48995b9a8b70ff571d23a4947777c0d68" translate="yes" xml:space="preserve">
          <source>This limitation on the size &lt;code&gt;N&lt;/code&gt; exists because Rust does not yet support code that is generic over the size of an array type. &lt;code&gt;[Foo; 3]&lt;/code&gt; and &lt;code&gt;[Bar; 3]&lt;/code&gt; are instances of same generic type &lt;code&gt;[T; 3]&lt;/code&gt;, but &lt;code&gt;[Foo; 3]&lt;/code&gt; and &lt;code&gt;[Foo; 5]&lt;/code&gt; are entirely different types. As a stopgap, trait implementations are statically generated up to size 32.</source>
          <target state="translated">Esta limitaci&amp;oacute;n en el tama&amp;ntilde;o &lt;code&gt;N&lt;/code&gt; existe porque Rust a&amp;uacute;n no admite c&amp;oacute;digo gen&amp;eacute;rico sobre el tama&amp;ntilde;o de un tipo de matriz. &lt;code&gt;[Foo; 3]&lt;/code&gt; y &lt;code&gt;[Bar; 3]&lt;/code&gt; son instancias del mismo tipo gen&amp;eacute;rico &lt;code&gt;[T; 3]&lt;/code&gt; , pero &lt;code&gt;[Foo; 3]&lt;/code&gt; y &lt;code&gt;[Foo; 5]&lt;/code&gt; son tipos completamente diferentes. Como medida provisional, las implementaciones de rasgos se generan est&amp;aacute;ticamente hasta el tama&amp;ntilde;o 32.</target>
        </trans-unit>
        <trans-unit id="08204384af7f77c5b07543f234ee809fc102751e" translate="yes" xml:space="preserve">
          <source>This line brings &lt;code&gt;std::io&lt;/code&gt; and &lt;code&gt;std::io::Write&lt;/code&gt; into scope.</source>
          <target state="translated">Esta l&amp;iacute;nea trae &lt;code&gt;std::io&lt;/code&gt; y &lt;code&gt;std::io::Write&lt;/code&gt; al alcance.</target>
        </trans-unit>
        <trans-unit id="c84219e32c60c562866367e57dce5465f094cc72" translate="yes" xml:space="preserve">
          <source>This line creates a new empty string called &lt;code&gt;s&lt;/code&gt;, which we can then load data into. Often, we&amp;rsquo;ll have some initial data that we want to start the string with. For that, we use the &lt;code&gt;to_string&lt;/code&gt; method, which is available on any type that implements the &lt;code&gt;Display&lt;/code&gt; trait, as string literals do. Listing 8-12 shows two examples.</source>
          <target state="translated">Esta l&amp;iacute;nea crea una nueva cadena vac&amp;iacute;a llamada &lt;code&gt;s&lt;/code&gt; , en la que luego podemos cargar datos. A menudo, tendremos algunos datos iniciales con los que queremos comenzar la cadena. Para eso, usamos la &lt;code&gt;to_string&lt;/code&gt; m&amp;eacute;todo , que est&amp;aacute; disponible en cualquier tipo que implemente el rasgo &lt;code&gt;Display&lt;/code&gt; , como lo hacen los literales de cadena. El listado 8-12 muestra dos ejemplos.</target>
        </trans-unit>
        <trans-unit id="c6d1af215b1b045e01e47bacfa1ae42f66655d33" translate="yes" xml:space="preserve">
          <source>This line creates a new variable named &lt;code&gt;foo&lt;/code&gt; and binds it to the value of the &lt;code&gt;bar&lt;/code&gt; variable. In Rust, variables are immutable by default. We&amp;rsquo;ll be discussing this concept in detail in the &lt;a href=&quot;ch03-01-variables-and-mutability#variables-and-mutability&quot;&gt;&amp;ldquo;Variables and Mutability&amp;rdquo;&lt;/a&gt; section in Chapter 3. The following example shows how to use &lt;code&gt;mut&lt;/code&gt; before the variable name to make a variable mutable:</source>
          <target state="translated">Esta l&amp;iacute;nea crea una nueva variable llamada &lt;code&gt;foo&lt;/code&gt; y la une al valor de la variable &lt;code&gt;bar&lt;/code&gt; . En Rust, las variables son inmutables por defecto. Discutiremos este concepto en detalle en la secci&amp;oacute;n &lt;a href=&quot;ch03-01-variables-and-mutability#variables-and-mutability&quot;&gt;&amp;ldquo;Variables y mutabilidad&amp;rdquo;&lt;/a&gt; en el Cap&amp;iacute;tulo 3. El siguiente ejemplo muestra c&amp;oacute;mo usar &lt;code&gt;mut&lt;/code&gt; antes del nombre de la variable para hacer una variable mutable:</target>
        </trans-unit>
        <trans-unit id="f414052fdd19a240f8f368c285f45f2ce792b467" translate="yes" xml:space="preserve">
          <source>This line does all the work in this little program: it prints text to the screen. There are four important details to notice here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9eacc9407c12ec62c5abf0aec26e9081e77d6a" translate="yes" xml:space="preserve">
          <source>This line does all the work in this little program: it prints text to the screen. There are four important details to notice here. First, Rust style is to indent with four spaces, not a tab.</source>
          <target state="translated">Esta línea hace todo el trabajo en este pequeño programa:imprime el texto en la pantalla.Hay cuatro detalles importantes que hay que tener en cuenta aquí.Primero,el estilo Rust es sangrar con cuatro espacios,no un tabulador.</target>
        </trans-unit>
        <trans-unit id="6bb12529672d4d91a104d1b5e1346fffbd28c07c" translate="yes" xml:space="preserve">
          <source>This line prints the string we saved the user&amp;rsquo;s input in. The set of curly brackets, &lt;code&gt;{}&lt;/code&gt;, is a placeholder: think of &lt;code&gt;{}&lt;/code&gt; as little crab pincers that hold a value in place. You can print more than one value using curly brackets: the first set of curly brackets holds the first value listed after the format string, the second set holds the second value, and so on. Printing multiple values in one call to &lt;code&gt;println!&lt;/code&gt; would look like this:</source>
          <target state="translated">Esta l&amp;iacute;nea imprime la cadena en la que guardamos la entrada del usuario. El conjunto de llaves, &lt;code&gt;{}&lt;/code&gt; , es un marcador de posici&amp;oacute;n: piense en &lt;code&gt;{}&lt;/code&gt; como peque&amp;ntilde;as pinzas de cangrejo que mantienen un valor en su lugar. Puede imprimir m&amp;aacute;s de un valor utilizando corchetes: el primer conjunto de corchetes contiene el primer valor enumerado despu&amp;eacute;s de la cadena de formato, el segundo conjunto contiene el segundo valor, y as&amp;iacute; sucesivamente. Imprimir varios valores en una llamada a &lt;code&gt;println!&lt;/code&gt; se ver&amp;iacute;a as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="250f132a4cd3e14f1923c5e6c25a460649fabde4" translate="yes" xml:space="preserve">
          <source>This list is intended to grow over time and it is not recommended to exhaustively match against it.</source>
          <target state="translated">Esta lista está pensada para crecer con el tiempo y no se recomienda hacer una comparación exhaustiva con ella.</target>
        </trans-unit>
        <trans-unit id="308882c8bb15621452c72c71d1e862ba6ca42816" translate="yes" xml:space="preserve">
          <source>This longer form is equivalent to the example in the previous section but is more verbose. We place trait bounds with the declaration of the generic type parameter after a colon and inside angle brackets.</source>
          <target state="translated">Esta forma más larga equivale al ejemplo de la sección anterior pero es más verbosa.Ponemos límites de rasgos con la declaración del parámetro de tipo genérico después de los dos puntos y dentro de los corchetes de los ángulos.</target>
        </trans-unit>
        <trans-unit id="cc7e694b75fd14e7d2942129d96e2363378281a2" translate="yes" xml:space="preserve">
          <source>This looks very similar to the previous code, so we might assume that the way it works would be the same: that is, the second line would make a copy of the value in &lt;code&gt;s1&lt;/code&gt; and bind it to &lt;code&gt;s2&lt;/code&gt;. But this isn&amp;rsquo;t quite what happens.</source>
          <target state="translated">Esto se parece mucho al c&amp;oacute;digo anterior, por lo que podr&amp;iacute;amos suponer que la forma en que funciona ser&amp;iacute;a la misma: es decir, la segunda l&amp;iacute;nea har&amp;iacute;a una copia del valor en &lt;code&gt;s1&lt;/code&gt; y lo vincular&amp;iacute;a a &lt;code&gt;s2&lt;/code&gt; . Pero esto no es exactamente lo que sucede.</target>
        </trans-unit>
        <trans-unit id="1be98a7c6692df395b8bd9dd115eb38bb55be823" translate="yes" xml:space="preserve">
          <source>This macro accepts a 'writer', a format string, and a list of arguments. Arguments will be formatted according to the specified format string and the result will be passed to the writer. The writer may be any value with a &lt;code&gt;write_fmt&lt;/code&gt; method; generally this comes from an implementation of either the &lt;a href=&quot;fmt/trait.write&quot;&gt;&lt;code&gt;fmt::Write&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&quot;io/trait.write&quot;&gt;&lt;code&gt;io::Write&lt;/code&gt;&lt;/a&gt; trait. The macro returns whatever the &lt;code&gt;write_fmt&lt;/code&gt; method returns; commonly a &lt;a href=&quot;fmt/type.result&quot;&gt;&lt;code&gt;fmt::Result&lt;/code&gt;&lt;/a&gt;, or an &lt;a href=&quot;io/type.result&quot;&gt;&lt;code&gt;io::Result&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3025eb870ba9e5f6ef770103ab20b04b0f42de4f" translate="yes" xml:space="preserve">
          <source>This macro accepts a format string, a list of arguments, and a 'writer'. Arguments will be formatted according to the specified format string and the result will be passed to the writer. The writer may be any value with a &lt;code&gt;write_fmt&lt;/code&gt; method; generally this comes from an implementation of either the &lt;a href=&quot;fmt/trait.write&quot;&gt;&lt;code&gt;fmt::Write&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&quot;io/trait.write&quot;&gt;&lt;code&gt;io::Write&lt;/code&gt;&lt;/a&gt; trait. The macro returns whatever the &lt;code&gt;write_fmt&lt;/code&gt; method returns; commonly a &lt;a href=&quot;fmt/type.result&quot;&gt;&lt;code&gt;fmt::Result&lt;/code&gt;&lt;/a&gt;, or an &lt;a href=&quot;io/type.result&quot;&gt;&lt;code&gt;io::Result&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9c26f6e16b6bec90033e045df684b9983904c03" translate="yes" xml:space="preserve">
          <source>This macro accepts a format string, a list of arguments, and a 'writer'. Arguments will be formatted according to the specified format string and the result will be passed to the writer. The writer may be any value with a &lt;code&gt;write_fmt&lt;/code&gt; method; generally this comes from an implementation of either the &lt;a href=&quot;fmt/trait.write&quot;&gt;&lt;code&gt;std::fmt::Write&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&quot;io/trait.write&quot;&gt;&lt;code&gt;std::io::Write&lt;/code&gt;&lt;/a&gt; trait. The macro returns whatever the &lt;code&gt;write_fmt&lt;/code&gt; method returns; commonly a &lt;a href=&quot;fmt/type.result&quot;&gt;&lt;code&gt;std::fmt::Result&lt;/code&gt;&lt;/a&gt;, or an &lt;a href=&quot;io/type.result&quot;&gt;&lt;code&gt;io::Result&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esta macro acepta una cadena de formato, una lista de argumentos y un 'escritor'. Los argumentos se formatear&amp;aacute;n de acuerdo con la cadena de formato especificada y el resultado se pasar&amp;aacute; al escritor. El escritor puede tener cualquier valor con un m&amp;eacute;todo &lt;code&gt;write_fmt&lt;/code&gt; ; generalmente, esto proviene de una implementaci&amp;oacute;n del &lt;a href=&quot;fmt/trait.write&quot;&gt; &lt;code&gt;std::fmt::Write&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;io/trait.write&quot;&gt; &lt;code&gt;std::io::Write&lt;/code&gt; &lt;/a&gt; . La macro devuelve lo que devuelve el m&amp;eacute;todo &lt;code&gt;write_fmt&lt;/code&gt; ; com&amp;uacute;nmente un &lt;a href=&quot;fmt/type.result&quot;&gt; &lt;code&gt;std::fmt::Result&lt;/code&gt; &lt;/a&gt; , o un &lt;a href=&quot;io/type.result&quot;&gt; &lt;code&gt;io::Result&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5250c44d93ce30f02a5f809915ffe3743184cf00" translate="yes" xml:space="preserve">
          <source>This macro bakes in propagation of &lt;a href=&quot;enum.poll#variant.Pending&quot;&gt;&lt;code&gt;Pending&lt;/code&gt;&lt;/a&gt; signals by returning early.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80d761ee9febd1152f2043eb4792d1bde7232938" translate="yes" xml:space="preserve">
          <source>This macro bakes in propagation of &lt;code&gt;Pending&lt;/code&gt; signals by returning early.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9104464c61f2440f3d22798d14bf9b51373598ab" translate="yes" xml:space="preserve">
          <source>This macro functions by taking a formatting string literal containing &lt;code&gt;{}&lt;/code&gt; for each additional argument passed. &lt;code&gt;format_args!&lt;/code&gt; prepares the additional parameters to ensure the output can be interpreted as a string and canonicalizes the arguments into a single type. Any value that implements the &lt;a href=&quot;fmt/trait.display&quot;&gt;&lt;code&gt;Display&lt;/code&gt;&lt;/a&gt; trait can be passed to &lt;code&gt;format_args!&lt;/code&gt;, as can any &lt;a href=&quot;fmt/trait.debug&quot;&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/a&gt; implementation be passed to a &lt;code&gt;{:?}&lt;/code&gt; within the formatting string.</source>
          <target state="translated">Esta macro funciona tomando una cadena de formato literal que contiene &lt;code&gt;{}&lt;/code&gt; para cada argumento adicional pasado. &lt;code&gt;format_args!&lt;/code&gt; prepara los par&amp;aacute;metros adicionales para garantizar que la salida se pueda interpretar como una cadena y canonicaliza los argumentos en un solo tipo. &amp;iexcl;Cualquier valor que implemente el rasgo &lt;a href=&quot;fmt/trait.display&quot;&gt; &lt;code&gt;Display&lt;/code&gt; &lt;/a&gt; se puede pasar a &lt;code&gt;format_args!&lt;/code&gt; , al igual que cualquier implementaci&amp;oacute;n de &lt;a href=&quot;fmt/trait.debug&quot;&gt; &lt;code&gt;Debug&lt;/code&gt; &lt;/a&gt; puede pasar a &lt;code&gt;{:?}&lt;/code&gt; dentro de la cadena de formato.</target>
        </trans-unit>
        <trans-unit id="c0f46ebdcffb6d5939dcac636e4ba0ac8074178d" translate="yes" xml:space="preserve">
          <source>This macro has a second form, where a custom panic message can be provided with or without arguments for formatting. See &lt;a href=&quot;fmt/index&quot;&gt;&lt;code&gt;std::fmt&lt;/code&gt;&lt;/a&gt; for syntax for this form.</source>
          <target state="translated">Esta macro tiene una segunda forma, donde se puede proporcionar un mensaje de p&amp;aacute;nico personalizado con o sin argumentos para formatear. Consulte &lt;a href=&quot;fmt/index&quot;&gt; &lt;code&gt;std::fmt&lt;/code&gt; &lt;/a&gt; para conocer la sintaxis de este formulario.</target>
        </trans-unit>
        <trans-unit id="1cb7c87fdbeb8a27a8d17493d87d56c13827aded" translate="yes" xml:space="preserve">
          <source>This macro has a second form, where a custom panic message can be provided with or without arguments for formatting. See &lt;a href=&quot;https://doc.rust-lang.org/core/fmt/index.html&quot;&gt;&lt;code&gt;std::fmt&lt;/code&gt;&lt;/a&gt; for syntax for this form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b5986245d717af402afebe47105d05cdf22c051" translate="yes" xml:space="preserve">
          <source>This macro is provided in the standard library and will detect at runtime whether the specified CPU feature is detected. This does &lt;strong&gt;not&lt;/strong&gt; resolve at compile time unless the specified feature is already enabled for the entire crate. Runtime detection currently relies mostly on the &lt;code&gt;cpuid&lt;/code&gt; instruction.</source>
          <target state="translated">Esta macro se proporciona en la biblioteca est&amp;aacute;ndar y detectar&amp;aacute; en tiempo de ejecuci&amp;oacute;n si se detecta la funci&amp;oacute;n de CPU especificada. Esto no &lt;strong&gt;se&lt;/strong&gt; resuelve en el momento de la compilaci&amp;oacute;n a menos que la funci&amp;oacute;n especificada ya est&amp;eacute; habilitada para toda la caja. La detecci&amp;oacute;n en tiempo de ejecuci&amp;oacute;n actualmente se basa principalmente en la instrucci&amp;oacute;n &lt;code&gt;cpuid&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c76b02a9e85e30ad24e030882216f3064330d6d" translate="yes" xml:space="preserve">
          <source>This macro is the perfect way to assert conditions in example code and in tests. &lt;code&gt;panic!&lt;/code&gt; is closely tied with the &lt;code&gt;unwrap&lt;/code&gt; method of both &lt;a href=&quot;option/enum.option#method.unwrap&quot;&gt;&lt;code&gt;Option&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;result/enum.result#method.unwrap&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt; enums. Both implementations call &lt;code&gt;panic!&lt;/code&gt; when they are set to &lt;a href=&quot;option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;result/enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; variants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80d199c9b2bbee396aca26a7f3417fd4e87ff814" translate="yes" xml:space="preserve">
          <source>This macro is the perfect way to assert conditions in example code and in tests. &lt;code&gt;panic!&lt;/code&gt; is closely tied with the &lt;code&gt;unwrap&lt;/code&gt; method of both &lt;a href=&quot;option/enum.option#method.unwrap&quot;&gt;&lt;code&gt;Option&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;result/enum.result#method.unwrap&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt; enums. Both implementations call &lt;code&gt;panic!&lt;/code&gt; when they are set to None or Err variants.</source>
          <target state="translated">Esta macro es la manera perfecta de afirmar condiciones en c&amp;oacute;digo de ejemplo y en pruebas. &lt;code&gt;panic!&lt;/code&gt; est&amp;aacute; estrechamente relacionado con el m&amp;eacute;todo de &lt;code&gt;unwrap&lt;/code&gt; de las enumeraciones &lt;a href=&quot;option/enum.option#method.unwrap&quot;&gt; &lt;code&gt;Option&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;result/enum.result#method.unwrap&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt; . Ambas implementaciones llaman &lt;code&gt;panic!&lt;/code&gt; cuando se establecen en las variantes None o Err.</target>
        </trans-unit>
        <trans-unit id="d0ebce932633e1b0cd797b4ddeb6ac5a11d9e6f7" translate="yes" xml:space="preserve">
          <source>This macro is used to inject panic into a Rust thread, causing the thread to panic entirely. Each thread's panic can be reaped as the &lt;a href=&quot;boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;any/trait.any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; type, and the single-argument form of the &lt;code&gt;panic!&lt;/code&gt; macro will be the value which is transmitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf0774da3df0d29e08106daf482fff334bcea403" translate="yes" xml:space="preserve">
          <source>This macro is used to inject panic into a Rust thread, causing the thread to panic entirely. Each thread's panic can be reaped as the &lt;code&gt;Box&amp;lt;Any&amp;gt;&lt;/code&gt; type, and the single-argument form of the &lt;code&gt;panic!&lt;/code&gt; macro will be the value which is transmitted.</source>
          <target state="translated">Esta macro se usa para inyectar p&amp;aacute;nico en un hilo de Rust, haciendo que el hilo entre en p&amp;aacute;nico por completo. &amp;iexcl;El p&amp;aacute;nico de cada hilo se puede cosechar como el tipo &lt;code&gt;Box&amp;lt;Any&amp;gt;&lt;/code&gt; y la forma de un solo argumento del &lt;code&gt;panic!&lt;/code&gt; macro ser&amp;aacute; el valor que se transmite.</target>
        </trans-unit>
        <trans-unit id="e7802aaf0db102edbab92f402c03063ff3b73be4" translate="yes" xml:space="preserve">
          <source>This macro only takes one argument which is a string literal of the feature being tested for. The feature names supported are the lowercase versions of the ones defined by Intel in &lt;a href=&quot;https://software.intel.com/sites/landingpage/IntrinsicsGuide&quot;&gt;their documentation&lt;/a&gt;.</source>
          <target state="translated">Esta macro solo toma un argumento que es una cadena literal de la caracter&amp;iacute;stica que se est&amp;aacute; probando. Los nombres de las funciones admitidas son las versiones en min&amp;uacute;sculas de las definidas por Intel en &lt;a href=&quot;https://software.intel.com/sites/landingpage/IntrinsicsGuide&quot;&gt;su documentaci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4bd8a54709ee381edf667e1b754c2dd4776028dd" translate="yes" xml:space="preserve">
          <source>This macro produces a value of type &lt;a href=&quot;fmt/struct.arguments&quot;&gt;&lt;code&gt;fmt::Arguments&lt;/code&gt;&lt;/a&gt;. This value can be passed to the macros within &lt;a href=&quot;fmt/index&quot;&gt;&lt;code&gt;std::fmt&lt;/code&gt;&lt;/a&gt; for performing useful redirection. All other formatting macros (&lt;a href=&quot;macro.format&quot;&gt;&lt;code&gt;format!&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;macro.write&quot;&gt;&lt;code&gt;write!&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;macro.println&quot;&gt;&lt;code&gt;println!&lt;/code&gt;&lt;/a&gt;, etc) are proxied through this one. &lt;code&gt;format_args!&lt;/code&gt;, unlike its derived macros, avoids heap allocations.</source>
          <target state="translated">Esta macro produce un valor de tipo &lt;a href=&quot;fmt/struct.arguments&quot;&gt; &lt;code&gt;fmt::Arguments&lt;/code&gt; &lt;/a&gt; . Este valor se puede pasar a las macros dentro de &lt;a href=&quot;fmt/index&quot;&gt; &lt;code&gt;std::fmt&lt;/code&gt; &lt;/a&gt; para realizar una redirecci&amp;oacute;n &amp;uacute;til. Todas las otras macros de formato ( &lt;a href=&quot;macro.format&quot;&gt; &lt;code&gt;format!&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;macro.write&quot;&gt; &lt;code&gt;write!&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;macro.println&quot;&gt; &lt;code&gt;println!&lt;/code&gt; &lt;/a&gt; , Etc) est&amp;aacute;n proxy a trav&amp;eacute;s de &amp;eacute;ste. &lt;code&gt;format_args!&lt;/code&gt; , a diferencia de sus macros derivadas, evita las asignaciones de mont&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="209265c4eb72c5eca06cd095d36df90048938379" translate="yes" xml:space="preserve">
          <source>This macro produces a value of type &lt;a href=&quot;fmt/struct.arguments&quot;&gt;&lt;code&gt;fmt::Arguments&lt;/code&gt;&lt;/a&gt;. This value can be passed to the macros within &lt;a href=&quot;https://doc.rust-lang.org/core/fmt/index.html&quot;&gt;&lt;code&gt;std::fmt&lt;/code&gt;&lt;/a&gt; for performing useful redirection. All other formatting macros (&lt;a href=&quot;macro.format&quot;&gt;&lt;code&gt;format!&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;macro.write&quot;&gt;&lt;code&gt;write!&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;macro.println&quot;&gt;&lt;code&gt;println!&lt;/code&gt;&lt;/a&gt;, etc) are proxied through this one. &lt;code&gt;format_args!&lt;/code&gt;, unlike its derived macros, avoids heap allocations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d449e18cd48bf8c444aeabc9c847abf69b5ab8d" translate="yes" xml:space="preserve">
          <source>This macro should be used when a crate uses a conditional compilation strategy to provide better error messages for erroneous conditions. It's the compiler-level form of &lt;a href=&quot;macro.panic&quot;&gt;&lt;code&gt;panic!&lt;/code&gt;&lt;/a&gt;, but emits an error during &lt;em&gt;compilation&lt;/em&gt; rather than at &lt;em&gt;runtime&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d49c196cc9f23d7594245f1cc87a1f518746592e" translate="yes" xml:space="preserve">
          <source>This macro should be used when a crate uses a conditional compilation strategy to provide better error messages for erroneous conditions. It's the compiler-level form of &lt;a href=&quot;macro.panic&quot;&gt;&lt;code&gt;panic!&lt;/code&gt;&lt;/a&gt;, which emits an error at &lt;em&gt;runtime&lt;/em&gt;, rather than during compilation.</source>
          <target state="translated">Esta macro debe usarse cuando una caja usa una estrategia de compilaci&amp;oacute;n condicional para proporcionar mejores mensajes de error para condiciones err&amp;oacute;neas. &amp;iexcl;Es la forma de &lt;a href=&quot;macro.panic&quot;&gt; &lt;code&gt;panic!&lt;/code&gt; &lt;/a&gt; nivel de compilador ! , que emite un error en &lt;em&gt;tiempo&lt;/em&gt; de &lt;em&gt;ejecuci&amp;oacute;n&lt;/em&gt; , en lugar de durante la compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="68d15cf83524f34dd8d8be7a2a8e7bed6740e783" translate="yes" xml:space="preserve">
          <source>This macro supports the same names that &lt;code&gt;#[target_feature]&lt;/code&gt; supports. Unlike &lt;code&gt;#[target_feature]&lt;/code&gt;, however, this macro does not support names separated with a comma. Instead testing for multiple features must be done through separate macro invocations for now.</source>
          <target state="translated">Esta macro admite los mismos nombres que admite &lt;code&gt;#[target_feature]&lt;/code&gt; . Sin embargo, a diferencia de &lt;code&gt;#[target_feature]&lt;/code&gt; , esta macro no admite nombres separados por comas. En su lugar, las pruebas para m&amp;uacute;ltiples funciones se deben realizar a trav&amp;eacute;s de invocaciones de macro independientes por ahora.</target>
        </trans-unit>
        <trans-unit id="fefc6add454f34259443790785050840eebbeb57" translate="yes" xml:space="preserve">
          <source>This macro takes any number of comma-separated identifiers, and concatenates them all into one, yielding an expression which is a new identifier. Note that hygiene makes it such that this macro cannot capture local variables. Also, as a general rule, macros are only allowed in item, statement or expression position. That means while you may use this macro for referring to existing variables, functions or modules etc, you cannot define a new one with it.</source>
          <target state="translated">Esta macro toma cualquier número de identificadores separados por comas,y los concatena todos en uno,produciendo una expresión que es un nuevo identificador.Nótese que la higiene es tal que este macro no puede capturar variables locales.Además,como regla general,las macros sólo se permiten en la posición de elemento,declaración o expresión.Esto significa que aunque se puede utilizar esta macro para referirse a variables,funciones o módulos existentes,etc.,no se puede definir una nueva con ella.</target>
        </trans-unit>
        <trans-unit id="a79ce9bb3fa69012483f80e7a1a2541065700d68" translate="yes" xml:space="preserve">
          <source>This macro takes any number of comma-separated literals, yielding an expression of type &lt;code&gt;&amp;amp;'static str&lt;/code&gt; which represents all of the literals concatenated left-to-right.</source>
          <target state="translated">Esta macro toma cualquier n&amp;uacute;mero de literales separados por comas, produciendo una expresi&amp;oacute;n de tipo &lt;code&gt;&amp;amp;'static str&lt;/code&gt; que representa todos los literales concatenados de izquierda a derecha.</target>
        </trans-unit>
        <trans-unit id="79fc3c2904becf8aa3c820c279472de0fe3a1f68" translate="yes" xml:space="preserve">
          <source>This macro will expand to the value of the named environment variable at compile time, yielding an expression of type &lt;code&gt;&amp;amp;'static str&lt;/code&gt;.</source>
          <target state="translated">Esta macro se expandir&amp;aacute; al valor de la variable de entorno nombrada en tiempo de compilaci&amp;oacute;n, produciendo una expresi&amp;oacute;n de tipo &lt;code&gt;&amp;amp;'static str&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="95e973b1ebc33842358cee19e0dba22c8a81f994" translate="yes" xml:space="preserve">
          <source>This macro will yield an expression of type &lt;code&gt;&amp;amp;'static [u8; N]&lt;/code&gt; which is the contents of the file.</source>
          <target state="translated">Esta macro producir&amp;aacute; una expresi&amp;oacute;n de tipo &lt;code&gt;&amp;amp;'static [u8; N]&lt;/code&gt; que es el contenido del archivo.</target>
        </trans-unit>
        <trans-unit id="9cdb0bb59a3aefac2ea084695df47352b8cc7f18" translate="yes" xml:space="preserve">
          <source>This macro will yield an expression of type &lt;code&gt;&amp;amp;'static str&lt;/code&gt; which is the contents of the file.</source>
          <target state="translated">Esta macro producir&amp;aacute; una expresi&amp;oacute;n de tipo &lt;code&gt;&amp;amp;'static str&lt;/code&gt; que es el contenido del archivo.</target>
        </trans-unit>
        <trans-unit id="8d3907f6b0e9a61a4bdb55de9a362a92915237c3" translate="yes" xml:space="preserve">
          <source>This macro will yield an expression of type &lt;code&gt;&amp;amp;'static str&lt;/code&gt; which is the stringification of all the tokens passed to the macro. No restrictions are placed on the syntax of the macro invocation itself.</source>
          <target state="translated">Esta macro producir&amp;aacute; una expresi&amp;oacute;n de tipo &lt;code&gt;&amp;amp;'static str&lt;/code&gt; que es la cadena de todos los tokens pasados ​​a la macro. No se imponen restricciones a la sintaxis de la propia invocaci&amp;oacute;n de macro.</target>
        </trans-unit>
        <trans-unit id="96f8e740156b1fe8242bb1857eb516b34c772e7e" translate="yes" xml:space="preserve">
          <source>This macro would parse the SQL statement inside it and check that it&amp;rsquo;s syntactically correct, which is much more complex processing than a &lt;code&gt;macro_rules!&lt;/code&gt; macro can do. The &lt;code&gt;sql!&lt;/code&gt; macro would be defined like this:</source>
          <target state="translated">Esta macro analizar&amp;iacute;a la instrucci&amp;oacute;n SQL dentro de ella y verificar&amp;iacute;a que sea sint&amp;aacute;cticamente correcta, lo cual es un procesamiento mucho m&amp;aacute;s complejo que una &lt;code&gt;macro_rules!&lt;/code&gt; macro puede hacer. El &lt;code&gt;sql!&lt;/code&gt; macro se definir&amp;iacute;a as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="f58f7dcc462ef7387fceff17b5cae04e3cbcbf04" translate="yes" xml:space="preserve">
          <source>This makes the trait implemented on all types in the scope. So if you try to implement it on another one after that, the implementations will conflict. Example:</source>
          <target state="translated">Esto hace que el rasgo implementado en todos los tipos en el ámbito de aplicación.Así que si intentas implementarlo en otro después de eso,las implementaciones entrarán en conflicto.Ejemplo:</target>
        </trans-unit>
        <trans-unit id="024ad2ae59c4dd5f5ee7d7c019680237dc88183b" translate="yes" xml:space="preserve">
          <source>This may be allowed at some point in the future, but the implementation is not yet complete. See the tracking issues for &lt;a href=&quot;https://github.com/rust-lang/rust/issues/69431&quot;&gt;&lt;code&gt;async&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/rust-lang/rust/issues/74935&quot;&gt;&lt;code&gt;?&lt;/code&gt;&lt;/a&gt; in &lt;code&gt;const fn&lt;/code&gt;, and (to support &lt;code&gt;for&lt;/code&gt; loops in &lt;code&gt;const fn&lt;/code&gt;) the tracking issues for &lt;a href=&quot;https://github.com/rust-lang/rust/issues/67792&quot;&gt;&lt;code&gt;impl const Trait for Ty&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/rust-lang/rust/issues/57349&quot;&gt;&lt;code&gt;&amp;amp;mut T&lt;/code&gt;&lt;/a&gt; in &lt;code&gt;const fn&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dafc2f14b4f56d8dc5d075ff34c826a36e387880" translate="yes" xml:space="preserve">
          <source>This may not actually increase the capacity:</source>
          <target state="translated">Es posible que esto no aumente la capacidad:</target>
        </trans-unit>
        <trans-unit id="af903b6fc00acf0d280f6c29b1e0e8d3aeb94082" translate="yes" xml:space="preserve">
          <source>This may only be called by &lt;code&gt;Read&lt;/code&gt;ers which guarantee that they will not read from buffers passed to &lt;code&gt;Read&lt;/code&gt; methods, and that the return value of the method accurately reflects the number of bytes that have been written to the head of the buffer.</source>
          <target state="translated">Esto s&amp;oacute;lo puede ser llamado por &lt;code&gt;Read&lt;/code&gt; ERS, que garant&amp;iacute;a de que no ser&amp;aacute;n le&amp;iacute;dos de los tampones pasados a &lt;code&gt;Read&lt;/code&gt; m&amp;eacute;todos, y que el valor de retorno del m&amp;eacute;todo refleja con precisi&amp;oacute;n el n&amp;uacute;mero de bytes que se han escrito en la cabecera de la memoria intermedia.</target>
        </trans-unit>
        <trans-unit id="14a8a7c42cf833272747226b7446d6fe81b3ec47" translate="yes" xml:space="preserve">
          <source>This may require additional type hints in the function body.</source>
          <target state="translated">Esto puede requerir indicaciones de tipo adicionales en el cuerpo de la función.</target>
        </trans-unit>
        <trans-unit id="ac8b21b0f73b2747acf512efef8390bcec866c71" translate="yes" xml:space="preserve">
          <source>This means iterator adapters can rely on the source not changing during iteration but they cannot rely on it in their Drop implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07ba109060bf875c034ba50fdb9ffdabfec4929" translate="yes" xml:space="preserve">
          <source>This means that &lt;code&gt;&amp;lt;T: 'a + ?Sized&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;T: 'b + Sized&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;T&amp;gt;&lt;/code&gt; are all permitted.</source>
          <target state="translated">Esto significa que &lt;code&gt;&amp;lt;T: 'a + ?Sized&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;T: 'b + Sized&amp;gt;&lt;/code&gt; y &lt;code&gt;&amp;lt;T&amp;gt;&lt;/code&gt; est&amp;aacute;n permitidos.</target>
        </trans-unit>
        <trans-unit id="7a8c1c98c2b07fe7a77662bf8cf1e31aa75a3d05" translate="yes" xml:space="preserve">
          <source>This means that any external crate referencing &lt;code&gt;implementation::api::f&lt;/code&gt; would receive a privacy violation, while the path &lt;code&gt;api::f&lt;/code&gt; would be allowed.</source>
          <target state="translated">Esto significa que cualquier caja externa que haga referencia a la &lt;code&gt;implementation::api::f&lt;/code&gt; recibir&amp;iacute;a una violaci&amp;oacute;n de privacidad, mientras que la ruta &lt;code&gt;api::f&lt;/code&gt; estar&amp;iacute;a permitida.</target>
        </trans-unit>
        <trans-unit id="be2e4dfa333e1a56bbed2f9ca40e5f02293eda70" translate="yes" xml:space="preserve">
          <source>This means that perhaps some of the preceding patterns are too general, this one is too specific or the ordering is incorrect.</source>
          <target state="translated">Esto significa que tal vez algunos de los patrones precedentes son demasiado generales,este es demasiado específico o el ordenamiento es incorrecto.</target>
        </trans-unit>
        <trans-unit id="3a6a30f5c049c4edc23b7fd66710a9051982b10a" translate="yes" xml:space="preserve">
          <source>This means that someone can specify such a function:</source>
          <target state="translated">Esto significa que alguien puede especificar tal función:</target>
        </trans-unit>
        <trans-unit id="cb26a69e23fbbf1b07ba0d9979e852887a91fd3d" translate="yes" xml:space="preserve">
          <source>This means that the contents of the first string above &lt;em&gt;will&lt;/em&gt; fit into a &lt;code&gt;char&lt;/code&gt; while the contents of the second string &lt;em&gt;will not&lt;/em&gt;. Trying to create a &lt;code&gt;char&lt;/code&gt; literal with the contents of the second string gives an error:</source>
          <target state="translated">Esto significa que el contenido de la primera cadena anterior &lt;em&gt;se&lt;/em&gt; encajan en un &lt;code&gt;char&lt;/code&gt; , mientras que el contenido de la segunda cadena &lt;em&gt;no lo har&amp;aacute;&lt;/em&gt; . Intentar crear un literal &lt;code&gt;char&lt;/code&gt; con el contenido de la segunda cadena da un error:</target>
        </trans-unit>
        <trans-unit id="f9131c9dc6b963db63fbff2769fe5ceda6bacdcc" translate="yes" xml:space="preserve">
          <source>This means that the operands don't have to be moved out of.</source>
          <target state="translated">Esto significa que los operandos no tienen que ser movidos.</target>
        </trans-unit>
        <trans-unit id="b2ca51239acb100a6dd5efb03e14c814a0a94286" translate="yes" xml:space="preserve">
          <source>This means that when &lt;code&gt;s&lt;/code&gt; reaches the end of &lt;code&gt;demo&lt;/code&gt;, its destructor gets exclusive access to its &lt;code&gt;&amp;amp;mut&lt;/code&gt;-borrowed string data. allowing another borrow of that string data (&lt;code&gt;p&lt;/code&gt;), to exist across the drop of &lt;code&gt;s&lt;/code&gt; would be a violation of the principle that &lt;code&gt;&amp;amp;mut&lt;/code&gt;-borrows have exclusive, unaliased access to their referenced data.</source>
          <target state="translated">Esto significa que cuando &lt;code&gt;s&lt;/code&gt; llega al final de la &lt;code&gt;demo&lt;/code&gt; straci&amp;oacute;n , su destructor obtiene acceso exclusivo a sus datos de cadena prestados por &lt;code&gt;&amp;amp;mut&lt;/code&gt; . permitir que exista otro pr&amp;eacute;stamo de esa cadena de datos ( &lt;code&gt;p&lt;/code&gt; ) a trav&amp;eacute;s de la ca&amp;iacute;da de &lt;code&gt;s&lt;/code&gt; ser&amp;iacute;a una violaci&amp;oacute;n del principio de que &lt;code&gt;&amp;amp;mut&lt;/code&gt; -borrows tiene acceso exclusivo y sin alias a sus datos de referencia.</target>
        </trans-unit>
        <trans-unit id="9b50029fc42e472fbad4bc857af78f98f36c748f" translate="yes" xml:space="preserve">
          <source>This means that, for example, the padding byte in &lt;code&gt;(u8, u16)&lt;/code&gt; is not necessarily zeroed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="382ebf724244bccd694c658a6e7769ce6b7c071d" translate="yes" xml:space="preserve">
          <source>This means, that in addition to &lt;code&gt;a == b&lt;/code&gt; and &lt;code&gt;a != b&lt;/code&gt; being strict inverses, the equality must be (for all &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt;):</source>
          <target state="translated">Este medio, que, adem&amp;aacute;s de &lt;code&gt;a == b&lt;/code&gt; y &lt;code&gt;a != b&lt;/code&gt; Ser inversas estrictas, la igualdad debe ser (para todos &lt;code&gt;a&lt;/code&gt; , &lt;code&gt;b&lt;/code&gt; y &lt;code&gt;c&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="30330510a00e9290fc18b35d20dbe32f6afe0cd7" translate="yes" xml:space="preserve">
          <source>This method always returns &lt;code&gt;false&lt;/code&gt; after iteration has finished:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2cb7c4ca14739fd7d110ae41517acd9e412a5c2" translate="yes" xml:space="preserve">
          <source>This method by itself is safe, but using it correctly requires extra care. Another thread can change the strong count at any time, including potentially between calling this method and acting on the result.</source>
          <target state="translated">Este método por sí mismo es seguro,pero usarlo correctamente requiere un cuidado extra.Otro hilo puede cambiar la cuenta fuerte en cualquier momento,incluso potencialmente entre llamar a este método y actuar sobre el resultado.</target>
        </trans-unit>
        <trans-unit id="949f62fcaa7fc2070951a1bf81357a1eb29cd126" translate="yes" xml:space="preserve">
          <source>This method by itself is safe, but using it correctly requires extra care. Another thread can change the weak count at any time, including potentially between calling this method and acting on the result.</source>
          <target state="translated">Este método por sí mismo es seguro,pero usarlo correctamente requiere un cuidado extra.Otro hilo puede cambiar la cuenta débil en cualquier momento,incluso potencialmente entre llamar a este método y actuar sobre el resultado.</target>
        </trans-unit>
        <trans-unit id="3282baf6619178b04f6e093d59df95e6b50b4f0b" translate="yes" xml:space="preserve">
          <source>This method can be used for string data that is &lt;em&gt;terminated&lt;/em&gt;, rather than &lt;em&gt;separated&lt;/em&gt; by a pattern.</source>
          <target state="translated">Este m&amp;eacute;todo se puede utilizar para datos de cadena &lt;em&gt;terminados&lt;/em&gt; , en lugar de estar &lt;em&gt;separados&lt;/em&gt; por un patr&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="3369ccac8ace2a653ec652b1d0a5f9f1bd24f346" translate="yes" xml:space="preserve">
          <source>This method can be used to reverse a comparison:</source>
          <target state="translated">Este método puede utilizarse para invertir una comparación:</target>
        </trans-unit>
        <trans-unit id="9f13cbe122409bed70a7bfa8652dd2b252fa340b" translate="yes" xml:space="preserve">
          <source>This method can be useful for situations in which the vector is serving as a buffer for other code, particularly over FFI:</source>
          <target state="translated">Este método puede ser útil para situaciones en las que el vector sirve de amortiguador para otros códigos,en particular sobre el FFI:</target>
        </trans-unit>
        <trans-unit id="ce975c1398d44efbe8c10a5c85f55c0075a45068" translate="yes" xml:space="preserve">
          <source>This method can only succeed if the entire byte slice was successfully written, and this method will not return until all data has been written or an error occurs.</source>
          <target state="translated">Este método sólo puede tener éxito si todo el trozo de byte se ha escrito con éxito,y este método no volverá hasta que se hayan escrito todos los datos o se produzca un error.</target>
        </trans-unit>
        <trans-unit id="e42e806090a8aa6caab77166483a1eda09b5296d" translate="yes" xml:space="preserve">
          <source>This method can only succeed if the entire string slice was successfully written, and this method will not return until all data has been written or an error occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1f7d3cdb0bfa41dd91aa3d1bf03416a16ee48f3" translate="yes" xml:space="preserve">
          <source>This method differs from &lt;a href=&quot;struct.syncsender#method.send&quot;&gt;&lt;code&gt;send&lt;/code&gt;&lt;/a&gt; by returning immediately if the channel's buffer is full or no receiver is waiting to acquire some data. Compared with &lt;a href=&quot;struct.syncsender#method.send&quot;&gt;&lt;code&gt;send&lt;/code&gt;&lt;/a&gt;, this function has two failure cases instead of one (one for disconnection, one for a full buffer).</source>
          <target state="translated">Este m&amp;eacute;todo se diferencia del &lt;a href=&quot;struct.syncsender#method.send&quot;&gt; &lt;code&gt;send&lt;/code&gt; &lt;/a&gt; al regresar inmediatamente si el b&amp;uacute;fer del canal est&amp;aacute; lleno o si ning&amp;uacute;n receptor est&amp;aacute; esperando para adquirir algunos datos. En comparaci&amp;oacute;n con el &lt;a href=&quot;struct.syncsender#method.send&quot;&gt; &lt;code&gt;send&lt;/code&gt; &lt;/a&gt; , esta funci&amp;oacute;n tiene dos casos de falla en lugar de uno (uno para la desconexi&amp;oacute;n y otro para un b&amp;uacute;fer lleno).</target>
        </trans-unit>
        <trans-unit id="028002d34f3fafd7bc54cd77bcaa912497a3b074" translate="yes" xml:space="preserve">
          <source>This method does &lt;strong&gt;not&lt;/strong&gt; pass ownership of the raw file descriptor to the caller. The descriptor is only guaranteed to be valid while the original object has not yet been destroyed.</source>
          <target state="translated">Este m&amp;eacute;todo &lt;strong&gt;no&lt;/strong&gt; transfiere la propiedad del descriptor de archivo sin formato a la persona que llama. Solo se garantiza que el descriptor es v&amp;aacute;lido mientras el objeto original a&amp;uacute;n no se haya destruido.</target>
        </trans-unit>
        <trans-unit id="5fd9fa51612a49edd496cd80117e23b29a509eb6" translate="yes" xml:space="preserve">
          <source>This method does &lt;strong&gt;not&lt;/strong&gt; return the length of the duration when represented by microseconds. The returned number always represents a fractional portion of a second (i.e., it is less than one million).</source>
          <target state="translated">Este m&amp;eacute;todo &lt;strong&gt;no&lt;/strong&gt; devuelve la longitud de la duraci&amp;oacute;n cuando se representa en microsegundos. El n&amp;uacute;mero devuelto siempre representa una fracci&amp;oacute;n de segundo (es decir, es menos de un mill&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="d3a3c1cf0cc150bd1c72971205d2190e708b8d2b" translate="yes" xml:space="preserve">
          <source>This method does &lt;strong&gt;not&lt;/strong&gt; return the length of the duration when represented by milliseconds. The returned number always represents a fractional portion of a second (i.e., it is less than one thousand).</source>
          <target state="translated">Este m&amp;eacute;todo &lt;strong&gt;no&lt;/strong&gt; devuelve la longitud de la duraci&amp;oacute;n cuando se representa en milisegundos. El n&amp;uacute;mero devuelto siempre representa una fracci&amp;oacute;n de segundo (es decir, es menos de mil).</target>
        </trans-unit>
        <trans-unit id="e8135547d5a3a3a5006fe1cbd5d76d770ff2a7a9" translate="yes" xml:space="preserve">
          <source>This method does &lt;strong&gt;not&lt;/strong&gt; return the length of the duration when represented by nanoseconds. The returned number always represents a fractional portion of a second (i.e., it is less than one billion).</source>
          <target state="translated">Este m&amp;eacute;todo &lt;strong&gt;no&lt;/strong&gt; devuelve la longitud de la duraci&amp;oacute;n cuando se representa en nanosegundos. El n&amp;uacute;mero devuelto siempre representa una fracci&amp;oacute;n de segundo (es decir, es menos de mil millones).</target>
        </trans-unit>
        <trans-unit id="ac2e63056cc906cac74875b70f6f9009af31f73d" translate="yes" xml:space="preserve">
          <source>This method does not allocate and does not change the order of the inserted elements. As it returns a mutable slice, this can be used to sort a deque.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdc4e2ef2ed35366fa011a172b72477b2d16bbd4" translate="yes" xml:space="preserve">
          <source>This method does not allocate and does not change the order of the inserted elements. As it returns a mutable slice, this can be used to sort or binary search a deque.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16f6f5d172fff1f1f8e9b8bb728e19c58e51b4b5" translate="yes" xml:space="preserve">
          <source>This method doesn't produce a value, but the write may fail. It's crucial to handle the error case, and &lt;em&gt;not&lt;/em&gt; write something like this:</source>
          <target state="translated">Este m&amp;eacute;todo no produce un valor, pero la escritura puede fallar. Es crucial manejar el caso de error y &lt;em&gt;no&lt;/em&gt; escribir algo como esto:</target>
        </trans-unit>
        <trans-unit id="0b024448d5d7228119631ad22266fba4066f9577" translate="yes" xml:space="preserve">
          <source>This method has a default implementation using &lt;a href=&quot;trait.exactsizeiterator#method.len&quot;&gt;&lt;code&gt;ExactSizeIterator::len()&lt;/code&gt;&lt;/a&gt;, so you don't need to implement it yourself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="803e98a2b6e5f0d6a98c75881fdb55c1597f80f0" translate="yes" xml:space="preserve">
          <source>This method has a default implementation using &lt;code&gt;self.len()&lt;/code&gt;, so you don't need to implement it yourself.</source>
          <target state="translated">Este m&amp;eacute;todo tiene una implementaci&amp;oacute;n predeterminada que usa &lt;code&gt;self.len()&lt;/code&gt; , por lo que no es necesario que lo implemente usted mismo.</target>
        </trans-unit>
        <trans-unit id="02fc3c4c098f9a864e6c45270c0a8ae6ffc408ef" translate="yes" xml:space="preserve">
          <source>This method has a default implementation, so you usually should not implement it directly. However, if you can provide a more efficient implementation, you can do so. See the &lt;a href=&quot;trait.exactsizeiterator&quot;&gt;trait-level&lt;/a&gt; docs for an example.</source>
          <target state="translated">Este m&amp;eacute;todo tiene una implementaci&amp;oacute;n predeterminada, por lo que normalmente no deber&amp;iacute;a implementarlo directamente. Sin embargo, si puede proporcionar una implementaci&amp;oacute;n m&amp;aacute;s eficiente, puede hacerlo. Consulte los documentos de &lt;a href=&quot;trait.exactsizeiterator&quot;&gt;nivel de rasgo&lt;/a&gt; para ver un ejemplo.</target>
        </trans-unit>
        <trans-unit id="89f3649aa28c1d3c90be74ebfb70d517cce77458" translate="yes" xml:space="preserve">
          <source>This method has no purpose when either input element &lt;code&gt;T&lt;/code&gt; or output element &lt;code&gt;U&lt;/code&gt; are zero-sized and will return the original slice without splitting anything.</source>
          <target state="translated">Este m&amp;eacute;todo no tiene ning&amp;uacute;n prop&amp;oacute;sito cuando el elemento de entrada &lt;code&gt;T&lt;/code&gt; o el elemento de salida &lt;code&gt;U&lt;/code&gt; son de tama&amp;ntilde;o cero y devolver&amp;aacute;n el segmento original sin dividir nada.</target>
        </trans-unit>
        <trans-unit id="08ef0643ebf0dc48a599dc8d5b289675edb9e0a3" translate="yes" xml:space="preserve">
          <source>This method is called implicitly when the value goes out of scope, and cannot be called explicitly (this is compiler error &lt;a href=&quot;../../error-index#E0040&quot;&gt;E0040&lt;/a&gt;). However, the &lt;a href=&quot;../mem/fn.drop&quot;&gt;&lt;code&gt;mem::drop&lt;/code&gt;&lt;/a&gt; function in the prelude can be used to call the argument's &lt;code&gt;Drop&lt;/code&gt; implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d2a8db1a00abc88d21d10b6113bf279aaebd51" translate="yes" xml:space="preserve">
          <source>This method is called implicitly when the value goes out of scope, and cannot be called explicitly (this is compiler error &lt;a href=&quot;../../error-index#E0040&quot;&gt;E0040&lt;/a&gt;). However, the &lt;a href=&quot;../mem/fn.drop&quot;&gt;&lt;code&gt;std::mem::drop&lt;/code&gt;&lt;/a&gt; function in the prelude can be used to call the argument's &lt;code&gt;Drop&lt;/code&gt; implementation.</source>
          <target state="translated">Este m&amp;eacute;todo se llama impl&amp;iacute;citamente cuando el valor sale del alcance y no se puede llamar expl&amp;iacute;citamente (este es el error del compilador &lt;a href=&quot;../../error-index#E0040&quot;&gt;E0040&lt;/a&gt; ). Sin embargo, la funci&amp;oacute;n &lt;a href=&quot;../mem/fn.drop&quot;&gt; &lt;code&gt;std::mem::drop&lt;/code&gt; &lt;/a&gt; en el preludio se puede usar para llamar a la implementaci&amp;oacute;n &lt;code&gt;Drop&lt;/code&gt; del argumento .</target>
        </trans-unit>
        <trans-unit id="0b2c9d3aaaa76ea8e330a8973b644085bc25e3bb" translate="yes" xml:space="preserve">
          <source>This method is carefully constructed to avoid allocation. It will consume the error, moving out the bytes, so that a copy of the bytes does not need to be made.</source>
          <target state="translated">Este método se construye cuidadosamente para evitar la asignación.Consumirá el error,desplazando los bytes,de modo que no sea necesario hacer una copia de los mismos.</target>
        </trans-unit>
        <trans-unit id="ef9d0891851c4c2229a94b62e2e2cf59a2fd15db" translate="yes" xml:space="preserve">
          <source>This method is deprecated in favor of the identically-named inherent methods on &lt;code&gt;u8&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;[u8]&lt;/code&gt; and &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84886aa1dad1934a5c9bdd981667f36e45fab018" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#method.new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; except that no runtime assertion is made that &lt;code&gt;v&lt;/code&gt; contains no 0 bytes, and it requires an actual byte vector, not anything that can be converted to one with Into.</source>
          <target state="translated">Este m&amp;eacute;todo es equivalente a &lt;a href=&quot;#method.new&quot;&gt; &lt;code&gt;new&lt;/code&gt; ,&lt;/a&gt; excepto que no se hace ninguna afirmaci&amp;oacute;n en tiempo de ejecuci&amp;oacute;n de que &lt;code&gt;v&lt;/code&gt; no contiene 0 bytes, y requiere un vector de bytes real, no nada que pueda convertirse en uno con Into.</target>
        </trans-unit>
        <trans-unit id="38f2c8e8e67faa398a8a8adc0a46e90cd363606b" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;struct.cstring#method.new&quot;&gt;&lt;code&gt;CString::new&lt;/code&gt;&lt;/a&gt; except that no runtime assertion is made that &lt;code&gt;v&lt;/code&gt; contains no 0 bytes, and it requires an actual byte vector, not anything that can be converted to one with Into.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0358b021b2254c197a04c16c02e67b7c9901af56" translate="yes" xml:space="preserve">
          <source>This method is essentially a &lt;code&gt;transmute&lt;/code&gt; with respect to the elements in the returned middle slice, so all the usual caveats pertaining to &lt;code&gt;transmute::&amp;lt;T, U&amp;gt;&lt;/code&gt; also apply here.</source>
          <target state="translated">Este m&amp;eacute;todo es esencialmente una &lt;code&gt;transmute&lt;/code&gt; con respecto a los elementos en el segmento intermedio devuelto, por lo que todas las advertencias habituales relativas a &lt;code&gt;transmute::&amp;lt;T, U&amp;gt;&lt;/code&gt; tambi&amp;eacute;n se aplican aqu&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="dd229ccab2f3fea46c41c098065dd891d877a2e6" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;a href=&quot;struct.builder#method.spawn&quot;&gt;&lt;code&gt;thread::Builder::spawn&lt;/code&gt;&lt;/a&gt;, except for the relaxed lifetime bounds, which render it unsafe. For a more complete documentation see &lt;a href=&quot;fn.spawn&quot;&gt;&lt;code&gt;thread::spawn&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Este m&amp;eacute;todo es id&amp;eacute;ntico a &lt;a href=&quot;struct.builder#method.spawn&quot;&gt; &lt;code&gt;thread::Builder::spawn&lt;/code&gt; &lt;/a&gt; , excepto por los l&amp;iacute;mites de vida relajados, que lo vuelven inseguro. Para obtener una documentaci&amp;oacute;n m&amp;aacute;s completa, consulte &lt;a href=&quot;fn.spawn&quot;&gt; &lt;code&gt;thread::spawn&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0bc2506b00444cfc62462ac1af4908c0bbe44456" translate="yes" xml:space="preserve">
          <source>This method is implemented using up to three seek operations. If this method returns successfully, the seek position is unchanged (i.e. the position before calling this method is the same as afterwards). However, if this method returns an error, the seek position is unspecified.</source>
          <target state="translated">Este método se aplica utilizando hasta tres operaciones de búsqueda.Si este método vuelve con éxito,la posición de búsqueda no se modifica (es decir,la posición antes de llamar a este método es la misma que después).Sin embargo,si este método devuelve un error,la posición de búsqueda no se especifica.</target>
        </trans-unit>
        <trans-unit id="f531cfc3a2c409d73bd0f5c2e2364c282b1a69bd" translate="yes" xml:space="preserve">
          <source>This method is primarily intended for moving out values in drop. Instead of using &lt;a href=&quot;#method.drop&quot;&gt;&lt;code&gt;ManuallyDrop::drop&lt;/code&gt;&lt;/a&gt; to manually drop the value, you can use this method to take the value and use it however desired. &lt;code&gt;Drop&lt;/code&gt; will be invoked on the returned value following normal end-of-scope rules.</source>
          <target state="translated">Este m&amp;eacute;todo est&amp;aacute; dise&amp;ntilde;ado principalmente para mover valores en la gota. En lugar de usar &lt;a href=&quot;#method.drop&quot;&gt; &lt;code&gt;ManuallyDrop::drop&lt;/code&gt; &lt;/a&gt; para eliminar manualmente el valor, puede usar este m&amp;eacute;todo para tomar el valor y usarlo como desee. &lt;code&gt;Drop&lt;/code&gt; se invocar&amp;aacute; en el valor devuelto siguiendo las reglas normales de fin de alcance.</target>
        </trans-unit>
        <trans-unit id="ff2d30c02e4e3426a2eb2e0e84eb302b53b0327c" translate="yes" xml:space="preserve">
          <source>This method is primarily intended for moving out values in drop. Instead of using &lt;a href=&quot;struct.manuallydrop#method.drop&quot;&gt;&lt;code&gt;ManuallyDrop::drop&lt;/code&gt;&lt;/a&gt; to manually drop the value, you can use this method to take the value and use it however desired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="923fe0c4f9dba0ad8dc8e37a00ed66b6a9da0759" translate="yes" xml:space="preserve">
          <source>This method is primarily used to interface with the &lt;a href=&quot;../macro.format_args&quot;&gt;&lt;code&gt;format_args!&lt;/code&gt;&lt;/a&gt; macro, but it is rare that this should explicitly be called. The &lt;a href=&quot;../macro.write&quot;&gt;&lt;code&gt;write!&lt;/code&gt;&lt;/a&gt; macro should be favored to invoke this method instead.</source>
          <target state="translated">&amp;iexcl;Este m&amp;eacute;todo se utiliza principalmente para interactuar con &lt;a href=&quot;../macro.format_args&quot;&gt; &lt;code&gt;format_args!&lt;/code&gt; &lt;/a&gt;macro, pero es raro que se deba llamar expl&amp;iacute;citamente. &amp;iexcl;La &lt;a href=&quot;../macro.write&quot;&gt; &lt;code&gt;write!&lt;/code&gt; &lt;/a&gt;macro deber&amp;iacute;a ser favorecido para invocar este m&amp;eacute;todo en su lugar.</target>
        </trans-unit>
        <trans-unit id="80fc60d5306ac7d19519f64033eaf35397e48023" translate="yes" xml:space="preserve">
          <source>This method is soft-deprecated. &lt;a href=&quot;../../error/trait.error#method.description&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Este m&amp;eacute;todo est&amp;aacute; obsoleto. &lt;a href=&quot;../../error/trait.error#method.description&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e4625fa8bf128959917fb79c2180bb0bb7de232" translate="yes" xml:space="preserve">
          <source>This method is soft-deprecated. &lt;a href=&quot;../error/trait.error#method.description&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Este m&amp;eacute;todo est&amp;aacute; obsoleto. &lt;a href=&quot;../error/trait.error#method.description&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6a9beb6c54e6c8b198cf2df220314195725bd7bb" translate="yes" xml:space="preserve">
          <source>This method is soft-deprecated. &lt;a href=&quot;error/trait.error#method.description&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Este m&amp;eacute;todo est&amp;aacute; obsoleto. &lt;a href=&quot;error/trait.error#method.description&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5490d12dcf25f9008acb9584a8ddf0c95e1664f2" translate="yes" xml:space="preserve">
          <source>This method is stable and usable, but it should be unsafe. To fix that, it got deprecated in favor of the unsafe &lt;a href=&quot;#tymethod.pre_exec&quot;&gt;&lt;code&gt;pre_exec&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Este m&amp;eacute;todo es estable y utilizable, pero no deber&amp;iacute;a ser seguro. Para solucionarlo, qued&amp;oacute; obsoleto en favor del inseguro &lt;a href=&quot;#tymethod.pre_exec&quot;&gt; &lt;code&gt;pre_exec&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6a040da9f6f49ab3965186c9b54eab70d6aecfa7" translate="yes" xml:space="preserve">
          <source>This method is stable and usable, but it should be unsafe. To fix that, it got deprecated in favor of the unsafe &lt;a href=&quot;trait.commandext#tymethod.pre_exec&quot;&gt;&lt;code&gt;pre_exec&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428465480a8425bf96628f818ad9aad9c7155318" translate="yes" xml:space="preserve">
          <source>This method is the const generic equivalent of &lt;a href=&quot;#method.chunks_exact&quot;&gt;&lt;code&gt;chunks_exact&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d24cf3a26d22530ab9cc10e498dc43f87c776a" translate="yes" xml:space="preserve">
          <source>This method is the const generic equivalent of &lt;a href=&quot;#method.chunks_exact_mut&quot;&gt;&lt;code&gt;chunks_exact_mut&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="881a668b22b8af1fbfcb4abff65037dd8a73fd44" translate="yes" xml:space="preserve">
          <source>This method is unsafe because a &lt;code&gt;Read&lt;/code&gt;er could otherwise return a non-zeroing &lt;code&gt;Initializer&lt;/code&gt; from another &lt;code&gt;Read&lt;/code&gt; type without an &lt;code&gt;unsafe&lt;/code&gt; block.</source>
          <target state="translated">Este m&amp;eacute;todo no es seguro porque un &lt;code&gt;Read&lt;/code&gt; er contrario podr&amp;iacute;an devolver un no-cero &lt;code&gt;Initializer&lt;/code&gt; de otro &lt;code&gt;Read&lt;/code&gt; tipo sin una &lt;code&gt;unsafe&lt;/code&gt; bloque.</target>
        </trans-unit>
        <trans-unit id="272d98e018b9a74f9a82d093db1b7d2de5f94a24" translate="yes" xml:space="preserve">
          <source>This method is useful when doing multiple calls to functions that consume the pinned type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b649b72cfd66bc53cdd1236dc499f467fbbbfc65" translate="yes" xml:space="preserve">
          <source>This method requires &lt;a href=&quot;../clone/trait.clone&quot;&gt;&lt;code&gt;Clone&lt;/code&gt;&lt;/a&gt; to be able clone the passed value. If you need more flexibility (or want to rely on &lt;a href=&quot;../default/trait.default&quot;&gt;&lt;code&gt;Default&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;../clone/trait.clone&quot;&gt;&lt;code&gt;Clone&lt;/code&gt;&lt;/a&gt;), use &lt;a href=&quot;#method.resize_with&quot;&gt;&lt;code&gt;resize_with&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Este m&amp;eacute;todo requiere &lt;a href=&quot;../clone/trait.clone&quot;&gt; &lt;code&gt;Clone&lt;/code&gt; &lt;/a&gt; para poder clonar el valor pasado. Si necesita m&amp;aacute;s flexibilidad (o desea confiar en &lt;a href=&quot;../default/trait.default&quot;&gt; &lt;code&gt;Default&lt;/code&gt; en&lt;/a&gt; lugar de &lt;a href=&quot;../clone/trait.clone&quot;&gt; &lt;code&gt;Clone&lt;/code&gt; &lt;/a&gt; ), use &lt;a href=&quot;#method.resize_with&quot;&gt; &lt;code&gt;resize_with&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fe86d6b287ee66b5bfe82d8d97c6de5a30a28fea" translate="yes" xml:space="preserve">
          <source>This method requires &lt;code&gt;T&lt;/code&gt; to implement &lt;a href=&quot;../clone/trait.clone&quot;&gt;&lt;code&gt;Clone&lt;/code&gt;&lt;/a&gt;, in order to be able to clone the passed value. If you need more flexibility (or want to rely on &lt;a href=&quot;../default/trait.default&quot;&gt;&lt;code&gt;Default&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;../clone/trait.clone&quot;&gt;&lt;code&gt;Clone&lt;/code&gt;&lt;/a&gt;), use &lt;a href=&quot;struct.vec#method.resize_with&quot;&gt;&lt;code&gt;Vec::resize_with&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9a3bfc3f1c3963b065d50d6828d4da511aead6e" translate="yes" xml:space="preserve">
          <source>This method returns &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if slice does not end with &lt;code&gt;suffix&lt;/code&gt;. Also it returns the original slice if &lt;code&gt;suffix&lt;/code&gt; is an empty slice</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b59bebec2345a5a01479f3be93783390bba5fe3b" translate="yes" xml:space="preserve">
          <source>This method returns &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if slice does not start with &lt;code&gt;prefix&lt;/code&gt;. Also it returns the original slice if &lt;code&gt;prefix&lt;/code&gt; is an empty slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95f081db21ce8cf4e6f46e10880425784f2765c" translate="yes" xml:space="preserve">
          <source>This method returns &lt;a href=&quot;../primitive.bool&quot;&gt;&lt;code&gt;true&lt;/code&gt;&lt;/a&gt; for addresses in the range reserved by [RFC 4291 section 2.4], i.e. addresses with the following format:</source>
          <target state="translated">Este m&amp;eacute;todo devuelve &lt;a href=&quot;../primitive.bool&quot;&gt; &lt;code&gt;true&lt;/code&gt; &lt;/a&gt; para direcciones en el rango reservado por [RFC 4291 secci&amp;oacute;n 2.4], es decir, direcciones con el siguiente formato:</target>
        </trans-unit>
        <trans-unit id="14217d50c79e4eb45c163835b69cd4e673a45e20" translate="yes" xml:space="preserve">
          <source>This method returns &lt;a href=&quot;../primitive.bool&quot;&gt;&lt;code&gt;true&lt;/code&gt;&lt;/a&gt; for site-local addresses as per &lt;a href=&quot;https://tools.ietf.org/html/rfc4291#section-2.5.7&quot;&gt;RFC 4291 section 2.5.7&lt;/a&gt;</source>
          <target state="translated">Este m&amp;eacute;todo devuelve &lt;a href=&quot;../primitive.bool&quot;&gt; &lt;code&gt;true&lt;/code&gt; &lt;/a&gt; para las direcciones locales del sitio seg&amp;uacute;n la &lt;a href=&quot;https://tools.ietf.org/html/rfc4291#section-2.5.7&quot;&gt;secci&amp;oacute;n 2.5.7 de RFC 4291&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c067946f55e22970a3dc70591f782f7bfd3be70c" translate="yes" xml:space="preserve">
          <source>This method returns &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.bool.html&quot;&gt;&lt;code&gt;true&lt;/code&gt;&lt;/a&gt; for addresses in the range reserved by [RFC 4291 section 2.4], i.e. addresses with the following format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ac7dcf5283432feb1c671ca5dfa7bc7104e0a1d" translate="yes" xml:space="preserve">
          <source>This method returns &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.bool.html&quot;&gt;&lt;code&gt;true&lt;/code&gt;&lt;/a&gt; for site-local addresses as per &lt;a href=&quot;https://tools.ietf.org/html/rfc4291#section-2.5.7&quot;&gt;RFC 4291 section 2.5.7&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c542fa498c19ba50cecb51c023284b67bf89ad" translate="yes" xml:space="preserve">
          <source>This method returns &lt;a href=&quot;option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if slice does not end with &lt;code&gt;suffix&lt;/code&gt;. Also it returns the original slice if &lt;code&gt;suffix&lt;/code&gt; is an empty slice</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da5bb928bae82aca5b2fc0bf565da6017cb0d4d8" translate="yes" xml:space="preserve">
          <source>This method returns &lt;a href=&quot;option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if slice does not start with &lt;code&gt;prefix&lt;/code&gt;. Also it returns the original slice if &lt;code&gt;prefix&lt;/code&gt; is an empty slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8678f0273a7a7e566a6f4ee8c92fbd30439ee626" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;Ok(())&lt;/code&gt; if the cell was empty and &lt;code&gt;Err(value)&lt;/code&gt; if it was full.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe438568aa64ab40ad3ae63a4e80c06e5f2d121" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;true&lt;/code&gt; after iteration has finished:</source>
          <target state="translated">Este m&amp;eacute;todo devuelve &lt;code&gt;true&lt;/code&gt; finalizada la iteraci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="a10727aefe2c0619a67b5c808cec5f4b8a1e7af5" translate="yes" xml:space="preserve">
          <source>This method returns an &lt;a href=&quot;../../cmp/enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; between &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;. &lt;a href=&quot;../../cmp/trait.ord#tymethod.cmp&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="553b97aa02f0558b1b0de2b63742a555e1d788b0" translate="yes" xml:space="preserve">
          <source>This method returns an &lt;a href=&quot;../cmp/enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; between &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;. &lt;a href=&quot;../cmp/trait.ord#tymethod.cmp&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe70a42b371f1df3da8be36396abdc2eaf19453" translate="yes" xml:space="preserve">
          <source>This method returns an &lt;a href=&quot;cmp/enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; between &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;. &lt;a href=&quot;cmp/trait.ord#tymethod.cmp&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36badfc81f37e8dd9893bdb06702e1f5b7aef202" translate="yes" xml:space="preserve">
          <source>This method returns an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; between &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c319c899ab4990e562735b3d21d0f6cd464c7156" translate="yes" xml:space="preserve">
          <source>This method returns an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; between &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;. &lt;a href=&quot;trait.ord#tymethod.cmp&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da8759d1633206733343524980d7a489afd16956" translate="yes" xml:space="preserve">
          <source>This method returns an &lt;code&gt;Ordering&lt;/code&gt; between &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;.</source>
          <target state="translated">Este m&amp;eacute;todo devuelve un &lt;code&gt;Ordering&lt;/code&gt; entre &lt;code&gt;self&lt;/code&gt; y el &lt;code&gt;other&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f3bbc3554d60688630609ad13846c405e876fac" translate="yes" xml:space="preserve">
          <source>This method returns an &lt;code&gt;Ordering&lt;/code&gt; between &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;. &lt;a href=&quot;../../cmp/trait.ord#tymethod.cmp&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Este m&amp;eacute;todo devuelve un &lt;code&gt;Ordering&lt;/code&gt; entre &lt;code&gt;self&lt;/code&gt; y el &lt;code&gt;other&lt;/code&gt; . &lt;a href=&quot;../../cmp/trait.ord#tymethod.cmp&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e875552f6e4025920ca5a71d7c281b1fbfaaa2a8" translate="yes" xml:space="preserve">
          <source>This method returns an &lt;code&gt;Ordering&lt;/code&gt; between &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;. &lt;a href=&quot;../cmp/trait.ord#tymethod.cmp&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Este m&amp;eacute;todo devuelve un &lt;code&gt;Ordering&lt;/code&gt; entre &lt;code&gt;self&lt;/code&gt; y el &lt;code&gt;other&lt;/code&gt; . &lt;a href=&quot;../cmp/trait.ord#tymethod.cmp&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="400399c6db28cb18bc3db2944eff105cd4fca3da" translate="yes" xml:space="preserve">
          <source>This method returns an &lt;code&gt;Ordering&lt;/code&gt; between &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;. &lt;a href=&quot;cmp/trait.ord#tymethod.cmp&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Este m&amp;eacute;todo devuelve un &lt;code&gt;Ordering&lt;/code&gt; entre &lt;code&gt;self&lt;/code&gt; y el &lt;code&gt;other&lt;/code&gt; . &lt;a href=&quot;cmp/trait.ord#tymethod.cmp&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1a47b24f63b5fe410c6da12441f9c98d2fe17c15" translate="yes" xml:space="preserve">
          <source>This method returns an &lt;code&gt;Ordering&lt;/code&gt; between &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;. &lt;a href=&quot;trait.ord#tymethod.cmp&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Este m&amp;eacute;todo devuelve un &lt;code&gt;Ordering&lt;/code&gt; entre &lt;code&gt;self&lt;/code&gt; y el &lt;code&gt;other&lt;/code&gt; . &lt;a href=&quot;trait.ord#tymethod.cmp&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c3cf087c16e29fe754de64f334036b96fe0b3931" translate="yes" xml:space="preserve">
          <source>This method returns an ordering between &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt; values if one exists.</source>
          <target state="translated">Este m&amp;eacute;todo devuelve un orden entre &lt;code&gt;self&lt;/code&gt; y &lt;code&gt;other&lt;/code&gt; valores, si existe.</target>
        </trans-unit>
        <trans-unit id="eb17b52a796e0693ad06487790fde93b26d1d781" translate="yes" xml:space="preserve">
          <source>This method returns an ordering between &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt; values if one exists. &lt;a href=&quot;../../cmp/trait.partialord#tymethod.partial_cmp&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Este m&amp;eacute;todo devuelve un orden entre &lt;code&gt;self&lt;/code&gt; y &lt;code&gt;other&lt;/code&gt; valores, si existe. &lt;a href=&quot;../../cmp/trait.partialord#tymethod.partial_cmp&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="39953b189e90eb45e12641b5213bac17fb6a067f" translate="yes" xml:space="preserve">
          <source>This method returns an ordering between &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt; values if one exists. &lt;a href=&quot;../cmp/trait.partialord#tymethod.partial_cmp&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Este m&amp;eacute;todo devuelve un orden entre &lt;code&gt;self&lt;/code&gt; y &lt;code&gt;other&lt;/code&gt; valores, si existe. &lt;a href=&quot;../cmp/trait.partialord#tymethod.partial_cmp&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a426df736d2450e1483768eb842876560c3cb8d7" translate="yes" xml:space="preserve">
          <source>This method returns an ordering between &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt; values if one exists. &lt;a href=&quot;cmp/trait.partialord#tymethod.partial_cmp&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Este m&amp;eacute;todo devuelve un orden entre &lt;code&gt;self&lt;/code&gt; y &lt;code&gt;other&lt;/code&gt; valores, si existe. &lt;a href=&quot;cmp/trait.partialord#tymethod.partial_cmp&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d64233d3af8194ec0eefc11c727f80c62d14630a" translate="yes" xml:space="preserve">
          <source>This method returns an ordering between &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt; values if one exists. &lt;a href=&quot;trait.partialord#tymethod.partial_cmp&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Este m&amp;eacute;todo devuelve un orden entre &lt;code&gt;self&lt;/code&gt; y &lt;code&gt;other&lt;/code&gt; valores, si existe. &lt;a href=&quot;trait.partialord#tymethod.partial_cmp&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="edb583eeb291a512bd3d2447d1fbe080bc3b9dce" translate="yes" xml:space="preserve">
          <source>This method should generally not be invoked manually, but rather through the &lt;a href=&quot;../macro.write&quot;&gt;&lt;code&gt;write!&lt;/code&gt;&lt;/a&gt; macro itself.</source>
          <target state="translated">Este m&amp;eacute;todo generalmente no debe invocarse manualmente, sino a trav&amp;eacute;s de la &lt;a href=&quot;../macro.write&quot;&gt; &lt;code&gt;write!&lt;/code&gt; &lt;/a&gt;macro en s&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="d7174476c42e976c470e5d3d833837447fe7b624" translate="yes" xml:space="preserve">
          <source>This method splits the slice into three distinct slices: prefix, correctly aligned middle slice of a new type, and the suffix slice. The method does a best effort to make the middle slice the greatest length possible for a given type and input slice, but only your algorithm's performance should depend on that, not its correctness.</source>
          <target state="translated">Este método divide la rebanada en tres rebanadas distintas:el prefijo,la rebanada central correctamente alineada de un nuevo tipo,y la rebanada del sufijo.El método se esfuerza por hacer que la rebanada media tenga la mayor longitud posible para un tipo y una rebanada de entrada dados,pero sólo el rendimiento de su algoritmo debe depender de eso,no de su corrección.</target>
        </trans-unit>
        <trans-unit id="a7dca763f7ea1b34a0cad9b954868418d78e506c" translate="yes" xml:space="preserve">
          <source>This method splits the slice into three distinct slices: prefix, correctly aligned middle slice of a new type, and the suffix slice. The method may make the middle slice the greatest length possible for a given type and input slice, but only your algorithm's performance should depend on that, not its correctness. It is permissible for all of the input data to be returned as the prefix or suffix slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8000abb209a936f78ade63de708f2749dd5748c7" translate="yes" xml:space="preserve">
          <source>This method tests for &lt;code&gt;!=&lt;/code&gt;.</source>
          <target state="translated">Este m&amp;eacute;todo prueba &lt;code&gt;!=&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3639f2a22177e5f40d5314d575e638c54018960a" translate="yes" xml:space="preserve">
          <source>This method tests for &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt; values to be equal, and is used by &lt;code&gt;==&lt;/code&gt;.</source>
          <target state="translated">Este m&amp;eacute;todo prueba que los valores &lt;code&gt;self&lt;/code&gt; y de los &lt;code&gt;other&lt;/code&gt; sean iguales, y es utilizado por &lt;code&gt;==&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e3ea7ba813a098b9b6ae43b0aee731d0092913bf" translate="yes" xml:space="preserve">
          <source>This method tests for &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt; values to be equal, and is used by &lt;code&gt;==&lt;/code&gt;. &lt;a href=&quot;../../../cmp/trait.partialeq#tymethod.eq&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f00abfa17fbf62bab913260c77c4736307dd6b08" translate="yes" xml:space="preserve">
          <source>This method tests for &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt; values to be equal, and is used by &lt;code&gt;==&lt;/code&gt;. &lt;a href=&quot;../../cmp/trait.partialeq#tymethod.eq&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Este m&amp;eacute;todo prueba que los valores &lt;code&gt;self&lt;/code&gt; y de los &lt;code&gt;other&lt;/code&gt; sean iguales, y es utilizado por &lt;code&gt;==&lt;/code&gt; . &lt;a href=&quot;../../cmp/trait.partialeq#tymethod.eq&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c257c51217cc2c43c24273fbc2f10164037dd5b1" translate="yes" xml:space="preserve">
          <source>This method tests for &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt; values to be equal, and is used by &lt;code&gt;==&lt;/code&gt;. &lt;a href=&quot;../cmp/trait.partialeq#tymethod.eq&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Este m&amp;eacute;todo prueba que los valores &lt;code&gt;self&lt;/code&gt; y de los &lt;code&gt;other&lt;/code&gt; sean iguales, y es utilizado por &lt;code&gt;==&lt;/code&gt; . &lt;a href=&quot;../cmp/trait.partialeq#tymethod.eq&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34550195d18fa1542599bef9324d74efad99aeb1" translate="yes" xml:space="preserve">
          <source>This method tests for &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt; values to be equal, and is used by &lt;code&gt;==&lt;/code&gt;. &lt;a href=&quot;cmp/trait.partialeq#tymethod.eq&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Este m&amp;eacute;todo prueba que los valores &lt;code&gt;self&lt;/code&gt; y de los &lt;code&gt;other&lt;/code&gt; sean iguales, y es utilizado por &lt;code&gt;==&lt;/code&gt; . &lt;a href=&quot;cmp/trait.partialeq#tymethod.eq&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d32084f8ce776d9a529be0f1da6ec9ca22e44396" translate="yes" xml:space="preserve">
          <source>This method tests for &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt; values to be equal, and is used by &lt;code&gt;==&lt;/code&gt;. &lt;a href=&quot;trait.partialeq#tymethod.eq&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Este m&amp;eacute;todo prueba que los valores &lt;code&gt;self&lt;/code&gt; y de los &lt;code&gt;other&lt;/code&gt; sean iguales, y es utilizado por &lt;code&gt;==&lt;/code&gt; . &lt;a href=&quot;trait.partialeq#tymethod.eq&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9893b74b381c1707e88afd0a7ed6401e06b38424" translate="yes" xml:space="preserve">
          <source>This method tests greater than (for &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;) and is used by the &lt;code&gt;&amp;gt;&lt;/code&gt; operator.</source>
          <target state="translated">Este m&amp;eacute;todo prueba mayor que (para &lt;code&gt;self&lt;/code&gt; y &lt;code&gt;other&lt;/code&gt; ) y es utilizado por el operador &lt;code&gt;&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9be75e39e05fc52a961a6f8a30bebafa3abc619e" translate="yes" xml:space="preserve">
          <source>This method tests greater than (for &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;) and is used by the &lt;code&gt;&amp;gt;&lt;/code&gt; operator. &lt;a href=&quot;../../cmp/trait.partialord#method.gt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Este m&amp;eacute;todo prueba mayor que (para &lt;code&gt;self&lt;/code&gt; y &lt;code&gt;other&lt;/code&gt; ) y es utilizado por el operador &lt;code&gt;&amp;gt;&lt;/code&gt; . &lt;a href=&quot;../../cmp/trait.partialord#method.gt&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8b084733b90b43f4725bbd31294cb1f36404ce0a" translate="yes" xml:space="preserve">
          <source>This method tests greater than (for &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;) and is used by the &lt;code&gt;&amp;gt;&lt;/code&gt; operator. &lt;a href=&quot;../cmp/trait.partialord#method.gt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Este m&amp;eacute;todo prueba mayor que (para &lt;code&gt;self&lt;/code&gt; y &lt;code&gt;other&lt;/code&gt; ) y es utilizado por el operador &lt;code&gt;&amp;gt;&lt;/code&gt; . &lt;a href=&quot;../cmp/trait.partialord#method.gt&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="44184bc5bd845c73d3a6bdc521b7927b64cd5369" translate="yes" xml:space="preserve">
          <source>This method tests greater than (for &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;) and is used by the &lt;code&gt;&amp;gt;&lt;/code&gt; operator. &lt;a href=&quot;cmp/trait.partialord#method.gt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Este m&amp;eacute;todo prueba mayor que (para &lt;code&gt;self&lt;/code&gt; y &lt;code&gt;other&lt;/code&gt; ) y es utilizado por el operador &lt;code&gt;&amp;gt;&lt;/code&gt; . &lt;a href=&quot;cmp/trait.partialord#method.gt&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8eec657a4246dd487288b986e3d57dfd9657b208" translate="yes" xml:space="preserve">
          <source>This method tests greater than (for &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;) and is used by the &lt;code&gt;&amp;gt;&lt;/code&gt; operator. &lt;a href=&quot;trait.partialord#method.gt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Este m&amp;eacute;todo prueba mayor que (para &lt;code&gt;self&lt;/code&gt; y &lt;code&gt;other&lt;/code&gt; ) y es utilizado por el operador &lt;code&gt;&amp;gt;&lt;/code&gt; . &lt;a href=&quot;trait.partialord#method.gt&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0eabc442f100ec2b7e353c049aaaf4ca623d1f2c" translate="yes" xml:space="preserve">
          <source>This method tests greater than or equal to (for &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;) and is used by the &lt;code&gt;&amp;gt;=&lt;/code&gt; operator.</source>
          <target state="translated">Este m&amp;eacute;todo prueba mayor o igual a (para &lt;code&gt;self&lt;/code&gt; y &lt;code&gt;other&lt;/code&gt; ) y es utilizado por el operador &lt;code&gt;&amp;gt;=&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4194eb24934481036250e733ab18937ab48da677" translate="yes" xml:space="preserve">
          <source>This method tests greater than or equal to (for &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;) and is used by the &lt;code&gt;&amp;gt;=&lt;/code&gt; operator. &lt;a href=&quot;../../cmp/trait.partialord#method.ge&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Este m&amp;eacute;todo prueba mayor o igual a (para &lt;code&gt;self&lt;/code&gt; y &lt;code&gt;other&lt;/code&gt; ) y es utilizado por el operador &lt;code&gt;&amp;gt;=&lt;/code&gt; . &lt;a href=&quot;../../cmp/trait.partialord#method.ge&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="219eec29ea3645fe37ee0a3de43c26a2abe5b61f" translate="yes" xml:space="preserve">
          <source>This method tests greater than or equal to (for &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;) and is used by the &lt;code&gt;&amp;gt;=&lt;/code&gt; operator. &lt;a href=&quot;../cmp/trait.partialord#method.ge&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Este m&amp;eacute;todo prueba mayor o igual a (para &lt;code&gt;self&lt;/code&gt; y &lt;code&gt;other&lt;/code&gt; ) y es utilizado por el operador &lt;code&gt;&amp;gt;=&lt;/code&gt; . &lt;a href=&quot;../cmp/trait.partialord#method.ge&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a7907168214aeaea1aa4db413b937e0f747bd41c" translate="yes" xml:space="preserve">
          <source>This method tests greater than or equal to (for &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;) and is used by the &lt;code&gt;&amp;gt;=&lt;/code&gt; operator. &lt;a href=&quot;cmp/trait.partialord#method.ge&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Este m&amp;eacute;todo prueba mayor o igual a (para &lt;code&gt;self&lt;/code&gt; y &lt;code&gt;other&lt;/code&gt; ) y es utilizado por el operador &lt;code&gt;&amp;gt;=&lt;/code&gt; . &lt;a href=&quot;cmp/trait.partialord#method.ge&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e579d59fed2657492555041f61545aa7206f59b6" translate="yes" xml:space="preserve">
          <source>This method tests greater than or equal to (for &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;) and is used by the &lt;code&gt;&amp;gt;=&lt;/code&gt; operator. &lt;a href=&quot;trait.partialord#method.ge&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Este m&amp;eacute;todo prueba mayor o igual a (para &lt;code&gt;self&lt;/code&gt; y &lt;code&gt;other&lt;/code&gt; ) y es utilizado por el operador &lt;code&gt;&amp;gt;=&lt;/code&gt; . &lt;a href=&quot;trait.partialord#method.ge&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c0e789163efc5086c683b5a1f62c9a3bb50e4538" translate="yes" xml:space="preserve">
          <source>This method tests less than (for &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;) and is used by the &lt;code&gt;&amp;lt;&lt;/code&gt; operator.</source>
          <target state="translated">Este m&amp;eacute;todo prueba menos de (para &lt;code&gt;self&lt;/code&gt; y &lt;code&gt;other&lt;/code&gt; ) y lo usa el operador &lt;code&gt;&amp;lt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9a38093c98e8f8478fc7a4cb9a47c1ad908df47" translate="yes" xml:space="preserve">
          <source>This method tests less than (for &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;) and is used by the &lt;code&gt;&amp;lt;&lt;/code&gt; operator. &lt;a href=&quot;../../cmp/trait.partialord#method.lt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Este m&amp;eacute;todo prueba menos de (para &lt;code&gt;self&lt;/code&gt; y &lt;code&gt;other&lt;/code&gt; ) y lo usa el operador &lt;code&gt;&amp;lt;&lt;/code&gt; . &lt;a href=&quot;../../cmp/trait.partialord#method.lt&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d167afca39913e71e4062a05ae7a9d99838896ab" translate="yes" xml:space="preserve">
          <source>This method tests less than (for &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;) and is used by the &lt;code&gt;&amp;lt;&lt;/code&gt; operator. &lt;a href=&quot;../cmp/trait.partialord#method.lt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Este m&amp;eacute;todo prueba menos de (para &lt;code&gt;self&lt;/code&gt; y &lt;code&gt;other&lt;/code&gt; ) y lo usa el operador &lt;code&gt;&amp;lt;&lt;/code&gt; . &lt;a href=&quot;../cmp/trait.partialord#method.lt&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8ebc7cc22118ac04d1f984d545d5be0d85818a1e" translate="yes" xml:space="preserve">
          <source>This method tests less than (for &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;) and is used by the &lt;code&gt;&amp;lt;&lt;/code&gt; operator. &lt;a href=&quot;cmp/trait.partialord#method.lt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Este m&amp;eacute;todo prueba menos de (para &lt;code&gt;self&lt;/code&gt; y &lt;code&gt;other&lt;/code&gt; ) y lo usa el operador &lt;code&gt;&amp;lt;&lt;/code&gt; . &lt;a href=&quot;cmp/trait.partialord#method.lt&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="54945ad3f8cac4a154fb7b9e35518b30ae999d4d" translate="yes" xml:space="preserve">
          <source>This method tests less than (for &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;) and is used by the &lt;code&gt;&amp;lt;&lt;/code&gt; operator. &lt;a href=&quot;trait.partialord#method.lt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Este m&amp;eacute;todo prueba menos de (para &lt;code&gt;self&lt;/code&gt; y &lt;code&gt;other&lt;/code&gt; ) y lo usa el operador &lt;code&gt;&amp;lt;&lt;/code&gt; . &lt;a href=&quot;trait.partialord#method.lt&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d161a6ff3e691349ec054ac0d4002d49a30e7893" translate="yes" xml:space="preserve">
          <source>This method tests less than or equal to (for &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;) and is used by the &lt;code&gt;&amp;lt;=&lt;/code&gt; operator.</source>
          <target state="translated">Este m&amp;eacute;todo prueba menos de o igual a (para &lt;code&gt;self&lt;/code&gt; y &lt;code&gt;other&lt;/code&gt; ) y es utilizado por el operador &lt;code&gt;&amp;lt;=&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aadf89f483a504081f46ca5ef3749d0af43a4387" translate="yes" xml:space="preserve">
          <source>This method tests less than or equal to (for &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;) and is used by the &lt;code&gt;&amp;lt;=&lt;/code&gt; operator. &lt;a href=&quot;../../cmp/trait.partialord#method.le&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Este m&amp;eacute;todo prueba menos de o igual a (para &lt;code&gt;self&lt;/code&gt; y &lt;code&gt;other&lt;/code&gt; ) y lo usa el operador &lt;code&gt;&amp;lt;=&lt;/code&gt; . &lt;a href=&quot;../../cmp/trait.partialord#method.le&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ddb1ab74197bbadea31b206cbb3f4c8f2c4d9f37" translate="yes" xml:space="preserve">
          <source>This method tests less than or equal to (for &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;) and is used by the &lt;code&gt;&amp;lt;=&lt;/code&gt; operator. &lt;a href=&quot;../cmp/trait.partialord#method.le&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Este m&amp;eacute;todo prueba menos de o igual a (para &lt;code&gt;self&lt;/code&gt; y &lt;code&gt;other&lt;/code&gt; ) y lo usa el operador &lt;code&gt;&amp;lt;=&lt;/code&gt; . &lt;a href=&quot;../cmp/trait.partialord#method.le&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db00fc514ef8b2e5769c8d739b13605dcfb91f42" translate="yes" xml:space="preserve">
          <source>This method tests less than or equal to (for &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;) and is used by the &lt;code&gt;&amp;lt;=&lt;/code&gt; operator. &lt;a href=&quot;cmp/trait.partialord#method.le&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Este m&amp;eacute;todo prueba menos de o igual a (para &lt;code&gt;self&lt;/code&gt; y &lt;code&gt;other&lt;/code&gt; ) y lo usa el operador &lt;code&gt;&amp;lt;=&lt;/code&gt; . &lt;a href=&quot;cmp/trait.partialord#method.le&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bca462ad1eb0c753d442b14b7fe002228f03d1ee" translate="yes" xml:space="preserve">
          <source>This method tests less than or equal to (for &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;) and is used by the &lt;code&gt;&amp;lt;=&lt;/code&gt; operator. &lt;a href=&quot;trait.partialord#method.le&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Este m&amp;eacute;todo prueba menos de o igual a (para &lt;code&gt;self&lt;/code&gt; y &lt;code&gt;other&lt;/code&gt; ) y es utilizado por el operador &lt;code&gt;&amp;lt;=&lt;/code&gt; . &lt;a href=&quot;trait.partialord#method.le&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f2ae443e73d5f88ef06a1d6b529c7d18527f78a" translate="yes" xml:space="preserve">
          <source>This method uses &lt;a href=&quot;../default/trait.default&quot;&gt;&lt;code&gt;Default&lt;/code&gt;&lt;/a&gt; to create new values on every push. If you'd rather &lt;a href=&quot;../clone/trait.clone&quot;&gt;&lt;code&gt;Clone&lt;/code&gt;&lt;/a&gt; a given value, use &lt;a href=&quot;#method.resize&quot;&gt;&lt;code&gt;resize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Este m&amp;eacute;todo usa &lt;a href=&quot;../default/trait.default&quot;&gt; &lt;code&gt;Default&lt;/code&gt; &lt;/a&gt; para crear nuevos valores en cada push. Si prefiere &lt;a href=&quot;../clone/trait.clone&quot;&gt; &lt;code&gt;Clone&lt;/code&gt; &lt;/a&gt; un valor dado, use &lt;a href=&quot;#method.resize&quot;&gt; &lt;code&gt;resize&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1dc00be165ac3a4a63601e65e376c360363d264c" translate="yes" xml:space="preserve">
          <source>This method uses &lt;a href=&quot;../default/trait.default&quot;&gt;&lt;code&gt;Default&lt;/code&gt;&lt;/a&gt; to create new values on every push. If you'd rather &lt;a href=&quot;../clone/trait.clone&quot;&gt;&lt;code&gt;Clone&lt;/code&gt;&lt;/a&gt; a given value, use &lt;a href=&quot;struct.vec#method.resize&quot;&gt;&lt;code&gt;resize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5ffc4fb20de54f6e75ded6f37d7e6542ba4dcb3" translate="yes" xml:space="preserve">
          <source>This method uses a closure to create new values on every push. If you'd rather &lt;a href=&quot;../clone/trait.clone&quot;&gt;&lt;code&gt;Clone&lt;/code&gt;&lt;/a&gt; a given value, use &lt;a href=&quot;#method.resize&quot;&gt;&lt;code&gt;resize&lt;/code&gt;&lt;/a&gt;. If you want to use the &lt;a href=&quot;../default/trait.default&quot;&gt;&lt;code&gt;Default&lt;/code&gt;&lt;/a&gt; trait to generate values, you can pass &lt;a href=&quot;../default/trait.default#tymethod.default&quot;&gt;&lt;code&gt;Default::default()&lt;/code&gt;&lt;/a&gt; as the second argument.</source>
          <target state="translated">Este m&amp;eacute;todo usa un cierre para crear nuevos valores en cada empuje. Si prefiere &lt;a href=&quot;../clone/trait.clone&quot;&gt; &lt;code&gt;Clone&lt;/code&gt; &lt;/a&gt; un valor dado, use &lt;a href=&quot;#method.resize&quot;&gt; &lt;code&gt;resize&lt;/code&gt; &lt;/a&gt; . Si desea utilizar el rasgo &lt;a href=&quot;../default/trait.default&quot;&gt; &lt;code&gt;Default&lt;/code&gt; &lt;/a&gt; para generar valores, puede pasar &lt;a href=&quot;../default/trait.default#tymethod.default&quot;&gt; &lt;code&gt;Default::default()&lt;/code&gt; &lt;/a&gt; como segundo argumento.</target>
        </trans-unit>
        <trans-unit id="94cb38be3cc225054f996a63889a25410328f00e" translate="yes" xml:space="preserve">
          <source>This method uses a closure to create new values on every push. If you'd rather &lt;a href=&quot;../clone/trait.clone&quot;&gt;&lt;code&gt;Clone&lt;/code&gt;&lt;/a&gt; a given value, use &lt;a href=&quot;struct.vec#method.resize&quot;&gt;&lt;code&gt;Vec::resize&lt;/code&gt;&lt;/a&gt;. If you want to use the &lt;a href=&quot;../default/trait.default&quot;&gt;&lt;code&gt;Default&lt;/code&gt;&lt;/a&gt; trait to generate values, you can pass &lt;a href=&quot;../default/trait.default#tymethod.default&quot;&gt;&lt;code&gt;Default::default&lt;/code&gt;&lt;/a&gt; as the second argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c5f86d4c9d838972d27ad9b235e2a91344da57" translate="yes" xml:space="preserve">
          <source>This method uses a closure to create new values. If you'd rather &lt;a href=&quot;../clone/trait.clone&quot;&gt;&lt;code&gt;Clone&lt;/code&gt;&lt;/a&gt; a given value, use &lt;a href=&quot;#method.fill&quot;&gt;&lt;code&gt;fill&lt;/code&gt;&lt;/a&gt;. If you want to use the &lt;a href=&quot;../default/trait.default&quot;&gt;&lt;code&gt;Default&lt;/code&gt;&lt;/a&gt; trait to generate values, you can pass &lt;a href=&quot;../default/trait.default#tymethod.default&quot;&gt;&lt;code&gt;Default::default&lt;/code&gt;&lt;/a&gt; as the argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="900514ffa4e50bfbbb68fdfe9dc96a8ee8c53300" translate="yes" xml:space="preserve">
          <source>This method uses a closure to create new values. If you'd rather &lt;a href=&quot;clone/trait.clone&quot;&gt;&lt;code&gt;Clone&lt;/code&gt;&lt;/a&gt; a given value, use &lt;a href=&quot;#method.fill&quot;&gt;&lt;code&gt;fill&lt;/code&gt;&lt;/a&gt;. If you want to use the &lt;a href=&quot;default/trait.default&quot;&gt;&lt;code&gt;Default&lt;/code&gt;&lt;/a&gt; trait to generate values, you can pass &lt;a href=&quot;default/trait.default#tymethod.default&quot;&gt;&lt;code&gt;Default::default&lt;/code&gt;&lt;/a&gt; as the argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e8aba760b1e58965c26c5247df8d78a97a2b7d9" translate="yes" xml:space="preserve">
          <source>This method validates the format defined in the RFC and won't recognize the following addresses such as &lt;code&gt;fe80:0:0:1::&lt;/code&gt; or &lt;code&gt;fe81::&lt;/code&gt; as unicast link-local addresses for example. If you need a less strict validation use &lt;a href=&quot;struct.ipv6addr#method.is_unicast_link_local&quot;&gt;&lt;code&gt;Ipv6Addr::is_unicast_link_local()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57f44223f055f4bc85ef6eebc9a26838b98e07df" translate="yes" xml:space="preserve">
          <source>This method validates the format defined in the RFC and won't recognize the following addresses such as &lt;code&gt;fe80:0:0:1::&lt;/code&gt; or &lt;code&gt;fe81::&lt;/code&gt; as unicast link-local addresses for example. If you need a less strict validation use &lt;a href=&quot;struct.ipv6addr#method.is_unicast_link_local&quot;&gt;&lt;code&gt;is_unicast_link_local()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Este m&amp;eacute;todo valida el formato definido en el RFC y no reconocer&amp;aacute; las siguientes direcciones como &lt;code&gt;fe80:0:0:1::&lt;/code&gt; o &lt;code&gt;fe81::&lt;/code&gt; como direcciones de enlace local de unidifusi&amp;oacute;n, por ejemplo. Si necesita una validaci&amp;oacute;n menos estricta, utilice &lt;a href=&quot;struct.ipv6addr#method.is_unicast_link_local&quot;&gt; &lt;code&gt;is_unicast_link_local()&lt;/code&gt; &lt;/a&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="34a9aeb12096c73821e3d3f2146e3bcd68d312a7" translate="yes" xml:space="preserve">
          <source>This method will be deprecated in favor of the identically-named inherent methods on &lt;code&gt;u8&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;[u8]&lt;/code&gt; and &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">Este m&amp;eacute;todo quedar&amp;aacute; obsoleto a favor de los m&amp;eacute;todos inherentes con nombres id&amp;eacute;nticos en &lt;code&gt;u8&lt;/code&gt; , &lt;code&gt;char&lt;/code&gt; , &lt;code&gt;[u8]&lt;/code&gt; y &lt;code&gt;str&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71c3fa499cb951e39a31bf79d7f47ca94405dd75" translate="yes" xml:space="preserve">
          <source>This method will be removed soon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dab63bf4ac92d7a8265610c22503839aea1e5938" translate="yes" xml:space="preserve">
          <source>This method will block the calling thread if another initialization routine is currently running.</source>
          <target state="translated">Este método bloqueará el hilo de llamada si se está ejecutando otra rutina de inicialización.</target>
        </trans-unit>
        <trans-unit id="fd65ab04cca83f42050b2936debdcfa64855e2e3" translate="yes" xml:space="preserve">
          <source>This method will call &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt; repeatedly until &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; is encountered, returning the number of times it saw &lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt;&lt;code&gt;Some&lt;/code&gt;&lt;/a&gt;. Note that &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt; has to be called at least once even if the iterator does not have any elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dcd7df93995d5669f9a19d9090b19b5d2473592" translate="yes" xml:space="preserve">
          <source>This method will continuously call &lt;a href=&quot;#tymethod.write&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; until there is no more data to be written or an error of non-&lt;a href=&quot;enum.errorkind#variant.Interrupted&quot;&gt;&lt;code&gt;ErrorKind::Interrupted&lt;/code&gt;&lt;/a&gt; kind is returned. This method will not return until the entire buffer has been successfully written or such an error occurs. The first error that is not of &lt;a href=&quot;enum.errorkind#variant.Interrupted&quot;&gt;&lt;code&gt;ErrorKind::Interrupted&lt;/code&gt;&lt;/a&gt; kind generated from this method will be returned.</source>
          <target state="translated">Este m&amp;eacute;todo llamar&amp;aacute; continuamente a &lt;a href=&quot;#tymethod.write&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt; hasta que no haya m&amp;aacute;s datos para escribir o se &lt;a href=&quot;enum.errorkind#variant.Interrupted&quot;&gt; &lt;code&gt;ErrorKind::Interrupted&lt;/code&gt; &lt;/a&gt; un error que no sea ErrorKind :: Interrupted . Este m&amp;eacute;todo no regresar&amp;aacute; hasta que todo el b&amp;uacute;fer se haya escrito correctamente o se produzca un error de este tipo. Se &lt;a href=&quot;enum.errorkind#variant.Interrupted&quot;&gt; &lt;code&gt;ErrorKind::Interrupted&lt;/code&gt; &lt;/a&gt; primer error que no sea del tipo ErrorKind :: Interrupted generado a partir de este m&amp;eacute;todo.</target>
        </trans-unit>
        <trans-unit id="0bf4855a0328106cbe0baa3671aad93298aa630b" translate="yes" xml:space="preserve">
          <source>This method will continuously call &lt;a href=&quot;#tymethod.write_at&quot;&gt;&lt;code&gt;write_at&lt;/code&gt;&lt;/a&gt; until there is no more data to be written or an error of non-&lt;a href=&quot;../../../io/enum.errorkind#variant.Interrupted&quot;&gt;&lt;code&gt;ErrorKind::Interrupted&lt;/code&gt;&lt;/a&gt; kind is returned. This method will not return until the entire buffer has been successfully written or such an error occurs. The first error that is not of &lt;a href=&quot;../../../io/enum.errorkind#variant.Interrupted&quot;&gt;&lt;code&gt;ErrorKind::Interrupted&lt;/code&gt;&lt;/a&gt; kind generated from this method will be returned.</source>
          <target state="translated">Este m&amp;eacute;todo llamar&amp;aacute; continuamente a &lt;a href=&quot;#tymethod.write_at&quot;&gt; &lt;code&gt;write_at&lt;/code&gt; &lt;/a&gt; hasta que no haya m&amp;aacute;s datos para escribir o se &lt;a href=&quot;../../../io/enum.errorkind#variant.Interrupted&quot;&gt; &lt;code&gt;ErrorKind::Interrupted&lt;/code&gt; &lt;/a&gt; un error que no sea ErrorKind :: Interrupted . Este m&amp;eacute;todo no regresar&amp;aacute; hasta que todo el b&amp;uacute;fer se haya escrito correctamente o se produzca un error de este tipo. Se &lt;a href=&quot;../../../io/enum.errorkind#variant.Interrupted&quot;&gt; &lt;code&gt;ErrorKind::Interrupted&lt;/code&gt; &lt;/a&gt; primer error que no sea del tipo ErrorKind :: Interrupted generado a partir de este m&amp;eacute;todo.</target>
        </trans-unit>
        <trans-unit id="34bd7dd9f2f6fd228fe4ece502dea492de39f939" translate="yes" xml:space="preserve">
          <source>This method will continuously call &lt;a href=&quot;trait.fileext#tymethod.write_at&quot;&gt;&lt;code&gt;write_at&lt;/code&gt;&lt;/a&gt; until there is no more data to be written or an error of non-&lt;a href=&quot;../../../io/enum.errorkind#variant.Interrupted&quot;&gt;&lt;code&gt;io::ErrorKind::Interrupted&lt;/code&gt;&lt;/a&gt; kind is returned. This method will not return until the entire buffer has been successfully written or such an error occurs. The first error that is not of &lt;a href=&quot;../../../io/enum.errorkind#variant.Interrupted&quot;&gt;&lt;code&gt;io::ErrorKind::Interrupted&lt;/code&gt;&lt;/a&gt; kind generated from this method will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d4273ac7a3ba1d7a87ecc5115120efa61d6d44" translate="yes" xml:space="preserve">
          <source>This method will continuously call &lt;a href=&quot;trait.write#method.write_vectored&quot;&gt;&lt;code&gt;write_vectored&lt;/code&gt;&lt;/a&gt; until there is no more data to be written or an error of non-&lt;a href=&quot;enum.errorkind#variant.Interrupted&quot;&gt;&lt;code&gt;ErrorKind::Interrupted&lt;/code&gt;&lt;/a&gt; kind is returned. This method will not return until all buffers have been successfully written or such an error occurs. The first error that is not of &lt;a href=&quot;enum.errorkind#variant.Interrupted&quot;&gt;&lt;code&gt;ErrorKind::Interrupted&lt;/code&gt;&lt;/a&gt; kind generated from this method will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3edbd42d79d3d4c4b13caf2b0a59c3d785c0e55" translate="yes" xml:space="preserve">
          <source>This method will continuously call &lt;a href=&quot;trait.write#tymethod.write&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; until there is no more data to be written or an error of non-&lt;a href=&quot;enum.errorkind#variant.Interrupted&quot;&gt;&lt;code&gt;ErrorKind::Interrupted&lt;/code&gt;&lt;/a&gt; kind is returned. This method will not return until the entire buffer has been successfully written or such an error occurs. The first error that is not of &lt;a href=&quot;enum.errorkind#variant.Interrupted&quot;&gt;&lt;code&gt;ErrorKind::Interrupted&lt;/code&gt;&lt;/a&gt; kind generated from this method will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b531b20d0eb83c8a34e8a69001999cab52351ebf" translate="yes" xml:space="preserve">
          <source>This method will currently always return &lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt;&lt;code&gt;Some&lt;/code&gt;&lt;/a&gt;, but this may change in future versions.</source>
          <target state="translated">Actualmente, este m&amp;eacute;todo siempre devolver&amp;aacute; &lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt; &lt;code&gt;Some&lt;/code&gt; &lt;/a&gt; , pero esto puede cambiar en versiones futuras.</target>
        </trans-unit>
        <trans-unit id="f5ce2db6ab8281674bdcae7d5e2f97235788a1d6" translate="yes" xml:space="preserve">
          <source>This method will eagerly skip &lt;code&gt;n&lt;/code&gt; elements by calling &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt; up to &lt;code&gt;n&lt;/code&gt; times until &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; is encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2170c54e7e7e211e3d0e2c65e377ae8bcaea7ac1" translate="yes" xml:space="preserve">
          <source>This method will ensure that any current waiters on the condition variable are awoken. Calls to &lt;code&gt;notify_all()&lt;/code&gt; are not buffered in any way.</source>
          <target state="translated">Este m&amp;eacute;todo asegurar&amp;aacute; que se despierte a todos los camareros actuales en la variable de condici&amp;oacute;n. Las llamadas a &lt;code&gt;notify_all()&lt;/code&gt; no se almacenan en b&amp;uacute;fer de ninguna manera.</target>
        </trans-unit>
        <trans-unit id="149968b75a735130b9e849f252f39d4aeeb3370e" translate="yes" xml:space="preserve">
          <source>This method will evaluate the iterator until it returns &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;. While doing so, it keeps track of the current element. After &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; is returned, &lt;code&gt;last()&lt;/code&gt; will then return the last element it saw.</source>
          <target state="translated">Este m&amp;eacute;todo evaluar&amp;aacute; el iterador hasta que devuelva &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; . Mientras lo hace, realiza un seguimiento del elemento actual. Despu&amp;eacute;s de que se devuelva &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;last()&lt;/code&gt; devolver&amp;aacute; el &amp;uacute;ltimo elemento que vio.</target>
        </trans-unit>
        <trans-unit id="60132e29639954faf0b02a7c1a61ca490fca81f1" translate="yes" xml:space="preserve">
          <source>This method will evaluate the iterator until its &lt;a href=&quot;#tymethod.next&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt; returns &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;. Once &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; is encountered, &lt;code&gt;count()&lt;/code&gt; returns the number of times it called &lt;a href=&quot;#tymethod.next&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Este m&amp;eacute;todo evaluar&amp;aacute; el iterador hasta su &lt;a href=&quot;#tymethod.next&quot;&gt; &lt;code&gt;next&lt;/code&gt; &lt;/a&gt; retorno &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; . Una vez que se encuentra &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;count()&lt;/code&gt; devuelve el n&amp;uacute;mero de veces que llam&amp;oacute; a &lt;a href=&quot;#tymethod.next&quot;&gt; &lt;code&gt;next&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="430231e1c82b4b198abc958a7fd105f7b17a6eb0" translate="yes" xml:space="preserve">
          <source>This method will fail if the socket is not connected. The &lt;code&gt;connect&lt;/code&gt; method will connect this socket to a remote address.</source>
          <target state="translated">Este m&amp;eacute;todo fallar&amp;aacute; si el enchufe no est&amp;aacute; conectado. La &lt;code&gt;connect&lt;/code&gt; m&amp;eacute;todo conectar este conector a una direcci&amp;oacute;n remota.</target>
        </trans-unit>
        <trans-unit id="99d3a71bbe68b832fc3370a5188434c797f36ae5" translate="yes" xml:space="preserve">
          <source>This method will never block the caller in order to wait for data to become available. Instead, this will always return immediately with a possible option of pending data on the channel.</source>
          <target state="translated">Este método nunca bloqueará a la persona que llama para esperar a que los datos estén disponibles.En cambio,siempre regresará inmediatamente con una posible opción de datos pendientes en el canal.</target>
        </trans-unit>
        <trans-unit id="cbdaac7e9262e1ca34c4fe476a690d8dd791b78c" translate="yes" xml:space="preserve">
          <source>This method will never block the current thread.</source>
          <target state="translated">Este método nunca bloqueará el hilo actual.</target>
        </trans-unit>
        <trans-unit id="46d2c9fdd8f22af9ddb09186941e568038365eb2" translate="yes" xml:space="preserve">
          <source>This method will panic if result is not finite, negative or overflows &lt;code&gt;Duration&lt;/code&gt;.</source>
          <target state="translated">Este m&amp;eacute;todo entrar&amp;aacute; en p&amp;aacute;nico si el resultado no es finito, negativo o desborda la &lt;code&gt;Duration&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="361fc3f209ee1e7f236b4d7adeffb54823eee70f" translate="yes" xml:space="preserve">
          <source>This method will take care to not copy the vector, for efficiency's sake.</source>
          <target state="translated">Este método se encargará de no copiar el vector,por razones de eficiencia.</target>
        </trans-unit>
        <trans-unit id="086f7043b4f8a7fd4a6336d78995f0e85e9d5744" translate="yes" xml:space="preserve">
          <source>This method, together with &lt;code&gt;key&lt;/code&gt;, is an alternative to &lt;code&gt;entry&lt;/code&gt; that can be used when the complete entry isn't known upfront. Prefer the &lt;code&gt;entry&lt;/code&gt; method when it's possible to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e6fca229e267292b225ded4f3ea56dd1917d4dd" translate="yes" xml:space="preserve">
          <source>This method, together with &lt;code&gt;value&lt;/code&gt;, is an alternative to &lt;code&gt;entry&lt;/code&gt; that can be used when the complete entry isn't known upfront. Prefer the &lt;code&gt;entry&lt;/code&gt; method when it's possible to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15bda4a4da4275b96ba5bd1843478dd37908d7e9" translate="yes" xml:space="preserve">
          <source>This module also provides an implementation of thread-local storage for Rust programs. Thread-local storage is a method of storing data into a global variable that each thread in the program will have its own copy of. Threads do not share this data, so accesses do not need to be synchronized.</source>
          <target state="translated">Este módulo también proporciona una implementación de almacenamiento local de hilos para los programas de Rust.El almacenamiento local de hilos es un método para almacenar datos en una variable global de la que cada hilo del programa tendrá su propia copia.Los hilos no comparten estos datos,por lo que los accesos no necesitan ser sincronizados.</target>
        </trans-unit>
        <trans-unit id="a618e47bcd778e6fbdbebc05ca474e36092d34bf" translate="yes" xml:space="preserve">
          <source>This module contains basic methods to manipulate the contents of the local filesystem. All methods in this module represent cross-platform filesystem operations. Extra platform-specific functionality can be found in the extension traits of &lt;code&gt;std::os::$platform&lt;/code&gt;.</source>
          <target state="translated">Este m&amp;oacute;dulo contiene m&amp;eacute;todos b&amp;aacute;sicos para manipular el contenido del sistema de archivos local. Todos los m&amp;eacute;todos de este m&amp;oacute;dulo representan operaciones de sistemas de archivos multiplataforma. Se puede encontrar una funcionalidad adicional espec&amp;iacute;fica de la plataforma en las caracter&amp;iacute;sticas de extensi&amp;oacute;n de &lt;code&gt;std::os::$platform&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="facf45454888eb2d77ede3ccdd2076d5cf487a0e" translate="yes" xml:space="preserve">
          <source>This module contains functions for querying the size and alignment of types, initializing and manipulating memory.</source>
          <target state="translated">Este módulo contiene funciones para consultar el tamaño y la alineación de los tipos,inicializar y manipular la memoria.</target>
        </trans-unit>
        <trans-unit id="2408b577206af618721c013114d9c06e429f800a" translate="yes" xml:space="preserve">
          <source>This module contains functions to inspect various aspects such as environment variables, process arguments, the current directory, and various other important directories.</source>
          <target state="translated">Este módulo contiene funciones para inspeccionar varios aspectos como las variables de entorno,los argumentos de los procesos,el directorio actual y otros directorios importantes.</target>
        </trans-unit>
        <trans-unit id="493f5d09dd437f62e48924cee92d925e5c7d2ef1" translate="yes" xml:space="preserve">
          <source>This module contains the &lt;a href=&quot;struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; type, a trait for converting &lt;a href=&quot;trait.tostring&quot;&gt;&lt;code&gt;ToString&lt;/code&gt;&lt;/a&gt;s, and several error types that may result from working with &lt;a href=&quot;struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="translated">Este m&amp;oacute;dulo contiene el tipo &lt;a href=&quot;struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; , un rasgo para convertir &lt;a href=&quot;trait.tostring&quot;&gt; &lt;code&gt;ToString&lt;/code&gt; &lt;/a&gt; s, y varios tipos de errores que pueden resultar de trabajar con &lt;a href=&quot;struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; s.</target>
        </trans-unit>
        <trans-unit id="0a09e5de88124067a8f4a272146af1f58ce6f16e" translate="yes" xml:space="preserve">
          <source>This module contains the &lt;a href=&quot;struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; type, the &lt;a href=&quot;trait.tostring&quot;&gt;&lt;code&gt;ToString&lt;/code&gt;&lt;/a&gt; trait for converting to strings, and several error types that may result from working with &lt;a href=&quot;struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a15bad5d969fcb97693f6f0bc38018fba7343164" translate="yes" xml:space="preserve">
          <source>This module contains the runtime support for the &lt;a href=&quot;../macro.format&quot;&gt;&lt;code&gt;format!&lt;/code&gt;&lt;/a&gt; syntax extension. This macro is implemented in the compiler to emit calls to this module in order to format arguments at runtime into strings.</source>
          <target state="translated">&amp;iexcl;Este m&amp;oacute;dulo contiene el soporte de tiempo de ejecuci&amp;oacute;n para el &lt;a href=&quot;../macro.format&quot;&gt; &lt;code&gt;format!&lt;/code&gt; &lt;/a&gt;extensi&amp;oacute;n de sintaxis. Esta macro se implementa en el compilador para emitir llamadas a este m&amp;oacute;dulo con el fin de formatear argumentos en tiempo de ejecuci&amp;oacute;n en cadenas.</target>
        </trans-unit>
        <trans-unit id="12f15aefb562d878bda21e27716658fa02862f93" translate="yes" xml:space="preserve">
          <source>This module contains the support necessary to capture a stack backtrace of a running OS thread from the OS thread itself. The &lt;code&gt;Backtrace&lt;/code&gt; type supports capturing a stack trace via the &lt;code&gt;Backtrace::capture&lt;/code&gt; and &lt;code&gt;Backtrace::force_capture&lt;/code&gt; functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe75678b9da36500f1155d5a63660783d7b96c49" translate="yes" xml:space="preserve">
          <source>This module contains various tools for ordering and comparing values. In summary:</source>
          <target state="translated">Este módulo contiene varias herramientas para ordenar y comparar valores.En resumen:</target>
        </trans-unit>
        <trans-unit id="5526cfdf674b75dda2276399dbf95bab9061f815" translate="yes" xml:space="preserve">
          <source>This module defines atomic versions of a select number of primitive types, including &lt;a href=&quot;struct.atomicbool&quot;&gt;&lt;code&gt;AtomicBool&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;struct.atomicisize&quot;&gt;&lt;code&gt;AtomicIsize&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;struct.atomicusize&quot;&gt;&lt;code&gt;AtomicUsize&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;struct.atomici8&quot;&gt;&lt;code&gt;AtomicI8&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;struct.atomicu16&quot;&gt;&lt;code&gt;AtomicU16&lt;/code&gt;&lt;/a&gt;, etc. Atomic types present operations that, when used correctly, synchronize updates between threads.</source>
          <target state="translated">Este m&amp;oacute;dulo define versiones at&amp;oacute;micas de un n&amp;uacute;mero selecto de tipos primitivos, incluyendo &lt;a href=&quot;struct.atomicbool&quot;&gt; &lt;code&gt;AtomicBool&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;struct.atomicisize&quot;&gt; &lt;code&gt;AtomicIsize&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;struct.atomicusize&quot;&gt; &lt;code&gt;AtomicUsize&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;struct.atomici8&quot;&gt; &lt;code&gt;AtomicI8&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;struct.atomicu16&quot;&gt; &lt;code&gt;AtomicU16&lt;/code&gt; &lt;/a&gt; , etc. Los tipos at&amp;oacute;micos presentan operaciones que, cuando se usan correctamente, sincronizan actualizaciones entre subprocesos.</target>
        </trans-unit>
        <trans-unit id="69b6d67047755d0189ccf8e0dd69886ba1af9f48" translate="yes" xml:space="preserve">
          <source>This module exists for technical reasons, the primary documentation for &lt;code&gt;char&lt;/code&gt; is directly on &lt;a href=&quot;../primitive.char&quot;&gt;the &lt;code&gt;char&lt;/code&gt; primitive type&lt;/a&gt; itself.</source>
          <target state="translated">Este m&amp;oacute;dulo existe por razones t&amp;eacute;cnicas, la documentaci&amp;oacute;n principal para &lt;code&gt;char&lt;/code&gt; est&amp;aacute; directamente en &lt;a href=&quot;../primitive.char&quot;&gt;el tipo primitivo &lt;code&gt;char&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0c05c40f88eef085aa06e135cdea7a637a633c60" translate="yes" xml:space="preserve">
          <source>This module implements the &lt;code&gt;Any&lt;/code&gt; trait, which enables dynamic typing of any &lt;code&gt;'static&lt;/code&gt; type through runtime reflection.</source>
          <target state="translated">Este m&amp;oacute;dulo implementa el rasgo &lt;code&gt;Any&lt;/code&gt; , que permite la escritura din&amp;aacute;mica de cualquier tipo &lt;code&gt;'static&lt;/code&gt; trav&amp;eacute;s de la reflexi&amp;oacute;n en tiempo de ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="a2779c978566f8d66cd98dfb5457c45d53a57fb6" translate="yes" xml:space="preserve">
          <source>This module is largely organized by type:</source>
          <target state="translated">Este módulo está organizado en gran medida por tipo:</target>
        </trans-unit>
        <trans-unit id="5be07f93f33ed08d424575dcac18854b8631d380" translate="yes" xml:space="preserve">
          <source>This module is mostly concerned with spawning and interacting with child processes, but it also provides &lt;a href=&quot;fn.abort&quot;&gt;&lt;code&gt;abort&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;fn.exit&quot;&gt;&lt;code&gt;exit&lt;/code&gt;&lt;/a&gt; for terminating the current process.</source>
          <target state="translated">Este m&amp;oacute;dulo se ocupa principalmente de la generaci&amp;oacute;n e interacci&amp;oacute;n con procesos secundarios, pero tambi&amp;eacute;n proporciona &lt;a href=&quot;fn.abort&quot;&gt; &lt;code&gt;abort&lt;/code&gt; o&lt;/a&gt; y &lt;a href=&quot;fn.exit&quot;&gt; &lt;code&gt;exit&lt;/code&gt; &lt;/a&gt; para finalizar el proceso actual.</target>
        </trans-unit>
        <trans-unit id="288daae4ba933c2cf1c52332e7aec01da8baaf15" translate="yes" xml:space="preserve">
          <source>This module is the home of the iterator implementations for the iterators implemented on &lt;code&gt;char&lt;/code&gt;, as well as some useful constants and conversion functions that convert various types to &lt;code&gt;char&lt;/code&gt;.</source>
          <target state="translated">Este m&amp;oacute;dulo es el hogar de las implementaciones de iteradores para los iteradores implementados en &lt;code&gt;char&lt;/code&gt; , as&amp;iacute; como algunas constantes &amp;uacute;tiles y funciones de conversi&amp;oacute;n que convierten varios tipos a &lt;code&gt;char&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="55568ed1c38eacf7d09bc4bc93efa4b457d73318" translate="yes" xml:space="preserve">
          <source>This module only currently provides one bit of information, &lt;a href=&quot;struct.permissions#method.readonly&quot;&gt;&lt;code&gt;Permissions::readonly&lt;/code&gt;&lt;/a&gt;, which is exposed on all currently supported platforms. Unix-specific functionality, such as mode bits, is available through the &lt;a href=&quot;../os/unix/fs/trait.permissionsext&quot;&gt;&lt;code&gt;PermissionsExt&lt;/code&gt;&lt;/a&gt; trait.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16223be8f664aa8af7792fdf4f8c15d5b579360d" translate="yes" xml:space="preserve">
          <source>This module only currently provides one bit of information, &lt;a href=&quot;struct.permissions#method.readonly&quot;&gt;&lt;code&gt;readonly&lt;/code&gt;&lt;/a&gt;, which is exposed on all currently supported platforms. Unix-specific functionality, such as mode bits, is available through the &lt;a href=&quot;../os/unix/fs/trait.permissionsext&quot;&gt;&lt;code&gt;PermissionsExt&lt;/code&gt;&lt;/a&gt; trait.</source>
          <target state="translated">Este m&amp;oacute;dulo solo proporciona actualmente un bit de informaci&amp;oacute;n, de &lt;a href=&quot;struct.permissions#method.readonly&quot;&gt; &lt;code&gt;readonly&lt;/code&gt; &lt;/a&gt; , que se expone en todas las plataformas compatibles actualmente. La funcionalidad espec&amp;iacute;fica de Unix, como los bits de modo, est&amp;aacute; disponible a trav&amp;eacute;s del rasgo &lt;a href=&quot;../os/unix/fs/trait.permissionsext&quot;&gt; &lt;code&gt;PermissionsExt&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="72abc30b878e9efe98c4c560589176b50cfcfb02" translate="yes" xml:space="preserve">
          <source>This module provides a generic way to compute the hash of a value. The simplest way to make a type hashable is to use &lt;code&gt;#[derive(Hash)]&lt;/code&gt;:</source>
          <target state="translated">Este m&amp;oacute;dulo proporciona una forma gen&amp;eacute;rica de calcular el hash de un valor. La forma m&amp;aacute;s sencilla de convertir un tipo en hash es usar &lt;code&gt;#[derive(Hash)]&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8f6357e74fc7527ed8e55102f82ccb8843f20d51" translate="yes" xml:space="preserve">
          <source>This module provides constants which are specific to the implementation of the &lt;code&gt;f32&lt;/code&gt; floating point data type.</source>
          <target state="translated">Este m&amp;oacute;dulo proporciona constantes que son espec&amp;iacute;ficas para la implementaci&amp;oacute;n del tipo de datos de coma flotante &lt;code&gt;f32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="87f0d2ad3a049e2ea757e82944e2e6b1d2f310c4" translate="yes" xml:space="preserve">
          <source>This module provides constants which are specific to the implementation of the &lt;code&gt;f64&lt;/code&gt; floating point data type.</source>
          <target state="translated">Este m&amp;oacute;dulo proporciona constantes que son espec&amp;iacute;ficas para la implementaci&amp;oacute;n del tipo de datos de punto flotante &lt;code&gt;f64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4dd1d432064e6f3e28ac8c1d81caf06446f388ba" translate="yes" xml:space="preserve">
          <source>This module provides message-based communication over channels, concretely defined among three types:</source>
          <target state="translated">Este módulo proporciona una comunicación basada en mensajes a través de canales,definidos concretamente entre tres tipos:</target>
        </trans-unit>
        <trans-unit id="bfedf6f4f14d905a894526b273dfe17f7e7c03dc" translate="yes" xml:space="preserve">
          <source>This module provides networking functionality for the Transmission Control and User Datagram Protocols, as well as types for IP and socket addresses.</source>
          <target state="translated">Este módulo proporciona una funcionalidad de red para los protocolos de control de transmisión y de datagramas de usuario,así como tipos para direcciones IP y de socket.</target>
        </trans-unit>
        <trans-unit id="fcfa8dfe7aed9682173752b15b6103829ea655a1" translate="yes" xml:space="preserve">
          <source>This module provides some extra types that are useful when doing numerical work. See the individual documentation for each piece for more information.</source>
          <target state="translated">Este módulo proporciona algunos tipos adicionales que son útiles cuando se hace trabajo numérico.Consulte la documentación individual de cada pieza para obtener más información.</target>
        </trans-unit>
        <trans-unit id="b42dc453d74574a22f838766ed6a6210b7719f9b" translate="yes" xml:space="preserve">
          <source>This module provides two types, &lt;a href=&quot;struct.pathbuf&quot;&gt;&lt;code&gt;PathBuf&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;struct.path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; (akin to &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;), for working with paths abstractly. These types are thin wrappers around &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt; respectively, meaning that they work directly on strings according to the local platform's path syntax.</source>
          <target state="translated">Este m&amp;oacute;dulo proporciona dos tipos, &lt;a href=&quot;struct.pathbuf&quot;&gt; &lt;code&gt;PathBuf&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;struct.path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; (similar a &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; ), para trabajar con rutas de forma abstracta. Estos tipos son envoltorios delgados alrededor de &lt;a href=&quot;../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;../ffi/struct.osstr&quot;&gt; &lt;code&gt;OsStr&lt;/code&gt; &lt;/a&gt; respectivamente, lo que significa que funcionan directamente en cadenas de acuerdo con la sintaxis de ruta de la plataforma local.</target>
        </trans-unit>
        <trans-unit id="a9add5ffa74ddef61504588ae8fe02f3fc02034e" translate="yes" xml:space="preserve">
          <source>This module provides two types, &lt;a href=&quot;struct.pathbuf&quot;&gt;&lt;code&gt;PathBuf&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;struct.path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; (akin to &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;), for working with paths abstractly. These types are thin wrappers around &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt; respectively, meaning that they work directly on strings according to the local platform's path syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2fe72f6bcf1faf654e10546253a992773369d18" translate="yes" xml:space="preserve">
          <source>This module provides utilities to handle data across non-Rust interfaces, like other programming languages and the underlying operating system. It is mainly of use for FFI (Foreign Function Interface) bindings and code that needs to exchange C-like strings with other languages.</source>
          <target state="translated">Este módulo proporciona utilidades para manejar datos a través de interfaces no oxidadas,como otros lenguajes de programación y el sistema operativo subyacente.Se utiliza principalmente para los enlaces FFI (Foreign Function Interface)y el código que necesita intercambiar cadenas de tipo C con otros lenguajes.</target>
        </trans-unit>
        <trans-unit id="523a58a1796e44e7bd8c46d95ef23447cedfbc5f" translate="yes" xml:space="preserve">
          <source>This module reexports the primitive types to allow usage that is not possibly shadowed by other declared types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bfbd1c67f1485adce8aa9ca96b08fda6c8d21af" translate="yes" xml:space="preserve">
          <source>This mutex will block threads waiting for the lock to become available. The mutex can also be statically initialized or created via a &lt;a href=&quot;#method.new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; constructor. Each mutex has a type parameter which represents the data that it is protecting. The data can only be accessed through the RAII guards returned from &lt;a href=&quot;#method.lock&quot;&gt;&lt;code&gt;lock&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#method.try_lock&quot;&gt;&lt;code&gt;try_lock&lt;/code&gt;&lt;/a&gt;, which guarantees that the data is only ever accessed when the mutex is locked.</source>
          <target state="translated">Este mutex bloquear&amp;aacute; los subprocesos en espera de que el bloqueo est&amp;eacute; disponible. El mutex tambi&amp;eacute;n puede inicializarse est&amp;aacute;ticamente o crearse mediante un &lt;a href=&quot;#method.new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; constructor. Cada mutex tiene un par&amp;aacute;metro de tipo que representa los datos que est&amp;aacute; protegiendo. Solo se puede acceder a los datos a trav&amp;eacute;s de los guardias RAII devueltos por &lt;a href=&quot;#method.lock&quot;&gt; &lt;code&gt;lock&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;#method.try_lock&quot;&gt; &lt;code&gt;try_lock&lt;/code&gt; &lt;/a&gt; , lo que garantiza que solo se accede a los datos cuando el mutex est&amp;aacute; bloqueado.</target>
        </trans-unit>
        <trans-unit id="37c35fdf98665e8061d3ede706452fcafbf6bf45" translate="yes" xml:space="preserve">
          <source>This mutex will block threads waiting for the lock to become available. The mutex can also be statically initialized or created via a &lt;a href=&quot;struct.mutex#method.new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; constructor. Each mutex has a type parameter which represents the data that it is protecting. The data can only be accessed through the RAII guards returned from &lt;a href=&quot;struct.mutex#method.lock&quot;&gt;&lt;code&gt;lock&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;struct.mutex#method.try_lock&quot;&gt;&lt;code&gt;try_lock&lt;/code&gt;&lt;/a&gt;, which guarantees that the data is only ever accessed when the mutex is locked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6bb4ef8774a69f40318879a20a2f5485ae10af2" translate="yes" xml:space="preserve">
          <source>This never needs to re-allocate, but does need to do &lt;em&gt;O&lt;/em&gt;(&lt;em&gt;n&lt;/em&gt;) data movement if the circular buffer doesn't happen to be at the beginning of the allocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56f3b065f3863bd74d78c00a2522270062418669" translate="yes" xml:space="preserve">
          <source>This never needs to re-allocate, but does need to do O(n) data movement if the circular buffer doesn't happen to be at the beginning of the allocation.</source>
          <target state="translated">Esto nunca necesita reasignarse,pero sí necesita hacer un movimiento de datos de O(n)si el búfer circular no se encuentra al principio de la asignación.</target>
        </trans-unit>
        <trans-unit id="d28b87d734ed0d5315fcb74f17b2994ec84a38d2" translate="yes" xml:space="preserve">
          <source>This new slice goes from &lt;code&gt;begin&lt;/code&gt; to &lt;code&gt;end&lt;/code&gt;, including &lt;code&gt;begin&lt;/code&gt; but excluding &lt;code&gt;end&lt;/code&gt;.</source>
          <target state="translated">Este nuevo segmento va de &lt;code&gt;begin&lt;/code&gt; a &lt;code&gt;end&lt;/code&gt; , incluido el &lt;code&gt;begin&lt;/code&gt; pero excluyendo el &lt;code&gt;end&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5e5d3eaf75778ffc4640687e8cefa2e10e75497" translate="yes" xml:space="preserve">
          <source>This next example calls a supertrait method on a generic parameter.</source>
          <target state="translated">El siguiente ejemplo llama a un método de supertratos sobre un parámetro genérico.</target>
        </trans-unit>
        <trans-unit id="9f7ad17f03d80b97ecff41fe1815f8dca0918d1f" translate="yes" xml:space="preserve">
          <source>This next example gives &lt;code&gt;radius&lt;/code&gt; a default implementation using the &lt;code&gt;area&lt;/code&gt; function from &lt;code&gt;Shape&lt;/code&gt;.</source>
          <target state="translated">El siguiente ejemplo le da a &lt;code&gt;radius&lt;/code&gt; una implementaci&amp;oacute;n predeterminada usando la funci&amp;oacute;n de &lt;code&gt;area&lt;/code&gt; de &lt;code&gt;Shape&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="50d4d7072a1ea5b824d1df9626f273fc9c52a75a" translate="yes" xml:space="preserve">
          <source>This number is a lower bound; the &lt;code&gt;HashMap&amp;lt;K, V&amp;gt;&lt;/code&gt; might be able to hold more, but is guaranteed to be able to hold at least this many.</source>
          <target state="translated">Este n&amp;uacute;mero es un l&amp;iacute;mite inferior; el &lt;code&gt;HashMap&amp;lt;K, V&amp;gt;&lt;/code&gt; podr&amp;iacute;a contener m&amp;aacute;s, pero se garantiza que podr&amp;aacute; contener al menos esta cantidad.</target>
        </trans-unit>
        <trans-unit id="75625b78a6cc53054a38dc48c604ece0622bfe30" translate="yes" xml:space="preserve">
          <source>This number is simply useful for passing to other methods, like &lt;a href=&quot;struct.osstring#method.with_capacity&quot;&gt;&lt;code&gt;OsString::with_capacity&lt;/code&gt;&lt;/a&gt; to avoid reallocations.</source>
          <target state="translated">Este n&amp;uacute;mero es simplemente &amp;uacute;til para pasar a otros m&amp;eacute;todos, como &lt;a href=&quot;struct.osstring#method.with_capacity&quot;&gt; &lt;code&gt;OsString::with_capacity&lt;/code&gt; &lt;/a&gt; para evitar reasignaciones.</target>
        </trans-unit>
        <trans-unit id="1f022d625542e31d83b61a7cfb496898fc698f8a" translate="yes" xml:space="preserve">
          <source>This only differs from the previous &lt;code&gt;impl&lt;/code&gt; in that the parameters &lt;code&gt;T&lt;/code&gt; and &lt;code&gt;MyType&amp;lt;T&amp;gt;&lt;/code&gt; for &lt;code&gt;ForeignTrait2&lt;/code&gt; have been swapped. This example does &lt;em&gt;not&lt;/em&gt; violate the orphan rule; it is permitted.</source>
          <target state="translated">Esto solo difiere de la &lt;code&gt;impl&lt;/code&gt; icaci&amp;oacute;n anterior en que los par&amp;aacute;metros &lt;code&gt;T&lt;/code&gt; y &lt;code&gt;MyType&amp;lt;T&amp;gt;&lt;/code&gt; para &lt;code&gt;ForeignTrait2&lt;/code&gt; han sido intercambiados. Este ejemplo &lt;em&gt;no&lt;/em&gt; viola la regla de los hu&amp;eacute;rfanos; est&amp;aacute; permitido.</target>
        </trans-unit>
        <trans-unit id="1833c0a27c1d09954fa6a057a5eb72b9706f31ec" translate="yes" xml:space="preserve">
          <source>This only includes environment variables explicitly set with &lt;a href=&quot;struct.command#method.env&quot;&gt;&lt;code&gt;Command::env&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;struct.command#method.envs&quot;&gt;&lt;code&gt;Command::envs&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;struct.command#method.env_remove&quot;&gt;&lt;code&gt;Command::env_remove&lt;/code&gt;&lt;/a&gt;. It does not include environment variables that will be inherited by the child process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="123296246acbbeb137b9c0c76f971008749a56bb" translate="yes" xml:space="preserve">
          <source>This operation does &lt;strong&gt;not&lt;/strong&gt; modify the filesystem. To modify the filesystem use the &lt;a href=&quot;fn.set_permissions&quot;&gt;&lt;code&gt;fs::set_permissions&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">Esta operaci&amp;oacute;n &lt;strong&gt;no&lt;/strong&gt; modifica el sistema de archivos. Para modificar el sistema de archivos utilice la funci&amp;oacute;n &lt;a href=&quot;fn.set_permissions&quot;&gt; &lt;code&gt;fs::set_permissions&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7036bf2f2a1e56b239ac49dd49a90706f4ff18c2" translate="yes" xml:space="preserve">
          <source>This operation does &lt;strong&gt;not&lt;/strong&gt; modify the filesystem. To modify the filesystem use the &lt;a href=&quot;fn.set_permissions&quot;&gt;&lt;code&gt;set_permissions&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c0bbc4d892938033fbacd4684ea2a287c924f8c" translate="yes" xml:space="preserve">
          <source>This operation is &lt;code&gt;O(1)&lt;/code&gt;.</source>
          <target state="translated">Esta operaci&amp;oacute;n es &lt;code&gt;O(1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dd1a487434fc87832e2f1a787954854ff60dfa9b" translate="yes" xml:space="preserve">
          <source>This operation is &lt;em&gt;O&lt;/em&gt;(1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fdec81639aa08f036b813714ac253cba45f17ed" translate="yes" xml:space="preserve">
          <source>This operation is sometimes called 'reduce' or 'inject'.</source>
          <target state="translated">Esta operación se llama a veces &quot;reducir&quot; o &quot;inyectar&quot;.</target>
        </trans-unit>
        <trans-unit id="c8451edf8bf7bc5bb1bf0555fcc9a5705a25da14" translate="yes" xml:space="preserve">
          <source>This operation performs an unconditional mapping without tailoring. That is, the conversion is independent of context and language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2fd1d86e77ef341cc160d32009392653fd89ec1" translate="yes" xml:space="preserve">
          <source>This operation rounds towards zero, truncating any fractional part of the exact result.</source>
          <target state="translated">Esta operación se redondea hacia el cero,truncando cualquier parte fraccionaria del resultado exacto.</target>
        </trans-unit>
        <trans-unit id="77029037758bda804fd792f27ba1f29cea457a7e" translate="yes" xml:space="preserve">
          <source>This operation satisfies &lt;code&gt;n % d == n - (n / d) * d&lt;/code&gt;. The result has the same sign as the left operand.</source>
          <target state="translated">Esta operaci&amp;oacute;n satisface &lt;code&gt;n % d == n - (n / d) * d&lt;/code&gt; . El resultado tiene el mismo signo que el operando izquierdo.</target>
        </trans-unit>
        <trans-unit id="bdbe7ca28eb7e43951e771605b8bd474b48c29e7" translate="yes" xml:space="preserve">
          <source>This operation should compute in &lt;em&gt;O&lt;/em&gt;(1) time and &lt;em&gt;O&lt;/em&gt;(1) memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43df87c6439b0a85582f9e67d3c1fce146118f3d" translate="yes" xml:space="preserve">
          <source>This operation should compute in &lt;em&gt;O&lt;/em&gt;(1) time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d494ef70142bea4ddf2b4f6d9f09545f47dd54e" translate="yes" xml:space="preserve">
          <source>This operation should compute in &lt;em&gt;O&lt;/em&gt;(&lt;em&gt;n&lt;/em&gt;) time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c9bdd59dbbaca42da37bc9d33eec68b2af8961" translate="yes" xml:space="preserve">
          <source>This operation should compute in O(1) time and O(1) memory.</source>
          <target state="translated">Esta operación debe calcularse en tiempo O(1)y en memoria O(1).</target>
        </trans-unit>
        <trans-unit id="fc7c0f50f52c35ea7e364b7e26d103277ce95b38" translate="yes" xml:space="preserve">
          <source>This operation should compute in O(1) time.</source>
          <target state="translated">Esta operación debe calcularse en tiempo O(1).</target>
        </trans-unit>
        <trans-unit id="a13a41f53da524732e21aa1da4b3958def62f00f" translate="yes" xml:space="preserve">
          <source>This operation should compute in O(n) time.</source>
          <target state="translated">Esta operación debe calcularse en tiempo O(n).</target>
        </trans-unit>
        <trans-unit id="4da5d428cc5f4bb1f1eadb7b45f2669f2c6be87e" translate="yes" xml:space="preserve">
          <source>This operation was interrupted.</source>
          <target state="translated">Esta operación fue interrumpida.</target>
        </trans-unit>
        <trans-unit id="e5b25bf34db3082fbebf881dd2f3b63132ce24a9" translate="yes" xml:space="preserve">
          <source>This operation wraps around on overflow.</source>
          <target state="translated">Esta operación se envuelve en el desbordamiento.</target>
        </trans-unit>
        <trans-unit id="513292ffc7d15c4c6459299bf349f4e8ef41bcc6" translate="yes" xml:space="preserve">
          <source>This option defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Esta opci&amp;oacute;n tiene el valor predeterminado de &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07732c105324f285891b421be7b1897cf45eb1a8" translate="yes" xml:space="preserve">
          <source>This option indicates whether a new file will be created if the file does not yet already exist.</source>
          <target state="translated">Esta opción indica si se creará un nuevo archivo si el archivo no existe todavía.</target>
        </trans-unit>
        <trans-unit id="2ab719a36168121ae6911773d2659e3887ae7b87" translate="yes" xml:space="preserve">
          <source>This option indicates whether a new file will be created. No file is allowed to exist at the target location, also no (dangling) symlink.</source>
          <target state="translated">Esta opción indica si se creará un nuevo archivo.No se permite la existencia de ningún archivo en la ubicación de destino,ni tampoco ningún enlace simbólico (colgante).</target>
        </trans-unit>
        <trans-unit id="1997355865e9c95bba24957f07adb48aa7900b34" translate="yes" xml:space="preserve">
          <source>This option is useful because it is atomic. Otherwise between checking whether a file exists and creating a new one, the file may have been created by another process (a TOCTOU race condition / attack).</source>
          <target state="translated">Esta opción es útil porque es atómica.De lo contrario,entre la comprobación de la existencia de un archivo y la creación de uno nuevo,el archivo puede haber sido creado por otro proceso (una condición de carrera TOCTOU/ataque).</target>
        </trans-unit>
        <trans-unit id="4d1d1f446736eda75bb94ad6c4911fc032b1110f" translate="yes" xml:space="preserve">
          <source>This option, when true, means that writes will append to a file instead of overwriting previous contents. Note that setting &lt;code&gt;.write(true).append(true)&lt;/code&gt; has the same effect as setting only &lt;code&gt;.append(true)&lt;/code&gt;.</source>
          <target state="translated">Esta opci&amp;oacute;n, cuando es verdadera, significa que las escrituras se agregar&amp;aacute;n a un archivo en lugar de sobrescribir el contenido anterior. Tenga en cuenta que configurar &lt;code&gt;.write(true).append(true)&lt;/code&gt; tiene el mismo efecto que configurar solo &lt;code&gt;.append(true)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="279fd5d225ffc9cf4a6694f03d2272dc1973056a" translate="yes" xml:space="preserve">
          <source>This option, when true, will indicate that the file should be &lt;code&gt;read&lt;/code&gt;-able if opened.</source>
          <target state="translated">Esta opci&amp;oacute;n, cuando es verdadero, indica que el archivo se debe &lt;code&gt;read&lt;/code&gt; -able si se abre.</target>
        </trans-unit>
        <trans-unit id="2aa691cde7b75893eb561d3865c9d79612f73f71" translate="yes" xml:space="preserve">
          <source>This option, when true, will indicate that the file should be &lt;code&gt;write&lt;/code&gt;-able if opened.</source>
          <target state="translated">Esta opci&amp;oacute;n, cuando sea verdadera, indicar&amp;aacute; que el archivo debe poder &lt;code&gt;write&lt;/code&gt; si se abre.</target>
        </trans-unit>
        <trans-unit id="42af0ae9cc5372b7ccd519ad313f0abe9e0cfe15" translate="yes" xml:space="preserve">
          <source>This ordering is only applicable for operations that can perform a load.</source>
          <target state="translated">Esta orden sólo se aplica a las operaciones que pueden realizar una carga.</target>
        </trans-unit>
        <trans-unit id="20a3da5b9e12d0ccdf3e64c2e589466b4721fced" translate="yes" xml:space="preserve">
          <source>This ordering is only applicable for operations that can perform a store.</source>
          <target state="translated">Este ordenamiento sólo es aplicable para las operaciones que puede realizar una tienda.</target>
        </trans-unit>
        <trans-unit id="ea76b31c997f4d8a61f17e8560093311b945344f" translate="yes" xml:space="preserve">
          <source>This ordering is only applicable for operations that combine both loads and stores.</source>
          <target state="translated">Esta orden sólo es aplicable a las operaciones que combinen tanto cargas como provisiones.</target>
        </trans-unit>
        <trans-unit id="a87804f30fcdf78425015d26ec12efca3e1a08c7" translate="yes" xml:space="preserve">
          <source>This output is better: we now have a reasonable error message. However, we also have extraneous information we don&amp;rsquo;t want to give to our users. Perhaps using the technique we used in Listing 9-10 isn&amp;rsquo;t the best to use here: a call to &lt;code&gt;panic!&lt;/code&gt; is more appropriate for a programming problem than a usage problem, &lt;a href=&quot;ch09-03-to-panic-or-not-to-panic#guidelines-for-error-handling&quot;&gt;as discussed in Chapter 9&lt;/a&gt;. Instead, we can use the other technique you learned about in Chapter 9&amp;mdash;&lt;a href=&quot;ch09-02-recoverable-errors-with-result&quot;&gt;returning a &lt;code&gt;Result&lt;/code&gt;&lt;/a&gt; that indicates either success or an error.</source>
          <target state="translated">Esta salida es mejor: ahora tenemos un mensaje de error razonable. Sin embargo, tambi&amp;eacute;n tenemos informaci&amp;oacute;n extra&amp;ntilde;a que no queremos dar a nuestros usuarios. Quiz&amp;aacute;s usar la t&amp;eacute;cnica que usamos en el Listado 9-10 no es la mejor para usar aqu&amp;iacute;: &amp;iexcl;una llamada al &lt;code&gt;panic!&lt;/code&gt; es m&amp;aacute;s apropiado para un problema de programaci&amp;oacute;n que un problema de uso, &lt;a href=&quot;ch09-03-to-panic-or-not-to-panic#guidelines-for-error-handling&quot;&gt;como se discuti&amp;oacute; en el Cap&amp;iacute;tulo 9&lt;/a&gt; . En su lugar, podemos utilizar la otra t&amp;eacute;cnica que aprendi&amp;oacute; en el Cap&amp;iacute;tulo 9: &lt;a href=&quot;ch09-02-recoverable-errors-with-result&quot;&gt;devolver un &lt;code&gt;Result&lt;/code&gt; ado&lt;/a&gt; que indica &amp;eacute;xito o error.</target>
        </trans-unit>
        <trans-unit id="04051f730c7eeba40e7dd9250f9fd3ae55f310b9" translate="yes" xml:space="preserve">
          <source>This output isn&amp;rsquo;t what we wanted. We want to call the &lt;code&gt;baby_name&lt;/code&gt; function that is part of the &lt;code&gt;Animal&lt;/code&gt; trait that we implemented on &lt;code&gt;Dog&lt;/code&gt; so the code prints &lt;code&gt;A baby dog is called a puppy&lt;/code&gt;. The technique of specifying the trait name that we used in Listing 19-18 doesn&amp;rsquo;t help here; if we change &lt;code&gt;main&lt;/code&gt; to the code in Listing 19-20, we&amp;rsquo;ll get a compilation error.</source>
          <target state="translated">Esta salida no es la que quer&amp;iacute;amos. Queremos llamar a la funci&amp;oacute;n &lt;code&gt;baby_name&lt;/code&gt; que es parte del rasgo &lt;code&gt;Animal&lt;/code&gt; que implementamos en &lt;code&gt;Dog&lt;/code&gt; para que se imprima el c&amp;oacute;digo. &lt;code&gt;A baby dog is called a puppy&lt;/code&gt; . La t&amp;eacute;cnica de especificar el nombre del rasgo que usamos en el Listado 19-18 no ayuda aqu&amp;iacute;; si cambiamos &lt;code&gt;main&lt;/code&gt; al c&amp;oacute;digo del Listado 19-20, obtendremos un error de compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="66b4788ea5425d4692dd1ffafd058fec8508d60c" translate="yes" xml:space="preserve">
          <source>This output shows &lt;code&gt;cargo test&lt;/code&gt; only ran the tests for the &lt;code&gt;add-one&lt;/code&gt; crate and didn&amp;rsquo;t run the &lt;code&gt;adder&lt;/code&gt; crate tests.</source>
          <target state="translated">Esta salida muestra &lt;code&gt;cargo test&lt;/code&gt; solo ejecut&amp;oacute; las pruebas para la caja &lt;code&gt;add-one&lt;/code&gt; y no ejecut&amp;oacute; las pruebas de la caja &lt;code&gt;adder&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f91d4073e1806ac4e46d9be9407b7439ade530c5" translate="yes" xml:space="preserve">
          <source>This outputs:</source>
          <target state="translated">Esto produce:</target>
        </trans-unit>
        <trans-unit id="220a338b4d08066eba2a22fb127e73c40665ebcb" translate="yes" xml:space="preserve">
          <source>This overwrites pinned data, but that is okay: its destructor gets run before being overwritten, so no pinning guarantee is violated.</source>
          <target state="translated">Esto sobreescribe los datos fijados,pero está bien:su destructor se ejecuta antes de ser sobrescrito,por lo que no se viola la garantía de fijación.</target>
        </trans-unit>
        <trans-unit id="05caefb888af241727a56b286e8ae483a7d9633f" translate="yes" xml:space="preserve">
          <source>This page documents the formal specification of the follow rules for &lt;a href=&quot;macros-by-example&quot;&gt;Macros By Example&lt;/a&gt;. They were originally specified in &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0550-macro-future-proofing.html&quot;&gt;RFC 550&lt;/a&gt;, from which the bulk of this text is copied, and expanded upon in subsequent RFCs.</source>
          <target state="translated">Esta p&amp;aacute;gina documenta la especificaci&amp;oacute;n formal de las siguientes reglas para &lt;a href=&quot;macros-by-example&quot;&gt;Macros por ejemplo&lt;/a&gt; . Originalmente se especificaron en &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0550-macro-future-proofing.html&quot;&gt;RFC 550&lt;/a&gt; , de la cual se copia la mayor parte de este texto y se ampl&amp;iacute;a en RFC posteriores.</target>
        </trans-unit>
        <trans-unit id="3b9633b5692298146f03a49947c6dcff6df1f7b9" translate="yes" xml:space="preserve">
          <source>This page documents the formal specification of the follow rules for &lt;a href=&quot;macros-by-example&quot;&gt;Macros By Example&lt;/a&gt;. They were originally specified in &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0550-macro-future-proofing.md&quot;&gt;RFC 550&lt;/a&gt;, from which the bulk of this text is copied, and expanded upon in subsequent RFCs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f87b1d9607de86149c082e3d8de19453e0048df2" translate="yes" xml:space="preserve">
          <source>This pattern has a profound impact on the way Rust code is written. It may seem simple right now, but the behavior of code can be unexpected in more complicated situations when we want to have multiple variables use the data we&amp;rsquo;ve allocated on the heap. Let&amp;rsquo;s explore some of those situations now.</source>
          <target state="translated">Este patr&amp;oacute;n tiene un impacto profundo en la forma en que se escribe el c&amp;oacute;digo de Rust. Puede parecer simple en este momento, pero el comportamiento del c&amp;oacute;digo puede ser inesperado en situaciones m&amp;aacute;s complicadas cuando queremos que m&amp;uacute;ltiples variables usen los datos que hemos asignado en el mont&amp;oacute;n. Exploremos algunas de esas situaciones ahora.</target>
        </trans-unit>
        <trans-unit id="ebae1cd81adce77daea1f3e37e663633c554fab5" translate="yes" xml:space="preserve">
          <source>This pattern is about separating concerns: &lt;em&gt;main.rs&lt;/em&gt; handles running the program, and &lt;em&gt;lib.rs&lt;/em&gt; handles all the logic of the task at hand. Because you can&amp;rsquo;t test the &lt;code&gt;main&lt;/code&gt; function directly, this structure lets you test all of your program&amp;rsquo;s logic by moving it into functions in &lt;em&gt;lib.rs&lt;/em&gt;. The only code that remains in &lt;em&gt;main.rs&lt;/em&gt; will be small enough to verify its correctness by reading it. Let&amp;rsquo;s rework our program by following this process.</source>
          <target state="translated">Este patr&amp;oacute;n se trata de separar preocupaciones: &lt;em&gt;main.rs&lt;/em&gt; maneja la ejecuci&amp;oacute;n del programa y &lt;em&gt;lib.rs&lt;/em&gt; maneja toda la l&amp;oacute;gica de la tarea en cuesti&amp;oacute;n. Porque no se puede probar la &lt;code&gt;main&lt;/code&gt; directamente la funci&amp;oacute;n, esta estructura le permite probar todas la l&amp;oacute;gica de su programa de movi&amp;eacute;ndolo en funciones en &lt;em&gt;lib.rs&lt;/em&gt; . El &amp;uacute;nico c&amp;oacute;digo que permanece en &lt;em&gt;main.rs&lt;/em&gt; ser&amp;aacute; lo suficientemente peque&amp;ntilde;o como para verificar su exactitud ley&amp;eacute;ndolo. Repasemos nuestro programa siguiendo este proceso.</target>
        </trans-unit>
        <trans-unit id="4f7fef1aec609824d9a98cbd4986f806fb8112f5" translate="yes" xml:space="preserve">
          <source>This pattern is refutable when one of its subpatterns is refutable.</source>
          <target state="translated">Este patrón es refutable cuando uno de sus subpatrones es refutable.</target>
        </trans-unit>
        <trans-unit id="8e7824ffc5e192a74a0014b97fd199a69a9bbad1" translate="yes" xml:space="preserve">
          <source>This pattern of propagating errors is so common in Rust that Rust provides the question mark operator &lt;code&gt;?&lt;/code&gt; to make this easier.</source>
          <target state="translated">Este patr&amp;oacute;n de propagaci&amp;oacute;n de errores es tan com&amp;uacute;n en Rust que Rust proporciona el operador de signo de interrogaci&amp;oacute;n &lt;code&gt;?&lt;/code&gt; para hacer esto m&amp;aacute;s f&amp;aacute;cil.</target>
        </trans-unit>
        <trans-unit id="be8e420bedd2fafb3e2ace598d4c2a4fc61a219a" translate="yes" xml:space="preserve">
          <source>This performs complex unconditional mappings with no tailoring: it maps one Unicode character to its lowercase equivalent according to the &lt;a href=&quot;ftp://ftp.unicode.org/Public/UNIDATA/UnicodeData.txt&quot;&gt;Unicode database&lt;/a&gt; and the additional complex mappings &lt;a href=&quot;ftp://ftp.unicode.org/Public/UNIDATA/SpecialCasing.txt&quot;&gt;&lt;code&gt;SpecialCasing.txt&lt;/code&gt;&lt;/a&gt;. Conditional mappings (based on context or language) are not considered here.</source>
          <target state="translated">Esto realiza asignaciones incondicionales complejas sin adaptaci&amp;oacute;n: asigna un car&amp;aacute;cter Unicode a su equivalente en min&amp;uacute;sculas de acuerdo con la &lt;a href=&quot;ftp://ftp.unicode.org/Public/UNIDATA/UnicodeData.txt&quot;&gt;base de datos Unicode&lt;/a&gt; y las asignaciones complejas adicionales &lt;a href=&quot;ftp://ftp.unicode.org/Public/UNIDATA/SpecialCasing.txt&quot;&gt; &lt;code&gt;SpecialCasing.txt&lt;/code&gt; &lt;/a&gt; . Las asignaciones condicionales (basadas en el contexto o el idioma) no se consideran aqu&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="2bedef26ecd391020afcece167562372d74e3b11" translate="yes" xml:space="preserve">
          <source>This performs complex unconditional mappings with no tailoring: it maps one Unicode character to its uppercase equivalent according to the &lt;a href=&quot;ftp://ftp.unicode.org/Public/UNIDATA/UnicodeData.txt&quot;&gt;Unicode database&lt;/a&gt; and the additional complex mappings &lt;a href=&quot;ftp://ftp.unicode.org/Public/UNIDATA/SpecialCasing.txt&quot;&gt;&lt;code&gt;SpecialCasing.txt&lt;/code&gt;&lt;/a&gt;. Conditional mappings (based on context or language) are not considered here.</source>
          <target state="translated">Esto realiza asignaciones incondicionales complejas sin adaptaci&amp;oacute;n: asigna un car&amp;aacute;cter Unicode a su equivalente en may&amp;uacute;sculas de acuerdo con la &lt;a href=&quot;ftp://ftp.unicode.org/Public/UNIDATA/UnicodeData.txt&quot;&gt;base de datos Unicode&lt;/a&gt; y las asignaciones complejas adicionales &lt;a href=&quot;ftp://ftp.unicode.org/Public/UNIDATA/SpecialCasing.txt&quot;&gt; &lt;code&gt;SpecialCasing.txt&lt;/code&gt; &lt;/a&gt; . Las asignaciones condicionales (basadas en el contexto o el idioma) no se consideran aqu&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="367fd59cc7a5ce52d6910a709b90bfcbe81a7ab5" translate="yes" xml:space="preserve">
          <source>This piece of Rust history is relevant because it&amp;rsquo;s possible that more deterministic patterns will emerge and be added to the compiler. In the future, even fewer lifetime annotations might be required.</source>
          <target state="translated">Esta parte de la historia de Rust es relevante porque es posible que surjan patrones m&amp;aacute;s deterministas y se agreguen al compilador. En el futuro, es posible que se requieran incluso menos anotaciones de por vida.</target>
        </trans-unit>
        <trans-unit id="4d1e98917aa47fb301eb32dc85055855554e0b37" translate="yes" xml:space="preserve">
          <source>This pinned future is then polled by calling the &lt;a href=&quot;../../std/future/trait.future#tymethod.poll&quot;&gt;&lt;code&gt;Future::poll&lt;/code&gt;&lt;/a&gt; method and passing it the current &lt;a href=&quot;#task-context&quot;&gt;task context&lt;/a&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce7cedc5fc51216f120f0eb8fae3379dc963620e" translate="yes" xml:space="preserve">
          <source>This prints output like:</source>
          <target state="translated">Esto imprime una salida como:</target>
        </trans-unit>
        <trans-unit id="ff9f7a5e1d4525cd7d8438461ac9c53da48b455e" translate="yes" xml:space="preserve">
          <source>This prints to &lt;a href=&quot;https://en.wikipedia.org/wiki/Standard_streams#Standard_error_(stderr)&quot;&gt;stderr&lt;/a&gt;:</source>
          <target state="translated">Esto se imprime en &lt;a href=&quot;https://en.wikipedia.org/wiki/Standard_streams#Standard_error_(stderr)&quot;&gt;stderr&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="3c9f3b33a54ec1f8657331a04066cc462bed4e33" translate="yes" xml:space="preserve">
          <source>This problem can be solved by specifying from which trait we want to use the &lt;code&gt;Bar&lt;/code&gt; type:</source>
          <target state="translated">Este problema se puede resolver especificando desde qu&amp;eacute; rasgo queremos usar el tipo de &lt;code&gt;Bar&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fc4e53a566f64cd7b3bd5c8e48b6dab0075560d7" translate="yes" xml:space="preserve">
          <source>This process does not take into account the mutability or lifetime of the receiver, or whether a method is &lt;code&gt;unsafe&lt;/code&gt;. Once a method is looked up, if it can't be called for one (or more) of those reasons, the result is a compiler error.</source>
          <target state="translated">Este proceso no tiene en cuenta la mutabilidad o la vida &amp;uacute;til del receptor, o si un m&amp;eacute;todo &lt;code&gt;unsafe&lt;/code&gt; es seguro . Una vez que se busca un m&amp;eacute;todo, si no se puede llamar por una (o m&amp;aacute;s) de esas razones, el resultado es un error del compilador.</target>
        </trans-unit>
        <trans-unit id="1ff3edc7107794fccb9370413ce9f2edb3d33555" translate="yes" xml:space="preserve">
          <source>This process is just one of many ways to write software, but TDD can help drive code design as well. Writing the test before you write the code that makes the test pass helps to maintain high test coverage throughout the process.</source>
          <target state="translated">Este proceso es sólo una de las muchas maneras de escribir software,pero TDD también puede ayudar en el diseño de código.Escribir la prueba antes de escribir el código que hace que la prueba pase ayuda a mantener una alta cobertura de la prueba a lo largo del proceso.</target>
        </trans-unit>
        <trans-unit id="2a5870cc6149419aa4b701948d1d720f8c2eb21c" translate="yes" xml:space="preserve">
          <source>This program compiles without any errors and would also do so if we used &lt;code&gt;word&lt;/code&gt; after calling &lt;code&gt;s.clear()&lt;/code&gt;. Because &lt;code&gt;word&lt;/code&gt; isn&amp;rsquo;t connected to the state of &lt;code&gt;s&lt;/code&gt; at all, &lt;code&gt;word&lt;/code&gt; still contains the value &lt;code&gt;5&lt;/code&gt;. We could use that value &lt;code&gt;5&lt;/code&gt; with the variable &lt;code&gt;s&lt;/code&gt; to try to extract the first word out, but this would be a bug because the contents of &lt;code&gt;s&lt;/code&gt; have changed since we saved &lt;code&gt;5&lt;/code&gt; in &lt;code&gt;word&lt;/code&gt;.</source>
          <target state="translated">Este programa se compila sin errores y tambi&amp;eacute;n lo har&amp;iacute;a si &lt;code&gt;s.clear()&lt;/code&gt; &lt;code&gt;word&lt;/code&gt; despu&amp;eacute;s de llamar a s.clear () . Debido a que &lt;code&gt;word&lt;/code&gt; no est&amp;aacute; conectada al estado de &lt;code&gt;s&lt;/code&gt; en absoluto, &lt;code&gt;word&lt;/code&gt; todav&amp;iacute;a contiene el valor &lt;code&gt;5&lt;/code&gt; . Podr&amp;iacute;amos usar ese valor &lt;code&gt;5&lt;/code&gt; con la variable &lt;code&gt;s&lt;/code&gt; para intentar extraer la primera palabra, pero esto ser&amp;iacute;a un error porque el contenido de &lt;code&gt;s&lt;/code&gt; ha cambiado desde que guardamos &lt;code&gt;5&lt;/code&gt; en &lt;code&gt;word&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a1a216c5bb2240db271ccf5242339067640e2983" translate="yes" xml:space="preserve">
          <source>This program creates a tuple, &lt;code&gt;x&lt;/code&gt;, and then makes new variables for each element by using their index. As with most programming languages, the first index in a tuple is 0.</source>
          <target state="translated">Este programa crea una tupla, &lt;code&gt;x&lt;/code&gt; , y luego crea nuevas variables para cada elemento usando su &amp;iacute;ndice. Como ocurre con la mayor&amp;iacute;a de los lenguajes de programaci&amp;oacute;n, el primer &amp;iacute;ndice de una tupla es 0.</target>
        </trans-unit>
        <trans-unit id="a953795409deaf59d9e6550cf24f5329cf86ee13" translate="yes" xml:space="preserve">
          <source>This program creates a tuple, &lt;code&gt;x&lt;/code&gt;, and then makes new variables for each element by using their respective indices. As with most programming languages, the first index in a tuple is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="052f0899e565e8d2644e743be0e56bf26e6e1767" translate="yes" xml:space="preserve">
          <source>This program first binds &lt;code&gt;x&lt;/code&gt; to a value of &lt;code&gt;5&lt;/code&gt;. Then it shadows &lt;code&gt;x&lt;/code&gt; by repeating &lt;code&gt;let x =&lt;/code&gt;, taking the original value and adding &lt;code&gt;1&lt;/code&gt; so the value of &lt;code&gt;x&lt;/code&gt; is then &lt;code&gt;6&lt;/code&gt;. The third &lt;code&gt;let&lt;/code&gt; statement also shadows &lt;code&gt;x&lt;/code&gt;, multiplying the previous value by &lt;code&gt;2&lt;/code&gt; to give &lt;code&gt;x&lt;/code&gt; a final value of &lt;code&gt;12&lt;/code&gt;. When we run this program, it will output the following:</source>
          <target state="translated">Este programa primero une &lt;code&gt;x&lt;/code&gt; a un valor de &lt;code&gt;5&lt;/code&gt; . Luego sombrea &lt;code&gt;x&lt;/code&gt; repitiendo &lt;code&gt;let x =&lt;/code&gt; , tomando el valor original y agregando &lt;code&gt;1&lt;/code&gt; para que el valor de &lt;code&gt;x&lt;/code&gt; sea &lt;code&gt;6&lt;/code&gt; . La tercera declaraci&amp;oacute;n &lt;code&gt;let&lt;/code&gt; tambi&amp;eacute;n sombrea &lt;code&gt;x&lt;/code&gt; , multiplicando el valor anterior por &lt;code&gt;2&lt;/code&gt; para dar a &lt;code&gt;x&lt;/code&gt; un valor final de &lt;code&gt;12&lt;/code&gt; . Cuando ejecutamos este programa, generar&amp;aacute; lo siguiente:</target>
        </trans-unit>
        <trans-unit id="e37eff19d0df592c13224ef2e32fd74387b55f9e" translate="yes" xml:space="preserve">
          <source>This program first creates a tuple and binds it to the variable &lt;code&gt;tup&lt;/code&gt;. It then uses a pattern with &lt;code&gt;let&lt;/code&gt; to take &lt;code&gt;tup&lt;/code&gt; and turn it into three separate variables, &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and &lt;code&gt;z&lt;/code&gt;. This is called &lt;em&gt;destructuring&lt;/em&gt;, because it breaks the single tuple into three parts. Finally, the program prints the value of &lt;code&gt;y&lt;/code&gt;, which is &lt;code&gt;6.4&lt;/code&gt;.</source>
          <target state="translated">Este programa primero crea una tupla y la vincula a la variable &lt;code&gt;tup&lt;/code&gt; . Luego usa un patr&amp;oacute;n con &lt;code&gt;let&lt;/code&gt; para tomar &lt;code&gt;tup&lt;/code&gt; y convertirlo en tres variables separadas, &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; y &lt;code&gt;z&lt;/code&gt; . Esto se llama &lt;em&gt;desestructuraci&amp;oacute;n&lt;/em&gt; porque divide la tupla en tres partes. Finalmente, el programa imprime el valor de &lt;code&gt;y&lt;/code&gt; , que es &lt;code&gt;6.4&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e68e59981686f4d6d9628e4a0f06c39a18431f20" translate="yes" xml:space="preserve">
          <source>This program has four possible paths it can take. After running it, you should see the following output:</source>
          <target state="translated">Este programa tiene cuatro caminos posibles que puede tomar.Después de ejecutarlo,deberías ver la siguiente salida:</target>
        </trans-unit>
        <trans-unit id="c268368ea9194ea4e99d8e793596c3443d5a9397" translate="yes" xml:space="preserve">
          <source>This project was a hands-on way to introduce you to many new Rust concepts: &lt;code&gt;let&lt;/code&gt;, &lt;code&gt;match&lt;/code&gt;, methods, associated functions, the use of external crates, and more. In the next few chapters, you&amp;rsquo;ll learn about these concepts in more detail. Chapter 3 covers concepts that most programming languages have, such as variables, data types, and functions, and shows how to use them in Rust. Chapter 4 explores ownership, a feature that makes Rust different from other languages. Chapter 5 discusses structs and method syntax, and Chapter 6 explains how enums work.</source>
          <target state="translated">Este proyecto fue una forma pr&amp;aacute;ctica de presentarle muchos conceptos nuevos de Rust: &lt;code&gt;let&lt;/code&gt; , &lt;code&gt;match&lt;/code&gt; , m&amp;eacute;todos, funciones asociadas, el uso de cajas externas y m&amp;aacute;s. En los pr&amp;oacute;ximos cap&amp;iacute;tulos, aprender&amp;aacute; sobre estos conceptos con m&amp;aacute;s detalle. El Cap&amp;iacute;tulo 3 cubre conceptos que tienen la mayor&amp;iacute;a de los lenguajes de programaci&amp;oacute;n, como variables, tipos de datos y funciones, y muestra c&amp;oacute;mo usarlos en Rust. El Cap&amp;iacute;tulo 4 explora la propiedad, una caracter&amp;iacute;stica que hace que Rust sea diferente de otros idiomas. El Cap&amp;iacute;tulo 5 analiza las estructuras y la sintaxis de los m&amp;eacute;todos, y el Cap&amp;iacute;tulo 6 explica c&amp;oacute;mo funcionan las enumeraciones.</target>
        </trans-unit>
        <trans-unit id="9ce38c4decb31cc4f3034ac7fae7c79d93e80f53" translate="yes" xml:space="preserve">
          <source>This property cannot be checked by the compiler, and therefore &lt;code&gt;Eq&lt;/code&gt; implies &lt;a href=&quot;trait.partialeq&quot;&gt;&lt;code&gt;PartialEq&lt;/code&gt;&lt;/a&gt;, and has no extra methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab41f4f49ac9b596f3ff341e670c3c513d2c2a1e" translate="yes" xml:space="preserve">
          <source>This property cannot be checked by the compiler, and therefore &lt;code&gt;Eq&lt;/code&gt; implies &lt;code&gt;PartialEq&lt;/code&gt;, and has no extra methods.</source>
          <target state="translated">El compilador no puede verificar esta propiedad y, por lo tanto, &lt;code&gt;Eq&lt;/code&gt; implica &lt;code&gt;PartialEq&lt;/code&gt; y no tiene m&amp;eacute;todos adicionales.</target>
        </trans-unit>
        <trans-unit id="1608442363fd58986072b46f4e6a650827d3385c" translate="yes" xml:space="preserve">
          <source>This property is defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc1122&quot;&gt;IETF RFC 1122&lt;/a&gt;.</source>
          <target state="translated">Esta propiedad est&amp;aacute; definida por &lt;a href=&quot;https://tools.ietf.org/html/rfc1122&quot;&gt;IETF RFC 1122&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="25a4736ccf9a4ba3c3e3dac30177800bc1f743c9" translate="yes" xml:space="preserve">
          <source>This property is defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc3927&quot;&gt;IETF RFC 3927&lt;/a&gt;.</source>
          <target state="translated">Esta propiedad est&amp;aacute; definida por &lt;a href=&quot;https://tools.ietf.org/html/rfc3927&quot;&gt;IETF RFC 3927&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2cdf66b6082611e25a822825249d22e6f28f1917" translate="yes" xml:space="preserve">
          <source>This property is defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc4291&quot;&gt;IETF RFC 4291&lt;/a&gt;.</source>
          <target state="translated">Esta propiedad est&amp;aacute; definida por &lt;a href=&quot;https://tools.ietf.org/html/rfc4291&quot;&gt;IETF RFC 4291&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="93af0d07e68cafd035375823424d1e725ddb07d1" translate="yes" xml:space="preserve">
          <source>This property is defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc3849&quot;&gt;IETF RFC 3849&lt;/a&gt;.</source>
          <target state="translated">Esta propiedad se define en &lt;a href=&quot;https://tools.ietf.org/html/rfc3849&quot;&gt;IETF RFC 3849&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="85df454e96ffa6c63ed8ab37d8086b690c9dba86" translate="yes" xml:space="preserve">
          <source>This property is defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc4193&quot;&gt;IETF RFC 4193&lt;/a&gt;.</source>
          <target state="translated">Esta propiedad se define en &lt;a href=&quot;https://tools.ietf.org/html/rfc4193&quot;&gt;IETF RFC 4193&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9d5a4dec1164aed352e96ad9af690b1a3591dc76" translate="yes" xml:space="preserve">
          <source>This property is defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc4291&quot;&gt;IETF RFC 4291&lt;/a&gt;.</source>
          <target state="translated">Esta propiedad se define en &lt;a href=&quot;https://tools.ietf.org/html/rfc4291&quot;&gt;IETF RFC 4291&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c731a3c6e670f4842c76f756fa1e0f4c4f1cfae6" translate="yes" xml:space="preserve">
          <source>This property is defined in &lt;em&gt;UNIX Network Programming, Second Edition&lt;/em&gt;, W. Richard Stevens, p. 891; see also &lt;a href=&quot;http://man7.org/linux/man-pages/man7/ip.7.html&quot;&gt;ip7&lt;/a&gt;.</source>
          <target state="translated">Esta propiedad se define en &lt;em&gt;Programaci&amp;oacute;n de red UNIX, segunda edici&amp;oacute;n&lt;/em&gt; , W. Richard Stevens, p. 891; ver tambi&amp;eacute;n &lt;a href=&quot;http://man7.org/linux/man-pages/man7/ip.7.html&quot;&gt;ip7&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="19926d7df32802514fef095810b287a92fa4b874" translate="yes" xml:space="preserve">
          <source>This queue has &lt;code&gt;O(1)&lt;/code&gt; amortized inserts and removals from both ends of the container. It also has &lt;code&gt;O(1)&lt;/code&gt; indexing like a vector. The contained elements are not required to be copyable, and the queue will be sendable if the contained type is sendable.</source>
          <target state="translated">Esta cola tiene &lt;code&gt;O(1)&lt;/code&gt; inserciones y extracciones amortizadas de ambos extremos del contenedor. Tambi&amp;eacute;n tiene indexaci&amp;oacute;n &lt;code&gt;O(1)&lt;/code&gt; como un vector. No es necesario que los elementos contenidos se puedan copiar, y la cola se podr&amp;aacute; enviar si el tipo contenido se puede enviar.</target>
        </trans-unit>
        <trans-unit id="f222b6950bf888a7c8ce05739a640f15b3f1b84f" translate="yes" xml:space="preserve">
          <source>This queue has &lt;em&gt;O&lt;/em&gt;(1) amortized inserts and removals from both ends of the container. It also has &lt;em&gt;O&lt;/em&gt;(1) indexing like a vector. The contained elements are not required to be copyable, and the queue will be sendable if the contained type is sendable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae16a9ff1b9b0bb4dc2773f7faab160bd7347257" translate="yes" xml:space="preserve">
          <source>This reader has reached its &quot;end of file&quot; and will likely no longer be able to produce bytes. Note that this does not mean that the reader will &lt;em&gt;always&lt;/em&gt; no longer be able to produce bytes.</source>
          <target state="translated">Este lector ha llegado a su &quot;final de archivo&quot; y probablemente ya no podr&amp;aacute; producir bytes. Tenga en cuenta que esto no significa que el lector &lt;em&gt;siempre&lt;/em&gt; ya no ser&amp;aacute; capaz de producir bytes.</target>
        </trans-unit>
        <trans-unit id="eabbe1cac74b5970cf00777c8a04a9b08b503051" translate="yes" xml:space="preserve">
          <source>This reordering has the additional property that any value at position &lt;code&gt;i &amp;lt; index&lt;/code&gt; will be less than or equal to any value at a position &lt;code&gt;j &amp;gt; index&lt;/code&gt; using the comparator function. Additionally, this reordering is unstable (i.e. any number of equal elements may end up at position &lt;code&gt;index&lt;/code&gt;), in-place (i.e. does not allocate), and &lt;code&gt;O(n)&lt;/code&gt; worst-case. This function is also known as &quot;kth element&quot; in other libraries. It returns a triplet of the following values: all elements less than the one at the given index, the value at the given index, and all elements greater than the one at the given index, using the provided comparator function.</source>
          <target state="translated">Esta reordenaci&amp;oacute;n tiene la propiedad adicional de que cualquier valor en la posici&amp;oacute;n &lt;code&gt;i &amp;lt; index&lt;/code&gt; ser&amp;aacute; menor o igual a cualquier valor en una posici&amp;oacute;n &lt;code&gt;j &amp;gt; index&lt;/code&gt; usando la funci&amp;oacute;n de comparaci&amp;oacute;n. Adem&amp;aacute;s, este reordenamiento es inestable (es decir, cualquier n&amp;uacute;mero de elementos iguales puede terminar en el &lt;code&gt;index&lt;/code&gt; posici&amp;oacute;n ), en el lugar (es decir, no asigna) y &lt;code&gt;O(n)&lt;/code&gt; peor de los casos. Esta funci&amp;oacute;n tambi&amp;eacute;n se conoce como &quot;elemento kth&quot; en otras bibliotecas. Devuelve un triplete de los siguientes valores: todos los elementos menores que uno en el &amp;iacute;ndice dado, el valor en el &amp;iacute;ndice dado y todos los elementos mayores que uno en el &amp;iacute;ndice dado, usando la funci&amp;oacute;n de comparaci&amp;oacute;n proporcionada.</target>
        </trans-unit>
        <trans-unit id="5a5e3f81a187820f825f4369ca83b2c286d9273d" translate="yes" xml:space="preserve">
          <source>This reordering has the additional property that any value at position &lt;code&gt;i &amp;lt; index&lt;/code&gt; will be less than or equal to any value at a position &lt;code&gt;j &amp;gt; index&lt;/code&gt; using the comparator function. Additionally, this reordering is unstable (i.e. any number of equal elements may end up at position &lt;code&gt;index&lt;/code&gt;), in-place (i.e. does not allocate), and &lt;em&gt;O&lt;/em&gt;(&lt;em&gt;n&lt;/em&gt;) worst-case. This function is also known as &quot;kth element&quot; in other libraries. It returns a triplet of the following values: all elements less than the one at the given index, the value at the given index, and all elements greater than the one at the given index, using the provided comparator function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58333e6fd2204efb6d059b5e0ebaa3ad2ae11cea" translate="yes" xml:space="preserve">
          <source>This reordering has the additional property that any value at position &lt;code&gt;i &amp;lt; index&lt;/code&gt; will be less than or equal to any value at a position &lt;code&gt;j &amp;gt; index&lt;/code&gt; using the key extraction function. Additionally, this reordering is unstable (i.e. any number of equal elements may end up at position &lt;code&gt;index&lt;/code&gt;), in-place (i.e. does not allocate), and &lt;code&gt;O(n)&lt;/code&gt; worst-case. This function is also known as &quot;kth element&quot; in other libraries. It returns a triplet of the following values: all elements less than the one at the given index, the value at the given index, and all elements greater than the one at the given index, using the provided key extraction function.</source>
          <target state="translated">Esta reordenaci&amp;oacute;n tiene la propiedad adicional de que cualquier valor en la posici&amp;oacute;n &lt;code&gt;i &amp;lt; index&lt;/code&gt; ser&amp;aacute; menor o igual a cualquier valor en una posici&amp;oacute;n &lt;code&gt;j &amp;gt; index&lt;/code&gt; usando la funci&amp;oacute;n de extracci&amp;oacute;n de claves. Adem&amp;aacute;s, este reordenamiento es inestable (es decir, cualquier n&amp;uacute;mero de elementos iguales puede terminar en el &lt;code&gt;index&lt;/code&gt; posici&amp;oacute;n ), en el lugar (es decir, no asigna) y &lt;code&gt;O(n)&lt;/code&gt; peor de los casos. Esta funci&amp;oacute;n tambi&amp;eacute;n se conoce como &quot;elemento kth&quot; en otras bibliotecas. Devuelve un triplete de los siguientes valores: todos los elementos menores que el del &amp;iacute;ndice dado, el valor del &amp;iacute;ndice dado, y todos los elementos mayores que el del &amp;iacute;ndice dado, utilizando la funci&amp;oacute;n de extracci&amp;oacute;n de claves proporcionada.</target>
        </trans-unit>
        <trans-unit id="c83a0af8a141703ce8a894f271d81b6b5d0d2d99" translate="yes" xml:space="preserve">
          <source>This reordering has the additional property that any value at position &lt;code&gt;i &amp;lt; index&lt;/code&gt; will be less than or equal to any value at a position &lt;code&gt;j &amp;gt; index&lt;/code&gt; using the key extraction function. Additionally, this reordering is unstable (i.e. any number of equal elements may end up at position &lt;code&gt;index&lt;/code&gt;), in-place (i.e. does not allocate), and &lt;em&gt;O&lt;/em&gt;(&lt;em&gt;n&lt;/em&gt;) worst-case. This function is also known as &quot;kth element&quot; in other libraries. It returns a triplet of the following values: all elements less than the one at the given index, the value at the given index, and all elements greater than the one at the given index, using the provided key extraction function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b0ecb2451beab6446b7792a5f32ac5b93e64f7" translate="yes" xml:space="preserve">
          <source>This reordering has the additional property that any value at position &lt;code&gt;i &amp;lt; index&lt;/code&gt; will be less than or equal to any value at a position &lt;code&gt;j &amp;gt; index&lt;/code&gt;. Additionally, this reordering is unstable (i.e. any number of equal elements may end up at position &lt;code&gt;index&lt;/code&gt;), in-place (i.e. does not allocate), and &lt;code&gt;O(n)&lt;/code&gt; worst-case. This function is also/ known as &quot;kth element&quot; in other libraries. It returns a triplet of the following values: all elements less than the one at the given index, the value at the given index, and all elements greater than the one at the given index.</source>
          <target state="translated">Esta reordenaci&amp;oacute;n tiene la propiedad adicional de que cualquier valor en la posici&amp;oacute;n &lt;code&gt;i &amp;lt; index&lt;/code&gt; ser&amp;aacute; menor o igual que cualquier valor en una posici&amp;oacute;n &lt;code&gt;j &amp;gt; index&lt;/code&gt; . Adem&amp;aacute;s, este reordenamiento es inestable (es decir, cualquier n&amp;uacute;mero de elementos iguales puede terminar en el &lt;code&gt;index&lt;/code&gt; posici&amp;oacute;n ), en el lugar (es decir, no asigna) y &lt;code&gt;O(n)&lt;/code&gt; peor de los casos. Esta funci&amp;oacute;n tambi&amp;eacute;n se conoce como &quot;elemento kth&quot; en otras bibliotecas. Devuelve un triplete de los siguientes valores: todos los elementos menores que el del &amp;iacute;ndice dado, el valor del &amp;iacute;ndice dado y todos los elementos mayores que el del &amp;iacute;ndice dado.</target>
        </trans-unit>
        <trans-unit id="3d259af27d2572df43e2afe02e6f4d51f6ff06a9" translate="yes" xml:space="preserve">
          <source>This reordering has the additional property that any value at position &lt;code&gt;i &amp;lt; index&lt;/code&gt; will be less than or equal to any value at a position &lt;code&gt;j &amp;gt; index&lt;/code&gt;. Additionally, this reordering is unstable (i.e. any number of equal elements may end up at position &lt;code&gt;index&lt;/code&gt;), in-place (i.e. does not allocate), and &lt;em&gt;O&lt;/em&gt;(&lt;em&gt;n&lt;/em&gt;) worst-case. This function is also/ known as &quot;kth element&quot; in other libraries. It returns a triplet of the following values: all elements less than the one at the given index, the value at the given index, and all elements greater than the one at the given index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a44d46360998129b78ed15d687f727979c543e5" translate="yes" xml:space="preserve">
          <source>This representation can be applied to structs, unions, and enums.</source>
          <target state="translated">Esta representación puede aplicarse a las estructuras,uniones y enums.</target>
        </trans-unit>
        <trans-unit id="c79281349d10df09672689425c0c484e6ef587c0" translate="yes" xml:space="preserve">
          <source>This representation can be applied to structs, unions, and enums. The exception is &lt;a href=&quot;items/enumerations#zero-variant-enums&quot;&gt;zero-variant enums&lt;/a&gt; for which the &lt;code&gt;C&lt;/code&gt; representation is an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d003da75e5c18c6d78ec752d4c5ea2c1005e03" translate="yes" xml:space="preserve">
          <source>This requires that the data inside this &lt;code&gt;Pin&lt;/code&gt; is &lt;a href=&quot;../marker/trait.unpin&quot;&gt;&lt;code&gt;Unpin&lt;/code&gt;&lt;/a&gt; so that we can ignore the pinning invariants when unwrapping it.</source>
          <target state="translated">Esto requiere que los datos dentro de este &lt;code&gt;Pin&lt;/code&gt; sean &lt;a href=&quot;../marker/trait.unpin&quot;&gt; &lt;code&gt;Unpin&lt;/code&gt; &lt;/a&gt; para que podamos ignorar los invariantes de fijaci&amp;oacute;n al desenvolverlo.</target>
        </trans-unit>
        <trans-unit id="84a024e08861a138f89bc49f72665722f5345893" translate="yes" xml:space="preserve">
          <source>This requires that the data inside this &lt;code&gt;Pin&lt;/code&gt; is &lt;code&gt;Unpin&lt;/code&gt;.</source>
          <target state="translated">Esto requiere que los datos dentro de este &lt;code&gt;Pin&lt;/code&gt; sean &lt;code&gt;Unpin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bb8049ba5b3a969809828fb6b20b4c6f803c243a" translate="yes" xml:space="preserve">
          <source>This restriction allows for mutation but in a very controlled fashion. It&amp;rsquo;s something that new Rustaceans struggle with, because most languages let you mutate whenever you&amp;rsquo;d like.</source>
          <target state="translated">Esta restricci&amp;oacute;n permite la mutaci&amp;oacute;n pero de una manera muy controlada. Es algo con lo que los nuevos rust&amp;aacute;ceos luchan, porque la mayor&amp;iacute;a de los idiomas te permiten mutar cuando quieras.</target>
        </trans-unit>
        <trans-unit id="b9005ee922bd85c1b8cdd5bf9e647bc71bc7e1d1" translate="yes" xml:space="preserve">
          <source>This restricts us to a &lt;code&gt;Screen&lt;/code&gt; instance that has a list of components all of type &lt;code&gt;Button&lt;/code&gt; or all of type &lt;code&gt;TextField&lt;/code&gt;. If you&amp;rsquo;ll only ever have homogeneous collections, using generics and trait bounds is preferable because the definitions will be monomorphized at compile time to use the concrete types.</source>
          <target state="translated">Esto nos restringe a una instancia de &lt;code&gt;Screen&lt;/code&gt; que tiene una lista de componentes, todos de tipo &lt;code&gt;Button&lt;/code&gt; o todos de tipo &lt;code&gt;TextField&lt;/code&gt; . Si solo tendr&amp;aacute; colecciones homog&amp;eacute;neas, es preferible usar gen&amp;eacute;ricos y l&amp;iacute;mites de rasgos porque las definiciones se monomorfizar&amp;aacute;n en el momento de la compilaci&amp;oacute;n para usar los tipos concretos.</target>
        </trans-unit>
        <trans-unit id="fef61557094c53c94d8f4b9c87d239c1c4ddf6a3" translate="yes" xml:space="preserve">
          <source>This result just indicates that the assertion failed and which line the assertion is on. A more useful failure message in this case would print the value we got from the &lt;code&gt;greeting&lt;/code&gt; function. Let&amp;rsquo;s change the test function, giving it a custom failure message made from a format string with a placeholder filled in with the actual value we got from the &lt;code&gt;greeting&lt;/code&gt; function:</source>
          <target state="translated">Este resultado solo indica que la aserci&amp;oacute;n fall&amp;oacute; y en qu&amp;eacute; l&amp;iacute;nea se encuentra la aserci&amp;oacute;n. Un mensaje de falla m&amp;aacute;s &amp;uacute;til en este caso imprimir&amp;iacute;a el valor que obtuvimos de la funci&amp;oacute;n de &lt;code&gt;greeting&lt;/code&gt; . Cambiemos la funci&amp;oacute;n de prueba, d&amp;aacute;ndole un mensaje de falla personalizado hecho a partir de una cadena de formato con un marcador de posici&amp;oacute;n completado con el valor real que obtuvimos de la funci&amp;oacute;n de &lt;code&gt;greeting&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0886cd5bf439fbbc8be3535b3d5401de7c87877b" translate="yes" xml:space="preserve">
          <source>This return type means the call to &lt;code&gt;File::open&lt;/code&gt; might succeed and return a file handle that we can read from or write to. The function call also might fail: for example, the file might not exist, or we might not have permission to access the file. The &lt;code&gt;File::open&lt;/code&gt; function needs to have a way to tell us whether it succeeded or failed and at the same time give us either the file handle or error information. This information is exactly what the &lt;code&gt;Result&lt;/code&gt; enum conveys.</source>
          <target state="translated">Este tipo de retorno significa que la llamada a &lt;code&gt;File::open&lt;/code&gt; podr&amp;iacute;a tener &amp;eacute;xito y devolver un identificador de archivo desde el que podemos leer o escribir. La llamada a la funci&amp;oacute;n tambi&amp;eacute;n puede fallar: por ejemplo, es posible que el archivo no exista o que no tengamos permiso para acceder al archivo. La funci&amp;oacute;n &lt;code&gt;File::open&lt;/code&gt; necesita tener una forma de decirnos si tuvo &amp;eacute;xito o fall&amp;oacute; y al mismo tiempo darnos el identificador del archivo o la informaci&amp;oacute;n de error. Esta informaci&amp;oacute;n es exactamente lo que transmite la enumeraci&amp;oacute;n &lt;code&gt;Result&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e6467b9314c67467a583133eaf79a55bec1323c" translate="yes" xml:space="preserve">
          <source>This returns &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if the working directory will not be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7256f6dfb124c4206009cc4970395f092ae3141" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;None&lt;/code&gt; if the cursor is currently pointing to the &quot;ghost&quot; non-element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b3770e7d2efd1b08fe66eb571f2a780fb54e25f" translate="yes" xml:space="preserve">
          <source>This returns a numeric identifier for the thread identified by this &lt;code&gt;ThreadId&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="368beec57f1181b8799a91ee73ada8b4184da78e" translate="yes" xml:space="preserve">
          <source>This reuses all the nodes from &lt;code&gt;other&lt;/code&gt; and moves them into &lt;code&gt;self&lt;/code&gt;. After this operation, &lt;code&gt;other&lt;/code&gt; becomes empty.</source>
          <target state="translated">Esto reutiliza todos los nodos de &lt;code&gt;other&lt;/code&gt; y los mueve hacia &lt;code&gt;self&lt;/code&gt; . Despu&amp;eacute;s de esta operaci&amp;oacute;n, &lt;code&gt;other&lt;/code&gt; quedan vac&amp;iacute;os.</target>
        </trans-unit>
        <trans-unit id="7730271090bac7f074841851b1b821f9fc7fca43" translate="yes" xml:space="preserve">
          <source>This rework may seem like overkill for our small program, but we&amp;rsquo;re refactoring in small, incremental steps. After making this change, run the program again to verify that the argument parsing still works. It&amp;rsquo;s good to check your progress often, to help identify the cause of problems when they occur.</source>
          <target state="translated">Esta reelaboraci&amp;oacute;n puede parecer excesiva para nuestro peque&amp;ntilde;o programa, pero estamos refactorizando en pasos peque&amp;ntilde;os e incrementales. Despu&amp;eacute;s de realizar este cambio, ejecute el programa nuevamente para verificar que el an&amp;aacute;lisis de argumentos a&amp;uacute;n funciona. Es bueno verificar su progreso con frecuencia para ayudar a identificar la causa de los problemas cuando ocurran.</target>
        </trans-unit>
        <trans-unit id="c68a9d1019f31cc86d07a97f90c903ea86167b11" translate="yes" xml:space="preserve">
          <source>This rule also applies to type parameters of impl blocks that contain const methods</source>
          <target state="translated">Esta regla también se aplica a los parámetros de tipo de los bloques implícitos que contienen métodos const</target>
        </trans-unit>
        <trans-unit id="c9e400474c407c09b7fb37164368bcd30fbe8830" translate="yes" xml:space="preserve">
          <source>This runs the code in &lt;em&gt;adder/src/main.rs&lt;/em&gt;, which depends on the &lt;code&gt;add-one&lt;/code&gt; crate.</source>
          <target state="translated">Esto ejecuta el c&amp;oacute;digo en &lt;em&gt;adder / src / main.rs&lt;/em&gt; , que depende de la caja de &lt;code&gt;add-one&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6b2224800e73c42ee25267c2896a776ab41e710" translate="yes" xml:space="preserve">
          <source>This section documents features that affect the ABI of the compiled output of a crate.</source>
          <target state="translated">En esta sección se documentan las características que afectan a la ABI de la salida compilada de una caja.</target>
        </trans-unit>
        <trans-unit id="7dc2765b02ef149354a7a9ee16a696edf0827240" translate="yes" xml:space="preserve">
          <source>This section documents features that define some aspects of the Rust runtime.</source>
          <target state="translated">Esta sección documenta las características que definen algunos aspectos del tiempo de ejecución del óxido.</target>
        </trans-unit>
        <trans-unit id="f7c12226b9e0c0ca24fa6bdd6239b023bf8ef3a4" translate="yes" xml:space="preserve">
          <source>This should only ever be called with a pointer that was earlier obtained by calling &lt;a href=&quot;#method.into_raw&quot;&gt;&lt;code&gt;into_raw&lt;/code&gt;&lt;/a&gt; on a &lt;code&gt;CString&lt;/code&gt;. Other usage (e.g., trying to take ownership of a string that was allocated by foreign code) is likely to lead to undefined behavior or allocator corruption.</source>
          <target state="translated">Esto solo deber&amp;iacute;a llamarse con un puntero que se obtuvo anteriormente llamando a &lt;a href=&quot;#method.into_raw&quot;&gt; &lt;code&gt;into_raw&lt;/code&gt; &lt;/a&gt; en un &lt;code&gt;CString&lt;/code&gt; . Otro uso (por ejemplo, intentar tomar posesi&amp;oacute;n de una cadena que fue asignada por c&amp;oacute;digo externo) probablemente lleve a un comportamiento indefinido o corrupci&amp;oacute;n del asignador.</target>
        </trans-unit>
        <trans-unit id="bb13fd72f340b7885313dcc12025456f86beff96" translate="yes" xml:space="preserve">
          <source>This should only ever be called with a pointer that was earlier obtained by calling &lt;a href=&quot;struct.cstring#method.into_raw&quot;&gt;&lt;code&gt;CString::into_raw&lt;/code&gt;&lt;/a&gt;. Other usage (e.g., trying to take ownership of a string that was allocated by foreign code) is likely to lead to undefined behavior or allocator corruption.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de4781e84fd1ffb8326c915806ff4604cbf7406" translate="yes" xml:space="preserve">
          <source>This shows the source code file with the &lt;em&gt;.rs&lt;/em&gt; extension, the executable file (&lt;em&gt;main.exe&lt;/em&gt; on Windows, but &lt;em&gt;main&lt;/em&gt; on all other platforms), and, when using Windows, a file containing debugging information with the &lt;em&gt;.pdb&lt;/em&gt; extension. From here, you run the &lt;em&gt;main&lt;/em&gt; or &lt;em&gt;main.exe&lt;/em&gt; file, like this:</source>
          <target state="translated">Esto muestra el archivo de c&amp;oacute;digo fuente con la extensi&amp;oacute;n &lt;em&gt;.rs&lt;/em&gt; , el archivo ejecutable ( &lt;em&gt;main.exe&lt;/em&gt; en Windows, pero &lt;em&gt;main&lt;/em&gt; en todas las dem&amp;aacute;s plataformas) y, cuando se usa Windows, un archivo que contiene informaci&amp;oacute;n de depuraci&amp;oacute;n con la extensi&amp;oacute;n &lt;em&gt;.pdb&lt;/em&gt; . Desde aqu&amp;iacute;, ejecuta el archivo &lt;em&gt;main&lt;/em&gt; o &lt;em&gt;main.exe&lt;/em&gt; , as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="9575f8046ce99c60fbe347fdb162c3debc44c697" translate="yes" xml:space="preserve">
          <source>This slice has the type &lt;code&gt;&amp;amp;[i32]&lt;/code&gt;. It works the same way as string slices do, by storing a reference to the first element and a length. You&amp;rsquo;ll use this kind of slice for all sorts of other collections. We&amp;rsquo;ll discuss these collections in detail when we talk about vectors in Chapter 8.</source>
          <target state="translated">Este segmento tiene el tipo &lt;code&gt;&amp;amp;[i32]&lt;/code&gt; . Funciona de la misma manera que los cortes de cadena, almacenando una referencia al primer elemento y una longitud. Utilizar&amp;aacute; este tipo de porci&amp;oacute;n para todo tipo de otras colecciones. Discutiremos estas colecciones en detalle cuando hablemos de vectores en el Cap&amp;iacute;tulo 8.</target>
        </trans-unit>
        <trans-unit id="d65fb4bd24471a81f14e38e503058f70c64833b3" translate="yes" xml:space="preserve">
          <source>This sort is stable (i.e., does not reorder equal elements) and &lt;code&gt;O(m * n * log(n))&lt;/code&gt; worst-case, where the key function is &lt;code&gt;O(m)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c9c4b26823864ca42f73d970b5f61574652362" translate="yes" xml:space="preserve">
          <source>This sort is stable (i.e., does not reorder equal elements) and &lt;code&gt;O(m * n + n * log(n))&lt;/code&gt; worst-case, where the key function is &lt;code&gt;O(m)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3fe498c20a11bda205dc93f4390f850884c310c" translate="yes" xml:space="preserve">
          <source>This sort is stable (i.e., does not reorder equal elements) and &lt;code&gt;O(m n + n log n)&lt;/code&gt; worst-case, where the key function is &lt;code&gt;O(m)&lt;/code&gt;.</source>
          <target state="translated">Este tipo es estable (es decir, no reordena elementos iguales) y &lt;code&gt;O(m n + n log n)&lt;/code&gt; peor de los casos, donde la funci&amp;oacute;n clave es &lt;code&gt;O(m)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="04ff5f9e434224075f07c47221408f586ed69430" translate="yes" xml:space="preserve">
          <source>This sort is stable (i.e., does not reorder equal elements) and &lt;code&gt;O(m n log(m n))&lt;/code&gt; worst-case, where the key function is &lt;code&gt;O(m)&lt;/code&gt;.</source>
          <target state="translated">Este tipo es estable (es decir, no reordena elementos iguales) y &lt;code&gt;O(m n log(m n))&lt;/code&gt; peor de los casos, donde la funci&amp;oacute;n clave es &lt;code&gt;O(m)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="13defa388ad16a8832cba0851748fe2d9c59598b" translate="yes" xml:space="preserve">
          <source>This sort is stable (i.e., does not reorder equal elements) and &lt;code&gt;O(n * log(n))&lt;/code&gt; worst-case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29bb618262e9818d4542507320a836e4faf4b56f" translate="yes" xml:space="preserve">
          <source>This sort is stable (i.e., does not reorder equal elements) and &lt;code&gt;O(n log n)&lt;/code&gt; worst-case.</source>
          <target state="translated">Este tipo es estable (es decir, no reordena elementos iguales) y &lt;code&gt;O(n log n)&lt;/code&gt; peor de los casos.</target>
        </trans-unit>
        <trans-unit id="342fc35a79498863eed086153ecf4de54d803470" translate="yes" xml:space="preserve">
          <source>This sort is stable (i.e., does not reorder equal elements) and &lt;em&gt;O&lt;/em&gt;(&lt;em&gt;m&lt;/em&gt; * &lt;em&gt;n&lt;/em&gt; * log(&lt;em&gt;n&lt;/em&gt;)) worst-case, where the key function is &lt;em&gt;O&lt;/em&gt;(&lt;em&gt;m&lt;/em&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9e6ed2e7770cad1c08fcd52e4c75266e91bca66" translate="yes" xml:space="preserve">
          <source>This sort is stable (i.e., does not reorder equal elements) and &lt;em&gt;O&lt;/em&gt;(&lt;em&gt;m&lt;/em&gt; * &lt;em&gt;n&lt;/em&gt; + &lt;em&gt;n&lt;/em&gt; * log(&lt;em&gt;n&lt;/em&gt;)) worst-case, where the key function is &lt;em&gt;O&lt;/em&gt;(&lt;em&gt;m&lt;/em&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0fa553880d5f214b25277a39b204d8402684264" translate="yes" xml:space="preserve">
          <source>This sort is stable (i.e., does not reorder equal elements) and &lt;em&gt;O&lt;/em&gt;(&lt;em&gt;n&lt;/em&gt; * log(&lt;em&gt;n&lt;/em&gt;)) worst-case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8094b9acbcdfe817a2beca8fbbfd03d36adf019" translate="yes" xml:space="preserve">
          <source>This sort is unstable (i.e., may reorder equal elements), in-place (i.e., does not allocate), and &lt;code&gt;O(m n log(m n))&lt;/code&gt; worst-case, where the key function is &lt;code&gt;O(m)&lt;/code&gt;.</source>
          <target state="translated">Esta clasificaci&amp;oacute;n es inestable (es decir, puede reordenar elementos iguales), en el lugar (es decir, no asigna) y &lt;code&gt;O(m n log(m n))&lt;/code&gt; peor de los casos, donde la funci&amp;oacute;n clave es &lt;code&gt;O(m)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2e852a79da20e649bf213cb6826ee95c589ae984" translate="yes" xml:space="preserve">
          <source>This sort is unstable (i.e., may reorder equal elements), in-place (i.e., does not allocate), and &lt;code&gt;O(n log n)&lt;/code&gt; worst-case.</source>
          <target state="translated">Este tipo es inestable (es decir, puede reordenar elementos iguales), en el lugar (es decir, no asigna) y &lt;code&gt;O(n log n)&lt;/code&gt; peor de los casos.</target>
        </trans-unit>
        <trans-unit id="3d7156d28541cb0cabeaa7410dd06cdaa9199652" translate="yes" xml:space="preserve">
          <source>This sort is unstable (i.e., may reorder equal elements), in-place (i.e., does not allocate), and &lt;em&gt;O&lt;/em&gt;(&lt;em&gt;n&lt;/em&gt; * log(&lt;em&gt;n&lt;/em&gt;)) worst-case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e0c73c0881bd5d99646c6bd52683bfabd1a90e" translate="yes" xml:space="preserve">
          <source>This sort is unstable (i.e., may reorder equal elements), in-place (i.e., does not allocate), and &lt;em&gt;O&lt;/em&gt;(m * &lt;em&gt;n&lt;/em&gt; * log(&lt;em&gt;n&lt;/em&gt;)) worst-case, where the key function is &lt;em&gt;O&lt;/em&gt;(&lt;em&gt;m&lt;/em&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b9136d07194a4e8e43750309da02e688255bd47" translate="yes" xml:space="preserve">
          <source>This sort of behavior has been known to &lt;a href=&quot;https://securityvulns.com/Wdocument183.html&quot;&gt;lead to privilege escalation&lt;/a&gt; when used incorrectly.</source>
          <target state="translated">Se sabe que este tipo de comportamiento &lt;a href=&quot;https://securityvulns.com/Wdocument183.html&quot;&gt;conduce a una escalada de privilegios&lt;/a&gt; cuando se usa incorrectamente.</target>
        </trans-unit>
        <trans-unit id="4609a563600ff8952232a98685a394486b72fb56" translate="yes" xml:space="preserve">
          <source>This state indicates that a generator has been suspended, and typically corresponds to a &lt;code&gt;yield&lt;/code&gt; statement. The value provided in this variant corresponds to the expression passed to &lt;code&gt;yield&lt;/code&gt; and allows generators to provide a value each time they yield.</source>
          <target state="translated">Este estado indica que se ha suspendido un generador y normalmente corresponde a una declaraci&amp;oacute;n de &lt;code&gt;yield&lt;/code&gt; . El valor proporcionado en esta variante corresponde a la expresi&amp;oacute;n que se pasa a &lt;code&gt;yield&lt;/code&gt; y permite a los generadores proporcionar un valor cada vez que ceden.</target>
        </trans-unit>
        <trans-unit id="90c88a5ca708244c3219f050c7309e58bf365755" translate="yes" xml:space="preserve">
          <source>This state indicates that a generator has finished execution with the provided value. Once a generator has returned &lt;code&gt;Complete&lt;/code&gt; it is considered a programmer error to call &lt;code&gt;resume&lt;/code&gt; again.</source>
          <target state="translated">Este estado indica que un generador ha finalizado la ejecuci&amp;oacute;n con el valor proporcionado. Una vez que un generador ha devuelto &lt;code&gt;Complete&lt;/code&gt; , se considera un error del programador &lt;code&gt;resume&lt;/code&gt; a llamar a resume .</target>
        </trans-unit>
        <trans-unit id="7be578f8354e75e786ae7f8a72194e570efdeae6" translate="yes" xml:space="preserve">
          <source>This stream will be ignored. This is the equivalent of attaching the stream to &lt;code&gt;/dev/null&lt;/code&gt;</source>
          <target state="translated">Esta secuencia se ignorar&amp;aacute;. Este es el equivalente a adjuntar la transmisi&amp;oacute;n a &lt;code&gt;/dev/null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="86aaaf1ade8618d076dfddfcf43a493fbd9d9208" translate="yes" xml:space="preserve">
          <source>This stream will be ignored. This is the equivalent of attaching the stream to &lt;code&gt;/dev/null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="047e86b07f343619951ab342d709e9864cc54c3d" translate="yes" xml:space="preserve">
          <source>This struct has one field, &lt;code&gt;part&lt;/code&gt;, that holds a string slice, which is a reference. As with generic data types, we declare the name of the generic lifetime parameter inside angle brackets after the name of the struct so we can use the lifetime parameter in the body of the struct definition. This annotation means an instance of &lt;code&gt;ImportantExcerpt&lt;/code&gt; can&amp;rsquo;t outlive the reference it holds in its &lt;code&gt;part&lt;/code&gt; field.</source>
          <target state="translated">Esta estructura tiene un campo, &lt;code&gt;part&lt;/code&gt; e , que contiene un segmento de cadena, que es una referencia. Al igual que con los tipos de datos gen&amp;eacute;ricos, declaramos el nombre del par&amp;aacute;metro de vida &amp;uacute;til gen&amp;eacute;rico entre par&amp;eacute;ntesis angulares despu&amp;eacute;s del nombre de la estructura para que podamos usar el par&amp;aacute;metro de vida &amp;uacute;til en el cuerpo de la definici&amp;oacute;n de la estructura. Esta anotaci&amp;oacute;n significa que una instancia de &lt;code&gt;ImportantExcerpt&lt;/code&gt; no puede sobrevivir a la referencia que contiene en su campo de &lt;code&gt;part&lt;/code&gt; e .</target>
        </trans-unit>
        <trans-unit id="035a190c93ffcb98a162f4a1c124850fba76f70b" translate="yes" xml:space="preserve">
          <source>This struct has the same layout as types like &lt;code&gt;&amp;amp;SomeTrait&lt;/code&gt; and &lt;code&gt;Box&amp;lt;dyn AnotherTrait&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Esta estructura tiene el mismo dise&amp;ntilde;o que tipos como &lt;code&gt;&amp;amp;SomeTrait&lt;/code&gt; y &lt;code&gt;Box&amp;lt;dyn AnotherTrait&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8bcde4812fcc7ef55a0760fedbc39c027f9accb6" translate="yes" xml:space="preserve">
          <source>This struct has the same layout as types like &lt;code&gt;&amp;amp;dyn SomeTrait&lt;/code&gt; and &lt;code&gt;Box&amp;lt;dyn AnotherTrait&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78fc6455134464feceba11cc2db121b5a8d643b0" translate="yes" xml:space="preserve">
          <source>This struct is a helper to be used with functions like &lt;a href=&quot;../vec/struct.vec#method.sort_by_key&quot;&gt;&lt;code&gt;Vec::sort_by_key&lt;/code&gt;&lt;/a&gt; and can be used to reverse order a part of a key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="698bb1f1506a6aa8b90b6f64dc7e32c0c5091a12" translate="yes" xml:space="preserve">
          <source>This struct is a helper to be used with functions like &lt;code&gt;Vec::sort_by_key&lt;/code&gt; and can be used to reverse order a part of a key.</source>
          <target state="translated">Esta estructura es un ayudante que se utiliza con funciones como &lt;code&gt;Vec::sort_by_key&lt;/code&gt; y se puede utilizar para invertir el orden de una parte de una clave.</target>
        </trans-unit>
        <trans-unit id="84ced59217a045f0ae6136d2f9bd0162d392046f" translate="yes" xml:space="preserve">
          <source>This struct is created by &lt;a href=&quot;fn.args&quot;&gt;&lt;code&gt;env::args()&lt;/code&gt;&lt;/a&gt;. See its documentation for more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="421112f55866033bf937c2c2104c004765f83d6c" translate="yes" xml:space="preserve">
          <source>This struct is created by &lt;a href=&quot;fn.args_os&quot;&gt;&lt;code&gt;env::args_os()&lt;/code&gt;&lt;/a&gt;. See its documentation for more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d98990c007f08843ac1df1a07fad048ba02e034" translate="yes" xml:space="preserve">
          <source>This struct is created by &lt;a href=&quot;struct.command#method.get_args&quot;&gt;&lt;code&gt;Command::get_args&lt;/code&gt;&lt;/a&gt;. See its documentation for more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c34405b53d7303b0dec8e54e6aa5a0abefbaa23c" translate="yes" xml:space="preserve">
          <source>This struct is created by &lt;a href=&quot;struct.command#method.get_envs&quot;&gt;&lt;code&gt;Command::get_envs&lt;/code&gt;&lt;/a&gt;. See its documentation for more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2147718c894a448fcb5bace3573d8c66021b6ecf" translate="yes" xml:space="preserve">
          <source>This struct is created by &lt;a href=&quot;struct.vec#method.drain_filter&quot;&gt;&lt;code&gt;Vec::drain_filter&lt;/code&gt;&lt;/a&gt;. See its documentation for more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b56bd91b0140c9f3d261bb2e7de1a84ee87136c" translate="yes" xml:space="preserve">
          <source>This struct is created by &lt;a href=&quot;struct.vec#method.splice&quot;&gt;&lt;code&gt;Vec::splice()&lt;/code&gt;&lt;/a&gt;. See its documentation for more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b94fdb25d3a1999fbb00df483466c3f3ad93974" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;../iter/trait.intoiterator#tymethod.into_iter&quot;&gt;&lt;code&gt;into_iter&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt; (provided by the &lt;a href=&quot;../iter/trait.intoiterator&quot;&gt;&lt;code&gt;IntoIterator&lt;/code&gt;&lt;/a&gt; trait).</source>
          <target state="translated">Esta estructura es creada por el m&amp;eacute;todo &lt;a href=&quot;../iter/trait.intoiterator#tymethod.into_iter&quot;&gt; &lt;code&gt;into_iter&lt;/code&gt; &lt;/a&gt; en &lt;a href=&quot;enum.result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt; (proporcionado por el rasgo &lt;a href=&quot;../iter/trait.intoiterator&quot;&gt; &lt;code&gt;IntoIterator&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="0f993739b1a6e12d97f61853ab3a7aeead8ab4b9" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;../primitive.slice#method.array_chunks&quot;&gt;&lt;code&gt;array_chunks&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;../primitive.slice&quot;&gt;slices&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="306d58f57f3d10dc00f2031814b48c48929d8df3" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;../primitive.slice#method.array_chunks_mut&quot;&gt;&lt;code&gt;array_chunks_mut&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;../primitive.slice&quot;&gt;slices&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f3c9f948ac0eb252b070770390b8ad86aa3b895" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;../primitive.slice#method.array_windows&quot;&gt;&lt;code&gt;array_windows&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;../primitive.slice&quot;&gt;slices&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd8330957d499a2a2bc9ec6116864588108859d" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;../primitive.slice#method.chunks&quot;&gt;&lt;code&gt;chunks&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;../primitive.slice&quot;&gt;slices&lt;/a&gt;.</source>
          <target state="translated">Esta estructura se crea mediante el m&amp;eacute;todo &lt;a href=&quot;../primitive.slice#method.chunks&quot;&gt; &lt;code&gt;chunks&lt;/code&gt; &lt;/a&gt; en &lt;a href=&quot;../primitive.slice&quot;&gt;cortes&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4f546acf131aa1e22a602b9ef3fb82d4387eee8e" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;../primitive.slice#method.chunks_exact&quot;&gt;&lt;code&gt;chunks_exact&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;../primitive.slice&quot;&gt;slices&lt;/a&gt;.</source>
          <target state="translated">Esta estructura es creada por el m&amp;eacute;todo &lt;a href=&quot;../primitive.slice#method.chunks_exact&quot;&gt; &lt;code&gt;chunks_exact&lt;/code&gt; &lt;/a&gt; en &lt;a href=&quot;../primitive.slice&quot;&gt;cortes&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e45db796c91b4ce48eb20085844caa57f6053703" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;../primitive.slice#method.chunks_exact_mut&quot;&gt;&lt;code&gt;chunks_exact_mut&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;../primitive.slice&quot;&gt;slices&lt;/a&gt;.</source>
          <target state="translated">Esta estructura es creada por el m&amp;eacute;todo &lt;a href=&quot;../primitive.slice#method.chunks_exact_mut&quot;&gt; &lt;code&gt;chunks_exact_mut&lt;/code&gt; &lt;/a&gt; en &lt;a href=&quot;../primitive.slice&quot;&gt;cortes&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4164f449a467d7ed1b48f5a88a1f8a74fb26a190" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;../primitive.slice#method.chunks_mut&quot;&gt;&lt;code&gt;chunks_mut&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;../primitive.slice&quot;&gt;slices&lt;/a&gt;.</source>
          <target state="translated">Esta estructura es creada por el m&amp;eacute;todo &lt;a href=&quot;../primitive.slice#method.chunks_mut&quot;&gt; &lt;code&gt;chunks_mut&lt;/code&gt; &lt;/a&gt; en &lt;a href=&quot;../primitive.slice&quot;&gt;cortes&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="76b48770dc5ec192ca6962e1d7faa3bd68e942ab" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;../primitive.slice#method.iter&quot;&gt;&lt;code&gt;iter&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;../primitive.slice&quot;&gt;slices&lt;/a&gt;.</source>
          <target state="translated">Esta estructura se crea mediante el m&amp;eacute;todo &lt;a href=&quot;../primitive.slice#method.iter&quot;&gt; &lt;code&gt;iter&lt;/code&gt; &lt;/a&gt; en &lt;a href=&quot;../primitive.slice&quot;&gt;cortes&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7681a887be4ac8a42d7f0ef28706aee3c6323619" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;../primitive.slice#method.iter_mut&quot;&gt;&lt;code&gt;iter_mut&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;../primitive.slice&quot;&gt;slices&lt;/a&gt;.</source>
          <target state="translated">Esta estructura es creada por el m&amp;eacute;todo &lt;a href=&quot;../primitive.slice#method.iter_mut&quot;&gt; &lt;code&gt;iter_mut&lt;/code&gt; &lt;/a&gt; en &lt;a href=&quot;../primitive.slice&quot;&gt;cortes&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="523facc9e10029a951175d54b1f37f2671749ed6" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;../primitive.slice#method.rchunks&quot;&gt;&lt;code&gt;rchunks&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;../primitive.slice&quot;&gt;slices&lt;/a&gt;.</source>
          <target state="translated">Esta estructura se crea mediante el m&amp;eacute;todo &lt;a href=&quot;../primitive.slice#method.rchunks&quot;&gt; &lt;code&gt;rchunks&lt;/code&gt; &lt;/a&gt; en &lt;a href=&quot;../primitive.slice&quot;&gt;cortes&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7743c6e4ca6fc913a9f4d37b6de12a320056fa8b" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;../primitive.slice#method.rchunks_exact&quot;&gt;&lt;code&gt;rchunks_exact&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;../primitive.slice&quot;&gt;slices&lt;/a&gt;.</source>
          <target state="translated">Esta estructura es creada por el m&amp;eacute;todo &lt;a href=&quot;../primitive.slice#method.rchunks_exact&quot;&gt; &lt;code&gt;rchunks_exact&lt;/code&gt; &lt;/a&gt; en &lt;a href=&quot;../primitive.slice&quot;&gt;cortes&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="82404af50a38a848751818c48976a9a56b795818" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;../primitive.slice#method.rchunks_exact_mut&quot;&gt;&lt;code&gt;rchunks_exact_mut&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;../primitive.slice&quot;&gt;slices&lt;/a&gt;.</source>
          <target state="translated">Esta estructura es creada por el m&amp;eacute;todo &lt;a href=&quot;../primitive.slice#method.rchunks_exact_mut&quot;&gt; &lt;code&gt;rchunks_exact_mut&lt;/code&gt; &lt;/a&gt; en &lt;a href=&quot;../primitive.slice&quot;&gt;cortes&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="711c0f689f1d3a75f7b5a1b1833bc925f8986127" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;../primitive.slice#method.rchunks_mut&quot;&gt;&lt;code&gt;rchunks_mut&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;../primitive.slice&quot;&gt;slices&lt;/a&gt;.</source>
          <target state="translated">Esta estructura es creada por el m&amp;eacute;todo &lt;a href=&quot;../primitive.slice#method.rchunks_mut&quot;&gt; &lt;code&gt;rchunks_mut&lt;/code&gt; &lt;/a&gt; en &lt;a href=&quot;../primitive.slice&quot;&gt;cortes&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5ffea197c31595a869becf274e9c9ef3509b405a" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;../primitive.slice#method.rsplit&quot;&gt;&lt;code&gt;rsplit&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;../primitive.slice&quot;&gt;slices&lt;/a&gt;.</source>
          <target state="translated">Esta estructura se crea mediante el m&amp;eacute;todo &lt;a href=&quot;../primitive.slice#method.rsplit&quot;&gt; &lt;code&gt;rsplit&lt;/code&gt; &lt;/a&gt; en &lt;a href=&quot;../primitive.slice&quot;&gt;cortes&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a28e12c215b6246a69d2f856da858d720de99619" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;../primitive.slice#method.rsplit_mut&quot;&gt;&lt;code&gt;rsplit_mut&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;../primitive.slice&quot;&gt;slices&lt;/a&gt;.</source>
          <target state="translated">Esta estructura es creada por el m&amp;eacute;todo &lt;a href=&quot;../primitive.slice#method.rsplit_mut&quot;&gt; &lt;code&gt;rsplit_mut&lt;/code&gt; &lt;/a&gt; en &lt;a href=&quot;../primitive.slice&quot;&gt;cortes&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e1ddb16a3352ab0f837d4fac934c98e22db158e5" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;../primitive.slice#method.rsplitn&quot;&gt;&lt;code&gt;rsplitn&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;../primitive.slice&quot;&gt;slices&lt;/a&gt;.</source>
          <target state="translated">Esta estructura se crea mediante el m&amp;eacute;todo &lt;a href=&quot;../primitive.slice#method.rsplitn&quot;&gt; &lt;code&gt;rsplitn&lt;/code&gt; &lt;/a&gt; en &lt;a href=&quot;../primitive.slice&quot;&gt;cortes&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2305be064f2e36144fd442bf726fd4dd5a160216" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;../primitive.slice#method.rsplitn_mut&quot;&gt;&lt;code&gt;rsplitn_mut&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;../primitive.slice&quot;&gt;slices&lt;/a&gt;.</source>
          <target state="translated">Esta estructura es creada por el m&amp;eacute;todo &lt;a href=&quot;../primitive.slice#method.rsplitn_mut&quot;&gt; &lt;code&gt;rsplitn_mut&lt;/code&gt; &lt;/a&gt; en &lt;a href=&quot;../primitive.slice&quot;&gt;cortes&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9d2c4405dee882e98a94c3681ae8ce615cfcc3f7" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;../primitive.slice#method.split&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;../primitive.slice&quot;&gt;slices&lt;/a&gt;.</source>
          <target state="translated">Esta estructura se crea mediante el m&amp;eacute;todo &lt;a href=&quot;../primitive.slice#method.split&quot;&gt; &lt;code&gt;split&lt;/code&gt; &lt;/a&gt; en &lt;a href=&quot;../primitive.slice&quot;&gt;cortes&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="abdc8d3421db5241b7ca4544a7b51d6159d67e49" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;../primitive.slice#method.split_mut&quot;&gt;&lt;code&gt;split_mut&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;../primitive.slice&quot;&gt;slices&lt;/a&gt;.</source>
          <target state="translated">Esta estructura es creada por el m&amp;eacute;todo &lt;a href=&quot;../primitive.slice#method.split_mut&quot;&gt; &lt;code&gt;split_mut&lt;/code&gt; &lt;/a&gt; en &lt;a href=&quot;../primitive.slice&quot;&gt;cortes&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b850789ebec6b616db674ca7582ef014921e3e50" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;../primitive.slice#method.splitn&quot;&gt;&lt;code&gt;splitn&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;../primitive.slice&quot;&gt;slices&lt;/a&gt;.</source>
          <target state="translated">Esta estructura se crea mediante el m&amp;eacute;todo &lt;a href=&quot;../primitive.slice#method.splitn&quot;&gt; &lt;code&gt;splitn&lt;/code&gt; &lt;/a&gt; en &lt;a href=&quot;../primitive.slice&quot;&gt;cortes&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fcbac1aabe82a2c466b31106e57bd4691b6a4588" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;../primitive.slice#method.splitn_mut&quot;&gt;&lt;code&gt;splitn_mut&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;../primitive.slice&quot;&gt;slices&lt;/a&gt;.</source>
          <target state="translated">Esta estructura es creada por el m&amp;eacute;todo &lt;a href=&quot;../primitive.slice#method.splitn_mut&quot;&gt; &lt;code&gt;splitn_mut&lt;/code&gt; &lt;/a&gt; en &lt;a href=&quot;../primitive.slice&quot;&gt;cortes&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4faa0b9911c89c4588e753ca1891a11cb9aac5c2" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;../primitive.slice#method.windows&quot;&gt;&lt;code&gt;windows&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;../primitive.slice&quot;&gt;slices&lt;/a&gt;.</source>
          <target state="translated">Esta estructura se crea mediante el m&amp;eacute;todo de &lt;a href=&quot;../primitive.slice#method.windows&quot;&gt; &lt;code&gt;windows&lt;/code&gt; &lt;/a&gt; en &lt;a href=&quot;../primitive.slice&quot;&gt;cortes&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="972c0f2531dd3e046ad902a7f6f569ef9de9571e" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;../primitive.str#method.bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;. See its documentation for more.</source>
          <target state="translated">Esta estructura es creada por el m&amp;eacute;todo &lt;a href=&quot;../primitive.str#method.bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; en &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; . Consulte su documentaci&amp;oacute;n para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="9dc716c653425077e3bf50725d3ddc775e25fe94" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;../primitive.str#method.char_indices&quot;&gt;&lt;code&gt;char_indices&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;. See its documentation for more.</source>
          <target state="translated">Esta estructura es creada por el m&amp;eacute;todo &lt;a href=&quot;../primitive.str#method.char_indices&quot;&gt; &lt;code&gt;char_indices&lt;/code&gt; &lt;/a&gt; en &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; . Consulte su documentaci&amp;oacute;n para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="607ded9325aedcb5c140c227e32c8ad28d5439d9" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;../primitive.str#method.chars&quot;&gt;&lt;code&gt;chars&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;. See its documentation for more.</source>
          <target state="translated">Esta estructura se crea mediante el m&amp;eacute;todo &lt;a href=&quot;../primitive.str#method.chars&quot;&gt; &lt;code&gt;chars&lt;/code&gt; &lt;/a&gt; en &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; . Consulte su documentaci&amp;oacute;n para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="eb31472d0cae7541e173fe527a7087a142820c04" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;../primitive.str#method.encode_utf16&quot;&gt;&lt;code&gt;encode_utf16&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;. See its documentation for more.</source>
          <target state="translated">Esta estructura es creada por el m&amp;eacute;todo &lt;a href=&quot;../primitive.str#method.encode_utf16&quot;&gt; &lt;code&gt;encode_utf16&lt;/code&gt; &lt;/a&gt; en &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; . Consulte su documentaci&amp;oacute;n para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="e7c273a10bb61ef5da70d27b34dc57f12929254d" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;../primitive.str#method.split_ascii_whitespace&quot;&gt;&lt;code&gt;split_ascii_whitespace&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;. See its documentation for more.</source>
          <target state="translated">Esta estructura es creada por el m&amp;eacute;todo &lt;a href=&quot;../primitive.str#method.split_ascii_whitespace&quot;&gt; &lt;code&gt;split_ascii_whitespace&lt;/code&gt; &lt;/a&gt; en &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; . Consulte su documentaci&amp;oacute;n para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="e335f4d066241eacb01d34cbc9797fdfc696dc6b" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;../primitive.str#method.split_whitespace&quot;&gt;&lt;code&gt;split_whitespace&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;. See its documentation for more.</source>
          <target state="translated">Esta estructura es creada por el m&amp;eacute;todo &lt;a href=&quot;../primitive.str#method.split_whitespace&quot;&gt; &lt;code&gt;split_whitespace&lt;/code&gt; &lt;/a&gt; en &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; . Consulte su documentaci&amp;oacute;n para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="f9cd50ffb5bf76be59d59fc2f81ddf738ff0464b" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;fn.args&quot;&gt;&lt;code&gt;std::env::args&lt;/code&gt;&lt;/a&gt; function. See its documentation for more.</source>
          <target state="translated">Esta estructura es creada por la funci&amp;oacute;n &lt;a href=&quot;fn.args&quot;&gt; &lt;code&gt;std::env::args&lt;/code&gt; &lt;/a&gt; . Consulte su documentaci&amp;oacute;n para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="0ec39f7b0daa2776e166f7fac0653e5c7c5e4333" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;fn.args_os&quot;&gt;&lt;code&gt;std::env::args_os&lt;/code&gt;&lt;/a&gt; function. See its documentation for more.</source>
          <target state="translated">Esta estructura es creada por la funci&amp;oacute;n &lt;a href=&quot;fn.args_os&quot;&gt; &lt;code&gt;std::env::args_os&lt;/code&gt; &lt;/a&gt; . Consulte su documentaci&amp;oacute;n para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d49df01529faa1803ee9ac5934efa956bfb59ca5" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;struct.string#method.drain&quot;&gt;&lt;code&gt;drain&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;. See its documentation for more.</source>
          <target state="translated">Esta estructura se crea mediante el m&amp;eacute;todo de &lt;a href=&quot;struct.string#method.drain&quot;&gt; &lt;code&gt;drain&lt;/code&gt; &lt;/a&gt; en &lt;a href=&quot;struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; . Consulte su documentaci&amp;oacute;n para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="7821d89ece3dc45805333802521c4ece28a6ec77" translate="yes" xml:space="preserve">
          <source>This struct is created by the &lt;a href=&quot;struct.vec#method.splice&quot;&gt;&lt;code&gt;splice()&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt;. See its documentation for more.</source>
          <target state="translated">Esta estructura es creada por el m&amp;eacute;todo &lt;a href=&quot;struct.vec#method.splice&quot;&gt; &lt;code&gt;splice()&lt;/code&gt; &lt;/a&gt; en &lt;a href=&quot;struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; &lt;/a&gt; . Consulte su documentaci&amp;oacute;n para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="df074a53b5359b4dd926d5ab8c21cb3fdb8391e4" translate="yes" xml:space="preserve">
          <source>This struct is created with the &lt;a href=&quot;../primitive.str#method.lines&quot;&gt;&lt;code&gt;lines&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;. See its documentation for more.</source>
          <target state="translated">Esta estructura se crea con el m&amp;eacute;todo &lt;a href=&quot;../primitive.str#method.lines&quot;&gt; &lt;code&gt;lines&lt;/code&gt; &lt;/a&gt; en &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; . Consulte su documentaci&amp;oacute;n para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="5a1492f5f04561e29bfe6f623f2dc30782a50bbf" translate="yes" xml:space="preserve">
          <source>This struct is generally created by calling &lt;a href=&quot;fn.empty&quot;&gt;&lt;code&gt;empty()&lt;/code&gt;&lt;/a&gt;. Please see the documentation of &lt;a href=&quot;fn.empty&quot;&gt;&lt;code&gt;empty()&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df7525ac9b1331bb51b51ca2c5df8a11c0a1c0e" translate="yes" xml:space="preserve">
          <source>This struct is generally created by calling &lt;a href=&quot;fn.empty&quot;&gt;&lt;code&gt;empty&lt;/code&gt;&lt;/a&gt;. Please see the documentation of &lt;a href=&quot;fn.empty&quot;&gt;&lt;code&gt;empty()&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">Esta estructura generalmente se crea llamando a &lt;a href=&quot;fn.empty&quot;&gt; &lt;code&gt;empty&lt;/code&gt; &lt;/a&gt; . Consulte la documentaci&amp;oacute;n de &lt;a href=&quot;fn.empty&quot;&gt; &lt;code&gt;empty()&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
