<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="658f494d5e4c25d2954da8800af6d21ccf90e410" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shr#tymethod.shr&quot;&gt;shr&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt; as &lt;a href=&quot;ops/trait.shr&quot;&gt;Shr&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.shr#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#603&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca11db1424e334c1e382e7144b493cac2301cecd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shr#tymethod.shr&quot;&gt;shr&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt; as &lt;a href=&quot;ops/trait.shr&quot;&gt;Shr&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.shr#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#603&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dd0f8740f56fc817bccfa56ec99b450f994fa57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shr#tymethod.shr&quot;&gt;shr&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt; as &lt;a href=&quot;ops/trait.shr&quot;&gt;Shr&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.shr#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#603&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63379e9a5e78d6363217faa4282dfb2c0fe38c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shr#tymethod.shr&quot;&gt;shr&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt; as &lt;a href=&quot;ops/trait.shr&quot;&gt;Shr&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.shr#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#603&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a474a154a61aeefb32ff1218d1960404e982539" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shr#tymethod.shr&quot;&gt;shr&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt; as &lt;a href=&quot;ops/trait.shr&quot;&gt;Shr&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.shr#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#603&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c384cfc51f1ec0d919c3306bd09b8323ea6ddd1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shr#tymethod.shr&quot;&gt;shr&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#603&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f0368e2d2a2e7ee109ff441b46ebf1d1ab62ee0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shr#tymethod.shr&quot;&gt;shr&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#603&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6137faed8825b189d7249b198e766e818b5a1c63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shr#tymethod.shr&quot;&gt;shr&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#603&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15da6f2825fa78b1e7aa60502a70da0e5040e90c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shr#tymethod.shr&quot;&gt;shr&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#603&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d151c19ce347088dbc09bbfa6ff631b49e2a8466" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shr#tymethod.shr&quot;&gt;shr&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#603&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1450e8b0a5ce72fdb8dcd7c408c7007dbcb542ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shr#tymethod.shr&quot;&gt;shr&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#603&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="806c842e08016f7682a36e31db65aabfef3aa960" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shr#tymethod.shr&quot;&gt;shr&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#603&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2057f09960d0521c9adda3e17ea0c24c2ec3b8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shr#tymethod.shr&quot;&gt;shr&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#603&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9560cd88847d54cf08e0fd9552d3122f3d9d78fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shr#tymethod.shr&quot;&gt;shr&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#603&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa8fb17635b3953df9a4aea2c5c6b98df3ba195f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shr#tymethod.shr&quot;&gt;shr&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#603&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f79d68dc18ad53a8aa2db5ad994888c3ae17a78f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shr#tymethod.shr&quot;&gt;shr&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#603&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="348d8e22ba44c713d6da3e37d8e7cfbe708d1fc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shr#tymethod.shr&quot;&gt;shr&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#603&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eba571836b86c64752a3168a6fe05aa86e96d13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shrassign#tymethod.shr_assign&quot;&gt;shr_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#1021&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ef539c9e896f824a08d9f02356b55579ca6880" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shrassign#tymethod.shr_assign&quot;&gt;shr_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#1021&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d37687099ebcf00f53231fcce46300f44ceab09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shrassign#tymethod.shr_assign&quot;&gt;shr_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#1021&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c6bfad7e9e39e5eedf6364ee6b4bbfc65dacf9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shrassign#tymethod.shr_assign&quot;&gt;shr_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#1021&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ebdf206912fafa168101bb525c1a3bd8bc4e8ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shrassign#tymethod.shr_assign&quot;&gt;shr_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#1021&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19465121741ebf702d99db939432bd0647b24ecb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shrassign#tymethod.shr_assign&quot;&gt;shr_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#1021&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b64cc1ea0b1eaba3f39a7060663613e5d3f57ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shrassign#tymethod.shr_assign&quot;&gt;shr_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#1021&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa03b3bdfadd59d853564f1be5bdadcfb0819b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shrassign#tymethod.shr_assign&quot;&gt;shr_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#1021&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c44a7013d010f7f963b72cfaef8e78d72f0a9c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shrassign#tymethod.shr_assign&quot;&gt;shr_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#1021&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e76c5e6e2ae83ff759298520e4ef52be9636347c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shrassign#tymethod.shr_assign&quot;&gt;shr_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#1021&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa007ee42ecdf0c678a5af81837a64c9d944c43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shrassign#tymethod.shr_assign&quot;&gt;shr_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#1021&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fa16af3d55a86d55a48ca50dcbbb73502b2344b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shrassign#tymethod.shr_assign&quot;&gt;shr_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#1021&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af96b1eb0c950861e6d47ec8f723eb228fed1370" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shrassign#tymethod.shr_assign&quot;&gt;shr_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#1021&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb9ed68dc32bc6c3a57bfdc48cdc4be3d29be735" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shrassign#tymethod.shr_assign&quot;&gt;shr_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#1021&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="628e393c7c6d2532c0614fe81a09bc08a65d2253" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shrassign#tymethod.shr_assign&quot;&gt;shr_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#1021&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa51fbfb9765df197400fb8193ec40b5dc945a35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shrassign#tymethod.shr_assign&quot;&gt;shr_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#1021&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68a5da32c3babd295cda1d330046ec05066cb1ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shrassign#tymethod.shr_assign&quot;&gt;shr_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#1021&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="971972294057a7fee04d02e68a41dd0dfa42206c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shrassign#tymethod.shr_assign&quot;&gt;shr_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#1021&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f019c8aa315d2ad5da564cd57fd6ac80f02f21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shrassign#tymethod.shr_assign&quot;&gt;shr_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#1021&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7850dfd4d5f91abe95d72b981eea6c70d1651ccf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shrassign#tymethod.shr_assign&quot;&gt;shr_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#1021&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f0daaa97278f3343a871382a279d89c2f3e924" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shrassign#tymethod.shr_assign&quot;&gt;shr_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#1021&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a456e271e003b74b903093680b88289f90595d4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shrassign#tymethod.shr_assign&quot;&gt;shr_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#1021&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d461ae821dfcaea4547563f932eae1baf86c11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shrassign#tymethod.shr_assign&quot;&gt;shr_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#1021&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4e1ed3b278df12b32321532651f896da72998b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.shrassign#tymethod.shr_assign&quot;&gt;shr_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#1021&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e4b45ecdc41a68e51c07dfde327066327081ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt; as &lt;a href=&quot;ops/trait.sub&quot;&gt;Sub&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.sub#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e6b518b3574d000711d245eb84c37d0074cb7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt; as &lt;a href=&quot;ops/trait.sub&quot;&gt;Sub&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.sub#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="822fda0bcda3ca9471029ff5bb6b8d5e1d568459" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt; as &lt;a href=&quot;ops/trait.sub&quot;&gt;Sub&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.sub#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0150adecc703ae87b3cbb99bba7ddd47dfee97ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt; as &lt;a href=&quot;ops/trait.sub&quot;&gt;Sub&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.sub#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecf9fd0b3624895baa3cd190eb96295481948878" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt; as &lt;a href=&quot;ops/trait.sub&quot;&gt;Sub&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.sub#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fa9ed7936291fe6e9bc27ceb3b15b9ce1594690" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt; as &lt;a href=&quot;ops/trait.sub&quot;&gt;Sub&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.sub#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da388b27fb0ec1b2a7bb5e347d5b772550f23aa5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt; as &lt;a href=&quot;ops/trait.sub&quot;&gt;Sub&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.sub#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc587f7a5a4658792961770a2db60440efc63e9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt; as &lt;a href=&quot;ops/trait.sub&quot;&gt;Sub&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.sub#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74bdfe536dccec9d8db95c5f7ca6cfab6d758037" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt; as &lt;a href=&quot;ops/trait.sub&quot;&gt;Sub&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.sub#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67330e5292df52369dcf1b3a41a5681ce05a187f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt; as &lt;a href=&quot;ops/trait.sub&quot;&gt;Sub&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.sub#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac6e1849bef377c71d4f7dc08516353d08272db2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt; as &lt;a href=&quot;ops/trait.sub&quot;&gt;Sub&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.sub#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1ef12a886f6a3010f42e49165dbf169c0263a36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt; as &lt;a href=&quot;ops/trait.sub&quot;&gt;Sub&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.sub#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83409e66f6e3119ea952288366fe69f80eea9d77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt; as &lt;a href=&quot;ops/trait.sub&quot;&gt;Sub&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.sub#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a00bf8a076b504875a8a310ca4566432c2086e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt; as &lt;a href=&quot;ops/trait.sub&quot;&gt;Sub&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.sub#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab7004b0df07dad9a8357c66b44e9798adee96a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt; as &lt;a href=&quot;ops/trait.sub&quot;&gt;Sub&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.sub#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be720e306a61ca629a19b0c36c1f1d73c2dbd91d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30e406e90fdad35aff1c9b3e6ed42e2302d4fe24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt; as &lt;a href=&quot;ops/trait.sub&quot;&gt;Sub&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.sub#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c571cb01ca2e2bd475454c73b890c9db8eb6ea04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a758c5360369c1024ddad888798c23c224d204f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt; as &lt;a href=&quot;ops/trait.sub&quot;&gt;Sub&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.sub#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceb0b3a0517ce344144abacf7ad002388324425c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a3068c418374fbbfc2d433af4057d07fcb7a39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt; as &lt;a href=&quot;ops/trait.sub&quot;&gt;Sub&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.sub#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c326763194cd5a4e9618c599edfa6646b5bb05e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6141dcbfcffad1a1c4002f4c64781b277443473a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt; as &lt;a href=&quot;ops/trait.sub&quot;&gt;Sub&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.sub#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66da6774d1c63a334690b3ae061d28757fd2d387" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdf83722083126771f63a70c4ce7aac7c9be3843" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt; as &lt;a href=&quot;ops/trait.sub&quot;&gt;Sub&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.sub#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a5bf9c85933dfd95331c51f16c5e7966c01242" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a792501455233c8b3479a5f539b44146dcfce185" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt; as &lt;a href=&quot;ops/trait.sub&quot;&gt;Sub&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.sub#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d791667ad01dc29938925a2f95f6dfd49513e9fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="942992def622ff901d91e7042bf5c605f67b2007" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt; as &lt;a href=&quot;ops/trait.sub&quot;&gt;Sub&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.sub#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="080ff9601f8a9e409cf4ab8cbad360be7e1671c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7604506d44216ac0143b86e8ed4c5c000248dd63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt; as &lt;a href=&quot;ops/trait.sub&quot;&gt;Sub&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.sub#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9217b6d95431275995e9352dcf2e9091d4e65c8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4e2921dcb60d49f3f31c3d7af78945ebd91b15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt; as &lt;a href=&quot;ops/trait.sub&quot;&gt;Sub&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.sub#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05cada6799501eaebf49dd64f91ed2964519f47b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edbada56b0460cca181e1b62921a8888a19a8cee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt; as &lt;a href=&quot;ops/trait.sub&quot;&gt;Sub&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.sub#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a656351e3806e7dd90863c97c2458d2f35ddcba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab9408af380a7ac6d891eb07697502d8c36a054" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt; as &lt;a href=&quot;ops/trait.sub&quot;&gt;Sub&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.sub#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee19c1df37e0f9594075d4ed6259a8192e38ed73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09f130eca03627d195a6ad2ce76737ad23dbfaf6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt; as &lt;a href=&quot;ops/trait.sub&quot;&gt;Sub&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.sub#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c919feae6e05b70ba3b94f2b7a903d0587ba0282" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="424d480704dc07db448e8934622088991ad1bf41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt; as &lt;a href=&quot;ops/trait.sub&quot;&gt;Sub&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.sub#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792be711864eea94bd2c27a66c8b63df2c838457" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.sub#tymethod.sub&quot;&gt;sub&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85c362a143d273ed4b7908964113025c0a1c28e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.subassign#tymethod.sub_assign&quot;&gt;sub_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#804&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35ad000d9808c821cee20d2be9d92fdcce3d22d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.subassign#tymethod.sub_assign&quot;&gt;sub_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#804&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1822aeb7ce1e3568b127ae2cc0247c626a546286" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.subassign#tymethod.sub_assign&quot;&gt;sub_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#804&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b013ef2996ecdc89e174db8f0ad4259ced6bbce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.subassign#tymethod.sub_assign&quot;&gt;sub_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#804&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c0a7831b5153a6fc03e655b82d10fbbfb3c21bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.subassign#tymethod.sub_assign&quot;&gt;sub_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#804&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396814d4a53598871f600a25997c5d84a22dd88e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.subassign#tymethod.sub_assign&quot;&gt;sub_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#804&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c2ffd70dd9b03621a2f108266353d56885bb376" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.subassign#tymethod.sub_assign&quot;&gt;sub_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#804&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b56148489f527f04b3274156cee07801239400e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.subassign#tymethod.sub_assign&quot;&gt;sub_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#804&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89adfde76740c5ea5f8a8d5c177c55eea3106675" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.subassign#tymethod.sub_assign&quot;&gt;sub_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#804&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a0bb2810fee05efdd039aed06113e5aea1f268" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.subassign#tymethod.sub_assign&quot;&gt;sub_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#804&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2a30e289e8c5f70b3a9c800323fc83f63cded5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.subassign#tymethod.sub_assign&quot;&gt;sub_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#804&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ea340083a6c01a8cc4b7f0374228e046fb36ca9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.subassign#tymethod.sub_assign&quot;&gt;sub_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#804&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3670f1e0f97760a1d2c018d9d5317d962aa4aa67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.subassign#tymethod.sub_assign&quot;&gt;sub_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#804&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cfaf3fc48d511dbd9e68d22cce8d7628b32bc72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.subassign#tymethod.sub_assign&quot;&gt;sub_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#804&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47ca2108e97e5a685d345d1dd9e5adeb1600aca0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.subassign#tymethod.sub_assign&quot;&gt;sub_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#804&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f93106974861e5809738e4dadbbc4173fd38d032" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.subassign#tymethod.sub_assign&quot;&gt;sub_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#804&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b733320557e6c73161078bd00845b81b7178a57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.subassign#tymethod.sub_assign&quot;&gt;sub_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#804&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd0e9b2f2203a9553a8569ac63ec3c56c402809" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.subassign#tymethod.sub_assign&quot;&gt;sub_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#804&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22559dd2ae2c0e5a9c7af52fbf74c7dcc8b695b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.subassign#tymethod.sub_assign&quot;&gt;sub_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#804&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fff6249d09cb7f629a48cc15cd223166a81a52b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.subassign#tymethod.sub_assign&quot;&gt;sub_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#804&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf8ffb632e13b7d8a1420b704b7484ea5bc82f20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.subassign#tymethod.sub_assign&quot;&gt;sub_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#804&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4534e8e0d068ec7ff277ba4fb1420b488dfa0d56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.subassign#tymethod.sub_assign&quot;&gt;sub_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#804&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="124c1910feea36488a520c7366e55652762ad6b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.subassign#tymethod.sub_assign&quot;&gt;sub_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#804&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0a57b72b8efaaeffab55243515e8a3982ca6a1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.subassign#tymethod.sub_assign&quot;&gt;sub_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#804&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a502089100bce3b1a1e3c285b6247086029f3b33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.subassign#tymethod.sub_assign&quot;&gt;sub_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#804&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="989465d80b685dd99a95918e71d387c0d6813c74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.subassign#tymethod.sub_assign&quot;&gt;sub_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#804&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee361edf7a35aad70850676ba5178a7c3bc0ec1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.subassign#tymethod.sub_assign&quot;&gt;sub_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#804&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5424d49aaeb44e508321ea8f5079c09395f671e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;ops/trait.subassign#tymethod.sub_assign&quot;&gt;sub_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#804&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8990ae2b1e5021bb9008ea7c306515d87834025e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;slice/trait.concat#tymethod.concat&quot;&gt;concat&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[S]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;string/struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/str.rs.html#79-81&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ea79d729b03998efdec13857f15a0ab69242380" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;slice/trait.concat#tymethod.concat&quot;&gt;concat&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[V]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;vec/struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/slice.rs.html#650-657&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="712a6c0251dc367f902c95c29b4faeb6545ba07d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;slice/trait.join#tymethod.join&quot;&gt;join&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[S]&lt;/a&gt;, sep: &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;string/struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/str.rs.html#88-90&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3087e037c8437fa616a8fb02497097c01bfb0a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;slice/trait.join#tymethod.join&quot;&gt;join&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[V]&lt;/a&gt;, sep: &lt;a href=&quot;primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T) -&amp;gt; &lt;a href=&quot;vec/struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/slice.rs.html#664-679&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="936a2676cd51a6036d76f62c9ea34308f8e2468d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;slice/trait.join#tymethod.join&quot;&gt;join&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[V]&lt;/a&gt;, sep: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;vec/struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/slice.rs.html#686-702&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc36a9c23e0e6e78f5b77912c0c064ca4712af02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;slice/trait.sliceindex#tymethod.get&quot;&gt;get&lt;/a&gt;(self, slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#153-156&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a79b03bda2570d90c82c2e84e4001558ae96d873" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;slice/trait.sliceindex#tymethod.get_mut&quot;&gt;get_mut&lt;/a&gt;(self, slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#159-162&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d1e1b82fd63135e4cc57dbfffd43ea98442c33a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;slice/trait.sliceindex#tymethod.index&quot;&gt;index&lt;/a&gt;(self, slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#180-183&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3360177318aa19c043cd27a2f3ef4ea543635deb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;slice/trait.sliceindex#tymethod.index_mut&quot;&gt;index_mut&lt;/a&gt;(self, slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#186-189&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="621455e7f58a3b8e0b9620e4c13cf67f1c6f047c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/pattern/trait.pattern#method.is_contained_in&quot;&gt;is_contained_in&lt;/a&gt;(self, haystack: &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#549-556&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d51ab3e98f03911106a75b18f4f8665458229ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/pattern/trait.pattern#method.is_contained_in&quot;&gt;is_contained_in&lt;/a&gt;(self, haystack: &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#784&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="789bc89d535a8415859ec1c256069be518cb5330" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/pattern/trait.pattern#method.is_contained_in&quot;&gt;is_contained_in&lt;/a&gt;(self, haystack: &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#836&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ca642288094f94fae7cb57e4350cd93fe65dd1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/pattern/trait.pattern#method.is_prefix_of&quot;&gt;is_prefix_of&lt;/a&gt;(self, haystack: &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#559-561&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da63bd771aba72a3994762bcdad75a308849525e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/pattern/trait.pattern#method.is_prefix_of&quot;&gt;is_prefix_of&lt;/a&gt;(self, haystack: &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#784&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bced482f4167af8e5821534e488095d81d764be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/pattern/trait.pattern#method.is_prefix_of&quot;&gt;is_prefix_of&lt;/a&gt;(self, haystack: &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#836&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf4b7671f3a3eb9ea4bf7c8c98377656400d431" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/pattern/trait.pattern#method.is_prefix_of&quot;&gt;is_prefix_of&lt;/a&gt;(self, haystack: &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#872-874&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="144f3116ab2966f1f24c23d271997956ae00596c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/pattern/trait.pattern#method.is_suffix_of&quot;&gt;is_suffix_of&lt;/a&gt;(self, haystack: &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;a href=&quot;primitive.char&quot;&gt;char&lt;/a&gt; as &lt;a href=&quot;str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;&amp;gt;::&lt;a href=&quot;str/pattern/trait.pattern#associatedtype.Searcher&quot;&gt;Searcher&lt;/a&gt;: &lt;a href=&quot;str/pattern/trait.reversesearcher&quot;&gt;ReverseSearcher&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#569-574&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f12daaba6381c57d2e2985691b1bf96b285d6ee3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/pattern/trait.pattern#method.is_suffix_of&quot;&gt;is_suffix_of&lt;/a&gt;(self, haystack: &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;str/pattern/struct.charpredicatesearcher&quot;&gt;CharPredicateSearcher&lt;/a&gt;&amp;lt;'a, F&amp;gt;: &lt;a href=&quot;str/pattern/trait.reversesearcher&quot;&gt;ReverseSearcher&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#836&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b58549122a09251f9bee5c22532febd22bc84cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/pattern/trait.pattern#method.is_suffix_of&quot;&gt;is_suffix_of&lt;/a&gt;(self, haystack: &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;str/pattern/struct.charslicesearcher&quot;&gt;CharSliceSearcher&lt;/a&gt;&amp;lt;'a, 'b&amp;gt;: &lt;a href=&quot;str/pattern/trait.reversesearcher&quot;&gt;ReverseSearcher&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#784&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8102b7627e956e7b25253ed089dd6c342c8c484" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/pattern/trait.pattern#method.is_suffix_of&quot;&gt;is_suffix_of&lt;/a&gt;(self, haystack: &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#889-891&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e837d43e54fb5ad2ff9e8a36cb8698bd23922c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/pattern/trait.pattern#method.strip_prefix_of&quot;&gt;strip_prefix_of&lt;/a&gt;(self, haystack: &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#564-566&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a97e27c4ffe75ab6d746f7479742bfafea0b9c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/pattern/trait.pattern#method.strip_prefix_of&quot;&gt;strip_prefix_of&lt;/a&gt;(self, haystack: &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#784&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d13cbb0937b309dbdc62d565e4d768861f856e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/pattern/trait.pattern#method.strip_prefix_of&quot;&gt;strip_prefix_of&lt;/a&gt;(self, haystack: &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#836&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="530c5a6c36e09db29228fe656b1b209df70a35b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/pattern/trait.pattern#method.strip_prefix_of&quot;&gt;strip_prefix_of&lt;/a&gt;(self, haystack: &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#878-885&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a49366b5065a6680da0942a502184bd63bf4b73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/pattern/trait.pattern#method.strip_suffix_of&quot;&gt;strip_suffix_of&lt;/a&gt;(self, haystack: &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;a href=&quot;primitive.char&quot;&gt;char&lt;/a&gt; as &lt;a href=&quot;str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;&amp;gt;::&lt;a href=&quot;str/pattern/trait.pattern#associatedtype.Searcher&quot;&gt;Searcher&lt;/a&gt;: &lt;a href=&quot;str/pattern/trait.reversesearcher&quot;&gt;ReverseSearcher&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#577-582&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d34648dafba8e125802490f1967a590bb2c0e1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/pattern/trait.pattern#method.strip_suffix_of&quot;&gt;strip_suffix_of&lt;/a&gt;(self, haystack: &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;str/pattern/struct.charpredicatesearcher&quot;&gt;CharPredicateSearcher&lt;/a&gt;&amp;lt;'a, F&amp;gt;: &lt;a href=&quot;str/pattern/trait.reversesearcher&quot;&gt;ReverseSearcher&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#836&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e751198ec0431a59e1471897ad79ced25ec8d048" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/pattern/trait.pattern#method.strip_suffix_of&quot;&gt;strip_suffix_of&lt;/a&gt;(self, haystack: &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;str/pattern/struct.charslicesearcher&quot;&gt;CharSliceSearcher&lt;/a&gt;&amp;lt;'a, 'b&amp;gt;: &lt;a href=&quot;str/pattern/trait.reversesearcher&quot;&gt;ReverseSearcher&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#784&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="916bfbeca25e693061a87e43056a71509929f772" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/pattern/trait.pattern#method.strip_suffix_of&quot;&gt;strip_suffix_of&lt;/a&gt;(self, haystack: &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#895-903&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4263518a31d9732a41e5e4fcc4d79cfb75ef3ac9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/pattern/trait.pattern#tymethod.into_searcher&quot;&gt;into_searcher&lt;/a&gt;(self, haystack: &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.char&quot;&gt;char&lt;/a&gt; as &lt;a href=&quot;str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;&amp;gt;::&lt;a href=&quot;str/pattern/trait.pattern#associatedtype.Searcher&quot;&gt;Searcher&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#535-546&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="022b7aa697d3d7463bfdeb493d5e2a0336ba0e55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/pattern/trait.pattern#tymethod.into_searcher&quot;&gt;into_searcher&lt;/a&gt;(self, haystack: &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;str/pattern/struct.charpredicatesearcher&quot;&gt;CharPredicateSearcher&lt;/a&gt;&amp;lt;'a, F&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#836&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="736369ca81be35a6607da2951a570dde5b3b21d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/pattern/trait.pattern#tymethod.into_searcher&quot;&gt;into_searcher&lt;/a&gt;(self, haystack: &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;str/pattern/struct.charslicesearcher&quot;&gt;CharSliceSearcher&lt;/a&gt;&amp;lt;'a, 'b&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#784&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b79d0013bada15bbbbb011466cd1bc2a58c7a5ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/pattern/trait.pattern#tymethod.into_searcher&quot;&gt;into_searcher&lt;/a&gt;(self, haystack: &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;str/pattern/struct.strsearcher&quot;&gt;StrSearcher&lt;/a&gt;&amp;lt;'a, 'b&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#866-868&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70927c9f9aa83bb31c292465d11f68b6837aa758" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/trait.fromstr#tymethod.from_str&quot;&gt;from_str&lt;/a&gt;(s: &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;, &lt;a href=&quot;str/struct.parseboolerror&quot;&gt;ParseBoolError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#586-592&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b3a711ec94b7a1b925424349b4d44b57dff71a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/trait.fromstr#tymethod.from_str&quot;&gt;from_str&lt;/a&gt;(s: &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.char&quot;&gt;char&lt;/a&gt;, &amp;lt;&lt;a href=&quot;primitive.char&quot;&gt;char&lt;/a&gt; as &lt;a href=&quot;str/trait.fromstr&quot;&gt;FromStr&lt;/a&gt;&amp;gt;::&lt;a href=&quot;str/trait.fromstr#associatedtype.Err&quot;&gt;Err&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/char/convert.rs.html#192-199&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e439796b4b6d43627a7247ca47df8c330f6cad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/trait.fromstr#tymethod.from_str&quot;&gt;from_str&lt;/a&gt;(src: &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;, &lt;a href=&quot;num/struct.parsefloaterror&quot;&gt;ParseFloatError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/dec2flt/mod.rs.html#162&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc7f48f494909d9f29df15ab13b4633cb08b4c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/trait.fromstr#tymethod.from_str&quot;&gt;from_str&lt;/a&gt;(src: &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;, &lt;a href=&quot;num/struct.parsefloaterror&quot;&gt;ParseFloatError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/dec2flt/mod.rs.html#163&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd5939510b32dad1dc99c9a61837a10537953fd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/trait.fromstr#tymethod.from_str&quot;&gt;from_str&lt;/a&gt;(src: &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;, &lt;a href=&quot;num/struct.parseinterror&quot;&gt;ParseIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#789&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07d76619bee0b268b597ff77dedc04c0f04a5fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/trait.fromstr#tymethod.from_str&quot;&gt;from_str&lt;/a&gt;(src: &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;, &lt;a href=&quot;num/struct.parseinterror&quot;&gt;ParseIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#789&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc546203d93e48b0b138db8397cd22a4b84d75ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/trait.fromstr#tymethod.from_str&quot;&gt;from_str&lt;/a&gt;(src: &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;, &lt;a href=&quot;num/struct.parseinterror&quot;&gt;ParseIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#789&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8c65b9efec7a08f6ff94c95fded721774bda6b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/trait.fromstr#tymethod.from_str&quot;&gt;from_str&lt;/a&gt;(src: &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;, &lt;a href=&quot;num/struct.parseinterror&quot;&gt;ParseIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#789&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59028986c55b76c8fed8d52928c2152958640390" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/trait.fromstr#tymethod.from_str&quot;&gt;from_str&lt;/a&gt;(src: &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;, &lt;a href=&quot;num/struct.parseinterror&quot;&gt;ParseIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#789&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f4273f4d198de0a44d473c43c5edc1086e4412" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/trait.fromstr#tymethod.from_str&quot;&gt;from_str&lt;/a&gt;(src: &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;, &lt;a href=&quot;num/struct.parseinterror&quot;&gt;ParseIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#789&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="541d3471b9c2da895f3bdc1b3f10fc3a2b80a6b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/trait.fromstr#tymethod.from_str&quot;&gt;from_str&lt;/a&gt;(src: &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;, &lt;a href=&quot;num/struct.parseinterror&quot;&gt;ParseIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#789&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8fffaacdc164ac3273983a63e568d6b08035d5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/trait.fromstr#tymethod.from_str&quot;&gt;from_str&lt;/a&gt;(src: &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;, &lt;a href=&quot;num/struct.parseinterror&quot;&gt;ParseIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#789&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11c7c99235517f1929f62f6b8aad3bd57ac459b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/trait.fromstr#tymethod.from_str&quot;&gt;from_str&lt;/a&gt;(src: &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;, &lt;a href=&quot;num/struct.parseinterror&quot;&gt;ParseIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#789&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2721f26d56e7d466510b1986e50423b6946044b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/trait.fromstr#tymethod.from_str&quot;&gt;from_str&lt;/a&gt;(src: &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;, &lt;a href=&quot;num/struct.parseinterror&quot;&gt;ParseIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#789&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a31a3ddcb19a55a7850469183da8773c16023345" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/trait.fromstr#tymethod.from_str&quot;&gt;from_str&lt;/a&gt;(src: &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;, &lt;a href=&quot;num/struct.parseinterror&quot;&gt;ParseIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#789&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe4b949e173799026c132abc6be51b0ddcfeeec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;str/trait.fromstr#tymethod.from_str&quot;&gt;from_str&lt;/a&gt;(src: &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;num/struct.parseinterror&quot;&gt;ParseIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#789&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e6bc9d6233d6254edf177e72be946c0afbb1f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;string/trait.tostring#tymethod.to_string&quot;&gt;to_string&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;string/struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2212-2214&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df9f24b5d313443e5a56c8a93de782d7a01ee737" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;string/trait.tostring#tymethod.to_string&quot;&gt;to_string&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;string/struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2220-2222&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f98df4975e82dba5c8e6d20cd0daa9f8c488f057" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.allocref#method.alloc_zeroed&quot;&gt;alloc_zeroed&lt;/a&gt;(&amp;amp;self, layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;, &lt;a href=&quot;struct.allocerror&quot;&gt;AllocError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/alloc.rs.html#228-230&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e6b9f655822f3b7d05ed4d5851a505f31bf9c86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.allocref#tymethod.alloc&quot;&gt;alloc&lt;/a&gt;(&amp;amp;self, layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;, &lt;a href=&quot;struct.allocerror&quot;&gt;AllocError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/alloc.rs.html#223-225&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4de91bccaa01b4379a8f92ce22d3ac70944c1779" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.any#tymethod.type_id&quot;&gt;type_id&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.typeid&quot;&gt;TypeId&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/any.rs.html#109-111&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c70296aa9bbc92cb96f5746b03f9d45c118375b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.borrow#tymethod.borrow&quot;&gt;borrow&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;B&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/borrow.rs.html#23-25&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0411c9f191562eb6c48f4ff78fe8b4e684e0671a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.borrow#tymethod.borrow&quot;&gt;borrow&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/borrow.rs.html#211-213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45bdec04153fafa02a52fa8e4e9f6de4575c0493" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.borrowmut#tymethod.borrow_mut&quot;&gt;borrow_mut&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/borrow.rs.html#218-220&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1436888a7d14ef4ad5c9fd60cc7587d49a6001a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.buildhasher#tymethod.build_hasher&quot;&gt;build_hasher&lt;/a&gt;(&amp;amp;self) -&amp;gt; H&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#512-514&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a696a4572ea00066ff7a556a5a92945f66322688" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.debug#tymethod.fmt&quot;&gt;fmt&lt;/a&gt;(&amp;amp;self, f: &amp;amp;mut &lt;a href=&quot;struct.formatter&quot;&gt;Formatter&lt;/a&gt;&amp;lt;'_&amp;gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/fmt/mod.rs.html#19&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2148d7024ab02d84cb861ef9ea444087264c52a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.debug#tymethod.fmt&quot;&gt;fmt&lt;/a&gt;(&amp;amp;self, f: &amp;amp;mut &lt;a href=&quot;struct.formatter&quot;&gt;Formatter&lt;/a&gt;&amp;lt;'_&amp;gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/fmt/mod.rs.html#92&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b39ce76b7d31329ae2660575f6786de700f02a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.debug#tymethod.fmt&quot;&gt;fmt&lt;/a&gt;(&amp;amp;self, fmt: &amp;amp;mut &lt;a href=&quot;struct.formatter&quot;&gt;Formatter&lt;/a&gt;&amp;lt;'_&amp;gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/fmt/mod.rs.html#439-441&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="625788aba9a66b76bc580b545f9a8d8c154ac55d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.display#tymethod.fmt&quot;&gt;fmt&lt;/a&gt;(&amp;amp;self, f: &amp;amp;mut &lt;a href=&quot;struct.formatter&quot;&gt;Formatter&lt;/a&gt;&amp;lt;'_&amp;gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/fmt/mod.rs.html#1970-1972&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b72cbb1bb454ef13fa98c6fd2e60472dda728f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.display#tymethod.fmt&quot;&gt;fmt&lt;/a&gt;(&amp;amp;self, fmt: &amp;amp;mut &lt;a href=&quot;struct.formatter&quot;&gt;Formatter&lt;/a&gt;&amp;lt;'_&amp;gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/fmt/mod.rs.html#446-448&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8fc2d6f90c002de7ac5e80937aebcbc384572b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.advance_back_by&quot;&gt;advance_back_by&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/chain.rs.html#231-251&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ebc35e8a53db9f38e56fb1997e1f14c7e23b918" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.advance_back_by&quot;&gt;advance_back_by&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#173-175&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ad60f5cb47c42eed803da9bfec86f719c4d21eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.nth_back&quot;&gt;nth_back&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;&lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;A, B&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/chain.rs.html#254-268&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e8b83888f4298ce8a319f989abfe0ebe18047bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.nth_back&quot;&gt;nth_back&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;&lt;a href=&quot;struct.stepby&quot;&gt;StepBy&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#772-779&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="360bc590560631273462f2af0e2b437a756251f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.nth_back&quot;&gt;nth_back&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;&lt;a href=&quot;struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2564-2576&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef600d09c5189d3614bb9e0ba419f80323130cf2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.nth_back&quot;&gt;nth_back&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;I as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/fuse.rs.html#143-145&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="241beafbfa2bc4c7b4dbab8f6d9a2a37ce5ede2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.nth_back&quot;&gt;nth_back&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;I as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#178-180&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2d96e5aabb3907d8d4c408ce2efd79b6a6e2de1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.nth_back&quot;&gt;nth_back&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;I as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2353-2364&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="359e929d1728567f6823a51f96fca3e60c913d86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.nth_back&quot;&gt;nth_back&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &amp;lt;I as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1470-1476&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1647836130d6bae4978b67b5cbf7a5d9b98e1de5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.rfind&quot;&gt;rfind&lt;/a&gt;&amp;lt;P&amp;gt;(&amp;amp;mut self, predicate: P) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;&lt;a href=&quot;struct.fuse&quot;&gt;Fuse&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(&amp;amp;&amp;lt;&lt;a href=&quot;struct.fuse&quot;&gt;Fuse&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/fuse.rs.html#166-171&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f06e36be3a0766edc10575983bd937f9f759341" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.rfind&quot;&gt;rfind&lt;/a&gt;&amp;lt;P&amp;gt;(&amp;amp;mut self, predicate: P) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;&lt;a href=&quot;struct.rev&quot;&gt;Rev&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(&amp;amp;&amp;lt;&lt;a href=&quot;struct.rev&quot;&gt;Rev&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#198-203&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e6e69df575977c417a5b9a1d5d219bccd8872a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.rfind&quot;&gt;rfind&lt;/a&gt;&amp;lt;P&amp;gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;predicate: P&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;&lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;A, B&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(&amp;amp;&amp;lt;&lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;A, B&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/chain.rs.html#271-279&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88754cc09072655582a6139162b6fd0da84e21bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.rfold&quot;&gt;rfold&lt;/a&gt;&amp;lt;Acc, F&amp;gt;(self, acc: Acc, f: F) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;A, B&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/chain.rs.html#298-309&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f607eddc4b45e8694e24eb2e305be1c42fee6965" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.rfold&quot;&gt;rfold&lt;/a&gt;&amp;lt;Acc, F&amp;gt;(self, init: Acc, f: F) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.cloned&quot;&gt;Cloned&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#462-467&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf15713f5685e6554f4e973ca79e1de6e947959" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.rfold&quot;&gt;rfold&lt;/a&gt;&amp;lt;Acc, F&amp;gt;(self, init: Acc, f: F) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.copied&quot;&gt;Copied&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#327-332&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff1e7d5c45665673cfdb509774ec7ca3849abd58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.rfold&quot;&gt;rfold&lt;/a&gt;&amp;lt;Acc, F&amp;gt;(self, init: Acc, f: F) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.rev&quot;&gt;Rev&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#191-196&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e07d8d47c3a2eb1055b4c7a4da8a1ab14b803b84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.rfold&quot;&gt;rfold&lt;/a&gt;&amp;lt;Acc, F&amp;gt;(self, init: Acc, f: F) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.stepby&quot;&gt;StepBy&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.stepby&quot;&gt;StepBy&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#804-824&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1fb16298e72f52432eb0e61c30cd430e3d01f64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.rfold&quot;&gt;rfold&lt;/a&gt;&amp;lt;Acc, Fold&amp;gt;(self, acc: Acc, fold: Fold) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.fuse&quot;&gt;Fuse&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/fuse.rs.html#158-163&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1801f9298558c11dfb48159e692259d33bf86fc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.rfold&quot;&gt;rfold&lt;/a&gt;&amp;lt;Acc, Fold&amp;gt;(self, init: Acc, fold: Fold) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.enumerate&quot;&gt;Enumerate&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1502-1520&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eb37956045211f1a3f0b517ef81917c3e682080" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.rfold&quot;&gt;rfold&lt;/a&gt;&amp;lt;Acc, Fold&amp;gt;(self, init: Acc, fold: Fold) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.filter&quot;&gt;Filter&lt;/a&gt;&amp;lt;I, P&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1160-1165&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c361a6ba7a30a24d84a6788b825f7f243b664290" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.rfold&quot;&gt;rfold&lt;/a&gt;&amp;lt;Acc, Fold&amp;gt;(self, init: Acc, fold: Fold) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.filtermap&quot;&gt;FilterMap&lt;/a&gt;&amp;lt;I, F&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1304-1309&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd2b9c3d069259ea928f5c103abb3f8b08c4f31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.rfold&quot;&gt;rfold&lt;/a&gt;&amp;lt;Acc, Fold&amp;gt;(self, init: Acc, fold: Fold) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.flatmap&quot;&gt;FlatMap&lt;/a&gt;&amp;lt;I, U, F&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/flatten.rs.html#101-106&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9389540e432ac75727d35339b154d0d6c2f8a76a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.rfold&quot;&gt;rfold&lt;/a&gt;&amp;lt;Acc, Fold&amp;gt;(self, init: Acc, fold: Fold) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.flatten&quot;&gt;Flatten&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/flatten.rs.html#219-224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caf66cf835b00061fc9cd6feb7dfd16cab5ef8d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.rfold&quot;&gt;rfold&lt;/a&gt;&amp;lt;Acc, Fold&amp;gt;(self, init: Acc, fold: Fold) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.inspect&quot;&gt;Inspect&lt;/a&gt;&amp;lt;I, F&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2853-2858&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a80993cd2363b36f3861d9094b853292fcbfc0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.rfold&quot;&gt;rfold&lt;/a&gt;&amp;lt;Acc, Fold&amp;gt;(self, init: Acc, fold: Fold) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.peekable&quot;&gt;Peekable&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1719-1731&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ba283cdaf020dea307ecc582dfba331c6c27cc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.rfold&quot;&gt;rfold&lt;/a&gt;&amp;lt;Acc, Fold&amp;gt;(self, init: Acc, fold: Fold) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.skip&quot;&gt;Skip&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2387-2397&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db8d1b2cd6c44f6ae7de924bc11ff8bec4a16480" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.rfold&quot;&gt;rfold&lt;/a&gt;&amp;lt;Acc, Fold&amp;gt;(self, init: Acc, fold: Fold) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2598-2613&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a242409f07d1348e4819e8947c8e899e045511a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.rfold&quot;&gt;rfold&lt;/a&gt;&amp;lt;Acc, G&amp;gt;(self, init: Acc, g: G) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;G: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.map&quot;&gt;Map&lt;/a&gt;&amp;lt;I, F&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#977-982&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72c8ab405bf0fe24d6a76e7fa640bcca180b8c8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, F, R&amp;gt;(&amp;amp;mut self, acc: Acc, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;A, B&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;A, B&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/chain.rs.html#281-296&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dcd609b399e070ea2a1e0009d09d0cd549675f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, F, R&amp;gt;(&amp;amp;mut self, init: Acc, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.stepby&quot;&gt;StepBy&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#781-801&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b4af067caca7d8888828630a9fb71d6687e19c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, acc: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.fuse&quot;&gt;Fuse&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.fuse&quot;&gt;Fuse&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/fuse.rs.html#148-155&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e7b363aa04ff2e80f92d1366c9d7e45ee6a273b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.enumerate&quot;&gt;Enumerate&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.enumerate&quot;&gt;Enumerate&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1479-1499&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d192d99ec311a7c5974875a4d2d1dcd955ca150" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.filter&quot;&gt;Filter&lt;/a&gt;&amp;lt;I, P&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.filter&quot;&gt;Filter&lt;/a&gt;&amp;lt;I, P&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1150-1157&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="551b3c5962ba87c35636ffce1ad9fbf1a88a20e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.filtermap&quot;&gt;FilterMap&lt;/a&gt;&amp;lt;I, F&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.filtermap&quot;&gt;FilterMap&lt;/a&gt;&amp;lt;I, F&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1294-1301&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f78bca70f7cfbfbb7360c551fe63cea345fea28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.flatmap&quot;&gt;FlatMap&lt;/a&gt;&amp;lt;I, U, F&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.flatmap&quot;&gt;FlatMap&lt;/a&gt;&amp;lt;I, U, F&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/flatten.rs.html#91-98&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f7900e978be3ed66680144d9933ed780f1e68c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.flatten&quot;&gt;Flatten&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.flatten&quot;&gt;Flatten&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/flatten.rs.html#209-216&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1305b2bb887375c3fd93da5342f2a66a3e7ad3bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.inspect&quot;&gt;Inspect&lt;/a&gt;&amp;lt;I, F&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.inspect&quot;&gt;Inspect&lt;/a&gt;&amp;lt;I, F&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2843-2850&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6fe3511a4b5d7595cbcb7cf87ec385e0d27206a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.skip&quot;&gt;Skip&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.skip&quot;&gt;Skip&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2366-2385&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="389ef13d7a3c4b98046345df4b7fabedf74aa7d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2579-2595&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e787654703a854b3dbab9ae2bdd97344c40afcdd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, G, R&amp;gt;(&amp;amp;mut self, init: Acc, g: G) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;G: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.map&quot;&gt;Map&lt;/a&gt;&amp;lt;I, F&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.map&quot;&gt;Map&lt;/a&gt;&amp;lt;I, F&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#968-975&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7523608981e686777e9eee20fdc7804bd136d008" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;B, F, R&amp;gt;(&amp;amp;mut self, init: B, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(B, &amp;lt;&lt;a href=&quot;struct.cloned&quot;&gt;Cloned&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = B&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.cloned&quot;&gt;Cloned&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#453-460&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6891b62c72b694c1a7ef2139b72ff1b96d70124" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;B, F, R&amp;gt;(&amp;amp;mut self, init: B, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(B, &amp;lt;&lt;a href=&quot;struct.copied&quot;&gt;Copied&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = B&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.copied&quot;&gt;Copied&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#318-325&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412f1e8ecd52bfa7848714f87fdfb3613ddd1900" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;B, F, R&amp;gt;(&amp;amp;mut self, init: B, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(B, &amp;lt;&lt;a href=&quot;struct.peekable&quot;&gt;Peekable&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = B&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.peekable&quot;&gt;Peekable&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1699-1716&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430197facf346e7ef2936154835fc4a7d760cec4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;B, F, R&amp;gt;(&amp;amp;mut self, init: B, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(B, &amp;lt;&lt;a href=&quot;struct.rev&quot;&gt;Rev&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = B&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.rev&quot;&gt;Rev&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#182-189&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30524a084f002649b265765d557255ff9a6c49da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#tymethod.next_back&quot;&gt;next_back&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;&lt;a href=&quot;struct.peekable&quot;&gt;Peekable&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1690-1696&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="126a771df71ffaaae5099ed800b878703fbb3f07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#tymethod.next_back&quot;&gt;next_back&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;&lt;a href=&quot;struct.skip&quot;&gt;Skip&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2348-2350&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ec199923522ce613b5ee346b06030e0bea12b79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#tymethod.next_back&quot;&gt;next_back&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;&lt;a href=&quot;struct.stepby&quot;&gt;StepBy&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#767-769&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d3dd43a1e4c280f9e827638866d0d6cacd8e815" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#tymethod.next_back&quot;&gt;next_back&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;&lt;a href=&quot;struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2553-2561&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e49c2d58febf6c529b5309829fc41f011526bfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#tymethod.next_back&quot;&gt;next_back&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;A as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/chain.rs.html#223-228&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7be866d94cca4a770c55698b17ad310301ed315" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#tymethod.next_back&quot;&gt;next_back&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;I as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/fuse.rs.html#138-140&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccb978a0efe7a1d284148ea66956b06579beee20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#tymethod.next_back&quot;&gt;next_back&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;I as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1145-1147&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3496a042d29e39f3cdff217c11a9d6310b4d5487" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#tymethod.next_back&quot;&gt;next_back&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;I as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#168-170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412df00dee8346b836dbb7a2bb5c6fa4b0465800" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#tymethod.next_back&quot;&gt;next_back&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;I as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2837-2840&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1555384299683391512706ccf7dd99acb6945501" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#tymethod.next_back&quot;&gt;next_back&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;U as &lt;a href=&quot;trait.intoiterator&quot;&gt;IntoIterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.intoiterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/flatten.rs.html#86-88&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="086ba4a7138b2c23a051c4e68474f53fc42be7cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#tymethod.next_back&quot;&gt;next_back&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;U as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/flatten.rs.html#204-206&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeff58e62e98a304089bd61a159812372de84133" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#tymethod.next_back&quot;&gt;next_back&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &amp;lt;I as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1461-1467&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40def4ed6ee305586b384d3f3dc0f4bc85ed2a55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#tymethod.next_back&quot;&gt;next_back&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;A&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/sources.rs.html#32-34&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebe90f626434026695571995b481cbc2ef242ad6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#tymethod.next_back&quot;&gt;next_back&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;A&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/sources.rs.html#408-410&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4092c08000c15a0494a7d90a18911385462806c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#tymethod.next_back&quot;&gt;next_back&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;B&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1279-1291&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f052f6eb00f05b04f0e9b1a0131a0cfca9c444ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#tymethod.next_back&quot;&gt;next_back&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;B&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#964-966&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a935604b1ec6da105f7177690c0f736d0712781" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#tymethod.next_back&quot;&gt;next_back&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#314-316&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71c9e83e6893b4d9ef6f408f459164208e767e61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#tymethod.next_back&quot;&gt;next_back&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#449-451&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c00451540e31bafbe516d7a5ca67a9b305230b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#tymethod.next_back&quot;&gt;next_back&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/sources.rs.html#225-227&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78b5bf95cefa1bb79bbc150d1dbc24821f380d6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#tymethod.next_back&quot;&gt;next_back&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/sources.rs.html#305-307&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6364ac3cf7e3cca1136ed28141be276d0a069f39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.doubleendediterator#tymethod.next_back&quot;&gt;next_back&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&amp;lt;A as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;, &amp;lt;B as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/zip.rs.html#79-81&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3560d749cc53c14a828ceebb6972424f877e601b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.exactsizeiterator#method.is_empty&quot;&gt;is_empty&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/fuse.rs.html#183-185&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4e65ea73c09e4f5cb52a2548049516ae40e0f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.exactsizeiterator#method.is_empty&quot;&gt;is_empty&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1532-1534&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd9856866dfc6da23ecde129b22ad5cea01bd2d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.exactsizeiterator#method.is_empty&quot;&gt;is_empty&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#215-217&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c21e0cc31698703c0f7e02c89647f7ce3be937b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.exactsizeiterator#method.is_empty&quot;&gt;is_empty&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2870-2872&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81545f9e3afd119bb71216171a8f8dea8356aaa3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.exactsizeiterator#method.is_empty&quot;&gt;is_empty&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#345-347&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33502b79ebb359bbf22d929fcc7c82c286bcdaff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.exactsizeiterator#method.is_empty&quot;&gt;is_empty&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#480-482&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ccdb905cea6e463b849ac09c13e7de474efe895" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.exactsizeiterator#method.is_empty&quot;&gt;is_empty&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#994-996&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d2f89092c58a622e87850653abfcea390da015" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.exactsizeiterator#method.len&quot;&gt;len&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/fuse.rs.html#179-181&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2441c3f26ae4542af4f5eb8d30e2965dabf212ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.exactsizeiterator#method.len&quot;&gt;len&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1528-1530&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7c4345e578e80b3de3db3302f88cab93e6ccc52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.exactsizeiterator#method.len&quot;&gt;len&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#211-213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46b064cc3c58ab990384835028f632945f3ee931" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.exactsizeiterator#method.len&quot;&gt;len&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2866-2868&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9921271ac7affc86a7647e15fa315f5aa976b5a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.exactsizeiterator#method.len&quot;&gt;len&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#341-343&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="448d78947b043abf4bb726a19084c87d8a841dc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.exactsizeiterator#method.len&quot;&gt;len&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#476-478&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a2f17467e40ea9a560f517b82eb1afb1389b2f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.exactsizeiterator#method.len&quot;&gt;len&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#990-992&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01eb6d26d268ef7864db824327ce3c2e71ab0aed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.exactsizeiterator#method.len&quot;&gt;len&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/sources.rs.html#232-234&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3005f9c1d3d194006601793e713a94a511dc221b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.exactsizeiterator#method.len&quot;&gt;len&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/sources.rs.html#312-314&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d019cecf6abea4b8c6a22981e3a89cb25421015" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.exactsizeiterator#method.len&quot;&gt;len&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/sources.rs.html#415-417&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa999e05614c3d64b481ea159e28d83a16a6a4f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.from#tymethod.from&quot;&gt;from&lt;/a&gt;(t: &lt;a href=&quot;../primitive.never&quot;&gt;!&lt;/a&gt;) -&amp;gt; T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert/mod.rs.html#568-570&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb83b5fca5d94a76c8dc33845fb073b46fb70010" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.from#tymethod.from&quot;&gt;from&lt;/a&gt;(t: T) -&amp;gt; T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert/mod.rs.html#553-555&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0209c72b75bf789c56fac3cae079181131b74b28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.from#tymethod.from&quot;&gt;from&lt;/a&gt;(x: &lt;a href=&quot;../primitive.never&quot;&gt;!&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;enum.infallible&quot;&gt;Infallible&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert/mod.rs.html#728-730&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9624284dbe9c20a7e05dc995a0a42d994292cb75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.from#tymethod.from&quot;&gt;from&lt;/a&gt;(x: &lt;a href=&quot;enum.infallible&quot;&gt;Infallible&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array/mod.rs.html#100-102&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="767cfe347a881c9468a0ef354b57259e3a36e317" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.from#tymethod.from&quot;&gt;from&lt;/a&gt;(x: &lt;a href=&quot;enum.infallible&quot;&gt;Infallible&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/error.rs.html#33-35&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52a4e4ef96dbac584bbef9071fe755fed6e0dfec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.future#tymethod.poll&quot;&gt;poll&lt;/a&gt;(self: &lt;a href=&quot;../pin/struct.pin&quot;&gt;Pin&lt;/a&gt;&amp;lt;&amp;amp;mut &lt;a href=&quot;struct.pending&quot;&gt;Pending&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;, &amp;amp;mut &lt;a href=&quot;../task/struct.context&quot;&gt;Context&lt;/a&gt;&amp;lt;'_&amp;gt;) -&amp;gt; &lt;a href=&quot;../task/enum.poll&quot;&gt;Poll&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/future/pending.rs.html#41-43&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d15a5537566f1f8354817084d993b666595e88b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.future#tymethod.poll&quot;&gt;poll&lt;/a&gt;(self: &lt;a href=&quot;../pin/struct.pin&quot;&gt;Pin&lt;/a&gt;&amp;lt;&amp;amp;mut &lt;a href=&quot;struct.ready&quot;&gt;Ready&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;, _cx: &amp;amp;mut &lt;a href=&quot;../task/struct.context&quot;&gt;Context&lt;/a&gt;&amp;lt;'_&amp;gt;) -&amp;gt; &lt;a href=&quot;../task/enum.poll&quot;&gt;Poll&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/future/ready.rs.html#22-24&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e43e69dfcacd31cf6b1fb6e2a1bd8556f7c7f00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.hasher#tymethod.finish&quot;&gt;finish&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/sip.rs.html#235-237&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34bc46cf1b814c4821143e1d755c97de00f225a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.hasher#tymethod.write&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, msg: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/sip.rs.html#230-232&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04284d2c53bd0f9523fa4712a1844abedf5ca14e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.index#tymethod.index&quot;&gt;index&lt;/a&gt;(&amp;amp;self, _index: &lt;a href=&quot;struct.rangefull&quot;&gt;RangeFull&lt;/a&gt;) -&amp;gt; &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2059-2061&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26443fe7ee46c3b607c00d1c32e5aa3dd5895270" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.index#tymethod.index&quot;&gt;index&lt;/a&gt;(&amp;amp;self, index: &lt;a href=&quot;struct.range&quot;&gt;Range&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;) -&amp;gt; &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2032-2034&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29f57f0605813eb61224dae5f6365972f96a7ef6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.index#tymethod.index&quot;&gt;index&lt;/a&gt;(&amp;amp;self, index: &lt;a href=&quot;struct.rangefrom&quot;&gt;RangeFrom&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;) -&amp;gt; &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2050-2052&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b618e75dd1396f87ccf774e720c8be8a233d75cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.index#tymethod.index&quot;&gt;index&lt;/a&gt;(&amp;amp;self, index: &lt;a href=&quot;struct.rangeinclusive&quot;&gt;RangeInclusive&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;) -&amp;gt; &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2068-2070&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c334f48143a8efc012f40cc26cbb569840ffce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.index#tymethod.index&quot;&gt;index&lt;/a&gt;(&amp;amp;self, index: &lt;a href=&quot;struct.rangeto&quot;&gt;RangeTo&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;) -&amp;gt; &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2041-2043&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="745eb281e14ea755835fb897df69624d0a0600cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.index#tymethod.index&quot;&gt;index&lt;/a&gt;(&amp;amp;self, index: &lt;a href=&quot;struct.rangetoinclusive&quot;&gt;RangeToInclusive&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;) -&amp;gt; &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2077-2079&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a601b8e80d730f101a683739d84f43506951983" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.indexmut#tymethod.index_mut&quot;&gt;index_mut&lt;/a&gt;(&amp;amp;mut self, _index: &lt;a href=&quot;struct.rangefull&quot;&gt;RangeFull&lt;/a&gt;) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2106-2108&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2159b8aa6cc9e1e86a83d7dc901bddecfae212c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.indexmut#tymethod.index_mut&quot;&gt;index_mut&lt;/a&gt;(&amp;amp;mut self, index: &lt;a href=&quot;struct.range&quot;&gt;Range&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2085-2087&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb7cfbc57c42a430c25aeda3616d59a3d72b4fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.indexmut#tymethod.index_mut&quot;&gt;index_mut&lt;/a&gt;(&amp;amp;mut self, index: &lt;a href=&quot;struct.rangefrom&quot;&gt;RangeFrom&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2099-2101&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2c8ff16c44aa6edb26e5efab9b6b365794790ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.indexmut#tymethod.index_mut&quot;&gt;index_mut&lt;/a&gt;(&amp;amp;mut self, index: &lt;a href=&quot;struct.rangeinclusive&quot;&gt;RangeInclusive&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2113-2115&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e408fe6793a6714621bf43fc1526d14065f77d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.indexmut#tymethod.index_mut&quot;&gt;index_mut&lt;/a&gt;(&amp;amp;mut self, index: &lt;a href=&quot;struct.rangeto&quot;&gt;RangeTo&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2092-2094&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db06bf80ef314584b97b78e87f855fd764a348d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.indexmut#tymethod.index_mut&quot;&gt;index_mut&lt;/a&gt;(&amp;amp;mut self, index: &lt;a href=&quot;struct.rangetoinclusive&quot;&gt;RangeToInclusive&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2120-2122&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6dcbaa6b7efbc196c09e7745cd8f08e30b9b273" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.into#tymethod.into&quot;&gt;into&lt;/a&gt;(self) -&amp;gt; U&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert/mod.rs.html#545-547&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d4d4fbd1dd95a34de87ef4e8796ce36195ab35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.intofuture#tymethod.into_future&quot;&gt;into_future&lt;/a&gt;(self) -&amp;gt; &amp;lt;F as &lt;a href=&quot;trait.intofuture&quot;&gt;IntoFuture&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.intofuture#associatedtype.Future&quot;&gt;Future&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/future/into_future.rs.html#24-26&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b76b897290b1acb2a4c42469c58720ced92a8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.intoiterator#tymethod.into_iter&quot;&gt;into_iter&lt;/a&gt;(self) -&amp;gt; I&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/collect.rs.html#240-242&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b4b72cb7a69269879a5bbd8c3f59fc283f455bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.advance_by&quot;&gt;advance_by&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/chain.rs.html#129-149&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c96e86dc064da039926e985b4be95dde2a99fbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.advance_by&quot;&gt;advance_by&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#128-130&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bbdccda0f55180e7c9e943c8181095c1f93f5f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.count&quot;&gt;count&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/chain.rs.html#86-96&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef9fa7e4e04e5d3631fb8f0bf16df5a9fb85f6e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.count&quot;&gt;count&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/fuse.rs.html#82-84&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="046b94b1805c27d2aaf47078bb1385d24a6dd9e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.count&quot;&gt;count&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1111-1118&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de0b5a85615bd6a4acae4f56ef9f0d8b8863b7f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.count&quot;&gt;count&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1396-1398&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af658ecf74d6d6926e83a0d0127f50969cb9f59e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.count&quot;&gt;count&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1611-1617&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf76bb442de216faeeee46df631d770206adba8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.count&quot;&gt;count&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2275-2283&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca919d206092aebc3f6ca5be119602e43ebdba3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.count&quot;&gt;count&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#294-296&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf8718e50322d00c06d7f742141f582baf6ebdc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.find&quot;&gt;find&lt;/a&gt;&amp;lt;P&amp;gt;(&amp;amp;mut self, predicate: P) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;&lt;a href=&quot;struct.fuse&quot;&gt;Fuse&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(&amp;amp;&amp;lt;&lt;a href=&quot;struct.fuse&quot;&gt;Fuse&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/fuse.rs.html#110-115&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ab38cfc0d71e214d1d10bf70cbaebe423fbdc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.find&quot;&gt;find&lt;/a&gt;&amp;lt;P&amp;gt;(&amp;amp;mut self, predicate: P) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;&lt;a href=&quot;struct.rev&quot;&gt;Rev&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(&amp;amp;&amp;lt;&lt;a href=&quot;struct.rev&quot;&gt;Rev&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#154-159&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8c7861f16738ef75ff12c21d0f58e6ecfc7d5dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.find&quot;&gt;find&lt;/a&gt;&amp;lt;P&amp;gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;predicate: P&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;&lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;A, B&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(&amp;amp;&amp;lt;&lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;A, B&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/chain.rs.html#169-177&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27a79187286f24c5755fcb2ee19813be16977da2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.fold&quot;&gt;fold&lt;/a&gt;&amp;lt;Acc, F&amp;gt;(self, acc: Acc, f: F) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;A, B&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/chain.rs.html#115-126&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e9ddcd9e1b15f198a7230540becf3871bb10b86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.fold&quot;&gt;fold&lt;/a&gt;&amp;lt;Acc, F&amp;gt;(self, acc: Acc, f: F) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.stepby&quot;&gt;StepBy&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#725-742&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84caff9a1633f35448f415630438d942041593b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.fold&quot;&gt;fold&lt;/a&gt;&amp;lt;Acc, F&amp;gt;(self, init: Acc, f: F) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.cloned&quot;&gt;Cloned&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#426-431&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b6050d72dd4ee3702a05cef9317b915d2814f60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.fold&quot;&gt;fold&lt;/a&gt;&amp;lt;Acc, F&amp;gt;(self, init: Acc, f: F) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.copied&quot;&gt;Copied&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#279-284&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a2777392ac5e5c8b797ec08bbe29ffc3e89dc0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.fold&quot;&gt;fold&lt;/a&gt;&amp;lt;Acc, F&amp;gt;(self, init: Acc, f: F) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.rev&quot;&gt;Rev&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#146-151&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69400d0937fd8912f90fd967134ff597658c2aa4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.fold&quot;&gt;fold&lt;/a&gt;&amp;lt;Acc, Fold&amp;gt;(self, acc: Acc, fold: Fold) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.fuse&quot;&gt;Fuse&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/fuse.rs.html#102-107&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8745516e197b0d4f75d59dd868ab88de70b5619e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.fold&quot;&gt;fold&lt;/a&gt;&amp;lt;Acc, Fold&amp;gt;(self, init: Acc, fold: Fold) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.enumerate&quot;&gt;Enumerate&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1424-1442&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cea0581a2663cfa9d32585b358ba2e0d927a12a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.fold&quot;&gt;fold&lt;/a&gt;&amp;lt;Acc, Fold&amp;gt;(self, init: Acc, fold: Fold) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.filter&quot;&gt;Filter&lt;/a&gt;&amp;lt;I, P&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1131-1136&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="962226fc697224c5cde7d5378c9422f4090f89fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.fold&quot;&gt;fold&lt;/a&gt;&amp;lt;Acc, Fold&amp;gt;(self, init: Acc, fold: Fold) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.filtermap&quot;&gt;FilterMap&lt;/a&gt;&amp;lt;I, F&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1265-1270&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b5f187def7d721d03a62d37104ec0d891536b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.fold&quot;&gt;fold&lt;/a&gt;&amp;lt;Acc, Fold&amp;gt;(self, init: Acc, fold: Fold) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.flatmap&quot;&gt;FlatMap&lt;/a&gt;&amp;lt;I, U, F&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/flatten.rs.html#71-76&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07438c6e20959e7208b5d0315ae5fee7600ce1cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.fold&quot;&gt;fold&lt;/a&gt;&amp;lt;Acc, Fold&amp;gt;(self, init: Acc, fold: Fold) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.flatten&quot;&gt;Flatten&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/flatten.rs.html#189-194&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c019b24ae431b8c60a5f68e23dd6c190cf6bb4c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.fold&quot;&gt;fold&lt;/a&gt;&amp;lt;Acc, Fold&amp;gt;(self, init: Acc, fold: Fold) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.inspect&quot;&gt;Inspect&lt;/a&gt;&amp;lt;I, F&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2823-2828&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a23d286ab010e9d223982a0f7371b8f6e31d7ef2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.fold&quot;&gt;fold&lt;/a&gt;&amp;lt;Acc, Fold&amp;gt;(self, init: Acc, fold: Fold) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.mapwhile&quot;&gt;MapWhile&lt;/a&gt;&amp;lt;I, P&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.mapwhile&quot;&gt;MapWhile&lt;/a&gt;&amp;lt;I, P&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2189-2200&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5793c9d8277ce8553012063fe78380b007c976" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.fold&quot;&gt;fold&lt;/a&gt;&amp;lt;Acc, Fold&amp;gt;(self, init: Acc, fold: Fold) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.peekable&quot;&gt;Peekable&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1671-1681&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5104301f120ed882d637122231c0e9eabcee6abe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.fold&quot;&gt;fold&lt;/a&gt;&amp;lt;Acc, Fold&amp;gt;(self, init: Acc, fold: Fold) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.scan&quot;&gt;Scan&lt;/a&gt;&amp;lt;I, St, F&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.scan&quot;&gt;Scan&lt;/a&gt;&amp;lt;I, St, F&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2697-2708&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e770797a8370b17ec41b86750b8dcfdc69c7265e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.fold&quot;&gt;fold&lt;/a&gt;&amp;lt;Acc, Fold&amp;gt;(self, init: Acc, fold: Fold) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.skip&quot;&gt;Skip&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2326-2337&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="241f999423634c11977f8e23ff3073ca4027f343" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.fold&quot;&gt;fold&lt;/a&gt;&amp;lt;Acc, Fold&amp;gt;(self, init: Acc, fold: Fold) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.skipwhile&quot;&gt;SkipWhile&lt;/a&gt;&amp;lt;I, P&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1948-1959&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d15e59ee9b260922d304f2345bd57d8e382769d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.fold&quot;&gt;fold&lt;/a&gt;&amp;lt;Acc, Fold&amp;gt;(self, init: Acc, fold: Fold) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2516-2527&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1883c6c555163ead7b0973bd5af4164825479fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.fold&quot;&gt;fold&lt;/a&gt;&amp;lt;Acc, Fold&amp;gt;(self, init: Acc, fold: Fold) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.takewhile&quot;&gt;TakeWhile&lt;/a&gt;&amp;lt;I, P&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.takewhile&quot;&gt;TakeWhile&lt;/a&gt;&amp;lt;I, P&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2083-2094&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd62e9f1df99abbbdac5566ac42a11cafe6efd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.fold&quot;&gt;fold&lt;/a&gt;&amp;lt;Acc, G&amp;gt;(self, init: Acc, g: G) -&amp;gt; Acc where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;G: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.map&quot;&gt;Map&lt;/a&gt;&amp;lt;I, F&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; Acc,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#941-946&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="175579ab1ab75f73f92dbd895dadaac4d25f7e33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.last&quot;&gt;last&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;&lt;a href=&quot;struct.fuse&quot;&gt;Fuse&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/fuse.rs.html#77-79&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="126d22195b363b3f13e325c1b508818449a9c82e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.last&quot;&gt;last&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;A as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/chain.rs.html#180-191&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c32681a6adf01db99503d3eda0f1a9b1327c936e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.last&quot;&gt;last&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;I as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1630-1637&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e98d7174fd79e105c8f30c3d10b95b62ccfa2518" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.last&quot;&gt;last&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;I as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2286-2292&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bcb7ea392e82070413c78b1655a0b110dc6ccb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.last&quot;&gt;last&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#290-292&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="498c5a56e8bddc28e64bde0cce360b987f982425" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.nth&quot;&gt;nth&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;&lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;A, B&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/chain.rs.html#152-166&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c04679b5e68f27d7044d306dcde9179250d3ed73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.nth&quot;&gt;nth&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;&lt;a href=&quot;struct.stepby&quot;&gt;StepBy&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#661-703&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdc177a7f3ce915a3de8b3ce8f97388692d29a6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.nth&quot;&gt;nth&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;&lt;a href=&quot;struct.zip&quot;&gt;Zip&lt;/a&gt;&amp;lt;A, B&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/zip.rs.html#57-59&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e25a31ce10e7ead5f58fe106babf0125e37ef52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.nth&quot;&gt;nth&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;I as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/fuse.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="558ccd9d4446686d8a0b1df095d6c50d687bd2ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.nth&quot;&gt;nth&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;I as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#133-135&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92fb975a1df64743fda45029647d2afb8055543" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.nth&quot;&gt;nth&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;I as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1620-1627&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="307d94d1753334ac7963ecb929a28be9f61286a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.nth&quot;&gt;nth&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;I as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2263-2272&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23924da147277adb8d82ef4782b2342defa306ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.nth&quot;&gt;nth&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;I as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2458-2469&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af203b9e1582fc983696ed91659002fbb1847938" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.nth&quot;&gt;nth&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &amp;lt;I as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1387-1393&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="773ee7f87398a0d9b4553057ab0a331c9bd076ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.nth&quot;&gt;nth&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#286-288&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e53870eed73924938dad82582879f53759b15b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt;size_hint&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/chain.rs.html#194-213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff59d563b52aad5df36fce51b5d3549890bd2c2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt;size_hint&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/flatten.rs.html#174-176&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6cdedc6855f0382eec7739713ffdc659a558081" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt;size_hint&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/flatten.rs.html#56-58&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c945bbdb1d98210fc24ff63d50df78914d5f05aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt;size_hint&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/fuse.rs.html#87-89&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ff479fe8f74d07ea39231c80c749b3695ad206d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt;size_hint&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1094-1097&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cef693fa4cdf689fa6015ef2e7c4987c7a5c5e9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt;size_hint&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#123-125&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="057e810124fcc0f16a5f3bbf56a1304028e1c367" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt;size_hint&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1249-1252&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0aa6c206ed4ec5dd7f3f3a57ded64900212f7ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt;size_hint&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1382-1384&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c39dc5d7b4675cad9b5b509e3d8bd09d9cb5bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt;size_hint&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1640-1653&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="755e0a174baf421a285c78cc372cacc84f52c12e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt;size_hint&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1926-1929&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af3456d8ff7e14a6293ceabf998df459bcd9adea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt;size_hint&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2042-2049&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="936d0cc47e6a273aa0292fc5e83dad76e07159f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt;size_hint&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2168-2171&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8ea9189358c3d91f986418e906c03b764adaf7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt;size_hint&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2295-2305&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9c2ac58b819124553ad2d16762923cc3dfc898" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt;size_hint&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2472-2487&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d20e6fbd3d54f9a43b5354c7a2bc4ac43602c8fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt;size_hint&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#266-268&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b612254e21df4c526448c0d784d6aae38f09ae9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt;size_hint&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2668-2671&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e72ea9c1f8098846367e36bb6c958e92f03bb0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt;size_hint&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2808-2810&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1fb100261ab39b4d8b87fc506c39588ee5336da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt;size_hint&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#413-415&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="757690f53ee8a8d11a076224e6a08d1d040037bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt;size_hint&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#552-559&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85e3ed53da410207891b9d233c68b9048aea8389" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt;size_hint&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#638-658&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3661510b8e6d7af4d1bfca76b26f145c403e3a8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt;size_hint&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#928-930&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a628e5b84e0746a7430a9a55babbcf4aebaba424" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt;size_hint&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/zip.rs.html#52-54&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dbaf40dcd539f05bafc40509af87b92096ff61f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt;size_hint&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/sources.rs.html#117-119&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6f5733d2fdf19ae27fc576387812216834cb01f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt;size_hint&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/sources.rs.html#218-220&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58914844f6916ae76aa59f1799ad8f790ecece53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt;size_hint&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/sources.rs.html#24-26&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eba55a516aad5233983a68a8f3befd7ce621170" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt;size_hint&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/sources.rs.html#298-300&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9029afe413546e0a805b160a461ea6a39772384f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt;size_hint&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/sources.rs.html#401-403&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e56a9c26a1558205a2a6a239c7a174c7d8a3cea8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt;size_hint&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/sources.rs.html#612-614&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34f62b9c98a02c6a148a894a1ff409a38a8e457f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.try_fold&quot;&gt;try_fold&lt;/a&gt;&amp;lt;Acc, F, R&amp;gt;(&amp;amp;mut self, acc: Acc, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;A, B&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;A, B&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/chain.rs.html#98-113&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce742ebaffec6e9b0bcc06c62e76bd6500df76fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.try_fold&quot;&gt;try_fold&lt;/a&gt;&amp;lt;Acc, F, R&amp;gt;(&amp;amp;mut self, acc: Acc, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.cycle&quot;&gt;Cycle&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#562-589&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cc9546f1340ae456d68c3ba10ca88a9cdfa6277" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.try_fold&quot;&gt;try_fold&lt;/a&gt;&amp;lt;Acc, F, R&amp;gt;(&amp;amp;mut self, acc: Acc, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.stepby&quot;&gt;StepBy&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#705-723&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bef8fe1443c196c2b042e87f21c99886c893b17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.try_fold&quot;&gt;try_fold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, acc: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.fuse&quot;&gt;Fuse&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.fuse&quot;&gt;Fuse&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/fuse.rs.html#92-99&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a85aa2aa7f270637345e8144ad14c7a4f12fbb8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.try_fold&quot;&gt;try_fold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.enumerate&quot;&gt;Enumerate&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.enumerate&quot;&gt;Enumerate&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1401-1421&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d4cc1dd07e3acf93044a74aaf28536b5d189a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.try_fold&quot;&gt;try_fold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.filter&quot;&gt;Filter&lt;/a&gt;&amp;lt;I, P&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.filter&quot;&gt;Filter&lt;/a&gt;&amp;lt;I, P&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1121-1128&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04871270cd61972aaca37962f5a32471d4d40300" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.try_fold&quot;&gt;try_fold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.filtermap&quot;&gt;FilterMap&lt;/a&gt;&amp;lt;I, F&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.filtermap&quot;&gt;FilterMap&lt;/a&gt;&amp;lt;I, F&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1255-1262&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5755bf0238f1de47e1e5cc9b1ffbfafee5d3c84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.try_fold&quot;&gt;try_fold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.flatmap&quot;&gt;FlatMap&lt;/a&gt;&amp;lt;I, U, F&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.flatmap&quot;&gt;FlatMap&lt;/a&gt;&amp;lt;I, U, F&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/flatten.rs.html#61-68&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ae4b16ba76ef39ee6b0e7d3168c50ae1a04f6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.try_fold&quot;&gt;try_fold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.flatten&quot;&gt;Flatten&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.flatten&quot;&gt;Flatten&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/flatten.rs.html#179-186&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c64618b9875aef932fde5d477beed8009832bc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.try_fold&quot;&gt;try_fold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.inspect&quot;&gt;Inspect&lt;/a&gt;&amp;lt;I, F&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.inspect&quot;&gt;Inspect&lt;/a&gt;&amp;lt;I, F&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2813-2820&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e0deed77252c2ac40cec6c0a109cd8c6ad1ae48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.try_fold&quot;&gt;try_fold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.mapwhile&quot;&gt;MapWhile&lt;/a&gt;&amp;lt;I, P&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.mapwhile&quot;&gt;MapWhile&lt;/a&gt;&amp;lt;I, P&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2174-2186&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16414411aed017ed7008af7f84cab91a70237c95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.try_fold&quot;&gt;try_fold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.scan&quot;&gt;Scan&lt;/a&gt;&amp;lt;I, St, F&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.scan&quot;&gt;Scan&lt;/a&gt;&amp;lt;I, St, F&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2674-2694&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b59e9565d9281c4887b1ceb08a3b60bbc7fef5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.try_fold&quot;&gt;try_fold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.skip&quot;&gt;Skip&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.skip&quot;&gt;Skip&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2308-2323&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d3c626387425f07def0a097c752aba9461ba27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.try_fold&quot;&gt;try_fold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.skipwhile&quot;&gt;SkipWhile&lt;/a&gt;&amp;lt;I, P&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.skipwhile&quot;&gt;SkipWhile&lt;/a&gt;&amp;lt;I, P&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1932-1945&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae21b41abf1cd77d8d790dffacd40739eb4bee9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.try_fold&quot;&gt;try_fold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2490-2513&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7a08d3d9242f3476e037bf21edf0866d75da31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.try_fold&quot;&gt;try_fold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.takewhile&quot;&gt;TakeWhile&lt;/a&gt;&amp;lt;I, P&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.takewhile&quot;&gt;TakeWhile&lt;/a&gt;&amp;lt;I, P&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2052-2080&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6293d15f94d29721e1165ef230a5d33396683668" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.try_fold&quot;&gt;try_fold&lt;/a&gt;&amp;lt;Acc, G, R&amp;gt;(&amp;amp;mut self, init: Acc, g: G) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;G: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.map&quot;&gt;Map&lt;/a&gt;&amp;lt;I, F&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.map&quot;&gt;Map&lt;/a&gt;&amp;lt;I, F&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#932-939&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d090ed289c0dad0347aa7aeeaaebb9b20ac71d84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.try_fold&quot;&gt;try_fold&lt;/a&gt;&amp;lt;B, F, R&amp;gt;(&amp;amp;mut self, init: B, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(B, &amp;lt;&lt;a href=&quot;struct.cloned&quot;&gt;Cloned&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = B&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.cloned&quot;&gt;Cloned&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#417-424&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e850c68b3deb083c4018b5abf0ef9a9ae89247dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.try_fold&quot;&gt;try_fold&lt;/a&gt;&amp;lt;B, F, R&amp;gt;(&amp;amp;mut self, init: B, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(B, &amp;lt;&lt;a href=&quot;struct.copied&quot;&gt;Copied&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = B&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.copied&quot;&gt;Copied&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#270-277&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d41a4980d24575bb58b84bcbd7b308104fa1092" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.try_fold&quot;&gt;try_fold&lt;/a&gt;&amp;lt;B, F, R&amp;gt;(&amp;amp;mut self, init: B, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(B, &amp;lt;&lt;a href=&quot;struct.peekable&quot;&gt;Peekable&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = B&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.peekable&quot;&gt;Peekable&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1656-1668&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0f60692749ad896d0ee1e3433ff57116ada7e0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#method.try_fold&quot;&gt;try_fold&lt;/a&gt;&amp;lt;B, F, R&amp;gt;(&amp;amp;mut self, init: B, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(B, &amp;lt;&lt;a href=&quot;struct.rev&quot;&gt;Rev&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = B&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.rev&quot;&gt;Rev&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#137-144&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f971f85dcf1f6bc5d7d8aa070e2620ab76768299" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;&lt;a href=&quot;struct.fromfn&quot;&gt;FromFn&lt;/a&gt;&amp;lt;F&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/sources.rs.html#550-552&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80cb6ec079b98761cbba519c684468c0d1537ff4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;&lt;a href=&quot;struct.fuse&quot;&gt;Fuse&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/fuse.rs.html#67-69&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c20392feb56f0a15d3a3be49f386419febf4c70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;&lt;a href=&quot;struct.stepby&quot;&gt;StepBy&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#628-635&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa656c99ea9c15c3ee49104b832ffeb98deb7d8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;&lt;a href=&quot;struct.successors&quot;&gt;Successors&lt;/a&gt;&amp;lt;T, F&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/sources.rs.html#605-609&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="470cf2e4d6923be3e3c4f31c007355466182ae38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;&lt;a href=&quot;struct.zip&quot;&gt;Zip&lt;/a&gt;&amp;lt;A, B&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/zip.rs.html#47-49&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6265072115e1b12c95d34c1a9cb5fef4543a6baa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;A as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/chain.rs.html#77-82&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805afcc2c183e67b97f5ceb350b51a057399a1a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;I as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1089-1091&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b6fb7cb9e433d1fa5e7d15ae2d40001f76da43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;I as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#119-121&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e0370e675524fecfa97536cdc07b18177c3f6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;I as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1602-1607&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e91f5062597a639ea030cb918af900bf72c45494" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;I as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1905-1923&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20d917672dad94865bfeb63622916e9caf2845bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;I as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2027-2039&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d34c818e9fb7a3a22e7a085d1ed6ee47405f7135" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;I as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2252-2260&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85b2fc270d0ad35ff4509febed4f191ba04d924f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;I as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2448-2455&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44157d516b65f56cc799f928a77805051d918fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;I as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2802-2805&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4feeb4f0d151a661b7283e84938607a4d4d26e91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;I as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#541-549&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0be562bc129d5dc43ba22cc97c7b0e3b527647ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;U as &lt;a href=&quot;trait.intoiterator&quot;&gt;IntoIterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.intoiterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/flatten.rs.html#51-53&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649db11f6b944205e179d945d01d268c644a4c40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;lt;U as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/flatten.rs.html#169-171&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5756773657a28082175e60b5a85404d7607ab7d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &amp;lt;I as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1373-1379&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd8cf9297c6edd82bd9452c4932cee72fb0f40ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;A&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/sources.rs.html#112-114&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55fdfd1e48a51c1436250df30f87b8254e92546" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;A&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/sources.rs.html#20-22&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6eac695d28a2e08b58702742c90bba6dedfe066" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;A&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/sources.rs.html#395-398&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d8e14029778d4cdf8f865ca5eeac84aa031c292" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;B&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1244-1246&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07a47285c38f354ebba52bcd38d8678773db6c7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;B&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2162-2165&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd52ddfc071d5004508640538e0037ebc892b7e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;B&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2662-2665&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41862e5c7bb95d764208f11abe64661b5046194d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;B&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#923-925&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38a597973fa18ccbdacd8a3ab3cf1ed09c3f0d16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#262-264&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cba39dd3b3e8f93e46c44c35d0cb24ef4673654" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#409-411&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f81db1337fce8b3b47d4cab1a4309f59b9cd868d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/sources.rs.html#214-216&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e536c5602a4819cdc10be3c2bb83e92651fcce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/sources.rs.html#294-296&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f62cd7e5f9dd334f4749fc598facbab4319253" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.ord#tymethod.cmp&quot;&gt;cmp&lt;/a&gt;(&amp;amp;self, other: &amp;amp;&lt;a href=&quot;enum.ordering&quot;&gt;Ordering&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;enum.ordering&quot;&gt;Ordering&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/cmp.rs.html#681-683&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67f8972bf97fce08eea36aab5e383a7c554fdd50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.ord#tymethod.cmp&quot;&gt;cmp&lt;/a&gt;(&amp;amp;self, other: &amp;amp;&lt;a href=&quot;struct.reverse&quot;&gt;Reverse&lt;/a&gt;&amp;lt;T&amp;gt;) -&amp;gt; &lt;a href=&quot;enum.ordering&quot;&gt;Ordering&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/cmp.rs.html#494-496&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43efcdcba5de593a92411c7271d532d8a63f411f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.partialeq#method.ne&quot;&gt;ne&lt;/a&gt;(&amp;amp;self, other: &amp;amp;&lt;a href=&quot;struct.reverse&quot;&gt;Reverse&lt;/a&gt;&amp;lt;T&amp;gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/cmp.rs.html#462&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cabaf35f6164b8f742d1b1deac9faa8674d67c82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.partialeq#tymethod.eq&quot;&gt;eq&lt;/a&gt;(&amp;amp;self, other: &amp;amp;&lt;a href=&quot;enum.ordering&quot;&gt;Ordering&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/cmp.rs.html#313&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b2bf24a435647f2c53949b831dfe6a08662ebcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.partialeq#tymethod.eq&quot;&gt;eq&lt;/a&gt;(&amp;amp;self, other: &amp;amp;&lt;a href=&quot;struct.reverse&quot;&gt;Reverse&lt;/a&gt;&amp;lt;T&amp;gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/cmp.rs.html#462&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b119c0c7224110a68b4d262d12f662406cabc00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.partialord#method.ge&quot;&gt;ge&lt;/a&gt;(&amp;amp;self, other: &amp;amp;&lt;a href=&quot;struct.reverse&quot;&gt;Reverse&lt;/a&gt;&amp;lt;T&amp;gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/cmp.rs.html#486-488&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85f72defb675848626895d63eaef015e5e3d1929" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.partialord#method.gt&quot;&gt;gt&lt;/a&gt;(&amp;amp;self, other: &amp;amp;&lt;a href=&quot;struct.reverse&quot;&gt;Reverse&lt;/a&gt;&amp;lt;T&amp;gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/cmp.rs.html#482-484&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90224148e20d61045eb05cc0bdfa9f1de1c0ab05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.partialord#method.le&quot;&gt;le&lt;/a&gt;(&amp;amp;self, other: &amp;amp;&lt;a href=&quot;struct.reverse&quot;&gt;Reverse&lt;/a&gt;&amp;lt;T&amp;gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/cmp.rs.html#478-480&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5937683e256b6ffe3c6ed263d4f8183da6ba3e40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.partialord#method.lt&quot;&gt;lt&lt;/a&gt;(&amp;amp;self, other: &amp;amp;&lt;a href=&quot;struct.reverse&quot;&gt;Reverse&lt;/a&gt;&amp;lt;T&amp;gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/cmp.rs.html#474-476&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c777dd4da758ca865bdf286cbb5a938a661463ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.partialord#tymethod.partial_cmp&quot;&gt;partial_cmp&lt;/a&gt;(&amp;amp;self, other: &amp;amp;&lt;a href=&quot;enum.ordering&quot;&gt;Ordering&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.ordering&quot;&gt;Ordering&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/cmp.rs.html#689-691&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77d4d9dc51ee732914d8bec3527a25c697a555e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.partialord#tymethod.partial_cmp&quot;&gt;partial_cmp&lt;/a&gt;(&amp;amp;self, other: &amp;amp;&lt;a href=&quot;struct.reverse&quot;&gt;Reverse&lt;/a&gt;&amp;lt;T&amp;gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.ordering&quot;&gt;Ordering&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/cmp.rs.html#469-471&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b3b7c3e9b4c5f5ad1a43497cb155da82c186e49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.rangebounds#tymethod.end_bound&quot;&gt;end_bound&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;enum.bound&quot;&gt;Bound&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/range.rs.html#1003-1005&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a78a76e6cab6ab20c3a2a775a153e15e0ccfb97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.rangebounds#tymethod.end_bound&quot;&gt;end_bound&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;enum.bound&quot;&gt;Bound&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/range.rs.html#867-869&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a1520a54c6805f87da2b2e2c3a0db0c78554ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.rangebounds#tymethod.end_bound&quot;&gt;end_bound&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;enum.bound&quot;&gt;Bound&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/range.rs.html#877-879&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd04a9349e8bdefe212d13c5cf180406dfa64db3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.rangebounds#tymethod.end_bound&quot;&gt;end_bound&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;enum.bound&quot;&gt;Bound&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/range.rs.html#887-889&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a962ef1a9c0721c07ce856e7adfd5c94dc13885" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.rangebounds#tymethod.end_bound&quot;&gt;end_bound&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;enum.bound&quot;&gt;Bound&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/range.rs.html#897-899&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="821e31702a5c18c5dcf5ebaa49492a54daee46d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.rangebounds#tymethod.end_bound&quot;&gt;end_bound&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;enum.bound&quot;&gt;Bound&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/range.rs.html#907-915&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="502d5e1862498492fefbcd13128e9b051cefc4df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.rangebounds#tymethod.end_bound&quot;&gt;end_bound&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;enum.bound&quot;&gt;Bound&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/range.rs.html#923-925&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc3ac0eee1dbf08d07fce0e24fbd5b294c0848ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.rangebounds#tymethod.end_bound&quot;&gt;end_bound&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;enum.bound&quot;&gt;Bound&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/range.rs.html#963-965&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0842dfc33438657a702d490eab61d9c38921434b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.rangebounds#tymethod.end_bound&quot;&gt;end_bound&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;enum.bound&quot;&gt;Bound&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/range.rs.html#973-975&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b46547124105953f115b6fbbce92c744e13fc795" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.rangebounds#tymethod.end_bound&quot;&gt;end_bound&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;enum.bound&quot;&gt;Bound&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/range.rs.html#983-985&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f36d3e688a90a2e359a90a412aaa9c1a9e6ecf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.rangebounds#tymethod.end_bound&quot;&gt;end_bound&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;enum.bound&quot;&gt;Bound&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/range.rs.html#993-995&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e531301264b417d10ca219321d99842799942d2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.rangebounds#tymethod.start_bound&quot;&gt;start_bound&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;enum.bound&quot;&gt;Bound&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/range.rs.html#1000-1002&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f09035201f5e2e81678f5563f57d221290afd3b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.rangebounds#tymethod.start_bound&quot;&gt;start_bound&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;enum.bound&quot;&gt;Bound&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/range.rs.html#864-866&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d9e30e24804efee705f460ed08e098a0b860a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.rangebounds#tymethod.start_bound&quot;&gt;start_bound&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;enum.bound&quot;&gt;Bound&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/range.rs.html#874-876&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="835608c2aea5235c415e0cec52048a38cc4db71f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.rangebounds#tymethod.start_bound&quot;&gt;start_bound&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;enum.bound&quot;&gt;Bound&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/range.rs.html#884-886&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ef02342da7efc811cd1ae5a423c895d39207e49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.rangebounds#tymethod.start_bound&quot;&gt;start_bound&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;enum.bound&quot;&gt;Bound&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/range.rs.html#894-896&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79bf2e5a4ada99d4466012b01a64d828ad920418" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.rangebounds#tymethod.start_bound&quot;&gt;start_bound&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;enum.bound&quot;&gt;Bound&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/range.rs.html#904-906&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dea84cabd7c88ccabaab9fc8fbce785a7a89da8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.rangebounds#tymethod.start_bound&quot;&gt;start_bound&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;enum.bound&quot;&gt;Bound&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/range.rs.html#920-922&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="262bfed607c858935100bf97706d2fd83dd59b2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.rangebounds#tymethod.start_bound&quot;&gt;start_bound&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;enum.bound&quot;&gt;Bound&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/range.rs.html#960-962&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c5d8ff3db399b57ff68fc1aa800ea5d761689c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.rangebounds#tymethod.start_bound&quot;&gt;start_bound&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;enum.bound&quot;&gt;Bound&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/range.rs.html#970-972&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1452390a62803598a90107d7ca1c9e2a7294efab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.rangebounds#tymethod.start_bound&quot;&gt;start_bound&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;enum.bound&quot;&gt;Bound&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/range.rs.html#980-982&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="920e433b395712cc1126b71b8039c9f62b1dde63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.rangebounds#tymethod.start_bound&quot;&gt;start_bound&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;enum.bound&quot;&gt;Bound&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/range.rs.html#990-992&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef769ef9152341656fc4ee62f4c67c02a7f75d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.reversesearcher#method.next_match_back&quot;&gt;next_match_back&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;a href=&quot;../../primitive.tuple&quot;&gt;)&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#1085-1112&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f77cacb436cd16413eb904fa8ed71ae7f3661c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.reversesearcher#method.next_match_back&quot;&gt;next_match_back&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;a href=&quot;../../primitive.tuple&quot;&gt;)&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#470-517&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="725172e81a25ace0a93c1e812d1ed7167a8fa842" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.reversesearcher#method.next_match_back&quot;&gt;next_match_back&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;a href=&quot;../../primitive.tuple&quot;&gt;)&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#770&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d94f60b657ac29a95f44d86274d0c9953308567" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.reversesearcher#method.next_match_back&quot;&gt;next_match_back&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;a href=&quot;../../primitive.tuple&quot;&gt;)&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#819&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1f8ddb10b6ee03ca3c171242883be870d535eec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.reversesearcher#method.next_reject_back&quot;&gt;next_reject_back&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;a href=&quot;../../primitive.tuple&quot;&gt;)&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#770&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7186e7e9cad3abab0387657c335929cde56e4c14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.reversesearcher#method.next_reject_back&quot;&gt;next_reject_back&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;a href=&quot;../../primitive.tuple&quot;&gt;)&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#819&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4792a5e817fb76cf4730c1d80482cf64ff28a7bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.reversesearcher#tymethod.next_back&quot;&gt;next_back&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;enum.searchstep&quot;&gt;SearchStep&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#1045-1082&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d13fe98c5f7d4205567d3bc94b63d33805a5d00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.reversesearcher#tymethod.next_back&quot;&gt;next_back&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;enum.searchstep&quot;&gt;SearchStep&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#450-468&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a25dacef686216405355696f82b5c553b25dec3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.reversesearcher#tymethod.next_back&quot;&gt;next_back&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;enum.searchstep&quot;&gt;SearchStep&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#770&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f77a80bca6bcc9fbec7f131c73196ac76eb4d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.reversesearcher#tymethod.next_back&quot;&gt;next_back&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;enum.searchstep&quot;&gt;SearchStep&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#819&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d263be588f3376257ee84480ef688dd5830837" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.searcher#method.next_match&quot;&gt;next_match&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;a href=&quot;../../primitive.tuple&quot;&gt;)&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#1012-1040&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29828e1b392e053ec4eedbebde4c0a3aad217d84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.searcher#method.next_match&quot;&gt;next_match&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;a href=&quot;../../primitive.tuple&quot;&gt;)&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#403-443&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87929d44405f822fbd870b6c3d248bcaad19cd53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.searcher#method.next_match&quot;&gt;next_match&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;a href=&quot;../../primitive.tuple&quot;&gt;)&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#766&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc00a466e20a395b3ac8662be8a4298445298741" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.searcher#method.next_match&quot;&gt;next_match&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;a href=&quot;../../primitive.tuple&quot;&gt;)&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#812&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974bcff02bab08fd0299c970bdf9d67f14b8fffd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.searcher#method.next_reject&quot;&gt;next_reject&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;a href=&quot;../../primitive.tuple&quot;&gt;)&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#766&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ff01cc9ab4e875a49ede79c5b4ddd9afcc1542" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.searcher#method.next_reject&quot;&gt;next_reject&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;a href=&quot;../../primitive.tuple&quot;&gt;)&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#812&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c6afa782fcfc137daa2d22ee2d3c9418845e3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.searcher#tymethod.haystack&quot;&gt;haystack&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;'a &lt;a href=&quot;../../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#372-374&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06904df56acf139995774655df9eca7a775a655a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.searcher#tymethod.haystack&quot;&gt;haystack&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;'a &lt;a href=&quot;../../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#766&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2a3f794729d7b443ca5a1b50c034d4467c4004b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.searcher#tymethod.haystack&quot;&gt;haystack&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;'a &lt;a href=&quot;../../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#812&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb479d6e150b0376ebd68d4a4c1004f8c0726c74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.searcher#tymethod.haystack&quot;&gt;haystack&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;'a &lt;a href=&quot;../../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#961-963&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f828667d476f4434b5fb8d7084a5d0717a61095a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.searcher#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;enum.searchstep&quot;&gt;SearchStep&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#376-401&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4261a8c5acc3d3660872f965cc15e686fd5edca8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.searcher#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;enum.searchstep&quot;&gt;SearchStep&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#766&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c2dcda318e7dcb1bbeb26f708cd0e7479d10aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.searcher#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;enum.searchstep&quot;&gt;SearchStep&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#812&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="772966e0e6e018428bf09d5155dd02f0bd473012" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.searcher#tymethod.next&quot;&gt;next&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;enum.searchstep&quot;&gt;SearchStep&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#966-1009&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f89480fb58ddef791bd1da72c9a36b10a34d6769" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.toowned#method.clone_into&quot;&gt;clone_into&lt;/a&gt;(&amp;amp;self, target: &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;T)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/borrow.rs.html#89-91&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b586685e64b0562f0467ef3bcc9ae44069e9ff5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.toowned#tymethod.to_owned&quot;&gt;to_owned&lt;/a&gt;(&amp;amp;self) -&amp;gt; T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/borrow.rs.html#85-87&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aad2db7f45ba7db2c1b77b9da0c2d9d38c0c7574" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.tostring#tymethod.to_string&quot;&gt;to_string&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2236-2238&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e967de3fe41cbe0890555856ec65915a9f0471b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.try#tymethod.from_error&quot;&gt;from_error&lt;/a&gt;(v: &amp;lt;&lt;a href=&quot;enum.controlflow&quot;&gt;ControlFlow&lt;/a&gt;&amp;lt;B, C&amp;gt; as &lt;a href=&quot;trait.try&quot;&gt;Try&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.try#associatedtype.Error&quot;&gt;Error&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;enum.controlflow&quot;&gt;ControlFlow&lt;/a&gt;&amp;lt;B, C&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/control_flow.rs.html#25-27&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edbaff8be7624ce8a54c15b7d9dc29ef7a9ba1af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.try#tymethod.from_ok&quot;&gt;from_ok&lt;/a&gt;(v: &amp;lt;&lt;a href=&quot;enum.controlflow&quot;&gt;ControlFlow&lt;/a&gt;&amp;lt;B, C&amp;gt; as &lt;a href=&quot;trait.try&quot;&gt;Try&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.try#associatedtype.Ok&quot;&gt;Ok&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;enum.controlflow&quot;&gt;ControlFlow&lt;/a&gt;&amp;lt;B, C&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/control_flow.rs.html#29-31&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8ebc25df0d555607290d1001e4d284642009f72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.try#tymethod.into_result&quot;&gt;into_result&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;lt;&lt;a href=&quot;enum.controlflow&quot;&gt;ControlFlow&lt;/a&gt;&amp;lt;B, C&amp;gt; as &lt;a href=&quot;trait.try&quot;&gt;Try&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.try#associatedtype.Ok&quot;&gt;Ok&lt;/a&gt;, &amp;lt;&lt;a href=&quot;enum.controlflow&quot;&gt;ControlFlow&lt;/a&gt;&amp;lt;B, C&amp;gt; as &lt;a href=&quot;trait.try&quot;&gt;Try&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.try#associatedtype.Error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/control_flow.rs.html#18-23&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df64fdc511b1b26ea39bafa2ee38c99d39d1a0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(value: U) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;T, &amp;lt;T as &lt;a href=&quot;trait.tryfrom&quot;&gt;TryFrom&lt;/a&gt;&amp;lt;U&amp;gt;&amp;gt;::&lt;a href=&quot;trait.tryfrom#associatedtype.Error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert/mod.rs.html#595-597&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7bdeeebeafcd249df8c533736463ba2f5ab154b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.tryinto#tymethod.try_into&quot;&gt;try_into&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;U, &amp;lt;U as &lt;a href=&quot;trait.tryfrom&quot;&gt;TryFrom&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;::&lt;a href=&quot;trait.tryfrom#associatedtype.Error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert/mod.rs.html#581-583&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92b3e189bc89bc081dcfdd8cd62c74dd376bc41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.write#method.write_char&quot;&gt;write_char&lt;/a&gt;(&amp;amp;mut self, c: &lt;a href=&quot;../primitive.char&quot;&gt;char&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/fmt/mod.rs.html#1959-1961&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd2efbc532ce9fee264db7b04fc601c7d097ff11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.write#method.write_fmt&quot;&gt;write_fmt&lt;/a&gt;(&amp;amp;mut self, args: &lt;a href=&quot;struct.arguments&quot;&gt;Arguments&lt;/a&gt;&amp;lt;'_&amp;gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/fmt/mod.rs.html#1963-1965&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67bc23a6ee0038a9bc59fe0ccbce5b911920adc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub fn &lt;a href=&quot;trait.write#tymethod.write_str&quot;&gt;write_str&lt;/a&gt;(&amp;amp;mut self, s: &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/fmt/mod.rs.html#1955-1957&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fb8c4c9becd12d137af4325c4236f808144eb9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.__iterator_get_unchecked&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&amp;amp;mut self, idx: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/iter.rs.html#279-283&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5a03eb8d18bed1032c41a00b6cd704f30f80f77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.__iterator_get_unchecked-1&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&amp;amp;mut self, idx: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; T where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.cloned&quot;&gt;Cloned&lt;/a&gt;&amp;lt;I&amp;gt;: TrustedRandomAccess,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#433-440&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d39622b88aa0b0b4b103e5171661fecd7171a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.__iterator_get_unchecked-2&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&amp;amp;mut self, idx: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; T where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.copied&quot;&gt;Copied&lt;/a&gt;&amp;lt;I&amp;gt;: TrustedRandomAccess,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#298-305&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b83b7d83d565b5d364a10420c27adc7017c9530" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.__iterator_get_unchecked-3&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;amp;'a &lt;a href=&quot;../primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.array&quot;&gt;; N]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/iter.rs.html#2156-2160&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1312d1705bf7e8bccbbe6c91202673a7fb16b4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.__iterator_get_unchecked-4&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;amp;'a mut &lt;a href=&quot;../primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.array&quot;&gt;; N]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/iter.rs.html#2270-2274&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c147b80a4e95e94dac639745d9aa246c9b89a88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.__iterator_get_unchecked-5&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;idx: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;struct.zip&quot;&gt;Zip&lt;/a&gt;&amp;lt;A, B&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.zip&quot;&gt;Zip&lt;/a&gt;&amp;lt;A, B&amp;gt;: TrustedRandomAccess,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/zip.rs.html#62-69&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ee7ca25352294228257af1790c81a20a91413d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.__iterator_get_unchecked-6&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&amp;amp;mut self, idx: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; B where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.map&quot;&gt;Map&lt;/a&gt;&amp;lt;I, F&amp;gt;: TrustedRandomAccess,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#948-955&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd662faae1bfd5b49d0e3fe3e67768262852406e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.__iterator_get_unchecked-7&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;idx: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;struct.enumerate&quot;&gt;Enumerate&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.enumerate&quot;&gt;Enumerate&lt;/a&gt;&amp;lt;I&amp;gt;: TrustedRandomAccess,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1444-1452&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff9fb81902602234e45c6f2fc4698dd494c442e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.__iterator_get_unchecked-8&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;idx: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;struct.fuse&quot;&gt;Fuse&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.fuse&quot;&gt;Fuse&lt;/a&gt;&amp;lt;I&amp;gt;: TrustedRandomAccess,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/fuse.rs.html#118-129&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96cc38ff1cd578852163e65cb7986f7fd6016472" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.__iterator_get_unchecked-9&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;i: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../vec/struct.intoiter&quot;&gt;IntoIter&lt;/a&gt;&amp;lt;T&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;../vec/struct.intoiter&quot;&gt;IntoIter&lt;/a&gt;&amp;lt;T&amp;gt;: TrustedRandomAccess,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/vec.rs.html#2939-2954&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e74cd75d2e2551fae8844543cc2e8407def8e24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.align_to&quot;&gt;align_to&lt;/a&gt;&amp;lt;U&amp;gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;, &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[U]&lt;/a&gt;, &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#2845-2872&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c87c168b8c40b46ddfcb83d5a4d86f2e0c5fa2e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.align_to&quot;&gt;align_to&lt;/a&gt;&amp;lt;U&amp;gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;, &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[U]&lt;/a&gt;, &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#2953-2980&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="935946179af5ee8e935da24bfc1230984104977b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.align_to&quot;&gt;align_to&lt;/a&gt;&amp;lt;U&amp;gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;, &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[U]&lt;/a&gt;, &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#2845-2872&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b56757f47ae383b8a8aa354f4776650b0cba0fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.align_to&quot;&gt;align_to&lt;/a&gt;&amp;lt;U&amp;gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;, &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[U]&lt;/a&gt;, &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#2953-2980&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb7c3ce09204ea54dc2bd0effdd17dec58f64dee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.align_to_mut&quot;&gt;align_to_mut&lt;/a&gt;&amp;lt;U&amp;gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;, &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;mut [U]&lt;/a&gt;, &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#2905-2940&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fc77ff2c493c72d0e7f902b8ec1f740ca4b78be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.align_to_mut&quot;&gt;align_to_mut&lt;/a&gt;&amp;lt;U&amp;gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;, &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;mut [U]&lt;/a&gt;, &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#3013-3048&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e94a44d2e21574bea50203d4020693ec6a165dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.align_to_mut&quot;&gt;align_to_mut&lt;/a&gt;&amp;lt;U&amp;gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;, &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;mut [U]&lt;/a&gt;, &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#2905-2940&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="592117e2d0f427956375a89a51a99e2bc53145a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.align_to_mut&quot;&gt;align_to_mut&lt;/a&gt;&amp;lt;U&amp;gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;, &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;mut [U]&lt;/a&gt;, &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#3013-3048&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1871da906cb99cc17f90af126b13367ba1b34d07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.arg&quot;&gt;arg&lt;/a&gt;&amp;lt;T&amp;gt;(&amp;amp;mut self) -&amp;gt; T where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;T: VaArgSafe,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ffi.rs.html#333-336&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8aadec00f0ad0b0917a3ae63b7edbd70b2d7d90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.arg&quot;&gt;arg&lt;/a&gt;&amp;lt;T&amp;gt;(&amp;amp;mut self) -&amp;gt; T where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;T: VaArgSafe,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ffi.rs.html#337-340&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca837e14713c3c607492bfb024ce472e49d41ea2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_bytes_mut&quot;&gt;as_bytes_mut&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;mut [&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#266-272&quot;&gt;[src]&lt;/a&gt;1.20.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a273c040a3aa64dddefbda714cf4da2a354d7b50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_bytes_mut&quot;&gt;as_bytes_mut&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;mut [&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#267-273&quot;&gt;[src]&lt;/a&gt;1.20.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc0f1f4f88cbb57f67aa17b8d7da44a633fd7fed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_bytes_mut&quot;&gt;as_bytes_mut&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;mut [&lt;/a&gt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#266-272&quot;&gt;[src]&lt;/a&gt;1.20.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2519c191d458613b1e43690189429382531bb0d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_bytes_mut&quot;&gt;as_bytes_mut&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;mut [&lt;/a&gt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#267-273&quot;&gt;[src]&lt;/a&gt;1.20.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab0a54730f77a7918cc7f32822ebae12a9eede7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_inner&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/zip.rs.html#346-349&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b89e555ee6b07bc407fef87cf2d6d1b01f8e669" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_inner-1&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1324-1327&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be2b82aa48503bf460762401e505b37f5f4943a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_inner-10&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1180-1183&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b31cf9760c6316ee20ff494eab912f5236383c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_inner-11&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1979-1982&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c0573ce775bf3222309bdbd5a976fa132e99e3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_inner-12&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2114-2117&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22bb8920523f5c48df26e3e0ee706ace0960c6a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_inner-13&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2720-2723&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="845b2ff319b5df25e63348e1a9e306265f0de3b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_inner-14&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &amp;amp;mut &amp;lt;&lt;a href=&quot;../collections/binary_heap/struct.intoiter&quot;&gt;IntoIter&lt;/a&gt;&amp;lt;T&amp;gt; as &lt;a href=&quot;trait.sourceiter&quot;&gt;SourceIter&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.sourceiter#associatedtype.Source&quot;&gt;Source&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/binary_heap.rs.html#1186-1188&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44b0b36ab81c32da9380d49ae0c7b19dac25f44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_inner-15&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &amp;amp;mut &amp;lt;&lt;a href=&quot;../vec/struct.intoiter&quot;&gt;IntoIter&lt;/a&gt;&amp;lt;T&amp;gt; as &lt;a href=&quot;trait.sourceiter&quot;&gt;SourceIter&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.sourceiter#associatedtype.Source&quot;&gt;Source&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/vec.rs.html#3039-3041&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37bcba94847287e48e2f45bf91ffe1924b0bce87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_inner-2&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1031-1034&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a284c006773a770fcb2513f6e11d1bba76307abb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_inner-3&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2212-2215&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68108a386a2071c654572209f61c753d37caa11b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_inner-4&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1562-1565&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a4fb298c687e0e8f27539062b25d705ac98f516" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_inner-5&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/fuse.rs.html#529-536&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b7bfa6ef2e960e0e34318637bede699501be66e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_inner-6&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1860-1863&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e84126dce7b8db045cde1d9d9a6d999d36bb9c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_inner-7&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2411-2414&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20916e5bc05ab25869516fb8beeeeecd7af75c58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_inner-8&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2538-2541&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="354630d1e23f8c58c612b08657b436eb2bdf3b52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_inner-9&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2887-2890&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f8961b545940c8e90d1123bc3e266a260cc7a15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_mut&quot;&gt;as_mut&lt;/a&gt;&amp;lt;'a&amp;gt;(self) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.reference&quot;&gt;&amp;amp;'a mut &lt;/a&gt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#355-359&quot;&gt;[src]&lt;/a&gt;1.9.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c6a917bb02b3666e66e221b5661d3263c15d956" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_mut&quot;&gt;as_mut&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/non_null.rs.html#245-249&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f69290206dcb2b52a9d32afcfa1c8f38d693ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_mut_vec&quot;&gt;as_mut_vec&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../vec/struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#1370-1372&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d4be0124551976d21f96a0086f058f41741331" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_mut_vec&quot;&gt;as_mut_vec&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../vec/struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#1371-1373&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27858e6d7869bb5f7d89d41a82b9e8344cf60dad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_ref&quot;&gt;as_ref&lt;/a&gt;&amp;lt;'a&amp;gt;(self) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.reference&quot;&gt;&amp;amp;'a &lt;/a&gt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/const_ptr.rs.html#109-113&quot;&gt;[src]&lt;/a&gt;1.9.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55895e88698fb192570e0a7c8a6bb31d79a1f34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_ref&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/non_null.rs.html#209-213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1068883e497408ec405d10986b3c67c311bc8a68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_ref-1&quot;&gt;as_ref&lt;/a&gt;&amp;lt;'a&amp;gt;(self) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.reference&quot;&gt;&amp;amp;'a &lt;/a&gt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#111-115&quot;&gt;[src]&lt;/a&gt;1.9.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b9137e23c12f7eaeb0c1e53f6e0c42df30d36cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_uninit_mut&quot;&gt;as_uninit_mut&lt;/a&gt;&amp;lt;'a&amp;gt;(self) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;amp;'a mut &lt;a href=&quot;mem/union.maybeuninit&quot;&gt;MaybeUninit&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#389-396&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7699080ef1c98ed98ea90da54c76ac62602704a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_uninit_mut&quot;&gt;as_uninit_mut&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../mem/union.maybeuninit&quot;&gt;MaybeUninit&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/non_null.rs.html#138-142&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a44677647a9913cd2a60dd88f536742ae3214e07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_uninit_ref&quot;&gt;as_uninit_ref&lt;/a&gt;&amp;lt;'a&amp;gt;(self) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;amp;'a &lt;a href=&quot;mem/union.maybeuninit&quot;&gt;MaybeUninit&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/const_ptr.rs.html#156-163&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c1f180f3e1a24550fee05f1e3cb42777b3ee9d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_uninit_ref&quot;&gt;as_uninit_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../mem/union.maybeuninit&quot;&gt;MaybeUninit&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/non_null.rs.html#106-110&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e258eefcc9b5c44eb8883e5794064a830bde7996" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_uninit_ref-1&quot;&gt;as_uninit_ref&lt;/a&gt;&amp;lt;'a&amp;gt;(self) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;amp;'a &lt;a href=&quot;mem/union.maybeuninit&quot;&gt;MaybeUninit&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#161-168&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20906013a0baa7dec8200645764c6673db4b72fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_uninit_slice&quot;&gt;as_uninit_slice&lt;/a&gt;&amp;lt;'a&amp;gt;(self) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;'a [&lt;/a&gt;&lt;a href=&quot;mem/union.maybeuninit&quot;&gt;MaybeUninit&lt;/a&gt;&amp;lt;T&amp;gt;&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/const_ptr.rs.html#980-987&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a406d91490e80d2d5bb8ab95a0c445469ec934ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_uninit_slice&quot;&gt;as_uninit_slice&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../mem/union.maybeuninit&quot;&gt;MaybeUninit&lt;/a&gt;&amp;lt;T&amp;gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/non_null.rs.html#393-396&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25fee16b2d193963d946be431846d9e49fd1629d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_uninit_slice-1&quot;&gt;as_uninit_slice&lt;/a&gt;&amp;lt;'a&amp;gt;(self) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;'a [&lt;/a&gt;&lt;a href=&quot;mem/union.maybeuninit&quot;&gt;MaybeUninit&lt;/a&gt;&amp;lt;T&amp;gt;&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#1240-1247&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a6abea1753c458df2fe6f0a3d0cc3be42dad66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_uninit_slice_mut&quot;&gt;as_uninit_slice_mut&lt;/a&gt;&amp;lt;'a&amp;gt;(self) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;'a mut [&lt;/a&gt;&lt;a href=&quot;mem/union.maybeuninit&quot;&gt;MaybeUninit&lt;/a&gt;&amp;lt;T&amp;gt;&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#1292-1299&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a92b1bc75131b2fec6014038cd5fac02a66f0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.as_uninit_slice_mut&quot;&gt;as_uninit_slice_mut&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;mut [&lt;/a&gt;&lt;a href=&quot;../mem/union.maybeuninit&quot;&gt;MaybeUninit&lt;/a&gt;&amp;lt;T&amp;gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/non_null.rs.html#455-458&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0507b0bfda77610db820e1d2d8adb3ecc84a68c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.assume_init&quot;&gt;assume_init&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;struct.arc&quot;&gt;Arc&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/sync.rs.html#603-605&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d964470979d2f1c3b6a3c9a0164450bc37eef97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.assume_init&quot;&gt;assume_init&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;struct.arc&quot;&gt;Arc&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/sync.rs.html#619-621&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e15723ceca9404713fa4211181b2979fa75d7d55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.assume_init&quot;&gt;assume_init&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#330-332&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4bfbd54b75c41fe93f28b955432cc9643cf15b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.assume_init&quot;&gt;assume_init&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;T, A&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#473-476&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed67c419d544dea252e06fd144bbcab8b5f2ac1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.assume_init&quot;&gt;assume_init&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;struct.rc&quot;&gt;Rc&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/rc.rs.html#588-590&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed691ccdab6b39d1ff9d432351595ecdc158abe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.assume_init&quot;&gt;assume_init&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;struct.rc&quot;&gt;Rc&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/rc.rs.html#602-604&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b29136fe383c0c43df96092293106dcc01a41e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.assume_init&quot;&gt;assume_init&lt;/a&gt;(self) -&amp;gt; T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/mem/maybe_uninit.rs.html#494-501&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d53667c881d314b839a9306a732c1ac59a161a56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.assume_init&quot;&gt;assume_init&lt;/a&gt;(self) -&amp;gt; T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/mem/maybe_uninit.rs.html#508-515&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0194a477d749a537798daa05188d4d48bc5c843" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.assume_init-1&quot;&gt;assume_init&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;struct.arc&quot;&gt;Arc&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/sync.rs.html#644-646&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a9751ab2d4d1f92bc72bf8d333bb3bb3a4552f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.assume_init-1&quot;&gt;assume_init&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;struct.arc&quot;&gt;Arc&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/sync.rs.html#660-662&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de4c309ab1c3c5fa4ee44c4d4290031c8d8282e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.assume_init-1&quot;&gt;assume_init&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#368-370&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d2e4f00386e1f4e5a6a9ad38951be6f3197ff4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.assume_init-1&quot;&gt;assume_init&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;, A&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#512-515&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f639a360e529a3b772cd60edf40efd888592f13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.assume_init-1&quot;&gt;assume_init&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;struct.rc&quot;&gt;Rc&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/rc.rs.html#629-631&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="453fec831ac853076648ccd66e74055aec34d0c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.assume_init-1&quot;&gt;assume_init&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;struct.rc&quot;&gt;Rc&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/rc.rs.html#643-645&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3df5a1552d631633a0721a47006d338283c45a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.assume_init_drop&quot;&gt;assume_init_drop&lt;/a&gt;(&amp;amp;mut self)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/mem/maybe_uninit.rs.html#592-597&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="489902edf3102172816d3d821140223cd798bc4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.assume_init_drop&quot;&gt;assume_init_drop&lt;/a&gt;(&amp;amp;mut self)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/mem/maybe_uninit.rs.html#606-611&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab46deb449a7bd2785d1bd66688d7eef53013582" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.assume_init_mut&quot;&gt;assume_init_mut&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/mem/maybe_uninit.rs.html#778-785&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fde5d98cb768b3dc1bdafa2084207a985ae063ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.assume_init_mut&quot;&gt;assume_init_mut&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/mem/maybe_uninit.rs.html#792-799&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f13ca002a0cd81511aea3bc868e42654ffa6c5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.assume_init_read&quot;&gt;assume_init_read&lt;/a&gt;(&amp;amp;self) -&amp;gt; T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/mem/maybe_uninit.rs.html#562-569&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d483353be40ef7a611628ed9ca6d105fbc5d4225" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.assume_init_read&quot;&gt;assume_init_read&lt;/a&gt;(&amp;amp;self) -&amp;gt; T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/mem/maybe_uninit.rs.html#576-583&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2754f86e41c2c0c1457bd142e1d8d8463259d03a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.assume_init_ref&quot;&gt;assume_init_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/mem/maybe_uninit.rs.html#656-663&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8289ef333bdbc5060daed816498ca480fe3ac0a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.assume_init_ref&quot;&gt;assume_init_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/mem/maybe_uninit.rs.html#670-677&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ddec007ae5e428f9bb10a1b4bf7ae2be9c9362" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.backward_unchecked-1&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.char&quot;&gt;char&lt;/a&gt;, count: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.char&quot;&gt;char&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#469-482&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7521ef718d8ff34f80fceecd7c11175370f651aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.backward_unchecked-10&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1e4d6217a9e7ec82d8df9957575e72d92f61d4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.backward_unchecked-11&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55439ddebb204e97d73ee7f5eb9de25607aca61b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.backward_unchecked-12&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d295f0fdec83cdfe86b5b12305708ae5d98a76fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.backward_unchecked-13&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="854673a6e6dcb561f8a2d3d488ac092a7f2e1746" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.backward_unchecked-2&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff44607c97e1a38d1343cb84dbd1df25d0a3ae57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.backward_unchecked-3&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2aaac5eda6c9ebbe68eb84f3e9721c592b36677" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.backward_unchecked-4&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80978e148e02be3138d978b98d3027b7c7744272" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.backward_unchecked-5&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9123a45f7c3f53ba8fbcbfce82a9780ace527684" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.backward_unchecked-6&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c54d2bee4eb63c14addc08eb76e21fa15220ff29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.backward_unchecked-7&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39bd25f66ad1b44757b4f546ceb09bde1445c44b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.backward_unchecked-8&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30376f27a9992d96f9ec7e138d73bb36d6b0934a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.backward_unchecked-9&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee53537a8e0e8827d9ed433e1e0ba58ce1fb0b43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.copy_from&quot;&gt;copy_from&lt;/a&gt;(self, src: &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#928-934&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6dfb4c088bda85375f044c383e7f6f175c7f73e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.copy_from_nonoverlapping&quot;&gt;copy_from_nonoverlapping&lt;/a&gt;(self, src: &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#946-952&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a183ca03e4343f3f45331215c4b901514609f5ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.copy_to&quot;&gt;copy_to&lt;/a&gt;(self, dest: &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/const_ptr.rs.html#785-791&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93bcd9d0e9b8a8d3eec54d640d328e56c8f9a52e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.copy_to-1&quot;&gt;copy_to&lt;/a&gt;(self, dest: &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#892-898&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ae47facad2f9a0771cc615d148725c7f8eb4c3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.copy_to_nonoverlapping&quot;&gt;copy_to_nonoverlapping&lt;/a&gt;(self, dest: &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/const_ptr.rs.html#803-809&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d0db45c4a951164dfefcc9460290dbca305b6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.copy_to_nonoverlapping-1&quot;&gt;copy_to_nonoverlapping&lt;/a&gt;(self, dest: &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#910-916&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d16a47a9377be797e2cb4f4f8cba7e525ef186f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.dealloc&quot;&gt;dealloc&lt;/a&gt;(&amp;amp;self, ptr: &lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;, layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/alloc.rs.html#233-239&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d512ef0eec7159b0ac7a6e5f95b67babc8b4413" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.dealloc-2&quot;&gt;dealloc&lt;/a&gt;(&amp;amp;self, ptr: &lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;, layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/alloc/mod.rs.html#355-358&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1075549ba23645fbb2055a610341521d0e928f64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.decr_strong_count&quot;&gt;decr_strong_count&lt;/a&gt;(ptr: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const T&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/sync.rs.html#915-917&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b0a9c950f941e0d973ec0ff7bf8da34e46d02b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.decr_strong_count&quot;&gt;decr_strong_count&lt;/a&gt;(ptr: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const T&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/sync.rs.html#932-934&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdf28fc731b733b51f3f100670e69e8f1162232f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.drop&quot;&gt;drop&lt;/a&gt;(slot: &amp;amp;mut &lt;a href=&quot;struct.manuallydrop&quot;&gt;ManuallyDrop&lt;/a&gt;&amp;lt;T&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/mem/manually_drop.rs.html#139-144&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="473ea4ea4db4046aa00dff9256fa6d3c9ac59195" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.drop_in_place&quot;&gt;drop_in_place&lt;/a&gt;(self)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#961-964&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b521e9e9433797a229600ea06ac1950c0204726" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.for_value_raw&quot;&gt;for_value_raw&lt;/a&gt;&amp;lt;T&amp;gt;(t: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const T&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;T: ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/alloc/layout.rs.html#165-171&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="572c68fb4b8fe99232f1a261fec9e2bcd92c451f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.forward_unchecked-1&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.char&quot;&gt;char&lt;/a&gt;, count: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.char&quot;&gt;char&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#453-466&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87100100c25887e6793ec95e3f93bf63dea7e497" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.forward_unchecked-10&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02ae3fb2a70d53edfff84d92b01d075d66f9d527" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.forward_unchecked-11&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d69250dc1fc48b7c1049519cac1dfbe088a433" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.forward_unchecked-12&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f22e16d21120471a6410f6ceca98279670e1536" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.forward_unchecked-13&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bbe1211ea9cc4c72f829afdc2aaa3c5ea250337" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.forward_unchecked-2&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dacf887fc7fdc8d17658619d9010df8324cf027f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.forward_unchecked-3&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f3dac2b14378de1521cc5f830a8bd125aa3cd87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.forward_unchecked-4&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4a20a32e75f2e1442b25b052698d12fc1ccf88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.forward_unchecked-5&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="332627fd956e003fde70aa756ebec007b06992d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.forward_unchecked-6&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f741a690ab0bc7f4980bcd4090c2e95748b417" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.forward_unchecked-7&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c431076e9379895736513511318045a91032214d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.forward_unchecked-8&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1abf425702481131598f8904575aae751ca9c6e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.forward_unchecked-9&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ad85136e8a118e20de73e310e21e1cd4a68446e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.from_bytes_with_nul_unchecked&quot;&gt;from_bytes_with_nul_unchecked&lt;/a&gt;(bytes: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &amp;amp;&lt;a href=&quot;struct.cstr&quot;&gt;CStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#1243-1250&quot;&gt;[src]&lt;/a&gt;1.10.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40aeefc409d3a563727fb4a2face6fc37a379dc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.from_bytes_with_nul_unchecked&quot;&gt;from_bytes_with_nul_unchecked&lt;/a&gt;(bytes: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &amp;amp;&lt;a href=&quot;struct.cstr&quot;&gt;CStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#1244-1251&quot;&gt;[src]&lt;/a&gt;1.10.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc6fb1560624e938819e0e7ef71325565ac8acee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.from_ptr&quot;&gt;from_ptr&lt;/a&gt;&amp;lt;'a&amp;gt;(ptr: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../os/raw/type.c_char&quot;&gt;c_char&lt;/a&gt;) -&amp;gt; &amp;amp;'a &lt;a href=&quot;struct.cstr&quot;&gt;CStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#1160-1176&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="269cf6ac87131724ad69f8e3995eb8c62143dcb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.from_ptr&quot;&gt;from_ptr&lt;/a&gt;&amp;lt;'a&amp;gt;(ptr: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../os/raw/type.c_char&quot;&gt;c_char&lt;/a&gt;) -&amp;gt; &amp;amp;'a &lt;a href=&quot;struct.cstr&quot;&gt;CStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#1161-1177&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a98505da2be9fe7475527bf0981cb30e045511f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.from_raw&quot;&gt;from_raw&lt;/a&gt;(ptr: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const T&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.arc&quot;&gt;Arc&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/sync.rs.html#735-745&quot;&gt;[src]&lt;/a&gt;1.17.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f3ca3b67ad872806ef059870668c47fadfe8440" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.from_raw&quot;&gt;from_raw&lt;/a&gt;(ptr: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const T&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.arc&quot;&gt;Arc&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/sync.rs.html#751-761&quot;&gt;[src]&lt;/a&gt;1.17.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01998bb58886f9510104c193c25ec296a0c33330" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.from_raw&quot;&gt;from_raw&lt;/a&gt;(ptr: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const T&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.rc&quot;&gt;Rc&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/rc.rs.html#722-730&quot;&gt;[src]&lt;/a&gt;1.17.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="150113b13d5be497eec1cf5c2989c5695b47a2d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.from_raw&quot;&gt;from_raw&lt;/a&gt;(ptr: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const T&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.rc&quot;&gt;Rc&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/rc.rs.html#736-744&quot;&gt;[src]&lt;/a&gt;1.17.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2e49128cd57909fa55b5d911937faa0f40844b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.from_raw&quot;&gt;from_raw&lt;/a&gt;(ptr: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const T&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.weak&quot;&gt;Weak&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/rc.rs.html#1843-1855&quot;&gt;[src]&lt;/a&gt;1.45.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aaefb7993f03da77eefb51d805c2d8c2cf91b80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.from_raw&quot;&gt;from_raw&lt;/a&gt;(ptr: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const T&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.weak&quot;&gt;Weak&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/rc.rs.html#1871-1884&quot;&gt;[src]&lt;/a&gt;1.45.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7758a2d6526dc45ee6164bd30f1e4148d6bcf4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.from_raw&quot;&gt;from_raw&lt;/a&gt;(ptr: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const T&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.weak&quot;&gt;Weak&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/sync.rs.html#1631-1643&quot;&gt;[src]&lt;/a&gt;1.45.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="708c0b227a2a158398fa06347f430f0e54a2899d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.from_raw&quot;&gt;from_raw&lt;/a&gt;(ptr: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const T&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.weak&quot;&gt;Weak&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/sync.rs.html#1657-1670&quot;&gt;[src]&lt;/a&gt;1.45.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3997c4df67fe88322301fa32729eed49783f3ce8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.from_raw&quot;&gt;from_raw&lt;/a&gt;(ptr: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../os/raw/type.c_char&quot;&gt;c_char&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.cstring&quot;&gt;CString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#479-490&quot;&gt;[src]&lt;/a&gt;1.4.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d6017224100f69ef8ca22628b038407088c1b2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.from_raw&quot;&gt;from_raw&lt;/a&gt;(ptr: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../os/raw/type.c_char&quot;&gt;c_char&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.cstring&quot;&gt;CString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#480-491&quot;&gt;[src]&lt;/a&gt;1.4.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed2e3d5825385f328cece1d28b114781821e6131" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.from_raw&quot;&gt;from_raw&lt;/a&gt;(raw: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut T&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#414-416&quot;&gt;[src]&lt;/a&gt;1.4.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a73605a951a2b74fabc04991debcbdac43fac2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.from_raw&quot;&gt;from_raw&lt;/a&gt;(raw: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut T&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;T, &lt;a href=&quot;../alloc/struct.global&quot;&gt;Global&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#559-561&quot;&gt;[src]&lt;/a&gt;1.4.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa8a4f18ecf8882dc14e4e5b30c7d72cdb90c04d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.from_raw&quot;&gt;from_raw&lt;/a&gt;(waker: &lt;a href=&quot;struct.rawwaker&quot;&gt;RawWaker&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.waker&quot;&gt;Waker&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/task/wake.rs.html#256-258&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb1ac58e4d703efa20c6eb2f95e3133f826be678" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.from_raw_in&quot;&gt;from_raw_in&lt;/a&gt;(raw: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut T&lt;/a&gt;, alloc: A) -&amp;gt; &lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;T, A&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#614-616&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="745fb6291fbc909ce529f518e1678f695f5043b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.from_raw_parts&quot;&gt;from_raw_parts&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;buf: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;length: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;capacity: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#710-712&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f531e28994efc18427e90ab12ba8a04b5a126327" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.from_raw_parts&quot;&gt;from_raw_parts&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;buf: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;length: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;capacity: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#711-713&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b120d36f69ac081a265dc25dd792e48eab831c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.from_raw_parts&quot;&gt;from_raw_parts&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ptr: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut T&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;length: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;capacity: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/vec.rs.html#467-469&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="526a5621ebcb062046827256706d320bf632fee4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.from_u32_unchecked&quot;&gt;from_u32_unchecked&lt;/a&gt;(i: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.char&quot;&gt;char&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/char/methods.rs.html#185-188&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b1edec73d1258652d2cc559944624463969bab9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.from_utf8_unchecked&quot;&gt;from_utf8_unchecked&lt;/a&gt;(bytes: &lt;a href=&quot;../vec/struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#744-746&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="143c143c0268284338f17665054fb8fac43ff857" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.from_utf8_unchecked&quot;&gt;from_utf8_unchecked&lt;/a&gt;(bytes: &lt;a href=&quot;../vec/struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#745-747&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f7a595ddd7e3ff99c66b370f20271f2151c952" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.from_vec_unchecked&quot;&gt;from_vec_unchecked&lt;/a&gt;(v: &lt;a href=&quot;../vec/struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;struct.cstring&quot;&gt;CString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#428-432&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="281d237a953129b0bffbb9ca7a5d48a64f1f1304" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.from_vec_unchecked&quot;&gt;from_vec_unchecked&lt;/a&gt;(v: &lt;a href=&quot;../vec/struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;struct.cstring&quot;&gt;CString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#429-433&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d2dceda084f5d08d8980cf171f33818d7b7e7e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.from_vec_with_nul_unchecked&quot;&gt;from_vec_with_nul_unchecked&lt;/a&gt;(v: &lt;a href=&quot;../vec/struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;) -&amp;gt; Self&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#702-704&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af3b28102260c3a6c13d47d8ea6556d43cb44a63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.from_vec_with_nul_unchecked&quot;&gt;from_vec_with_nul_unchecked&lt;/a&gt;(v: &lt;a href=&quot;../vec/struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;) -&amp;gt; Self&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#703-705&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="356348833bc5c4515d4ede6e02c0ef07a992ae26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_mut_unchecked&quot;&gt;get_mut_unchecked&lt;/a&gt;(this: &amp;amp;mut &lt;a href=&quot;struct.arc&quot;&gt;Arc&lt;/a&gt;&amp;lt;T&amp;gt;) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/sync.rs.html#1352-1356&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0223a6b57b36e2aff37b6db85b9b569d5798a35b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_mut_unchecked&quot;&gt;get_mut_unchecked&lt;/a&gt;(this: &amp;amp;mut &lt;a href=&quot;struct.arc&quot;&gt;Arc&lt;/a&gt;&amp;lt;T&amp;gt;) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/sync.rs.html#1369-1373&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8924f84b5126b55c6aaaae1f7842e26cd710a2d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_mut_unchecked&quot;&gt;get_mut_unchecked&lt;/a&gt;(this: &amp;amp;mut &lt;a href=&quot;struct.rc&quot;&gt;Rc&lt;/a&gt;&amp;lt;T&amp;gt;) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/rc.rs.html#853-857&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b57917be9cc603db71773dfacd97bcd4c39b5be9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_mut_unchecked&quot;&gt;get_mut_unchecked&lt;/a&gt;(this: &amp;amp;mut &lt;a href=&quot;struct.rc&quot;&gt;Rc&lt;/a&gt;&amp;lt;T&amp;gt;) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/rc.rs.html#867-871&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="420aeac282ea0a4f6f1f158450dc38d742141395" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;&amp;lt;I&amp;gt;(&amp;amp;self, i: I) -&amp;gt; &amp;amp;&amp;lt;I as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;I: &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#399-404&quot;&gt;[src]&lt;/a&gt;1.20.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecdbb1add289c7a09257546eaf3bc3094d79bcb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;&amp;lt;I&amp;gt;(&amp;amp;self, i: I) -&amp;gt; &amp;amp;&amp;lt;I as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;I: &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#400-405&quot;&gt;[src]&lt;/a&gt;1.20.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8106636b8b53fc051a081565048cb7c79c016b8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;&amp;lt;I&amp;gt;(&amp;amp;self, i: I) -&amp;gt; &amp;amp;&amp;lt;I as &lt;a href=&quot;slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;I: &lt;a href=&quot;slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#399-404&quot;&gt;[src]&lt;/a&gt;1.20.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db4e9e6807035b5b753436b0ac758731d147dfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;&amp;lt;I&amp;gt;(&amp;amp;self, i: I) -&amp;gt; &amp;amp;&amp;lt;I as &lt;a href=&quot;slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;I: &lt;a href=&quot;slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#400-405&quot;&gt;[src]&lt;/a&gt;1.20.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db9b832f5c9bd4119787b436bb62c8a3d6a4dad1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;&amp;lt;I&amp;gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;index: I&lt;br/&gt;) -&amp;gt; &amp;amp;&amp;lt;I as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;I: &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#334-342&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fb443ed230fb097dd4fd1b56fb387d337a675d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;&amp;lt;I&amp;gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;index: I&lt;br/&gt;) -&amp;gt; &amp;amp;&amp;lt;I as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;I: &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#334-342&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85b00b12738975abf093b9b2b01e467eaae835bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;&amp;lt;I&amp;gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;index: I&lt;br/&gt;) -&amp;gt; &amp;amp;&amp;lt;I as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;I: &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#335-343&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a350a31af829df5b554f80fbac6e2b72af4028e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;&amp;lt;I&amp;gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;index: I&lt;br/&gt;) -&amp;gt; &amp;amp;&amp;lt;I as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;I: &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#335-343&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01a4fb0b12dbd7849bcfd74ef7ac83e73a025614" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;&amp;lt;I&amp;gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;index: I&lt;br/&gt;) -&amp;gt; &amp;amp;&amp;lt;I as &lt;a href=&quot;slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;I: &lt;a href=&quot;slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#334-342&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b7bcb77c809959e77c5eec62798f50f6de1ca0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;&amp;lt;I&amp;gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;index: I&lt;br/&gt;) -&amp;gt; &amp;amp;&amp;lt;I as &lt;a href=&quot;slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;I: &lt;a href=&quot;slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#335-343&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="171d4d725ce7db83c700c7eabfd377e68e329921" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;&amp;lt;I&amp;gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;index: I&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*const &lt;/a&gt;&amp;lt;I as &lt;a href=&quot;slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;I: &lt;a href=&quot;slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/const_ptr.rs.html#932-938&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e6095f17afb52abb42fd466ca29a9180cb14ce1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&amp;lt;&lt;a href=&quot;../ops/struct.range&quot;&gt;Range&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#193-200&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e87b1790c7ffb7a7f435ff53046e60c0d0a05384" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked-1&quot;&gt;get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&amp;lt;&lt;a href=&quot;../ops/struct.rangefrom&quot;&gt;RangeFrom&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#344-351&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a941496f458f5cbddb728037b1e1d9c7e99b6399" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked-10&quot;&gt;get_unchecked&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#388-391&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb790fa4e7c6ecbe3b519848031dd0a9ea45f31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked-11&quot;&gt;get_unchecked&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#271-274&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="288c1ce03eb59349c7114de4c7bd4a30eeda9d02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked-12&quot;&gt;get_unchecked&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#431-434&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6724fa528ee0b84975725b2973fe50e5adbf6b24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked-2&quot;&gt;get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&amp;lt;&lt;a href=&quot;../ops/struct.rangefull&quot;&gt;RangeFull&lt;/a&gt; as &lt;a href=&quot;trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#110-112&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a60007350a28d276f96ff58fecb3dc25f1b01c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked-3&quot;&gt;get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&amp;lt;&lt;a href=&quot;../ops/struct.rangeinclusive&quot;&gt;RangeInclusive&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#408-411&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e401e318a9d4e3113051c702ed2d876c08181da4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked-4&quot;&gt;get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&amp;lt;&lt;a href=&quot;../ops/struct.rangeto&quot;&gt;RangeTo&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#273-277&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eb481e0af04d6028ebfdfee40295ae4e5a15522" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked-5&quot;&gt;get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&amp;lt;&lt;a href=&quot;../ops/struct.rangetoinclusive&quot;&gt;RangeToInclusive&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#459-462&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d5a0a493a18381f5998f4f2d787e4044b13991f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked-6&quot;&gt;get_unchecked&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#165-171&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a87a231e972a0323f154733bf7b6e9ee901ffb42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked-7&quot;&gt;get_unchecked&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#217-223&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c35e920a494ae97a8aeefd3340a46dab0478376" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked-8&quot;&gt;get_unchecked&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#308-311&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c76ce0a94486eac407b10a3e523c5be41fde1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked-9&quot;&gt;get_unchecked&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#353-355&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78fc39631d1a7d44f99ce10cb362728c04afe2fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;&amp;lt;I&amp;gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;i: I&lt;br/&gt;) -&amp;gt; &amp;amp;mut &amp;lt;I as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;I: &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#434-439&quot;&gt;[src]&lt;/a&gt;1.20.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f5f8616f35cc0818ce27c2bf840002fa3934a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;&amp;lt;I&amp;gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;i: I&lt;br/&gt;) -&amp;gt; &amp;amp;mut &amp;lt;I as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;I: &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#435-440&quot;&gt;[src]&lt;/a&gt;1.20.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf0f2da3a6004590023138b91b1f373a210400d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;&amp;lt;I&amp;gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;i: I&lt;br/&gt;) -&amp;gt; &amp;amp;mut &amp;lt;I as &lt;a href=&quot;slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;I: &lt;a href=&quot;slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#434-439&quot;&gt;[src]&lt;/a&gt;1.20.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0d254df276998144865b694d5d60c7009e967d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;&amp;lt;I&amp;gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;i: I&lt;br/&gt;) -&amp;gt; &amp;amp;mut &amp;lt;I as &lt;a href=&quot;slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;I: &lt;a href=&quot;slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#435-440&quot;&gt;[src]&lt;/a&gt;1.20.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e218ae9159e68ee86cd5b311aa924290b9bb3d66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;&amp;lt;I&amp;gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;index: I&lt;br/&gt;) -&amp;gt; &amp;amp;mut &amp;lt;I as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;I: &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#370-378&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a018bee71d1cb1d2fbbbfbd59e8c390d62d41f84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;&amp;lt;I&amp;gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;index: I&lt;br/&gt;) -&amp;gt; &amp;amp;mut &amp;lt;I as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;I: &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#370-378&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63734436fea077b898132f72a6d7bc5e01842e48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;&amp;lt;I&amp;gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;index: I&lt;br/&gt;) -&amp;gt; &amp;amp;mut &amp;lt;I as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;I: &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#371-379&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="469c53e938dded015a8b2380f5503b35768fc838" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;&amp;lt;I&amp;gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;index: I&lt;br/&gt;) -&amp;gt; &amp;amp;mut &amp;lt;I as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;I: &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#371-379&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7abd0b8609672358e21028b8785c877b9b01920e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;&amp;lt;I&amp;gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;index: I&lt;br/&gt;) -&amp;gt; &amp;amp;mut &amp;lt;I as &lt;a href=&quot;slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;I: &lt;a href=&quot;slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#370-378&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df8f50bb43e6e9ba5e9b9dd722b6397f4c93bb1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;&amp;lt;I&amp;gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;index: I&lt;br/&gt;) -&amp;gt; &amp;amp;mut &amp;lt;I as &lt;a href=&quot;slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;I: &lt;a href=&quot;slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#371-379&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2652c857127cfa9e95951e042c66aa3f970e0795" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;&amp;lt;I&amp;gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;index: I&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*mut &lt;/a&gt;&amp;lt;I as &lt;a href=&quot;slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;I: &lt;a href=&quot;slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#1189-1195&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d8d2819f475995266f0fef1ff754032f6718bb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;&amp;lt;I&amp;gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;index: I&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&amp;lt;I as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;I: &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/non_null.rs.html#483-490&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80cdd1e9a67026be1a558768fbcfd7368c49793c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&amp;lt;&lt;a href=&quot;../ops/struct.range&quot;&gt;Range&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#202-208&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3adac21576e5cf57c2496ca33980ed9b46864d39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;'a mut &lt;/a&gt;T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/pin.rs.html#749-751&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdb124081fd019a7056a5e37a80ee6986a218aac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked_mut-1&quot;&gt;get_unchecked_mut&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&amp;lt;&lt;a href=&quot;../ops/struct.rangefrom&quot;&gt;RangeFrom&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#353-359&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="504c2f51650897e0f7ba15b3f3ad2da9247eef53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked_mut-10&quot;&gt;get_unchecked_mut&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#394-397&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01296e3842ff255050c1aa09a9f901e1aadcdf8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked_mut-11&quot;&gt;get_unchecked_mut&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#277-280&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b590ccba63b90c1fe2c4f664dd4b16076ea65fec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked_mut-12&quot;&gt;get_unchecked_mut&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#437-440&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d590ef4a7585f993a72b2a56cf1b13464698ebc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked_mut-2&quot;&gt;get_unchecked_mut&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&amp;lt;&lt;a href=&quot;../ops/struct.rangefull&quot;&gt;RangeFull&lt;/a&gt; as &lt;a href=&quot;trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#114-116&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b53adcde17d445ba73d5a1848c8c3778c0785c67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked_mut-3&quot;&gt;get_unchecked_mut&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&amp;lt;&lt;a href=&quot;../ops/struct.rangeinclusive&quot;&gt;RangeInclusive&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#413-416&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99edc9a2f025481e81d547f022ba754d32bba820" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked_mut-4&quot;&gt;get_unchecked_mut&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&amp;lt;&lt;a href=&quot;../ops/struct.rangeto&quot;&gt;RangeTo&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#279-283&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afa8a8399a275577fc7d432c0166fe2dcefb48e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked_mut-5&quot;&gt;get_unchecked_mut&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&amp;lt;&lt;a href=&quot;../ops/struct.rangetoinclusive&quot;&gt;RangeToInclusive&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#464-467&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0602bd3150d95b01e4e5ea11d82080acd201fc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked_mut-6&quot;&gt;get_unchecked_mut&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#174-177&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42ccad334b3c4421dcb4673919dea4b5360be7d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked_mut-7&quot;&gt;get_unchecked_mut&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#226-231&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2537b7eda245a3a77769bb61bf92985fba5fc2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked_mut-8&quot;&gt;get_unchecked_mut&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#314-317&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f707f5bdebcbf5d609e684e23073125856c21fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.get_unchecked_mut-9&quot;&gt;get_unchecked_mut&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#358-360&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22409519f85e9161cf21e961e17f70216a265da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.grow-1&quot;&gt;grow&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ptr: &lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;old_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;, &lt;a href=&quot;struct.allocerror&quot;&gt;AllocError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/alloc.rs.html#242-250&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46255359f541f0bf47ac5473cca2fa93b7c4517a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.grow-3&quot;&gt;grow&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ptr: &lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;old_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;, &lt;a href=&quot;struct.allocerror&quot;&gt;AllocError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/alloc/mod.rs.html#361-369&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b501a2874456df7f17dc30e89c45d670431ee4bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.grow_zeroed-1&quot;&gt;grow_zeroed&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ptr: &lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;old_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;, &lt;a href=&quot;struct.allocerror&quot;&gt;AllocError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/alloc.rs.html#253-261&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1019ac6f7210c18cc8c29bc71fb50ac0de13890b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.grow_zeroed-3&quot;&gt;grow_zeroed&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ptr: &lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;old_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;, &lt;a href=&quot;struct.allocerror&quot;&gt;AllocError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/alloc/mod.rs.html#372-380&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7502b9614c96f829147ee0cbfe6c9c270a0b8122" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.guaranteed_ne-1&quot;&gt;guaranteed_ne&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#453-458&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b97777e6e608718e68a4356d572c37c43965fc7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.incr_strong_count&quot;&gt;incr_strong_count&lt;/a&gt;(ptr: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const T&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/sync.rs.html#874-879&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bfa61582d01c1071953a1134563b9a860d360ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.incr_strong_count&quot;&gt;incr_strong_count&lt;/a&gt;(ptr: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const T&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/sync.rs.html#891-896&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e94188c0eec273bea403e768d984b8f258c3d3e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.into_inner_unchecked&quot;&gt;into_inner_unchecked&lt;/a&gt;(pin: &lt;a href=&quot;struct.pin&quot;&gt;Pin&lt;/a&gt;&amp;lt;P&amp;gt;) -&amp;gt; P&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/pin.rs.html#598-600&quot;&gt;[src]&lt;/a&gt;1.39.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ff8a53bbf2616c7ec4859148ba8eb8685129ecb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.map_unchecked&quot;&gt;map_unchecked&lt;/a&gt;&amp;lt;U, F&amp;gt;(self, func: F) -&amp;gt; &lt;a href=&quot;struct.pin&quot;&gt;Pin&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;'a &lt;/a&gt;U&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;(&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;U,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;U: ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/pin.rs.html#670-681&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb6ab2a34fe10fff0ea6760a55a01628acc061c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.map_unchecked_mut&quot;&gt;map_unchecked_mut&lt;/a&gt;&amp;lt;U, F&amp;gt;(self, func: F) -&amp;gt; &lt;a href=&quot;struct.pin&quot;&gt;Pin&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;'a mut &lt;/a&gt;U&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;(&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;T) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;U,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;U: ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/pin.rs.html#769-781&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="702010b5e81bedcf9630535ec413813c67ac968e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.nop&quot;&gt;nop&lt;/a&gt;() -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1176-1178&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4f47973df54875bc2f670356ae0f73f311f5318" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.nop&quot;&gt;nop&lt;/a&gt;() -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1178-1180&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4425311b1aeaa967abe877de5857e240ec7740c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.offset_from&quot;&gt;offset_from&lt;/a&gt;(self, origin: &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/const_ptr.rs.html#367-375&quot;&gt;[src]&lt;/a&gt;1.47.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6c6b80669f39194be0a27ab6d8cb22e9ab55aa3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.offset_from-1&quot;&gt;offset_from&lt;/a&gt;(self, origin: &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#538-544&quot;&gt;[src]&lt;/a&gt;1.47.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="256cd0c1a42a62e8126a01723f706e0ec4061bc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.read&quot;&gt;read&lt;/a&gt;(self) -&amp;gt; T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/const_ptr.rs.html#729-735&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="480aed701baa21c4b55132e43544cf6a7fb84603" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.read-1&quot;&gt;read&lt;/a&gt;(self) -&amp;gt; T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#836-842&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183190e0dc5df3fad7cc512dfb1f238a1f8a3e36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.read_unaligned&quot;&gt;read_unaligned&lt;/a&gt;(self) -&amp;gt; T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/const_ptr.rs.html#767-773&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="998e71cafb257d6715327e500e9120a7de4529b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.read_unaligned-1&quot;&gt;read_unaligned&lt;/a&gt;(self) -&amp;gt; T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#874-880&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8bacdba4f7992ddea1fe545b9df9ee861498ef9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.read_volatile&quot;&gt;read_volatile&lt;/a&gt;(self) -&amp;gt; T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/const_ptr.rs.html#749-755&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2674085c89acf95cced8a9ffac37e41dfb3af736" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.read_volatile-1&quot;&gt;read_volatile&lt;/a&gt;(self) -&amp;gt; T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#856-862&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eff75acc3a1e74c5bfd42128ee5864007c3d88a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.replace&quot;&gt;replace&lt;/a&gt;(self, src: T) -&amp;gt; T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#1044-1050&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79bc3e2247687801b5d7b601b8857583698fcdc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.set_len&quot;&gt;set_len&lt;/a&gt;(&amp;amp;mut self, new_len: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/vec.rs.html#946-950&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0078a99c5e190a0dc8ff7908f7e437b36b345c17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.shrink-1&quot;&gt;shrink&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ptr: &lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;old_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;, &lt;a href=&quot;struct.allocerror&quot;&gt;AllocError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/alloc.rs.html#264-304&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9ac4e385d3049c2b4b5e5275762f53b52b71710" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.shrink-3&quot;&gt;shrink&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ptr: &lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;old_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;, &lt;a href=&quot;struct.allocerror&quot;&gt;AllocError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/alloc/mod.rs.html#383-391&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82f7a21f2733ac2a5952cf32f57b7c5c9e407762" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.slice_assume_init_mut&quot;&gt;slice_assume_init_mut&lt;/a&gt;(slice: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;mut [&lt;/a&gt;&lt;a href=&quot;union.maybeuninit&quot;&gt;MaybeUninit&lt;/a&gt;&amp;lt;T&amp;gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/mem/maybe_uninit.rs.html#821-825&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fb5ac95b2bc56ce4d777e5f317f5d0854356951" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.slice_assume_init_mut&quot;&gt;slice_assume_init_mut&lt;/a&gt;(slice: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;mut [&lt;/a&gt;&lt;a href=&quot;union.maybeuninit&quot;&gt;MaybeUninit&lt;/a&gt;&amp;lt;T&amp;gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/mem/maybe_uninit.rs.html#835-839&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b9428ae30efee2f7e0c7f5b2538d5132d191875" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.slice_assume_init_ref&quot;&gt;slice_assume_init_ref&lt;/a&gt;(slice: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;union.maybeuninit&quot;&gt;MaybeUninit&lt;/a&gt;&amp;lt;T&amp;gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/mem/maybe_uninit.rs.html#800-806&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04244b6606bca74b129e2b66f712940a7f105b6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.slice_assume_init_ref&quot;&gt;slice_assume_init_ref&lt;/a&gt;(slice: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;union.maybeuninit&quot;&gt;MaybeUninit&lt;/a&gt;&amp;lt;T&amp;gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/mem/maybe_uninit.rs.html#814-820&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e244f6a136635a75f0c1ef6338dda3f08e236336" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.slice_mut_unchecked&quot;&gt;slice_mut_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;begin: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;end: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#519-524&quot;&gt;[src]&lt;/a&gt;1.5.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="200ad9d1cf65bcf22747a5eb9e90ab607df1bcb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.slice_mut_unchecked&quot;&gt;slice_mut_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;begin: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;end: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#520-525&quot;&gt;[src]&lt;/a&gt;1.5.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47808637812863b04b67eac7bc1ed52f5ab6c8a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.slice_mut_unchecked&quot;&gt;slice_mut_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;begin: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;end: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &amp;amp;mut &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#519-524&quot;&gt;[src]&lt;/a&gt;1.5.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="446ac9a9bc75fec84ca3960c35518da630fd488c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.slice_mut_unchecked&quot;&gt;slice_mut_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;begin: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;end: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &amp;amp;mut &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#520-525&quot;&gt;[src]&lt;/a&gt;1.5.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bd3300f3bab64e9c864ef6776e0ec763a7ac0ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.slice_unchecked&quot;&gt;slice_unchecked&lt;/a&gt;(&amp;amp;self, begin: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, end: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#486-491&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a0809daf98cf136a8f7b482ac9164dee8161dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.slice_unchecked&quot;&gt;slice_unchecked&lt;/a&gt;(&amp;amp;self, begin: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, end: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#487-492&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="752bb000e31e3e8a904003da9c1e1e44cffcd7f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.slice_unchecked&quot;&gt;slice_unchecked&lt;/a&gt;(&amp;amp;self, begin: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;, end: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#486-491&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbad71f45ddd50047c54bdc66b0c76c19315bf7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.slice_unchecked&quot;&gt;slice_unchecked&lt;/a&gt;(&amp;amp;self, begin: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;, end: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#487-492&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47727e10112f6138c3322700dd01368464e5446" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.spawn_unchecked&quot;&gt;spawn_unchecked&lt;/a&gt;&amp;lt;'a, F, T&amp;gt;(self, f: F) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.joinhandle&quot;&gt;JoinHandle&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;() -&amp;gt; T,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt; + 'a,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;T: &lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt; + 'a,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/thread/mod.rs.html#438-498&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e761842d8b0130a68f1b366c431e553884c1a9e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.spawn_unchecked&quot;&gt;spawn_unchecked&lt;/a&gt;&amp;lt;'a, F, T&amp;gt;(self, f: F) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.joinhandle&quot;&gt;JoinHandle&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;() -&amp;gt; T,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt; + 'a,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;T: &lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt; + 'a,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/thread/mod.rs.html#443-508&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa36c881199f74b8eaab19ab02d8c83bd5c88037" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.swap&quot;&gt;swap&lt;/a&gt;(self, with: &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#1061-1067&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ceb899bd502dcead9ecbd9f2fb71c55ad4e46a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.to_int_unchecked&quot;&gt;to_int_unchecked&lt;/a&gt;&amp;lt;Int&amp;gt;(self) -&amp;gt; Int where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;: &lt;a href=&quot;convert/trait.floattoint&quot;&gt;FloatToInt&lt;/a&gt;&amp;lt;Int&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/f32.rs.html#636-643&quot;&gt;[src]&lt;/a&gt;1.44.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4614fae5ffbef2502c9a69c442f92d806810473" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.to_int_unchecked&quot;&gt;to_int_unchecked&lt;/a&gt;&amp;lt;Int&amp;gt;(self) -&amp;gt; Int where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;: &lt;a href=&quot;convert/trait.floattoint&quot;&gt;FloatToInt&lt;/a&gt;&amp;lt;Int&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/f64.rs.html#650-657&quot;&gt;[src]&lt;/a&gt;1.44.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3960e6ceb98c49034f850d69a4588547cc045832" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.try_borrow_unguarded&quot;&gt;try_borrow_unguarded&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T, &lt;a href=&quot;struct.borrowerror&quot;&gt;BorrowError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/cell.rs.html#1006-1017&quot;&gt;[src]&lt;/a&gt;1.37.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4955b48d0fd95a75ae3449a82c9ae33c177f7ea7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.with_copy&quot;&gt;with_copy&lt;/a&gt;&amp;lt;F, R&amp;gt;(&amp;amp;self, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: for&amp;lt;'copy&amp;gt; &lt;a href=&quot;../ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;(&lt;a href=&quot;struct.valist&quot;&gt;VaList&lt;/a&gt;&amp;lt;'copy, 'f&amp;gt;) -&amp;gt; R,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ffi.rs.html#339-350&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a09bb48097cb2bac06dad09925f6301fb11254e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.with_copy&quot;&gt;with_copy&lt;/a&gt;&amp;lt;F, R&amp;gt;(&amp;amp;self, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: for&amp;lt;'copy&amp;gt; &lt;a href=&quot;../ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;(&lt;a href=&quot;struct.valist&quot;&gt;VaList&lt;/a&gt;&amp;lt;'copy, 'f&amp;gt;) -&amp;gt; R,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ffi.rs.html#343-354&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b218f8661e40ea507f07e1a237773841104308aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.write&quot;&gt;write&lt;/a&gt;(self, val: T)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#974-980&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a1ad3e2ac19e5a791119ba1c797e4d0020fad5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.write_bytes&quot;&gt;write_bytes&lt;/a&gt;(self, val: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#990-996&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82c3ab9f127161e274dfb00db800ee56d7fcef69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.write_unaligned&quot;&gt;write_unaligned&lt;/a&gt;(self, val: T)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#1028-1034&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100f9488e52ce98791ba46e2fadb4d18a68e946b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;#method.write_volatile&quot;&gt;write_volatile&lt;/a&gt;(self, val: T)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#1010-1016&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f7be89f070de7134843cec0ac9f4e780af99aa2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;../../iter/trait.sourceiter#tymethod.as_inner&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &amp;amp;mut &amp;lt;&lt;a href=&quot;struct.intoiter&quot;&gt;IntoIter&lt;/a&gt;&amp;lt;T&amp;gt; as &lt;a href=&quot;../../iter/trait.sourceiter&quot;&gt;SourceIter&lt;/a&gt;&amp;gt;::&lt;a href=&quot;../../iter/trait.sourceiter#associatedtype.Source&quot;&gt;Source&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/binary_heap.rs.html#1186-1188&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="202dc2c6f563d1bfa3a35265222fbc019c6cbb12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;../iter/trait.iterator#method.__iterator_get_unchecked&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;amp;'a &lt;a href=&quot;../primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.array&quot;&gt;; N]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/iter.rs.html#2156-2160&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="482137dfb8c219d03a274a319405aa148fda6578" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;../iter/trait.iterator#method.__iterator_get_unchecked&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;amp;'a mut &lt;a href=&quot;../primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.array&quot;&gt;; N]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/iter.rs.html#2270-2274&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7137703cf6fa2ab760eb91fff99903870482cf32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;../iter/trait.iterator#method.__iterator_get_unchecked&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&amp;amp;mut self, idx: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/iter.rs.html#279-283&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9b8a421940b9f22629886e33459f344f7a865dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;../iter/trait.iterator#method.__iterator_get_unchecked&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;i: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;struct.intoiter&quot;&gt;IntoIter&lt;/a&gt;&amp;lt;T&amp;gt; as &lt;a href=&quot;../iter/trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;../iter/trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.intoiter&quot;&gt;IntoIter&lt;/a&gt;&amp;lt;T&amp;gt;: TrustedRandomAccess,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/vec.rs.html#2939-2954&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ee6c7c4a8d05585257f34bf4f22b32f8341214" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;../iter/trait.sourceiter#tymethod.as_inner&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &amp;amp;mut &amp;lt;&lt;a href=&quot;struct.intoiter&quot;&gt;IntoIter&lt;/a&gt;&amp;lt;T&amp;gt; as &lt;a href=&quot;../iter/trait.sourceiter&quot;&gt;SourceIter&lt;/a&gt;&amp;gt;::&lt;a href=&quot;../iter/trait.sourceiter#associatedtype.Source&quot;&gt;Source&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/vec.rs.html#3039-3041&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34ac64e023d7fa3e0e5c594ff6549547961ca484" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.range&quot;&gt;Range&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#193-200&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fe6a7abe31a6b20c8f5af68cbb461226a50ed9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.rangefrom&quot;&gt;RangeFrom&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#344-351&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8979981d6735ed3af1305f584a53fcde4290ada7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.rangefull&quot;&gt;RangeFull&lt;/a&gt; as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#110-112&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4de98cd60f5f2898a040acda9008eb918b12f638" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.rangeinclusive&quot;&gt;RangeInclusive&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#408-411&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fda5fe7261e71f2861d7f8e2c3af6cd887cdcbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.rangeto&quot;&gt;RangeTo&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#273-277&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="884f6329dc1ba7020a8ffb2146f13309efc55226" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.rangetoinclusive&quot;&gt;RangeToInclusive&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#459-462&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73e2c32a68dcb791b1e8ee7fea61e8a3dffc5753" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#217-223&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9609a9f10cdeb1c157b8a0ffe622d9711354c883" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#271-274&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2f21c528a9f241422e30fa1a843def89d5a0e1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#308-311&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af57c5d6754495c03f6adb9ce9cfe1a8728f6ff6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#353-355&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f21823ea5b9f398adb1d7ef2e6c65bb620754bd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#388-391&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa2ee586d445896b094085b2b46c8af53b83709a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#431-434&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b71237e4447dd069a6a83c712ef0e2a49692cb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.range&quot;&gt;Range&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#202-208&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24b6fccb5f36d8603fe9a5f8037c35dd24b87df3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.rangefrom&quot;&gt;RangeFrom&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#353-359&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba39eeeddb10b2e6f80942604b131d75b6314b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.rangefull&quot;&gt;RangeFull&lt;/a&gt; as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#114-116&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="704949bbb64e3160b9244f10bb0893b891b44f8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.rangeinclusive&quot;&gt;RangeInclusive&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#413-416&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="664c7b6a8b25810848443657f9387d74bc77e604" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.rangeto&quot;&gt;RangeTo&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#279-283&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74e1042aa2f2ee72c7810308c6bc548c9a4c72d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.rangetoinclusive&quot;&gt;RangeToInclusive&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#464-467&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c0c1e9e3c9bf094d6cf48215072ef1b66994b51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#226-231&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="118c4c98f8f6122db26a58a6a647a8a0f063fc7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#277-280&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a189cc035ac17b1c03845085f7357ca8dc6c03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#314-317&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace92ed02c3e34a057ed82679d23edca4f380e12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#358-360&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0714b2acf1bcd02bb9ac4d8f5c7a2b4ede20d27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#394-397&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb443ed80e44d5e7c32d7b0721dcd0b561a9e70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#437-440&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ad033778b00fcb44b6d2a7bc67dc1d7fd7ea82e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;alloc/trait.allocref#method.grow&quot;&gt;grow&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ptr: &lt;a href=&quot;ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;old_layout: &lt;a href=&quot;alloc/struct.layout&quot;&gt;Layout&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new_layout: &lt;a href=&quot;alloc/struct.layout&quot;&gt;Layout&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;, &lt;a href=&quot;alloc/struct.allocerror&quot;&gt;AllocError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/alloc/mod.rs.html#361-369&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75597cd9192856e718948a48be1edc8e6a69f78f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;alloc/trait.allocref#method.grow_zeroed&quot;&gt;grow_zeroed&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ptr: &lt;a href=&quot;ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;old_layout: &lt;a href=&quot;alloc/struct.layout&quot;&gt;Layout&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new_layout: &lt;a href=&quot;alloc/struct.layout&quot;&gt;Layout&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;, &lt;a href=&quot;alloc/struct.allocerror&quot;&gt;AllocError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/alloc/mod.rs.html#372-380&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b35472ef63e25425939a6d741590faf4f2c5116" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;alloc/trait.allocref#method.shrink&quot;&gt;shrink&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ptr: &lt;a href=&quot;ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;old_layout: &lt;a href=&quot;alloc/struct.layout&quot;&gt;Layout&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new_layout: &lt;a href=&quot;alloc/struct.layout&quot;&gt;Layout&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;, &lt;a href=&quot;alloc/struct.allocerror&quot;&gt;AllocError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/alloc/mod.rs.html#383-391&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8961b72fe5946f956881f3966d57a99fa38c1381" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;alloc/trait.allocref#tymethod.dealloc&quot;&gt;dealloc&lt;/a&gt;(&amp;amp;self, ptr: &lt;a href=&quot;ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;, layout: &lt;a href=&quot;alloc/struct.layout&quot;&gt;Layout&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/alloc/mod.rs.html#355-358&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="922923efaa7f2b817ef55ddfa26e55846f5022de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;iter/trait.step#method.backward_unchecked&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.char&quot;&gt;char&lt;/a&gt;, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.char&quot;&gt;char&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#469-482&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a1a6b0b04a2776d9ea8f0207045604a01d1880" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;iter/trait.step#method.backward_unchecked&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9caca2ebaccb9e125ecd0a43fcc55f14c2f55887" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;iter/trait.step#method.backward_unchecked&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e5388d851b6eeaecbe6946056fcdc3f9e284c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;iter/trait.step#method.backward_unchecked&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3525991306a1e16444a5c0a306ea5edde973ae58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;iter/trait.step#method.backward_unchecked&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80213226749ff10e0b6471a905fadaa54ef2d4b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;iter/trait.step#method.backward_unchecked&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3170886b189f7d393a85367c53efbb501c508523" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;iter/trait.step#method.backward_unchecked&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a34a257ddedc82c7f016921afd008f46b10336" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;iter/trait.step#method.backward_unchecked&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfd4e9d82a3fd9fc8478c28a53799c4b1e6dd8bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;iter/trait.step#method.backward_unchecked&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1958b73c0ff5fee87a968fa786a03407aca8aed2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;iter/trait.step#method.backward_unchecked&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b2e2679b89576e6a98b345d58112570b47f507d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;iter/trait.step#method.backward_unchecked&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d81991248ce33cb7b94b43c2acc90dbe78eacd82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;iter/trait.step#method.backward_unchecked&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a8f8515d83d70466a102c87cf2f273a8fad0166" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;iter/trait.step#method.backward_unchecked&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77eed58e8d8794a88c7c6346d26c6d4681707372" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;iter/trait.step#method.forward_unchecked&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.char&quot;&gt;char&lt;/a&gt;, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.char&quot;&gt;char&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#453-466&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="860c2020a47d9999a11e2fbd57f38f1f995fddd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;iter/trait.step#method.forward_unchecked&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="029d32b1fd164bab0b5fe45fba2fefc3dab5776c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;iter/trait.step#method.forward_unchecked&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a7c54a39e44cf1e0353e71e4346aa63d10a5470" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;iter/trait.step#method.forward_unchecked&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1c0c63a211fc2d750dd4934c544f33aa6807f33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;iter/trait.step#method.forward_unchecked&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e50f7e44527e2e5a532aa06dcd22526724a2ebf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;iter/trait.step#method.forward_unchecked&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09c0215d3a1d94d190016c166f18c8bd2410bd71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;iter/trait.step#method.forward_unchecked&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93f0ac3118936dc46044cc6dfd52d05261832cb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;iter/trait.step#method.forward_unchecked&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db712529ceb6f063be36ad7588eb8a54b7709840" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;iter/trait.step#method.forward_unchecked&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2372eac4239acd293fd8d9136a0ea8276cf80e88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;iter/trait.step#method.forward_unchecked&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="469e723a13b10b5ec48dad83a0428e38631541e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;iter/trait.step#method.forward_unchecked&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbaa3e7688db44879a1813e7eb1f3b93e63aa030" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;iter/trait.step#method.forward_unchecked&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c34802b1a9538fa0af223c154ce03a14371643da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;iter/trait.step#method.forward_unchecked&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fbf98c830adf002888444b5d617aef43bd4e467" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;slice/trait.sliceindex#tymethod.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;(self, slice: &lt;a href=&quot;primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#165-171&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c70973d01d35398f5148b56bd257cadba0a723b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;slice/trait.sliceindex#tymethod.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;(self, slice: &lt;a href=&quot;primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#174-177&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c07403a17316cb7a8f8b36463da4b89237fb94b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;trait.allocref#method.grow&quot;&gt;grow&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ptr: &lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;old_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;, &lt;a href=&quot;struct.allocerror&quot;&gt;AllocError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/alloc.rs.html#242-250&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f38c9e37fb0a73fddf047585feb3fdc377f046" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;trait.allocref#method.grow_zeroed&quot;&gt;grow_zeroed&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ptr: &lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;old_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;, &lt;a href=&quot;struct.allocerror&quot;&gt;AllocError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/alloc.rs.html#253-261&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87da98f4fa1fcd7f133dc6e9e817471d817196a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;trait.allocref#method.shrink&quot;&gt;shrink&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ptr: &lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;old_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;, &lt;a href=&quot;struct.allocerror&quot;&gt;AllocError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/alloc.rs.html#264-304&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82388ecc87a06f0d86e5e3c4de5e75e52e9d9357" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;trait.allocref#tymethod.dealloc&quot;&gt;dealloc&lt;/a&gt;(&amp;amp;self, ptr: &lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;, layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/alloc.rs.html#233-239&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be7533ecdf26b3d9badde030a9076ea5c9d38db6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;trait.iterator#method.__iterator_get_unchecked&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&amp;amp;mut self, idx: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; B where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.map&quot;&gt;Map&lt;/a&gt;&amp;lt;I, F&amp;gt;: TrustedRandomAccess,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#948-955&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c7aeda4157f37d732c537066d1c03e54129f13b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;trait.iterator#method.__iterator_get_unchecked&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&amp;amp;mut self, idx: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; T where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.cloned&quot;&gt;Cloned&lt;/a&gt;&amp;lt;I&amp;gt;: TrustedRandomAccess,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#433-440&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd293f796a1ad67e4e177909fb5849e611552f4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;trait.iterator#method.__iterator_get_unchecked&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&amp;amp;mut self, idx: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; T where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.copied&quot;&gt;Copied&lt;/a&gt;&amp;lt;I&amp;gt;: TrustedRandomAccess,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#298-305&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be66c988c9a2991de61e85f1b8bca2a5fceaa3bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;trait.iterator#method.__iterator_get_unchecked&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;idx: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;struct.enumerate&quot;&gt;Enumerate&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.enumerate&quot;&gt;Enumerate&lt;/a&gt;&amp;lt;I&amp;gt;: TrustedRandomAccess,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1444-1452&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45b2a1661dcdc2048ee30a2064f50fdafb4cd7fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;trait.iterator#method.__iterator_get_unchecked&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;idx: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;struct.fuse&quot;&gt;Fuse&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.fuse&quot;&gt;Fuse&lt;/a&gt;&amp;lt;I&amp;gt;: TrustedRandomAccess,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/fuse.rs.html#118-129&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="647b2b893584da0acf040cb022cce012611a1a84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;trait.iterator#method.__iterator_get_unchecked&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;idx: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;struct.zip&quot;&gt;Zip&lt;/a&gt;&amp;lt;A, B&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.zip&quot;&gt;Zip&lt;/a&gt;&amp;lt;A, B&amp;gt;: TrustedRandomAccess,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/zip.rs.html#62-69&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e67d25b9aa2dd0b4bdb13f0a0f92d409ec6724" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;trait.sourceiter#tymethod.as_inner&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/fuse.rs.html#529-536&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06f99db97a5bd1765f513f007e18e1f5da4d0ef3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;trait.sourceiter#tymethod.as_inner&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1031-1034&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c89754dd691f1042c81853e764c76dae19d388" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;trait.sourceiter#tymethod.as_inner&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1180-1183&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf7684fcfdc008bed62d9aa157e30a5d2e1f02f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;trait.sourceiter#tymethod.as_inner&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1324-1327&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9d4855a7effb9cf17b55fb98ee9734c8484b5c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;trait.sourceiter#tymethod.as_inner&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1562-1565&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d09f94ecb8bd85a3516350e0abec50ca0852481" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;trait.sourceiter#tymethod.as_inner&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1860-1863&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="404ea8f11ccf26c0af25b1b7a6f5ac385252d6e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;trait.sourceiter#tymethod.as_inner&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1979-1982&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaacb920699bf25461706ecb38018a51a87fff18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;trait.sourceiter#tymethod.as_inner&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2114-2117&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42d8d7f7f1cc239fe8cc79173171d157c1ea58ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;trait.sourceiter#tymethod.as_inner&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2212-2215&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9190a32867750b2433c0643d33d6551917199bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;trait.sourceiter#tymethod.as_inner&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2411-2414&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceea1a91d43d810bd7973e87298c795f73de31c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;trait.sourceiter#tymethod.as_inner&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2538-2541&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d88f6d686ad0a3e203fb4c3597205cccb91f9f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;trait.sourceiter#tymethod.as_inner&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2720-2723&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb430dc6e6cd22f8fb517871e1fd3e180a038b34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;trait.sourceiter#tymethod.as_inner&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2887-2890&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d1e0480fcfd00f25c73721091f17d3cba26dea6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub unsafe fn &lt;a href=&quot;trait.sourceiter#tymethod.as_inner&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/zip.rs.html#346-349&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3716c897be4542682afec1ccd5f2b7a00a78a499" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub(crate)&lt;/code&gt; makes an item visible within the current crate.</source>
          <target state="translated">&lt;code&gt;pub(crate)&lt;/code&gt; hace que un elemento sea visible dentro de la caja actual.</target>
        </trans-unit>
        <trans-unit id="e244e5c6210bbaeafb8a20af2bd53f7f634e9d92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub(in path)&lt;/code&gt; makes an item visible within the provided &lt;code&gt;path&lt;/code&gt;. &lt;code&gt;path&lt;/code&gt; must be a parent module of the item whose visibility is being declared.</source>
          <target state="translated">&lt;code&gt;pub(in path)&lt;/code&gt; hace que un elemento sea visible dentro de la &lt;code&gt;path&lt;/code&gt; proporcionada . &lt;code&gt;path&lt;/code&gt; debe ser un m&amp;oacute;dulo padre del elemento cuya visibilidad se declara.</target>
        </trans-unit>
        <trans-unit id="8c9941aa9043663ce0919072269243fe40482c70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub(in path)&lt;/code&gt; makes an item visible within the provided &lt;code&gt;path&lt;/code&gt;. &lt;code&gt;path&lt;/code&gt; must be an ancestor module of the item whose visibility is being declared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2e98367a724327f63f5b73009472cb3e139320" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub(in path)&lt;/code&gt;, &lt;code&gt;pub(crate)&lt;/code&gt;, &lt;code&gt;pub(super)&lt;/code&gt;, and &lt;code&gt;pub(self)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pub(in path)&lt;/code&gt; , &lt;code&gt;pub(crate)&lt;/code&gt; , &lt;code&gt;pub(super)&lt;/code&gt; y &lt;code&gt;pub(self)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7e29ccfac42727cc0585f2811de788d77f4b1b06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub(self)&lt;/code&gt; makes an item visible to the current module. This is equivalent to &lt;code&gt;pub(in self)&lt;/code&gt; or not using &lt;code&gt;pub&lt;/code&gt; at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d6fa93376a74580a8a18e9c3023defaeec815f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub(self)&lt;/code&gt; makes an item visible to the current module. This is equivalent to &lt;code&gt;pub(in self)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pub(self)&lt;/code&gt; hace que un elemento sea visible para el m&amp;oacute;dulo actual. Esto es equivalente a &lt;code&gt;pub(in self)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed18bc09fd5d8672a156418d5af9c753fc33dc75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub(super)&lt;/code&gt; makes an item visible to the parent module. This is equivalent to &lt;code&gt;pub(in super)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pub(super)&lt;/code&gt; hace que un elemento sea visible para el m&amp;oacute;dulo principal. Esto es equivalente a &lt;code&gt;pub(in super)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a1be70fc2abd812619326b7d5f484cb66c683356" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub&lt;/code&gt; - denote public visibility in struct fields, &lt;code&gt;impl&lt;/code&gt; blocks, or modules</source>
          <target state="translated">&lt;code&gt;pub&lt;/code&gt; : denota visibilidad p&amp;uacute;blica en campos de estructura, bloques &lt;code&gt;impl&lt;/code&gt; &amp;iacute;citos o m&amp;oacute;dulos</target>
        </trans-unit>
        <trans-unit id="5c7277d7b9e326c8e7cd0225ac28502af51b85c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;pub&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="cbc45e05a8267e7a3bdf40fcaa4d87714bd3c619" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;r&quot;...&quot;&lt;/code&gt;, &lt;code&gt;r#&quot;...&quot;#&lt;/code&gt;, &lt;code&gt;r##&quot;...&quot;##&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;code&gt;r&quot;...&quot;&lt;/code&gt; , &lt;code&gt;r#&quot;...&quot;#&lt;/code&gt; , &lt;code&gt;r##&quot;...&quot;##&lt;/code&gt; , etc.</target>
        </trans-unit>
        <trans-unit id="3f1ef34dfac0fbdff6a58587b64f54cfadfbab83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;r&lt;/code&gt; RAW_STRING_CONTENT</source>
          <target state="translated">&lt;code&gt;r&lt;/code&gt; RAW_STRING_CONTENT</target>
        </trans-unit>
        <trans-unit id="aa90f1594fa6c1330dbd84c3e3d3031bd3722b8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;range&lt;/code&gt; is removed even if the iterator is not consumed until the end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3496df7f964b3da68df1770f73523cff9459893" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;read&lt;/code&gt; creates a bitwise copy of &lt;code&gt;T&lt;/code&gt;, regardless of whether &lt;code&gt;T&lt;/code&gt; is &lt;a href=&quot;../marker/trait.copy&quot;&gt;&lt;code&gt;Copy&lt;/code&gt;&lt;/a&gt;. If &lt;code&gt;T&lt;/code&gt; is not &lt;a href=&quot;../marker/trait.copy&quot;&gt;&lt;code&gt;Copy&lt;/code&gt;&lt;/a&gt;, using both the returned value and the value at &lt;code&gt;*src&lt;/code&gt; can violate memory safety. Note that assigning to &lt;code&gt;*src&lt;/code&gt; counts as a use because it will attempt to drop the value at &lt;code&gt;*src&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;read&lt;/code&gt; crea una copia bit a bit de &lt;code&gt;T&lt;/code&gt; , independientemente de si &lt;code&gt;T&lt;/code&gt; es &lt;a href=&quot;../marker/trait.copy&quot;&gt; &lt;code&gt;Copy&lt;/code&gt; &lt;/a&gt; . Si &lt;code&gt;T&lt;/code&gt; no es &lt;a href=&quot;../marker/trait.copy&quot;&gt; &lt;code&gt;Copy&lt;/code&gt; &lt;/a&gt; , usar tanto el valor devuelto como el valor en &lt;code&gt;*src&lt;/code&gt; puede violar la seguridad de la memoria. Tenga en cuenta que asignar a &lt;code&gt;*src&lt;/code&gt; cuenta como un uso porque intentar&amp;aacute; eliminar el valor en &lt;code&gt;*src&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="79aec6cdde39a19b7d9a9a800222b6ad5595ce43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ref&lt;/code&gt; - bind by reference</source>
          <target state="translated">&lt;code&gt;ref&lt;/code&gt; - enlazar por referencia</target>
        </trans-unit>
        <trans-unit id="a714bac17c472f7a1bc3c3bd5d7e11c1eb3ef657" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ref&lt;/code&gt; annotates pattern bindings to make them borrow rather than move. It is &lt;strong&gt;not&lt;/strong&gt; a part of the pattern as far as matching is concerned: it does not affect &lt;em&gt;whether&lt;/em&gt; a value is matched, only &lt;em&gt;how&lt;/em&gt; it is matched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a407c4a9e46c96ba5737f79d7a4f510b49a659a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ref&lt;/code&gt; indicates that you want a reference to an unpacked value. It is not matched against: &lt;code&gt;Foo(ref foo)&lt;/code&gt; matches the same objects as &lt;code&gt;Foo(foo)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93608239a66862b9b2552da7e0d38bb35a147ae6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ref&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;mut&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; (&lt;code&gt;@&lt;/code&gt;&lt;a href=&quot;#patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt; ) &lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38457fb066838f03c4b2e9c59b4180790259129a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ref&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;mut&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; (&lt;code&gt;@&lt;/code&gt;&lt;a href=&quot;patterns#patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt; ) &lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;ref&lt;/code&gt; &lt;sup&gt;? &lt;/sup&gt; &lt;code&gt;mut&lt;/code&gt; &lt;sup&gt;? &lt;/sup&gt;&lt;a href=&quot;identifiers&quot;&gt;IDENTIFICADOR&lt;/a&gt; ( &lt;code&gt;@&lt;/code&gt; &lt;a href=&quot;patterns#patterns&quot;&gt;&lt;em&gt;Patr&amp;oacute;n&lt;/em&gt;&lt;/a&gt; ) &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9454523b62c6c9dc19c0e79cd1c9c70bc5714f0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;repetition&lt;/code&gt; : a fragment that follows a regular repeating pattern</source>
          <target state="translated">&lt;code&gt;repetition&lt;/code&gt; : un fragmento que sigue un patr&amp;oacute;n de repetici&amp;oacute;n regular</target>
        </trans-unit>
        <trans-unit id="4548cf0b854b0433c6e4f6378c8dcc6fa06e9627" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replace&lt;/code&gt; allows consumption of a struct field by replacing it with another value. Without &lt;code&gt;replace&lt;/code&gt; you can run into issues like these:</source>
          <target state="translated">&lt;code&gt;replace&lt;/code&gt; permite el consumo de un campo de estructura reemplaz&amp;aacute;ndolo con otro valor. Sin &lt;code&gt;replace&lt;/code&gt; , puede encontrarse con problemas como estos:</target>
        </trans-unit>
        <trans-unit id="e0267f0c7b2765a197ed1365af284f22a1f3e107" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replace&lt;/code&gt; creates a new &lt;a href=&quot;string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, and copies the data from this string slice into it. While doing so, it attempts to find matches of a pattern. If it finds any, it replaces them with the replacement string slice.</source>
          <target state="translated">&lt;code&gt;replace&lt;/code&gt; crea una nueva &lt;a href=&quot;string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; y copia los datos de esta secci&amp;oacute;n de cadena en ella. Mientras lo hace, intenta encontrar coincidencias de un patr&amp;oacute;n. Si encuentra alguno, lo reemplaza con el segmento de cadena de reemplazo.</target>
        </trans-unit>
        <trans-unit id="1c9c2220dd05fdcb4aac80b4763a9597201e2e92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replace&lt;/code&gt; creates a new &lt;a href=&quot;struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, and copies the data from this string slice into it. While doing so, it attempts to find matches of a pattern. If it finds any, it replaces them with the replacement string slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e65ccabcad8d607cfa9500600b305c3d751e4bf9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replacen&lt;/code&gt; creates a new &lt;a href=&quot;string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, and copies the data from this string slice into it. While doing so, it attempts to find matches of a pattern. If it finds any, it replaces them with the replacement string slice at most &lt;code&gt;count&lt;/code&gt; times.</source>
          <target state="translated">&lt;code&gt;replacen&lt;/code&gt; crea una nueva &lt;a href=&quot;string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; y copia los datos de esta secci&amp;oacute;n de cadena en ella. Mientras lo hace, intenta encontrar coincidencias de un patr&amp;oacute;n. Si encuentra alguno, lo reemplaza con el segmento de cadena de reemplazo en la mayor&amp;iacute;a de los tiempos de &lt;code&gt;count&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bfa2f1e544b5851c5ace1b3b8e96b4b808cf0272" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replacen&lt;/code&gt; creates a new &lt;a href=&quot;struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, and copies the data from this string slice into it. While doing so, it attempts to find matches of a pattern. If it finds any, it replaces them with the replacement string slice at most &lt;code&gt;count&lt;/code&gt; times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b0a2e84d7415dc958fe7758bd7cf63a180bb417" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;return&lt;/code&gt; - return from function</source>
          <target state="translated">&lt;code&gt;return&lt;/code&gt; - retorno de la funci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="c15a670ff1938000c192dad14fac98a79e2e3ac2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;return&lt;/code&gt; expressions</source>
          <target state="translated">&lt;code&gt;return&lt;/code&gt; expresiones</target>
        </trans-unit>
        <trans-unit id="324732feaf35e1edf09bf4ca1fa847d96d1a9782" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;return&lt;/code&gt; is not needed when the returned value is the last expression in the function. In this case the &lt;code&gt;;&lt;/code&gt; is omitted:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6415d1edf35289bab74e2d578ed1f4736fe59e94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;return&lt;/code&gt; returns from the function immediately (an &quot;early return&quot;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67a81bce7735c4c8dcc873ea0d8ed586e63971f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;return&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;return&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="0c20b32549eb0c3e50bf26b6136d1fcb33d1aca0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;return&lt;/code&gt;&lt;code&gt;break&lt;/code&gt; closures</source>
          <target state="translated">&lt;code&gt;return&lt;/code&gt; cierres de &lt;code&gt;break&lt;/code&gt; retorno</target>
        </trans-unit>
        <trans-unit id="f231dbdc06422e9ea5b9cfe17ce77515dd672e8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rfind()&lt;/code&gt; is short-circuiting; in other words, it will stop processing as soon as the closure returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rfind()&lt;/code&gt; est&amp;aacute; en cortocircuito; en otras palabras, dejar&amp;aacute; de procesarse tan pronto como el cierre vuelva a ser &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d97aff1d14d8fb997058b7557012d977906f7ad3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rfind()&lt;/code&gt; takes a closure that returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. It applies this closure to each element of the iterator, starting at the end, and if any of them return &lt;code&gt;true&lt;/code&gt;, then &lt;code&gt;rfind()&lt;/code&gt; returns &lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt;&lt;code&gt;Some(element)&lt;/code&gt;&lt;/a&gt;. If they all return &lt;code&gt;false&lt;/code&gt;, it returns &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;rfind()&lt;/code&gt; toma un cierre que devuelve &lt;code&gt;true&lt;/code&gt; o &lt;code&gt;false&lt;/code&gt; . Aplica este cierre a cada elemento del iterador, comenzando por el final, y si alguno de ellos devuelve &lt;code&gt;true&lt;/code&gt; , entonces &lt;code&gt;rfind()&lt;/code&gt; devuelve &lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt; &lt;code&gt;Some(element)&lt;/code&gt; &lt;/a&gt; . Si todos devuelven &lt;code&gt;false&lt;/code&gt; , devuelve &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0469fbc0fcd72dff61e3038e1b41c1ee7696ac80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rfold()&lt;/code&gt; takes two arguments: an initial value, and a closure with two arguments: an 'accumulator', and an element. The closure returns the value that the accumulator should have for the next iteration.</source>
          <target state="translated">&lt;code&gt;rfold()&lt;/code&gt; toma dos argumentos: un valor inicial y un cierre con dos argumentos: un 'acumulador' y un elemento. El cierre devuelve el valor que deber&amp;iacute;a tener el acumulador para la siguiente iteraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c315b4e152c3d9045dd11786d11f385ee7391d4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rposition()&lt;/code&gt; is short-circuiting; in other words, it will stop processing as soon as it finds a &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rposition()&lt;/code&gt; est&amp;aacute; en cortocircuito; en otras palabras, dejar&amp;aacute; de procesar tan pronto como encuentre un &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3f8832ab36f0d97e64ef12568fd3b388e8fc770d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rposition()&lt;/code&gt; takes a closure that returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. It applies this closure to each element of the iterator, starting from the end, and if one of them returns &lt;code&gt;true&lt;/code&gt;, then &lt;code&gt;rposition()&lt;/code&gt; returns &lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt;&lt;code&gt;Some(index)&lt;/code&gt;&lt;/a&gt;. If all of them return &lt;code&gt;false&lt;/code&gt;, it returns &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;rposition()&lt;/code&gt; toma un cierre que devuelve &lt;code&gt;true&lt;/code&gt; o &lt;code&gt;false&lt;/code&gt; . Aplica este cierre a cada elemento del iterador, comenzando desde el final, y si uno de ellos devuelve &lt;code&gt;true&lt;/code&gt; , entonces &lt;code&gt;rposition()&lt;/code&gt; devuelve &lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt; &lt;code&gt;Some(index)&lt;/code&gt; &lt;/a&gt; . Si todos devuelven &lt;code&gt;false&lt;/code&gt; , devuelve &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="44187ffc6652aaa7c984920b559cb964fc11164b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scan()&lt;/code&gt; takes two arguments: an initial value which seeds the internal state, and a closure with two arguments, the first being a mutable reference to the internal state and the second an iterator element. The closure can assign to the internal state to share state between iterations.</source>
          <target state="translated">&lt;code&gt;scan()&lt;/code&gt; toma dos argumentos: un valor inicial que siembra el estado interno y un cierre con dos argumentos, el primero es una referencia mutable al estado interno y el segundo un elemento iterador. El cierre se puede asignar al estado interno para compartir el estado entre iteraciones.</target>
        </trans-unit>
        <trans-unit id="b7e4087a59d7db17a93ec98d1a6e141c27cefeb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt; - method subject or current module</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; - m&amp;eacute;todo objeto o m&amp;oacute;dulo actual</target>
        </trans-unit>
        <trans-unit id="5a57893af25bf81ba3c2d3e57e6480c1e0642a56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt; resolves the path relative to the current module. &lt;code&gt;self&lt;/code&gt; can only be used as the first segment, without a preceding &lt;code&gt;::&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; resuelve la ruta relativa al m&amp;oacute;dulo actual. &lt;code&gt;self&lt;/code&gt; solo se puede usar como el primer segmento, sin un &lt;code&gt;::&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82740239487244545117186e09a09c10f8b9fdfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;separated complex NT&lt;/code&gt;: a complex NT that has its own separator token.</source>
          <target state="translated">&lt;code&gt;separated complex NT&lt;/code&gt; : un NT complejo que tiene su propio s&amp;iacute;mbolo separador.</target>
        </trans-unit>
        <trans-unit id="05b574e7c6fd33234ec611e29bcd10bb6d5d9405" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;separator token&lt;/code&gt;: an optional delimiter token in an complex NT that separates each pair of elements in the matched repetition.</source>
          <target state="translated">&lt;code&gt;separator token&lt;/code&gt; : un token delimitador opcional en un NT complejo que separa cada par de elementos en la repetici&amp;oacute;n emparejada.</target>
        </trans-unit>
        <trans-unit id="f640c658e0dc190b95d5120e0f41acc1036e6277" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;simple NT&lt;/code&gt;: a &quot;meta-variable&quot; non-terminal (further discussion below).</source>
          <target state="translated">&lt;code&gt;simple NT&lt;/code&gt; : una &quot;metavariable&quot; no terminal (se explica m&amp;aacute;s adelante).</target>
        </trans-unit>
        <trans-unit id="1f33d4f90ab86cc078ac8802a8cffe79680a48bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;since&lt;/code&gt; &amp;mdash; Specifies a version number when the item was deprecated. &lt;code&gt;rustc&lt;/code&gt; does not currently interpret the string, but external tools like &lt;a href=&quot;https://github.com/rust-lang/rust-clippy&quot;&gt;Clippy&lt;/a&gt; may check the validity of the value.</source>
          <target state="translated">&lt;code&gt;since&lt;/code&gt; : especifica un n&amp;uacute;mero de versi&amp;oacute;n cuando el art&amp;iacute;culo estaba en desuso. &lt;code&gt;rustc&lt;/code&gt; actualmente no interpreta la cadena, pero herramientas externas como &lt;a href=&quot;https://github.com/rust-lang/rust-clippy&quot;&gt;Clippy&lt;/a&gt; pueden verificar la validez del valor.</target>
        </trans-unit>
        <trans-unit id="e6561540a07c369427c9b5c968c7291f45dab48b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt;, when rounded up to the nearest multiple of &lt;code&gt;align&lt;/code&gt;, must not overflow (i.e., the rounded value must be less than &lt;code&gt;usize::MAX&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; , cuando se redondea al m&amp;uacute;ltiplo m&amp;aacute;s cercano de &lt;code&gt;align&lt;/code&gt; , no debe desbordarse (es decir, el valor redondeado debe ser menor que &lt;code&gt;usize::MAX&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7981bfbacddbb44ebf820397efe27928bec82351" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt;, when rounded up to the nearest multiple of &lt;code&gt;align&lt;/code&gt;, must not overflow (i.e., the rounded value must be less than or equal to &lt;code&gt;usize::MAX&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d17aa1d875dfa9b462d34dfe331e338ba203115a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size_hint()&lt;/code&gt; is primarily intended to be used for optimizations such as reserving space for the elements of the iterator, but must not be trusted to e.g., omit bounds checks in unsafe code. An incorrect implementation of &lt;code&gt;size_hint()&lt;/code&gt; should not lead to memory safety violations.</source>
          <target state="translated">&lt;code&gt;size_hint()&lt;/code&gt; est&amp;aacute; destinado principalmente a ser utilizado para optimizaciones tales como reservar espacio para los elementos del iterador, pero no se debe confiar en, por ejemplo, para omitir comprobaciones de l&amp;iacute;mites en c&amp;oacute;digo inseguro. Una implementaci&amp;oacute;n incorrecta de &lt;code&gt;size_hint()&lt;/code&gt; no deber&amp;iacute;a conducir a violaciones de seguridad de la memoria.</target>
        </trans-unit>
        <trans-unit id="4f70e02bad1fb8a115ec2bfeaeadee2c07c0caa1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;skip_while()&lt;/code&gt; takes a closure as an argument. It will call this closure on each element of the iterator, and ignore elements until it returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;skip_while()&lt;/code&gt; toma un cierre como argumento. Llamar&amp;aacute; a este cierre en cada elemento del iterador e ignorar&amp;aacute; los elementos hasta que devuelva &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2325ded05106fa9a2bed447d21025c84f50f5ea3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src&lt;/code&gt; is the range within &lt;code&gt;self&lt;/code&gt; to copy from. &lt;code&gt;dest&lt;/code&gt; is the starting index of the range within &lt;code&gt;self&lt;/code&gt; to copy to, which will have the same length as &lt;code&gt;src&lt;/code&gt;. The two ranges may overlap. The ends of the two ranges must be less than or equal to &lt;code&gt;self.len()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; es el rango dentro de &lt;code&gt;self&lt;/code&gt; para copiar. &lt;code&gt;dest&lt;/code&gt; es el &amp;iacute;ndice inicial del rango dentro de &lt;code&gt;self&lt;/code&gt; al que copiar, que tendr&amp;aacute; la misma longitud que &lt;code&gt;src&lt;/code&gt; . Los dos rangos pueden superponerse. Los extremos de los dos rangos deben ser menores o iguales que &lt;code&gt;self.len()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c0917646d8728988487d064fac2c14f59a665065" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src&lt;/code&gt; must be &lt;a href=&quot;../ptr/index#safety&quot;&gt;valid&lt;/a&gt; for reads of &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; bytes.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; debe ser &lt;a href=&quot;../ptr/index#safety&quot;&gt;v&amp;aacute;lido&lt;/a&gt; para lecturas de &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; bytes.</target>
        </trans-unit>
        <trans-unit id="154a0d95375b0182f8e4fdfa80a253d710d41383" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src&lt;/code&gt; must be &lt;a href=&quot;index#safety&quot;&gt;valid&lt;/a&gt; for reads of &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; bytes.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; debe ser &lt;a href=&quot;index#safety&quot;&gt;v&amp;aacute;lido&lt;/a&gt; para lecturas de &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; bytes.</target>
        </trans-unit>
        <trans-unit id="c3932aaae250c78900aaba45274ae965ddbcd18a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src&lt;/code&gt; must be &lt;a href=&quot;index#safety&quot;&gt;valid&lt;/a&gt; for reads.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; debe ser &lt;a href=&quot;index#safety&quot;&gt;v&amp;aacute;lido&lt;/a&gt; para lecturas.</target>
        </trans-unit>
        <trans-unit id="1eb5075986eee387a9acdc56f4940da2f7a19994" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src&lt;/code&gt; must be properly aligned.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; debe estar correctamente alineado.</target>
        </trans-unit>
        <trans-unit id="f441a811656a0c3dd4a6016a7503878191979ea2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src&lt;/code&gt; must be properly aligned. Use &lt;a href=&quot;fn.read_unaligned&quot;&gt;&lt;code&gt;read_unaligned&lt;/code&gt;&lt;/a&gt; if this is not the case.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; debe estar correctamente alineado. Utilice &lt;a href=&quot;fn.read_unaligned&quot;&gt; &lt;code&gt;read_unaligned&lt;/code&gt; &lt;/a&gt; si este no es el caso.</target>
        </trans-unit>
        <trans-unit id="e861e67d2971ba6f401894e135c1b346aa3b6272" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src&lt;/code&gt; must point to a properly initialized value of type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e236aef0934c86a0d74b6088d301f4eaca2720" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;static&lt;/code&gt; &amp;mdash; Indicates a static library.</source>
          <target state="translated">&lt;code&gt;static&lt;/code&gt; : indica una biblioteca est&amp;aacute;tica.</target>
        </trans-unit>
        <trans-unit id="64cb1a64239891af05cbbbc93d77402f661c4c47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;static&lt;/code&gt; - global variable or lifetime lasting the entire program execution</source>
          <target state="translated">&lt;code&gt;static&lt;/code&gt; : variable global o vida &amp;uacute;til que dura toda la ejecuci&amp;oacute;n del programa</target>
        </trans-unit>
        <trans-unit id="c7bbba120e00cb3e3f20b033aec74518ac4d6cf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;static&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; item declarations (similar to &lt;code&gt;let&lt;/code&gt; statements).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebbc410882f7d5448c407ca5659024240a6dda57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;static&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; statements (similar to &lt;code&gt;let&lt;/code&gt; statements).</source>
          <target state="translated">&lt;code&gt;static&lt;/code&gt; declaraciones est&amp;aacute;ticas y &lt;code&gt;const&lt;/code&gt; (similar a las declaraciones &lt;code&gt;let&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c95a320ef3efcbc4189ba9ec5c6dd858f287b25e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;static&lt;/code&gt;&lt;code&gt;mut&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;static&lt;/code&gt;&lt;code&gt;mut&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0919ec1ea19851132893298b32894f6e70049d6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;static&lt;/code&gt;&lt;code&gt;mut&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;static&lt;/code&gt;&lt;code&gt;mut&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bcb4b5702c1587354d79a6cfe054038f4afdf76a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;std::*&lt;/code&gt; modules</source>
          <target state="translated">&lt;code&gt;std::*&lt;/code&gt; m&amp;oacute;dulos</target>
        </trans-unit>
        <trans-unit id="4f28c89525ec17874a17d9bd45904c60323a26a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;std&lt;/code&gt; is available to all Rust crates by default. Therefore, the standard library can be accessed in &lt;a href=&quot;../book/ch07-02-defining-modules-to-control-scope-and-privacy&quot;&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt; statements through the path &lt;code&gt;std&lt;/code&gt;, as in &lt;a href=&quot;env/index&quot;&gt;&lt;code&gt;use std::env&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;std&lt;/code&gt; est&amp;aacute; disponible para todas las cajas Rust de forma predeterminada. Por lo tanto, se puede acceder a la biblioteca est&amp;aacute;ndar en instrucciones de &lt;a href=&quot;../book/ch07-02-defining-modules-to-control-scope-and-privacy&quot;&gt; &lt;code&gt;use&lt;/code&gt; &lt;/a&gt; trav&amp;eacute;s de la ruta &lt;code&gt;std&lt;/code&gt; , como en &lt;a href=&quot;env/index&quot;&gt; &lt;code&gt;use std::env&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="701f782f72dd2c48e64ebdb69c0c789713a8943e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;steps_between(&amp;amp;a, &amp;amp;b) == None&lt;/code&gt; if &lt;code&gt;a &amp;gt; b&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da31ea4cac8310f69d7dedc143ef9022aaca351" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;steps_between(&amp;amp;a, &amp;amp;b) == Some(n)&lt;/code&gt; if and only if &lt;code&gt;Step::backward_checked(&amp;amp;a, n) == Some(a)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="961fe305ff6bcce5c79490c415eb3749e5f580ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;steps_between(&amp;amp;a, &amp;amp;b) == Some(n)&lt;/code&gt; if and only if &lt;code&gt;Step::forward_checked(&amp;amp;a, n) == Some(b)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="889cfb4640c19067f506b9e9795f47912cf5ec65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;steps_between(&amp;amp;a, &amp;amp;b) == Some(n)&lt;/code&gt; only if &lt;code&gt;a &amp;lt;= b&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1547b82dd2d11f511fe70c22b40a48ae8af6fcc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stmt&lt;/code&gt;: a &lt;a href=&quot;statements&quot;&gt;&lt;em&gt;Statement&lt;/em&gt;&lt;/a&gt; without the trailing semicolon (except for item statements that require semicolons)</source>
          <target state="translated">&lt;code&gt;stmt&lt;/code&gt; : una &lt;a href=&quot;statements&quot;&gt;&lt;em&gt;declaraci&amp;oacute;n&lt;/em&gt;&lt;/a&gt; sin la coma final (a excepci&amp;oacute;n de las declaraciones de elementos que requieren puntos y comas)</target>
        </trans-unit>
        <trans-unit id="ceaa90f7c3072ac3a54aa7d6730427ba6ddb60c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;store&lt;/code&gt; takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. Possible values are &lt;a href=&quot;enum.ordering#variant.SeqCst&quot;&gt;&lt;code&gt;SeqCst&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;store&lt;/code&gt; toma un argumento &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; que describe el orden de la memoria de esta operaci&amp;oacute;n. Los valores posibles son &lt;a href=&quot;enum.ordering#variant.SeqCst&quot;&gt; &lt;code&gt;SeqCst&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="90ca25a4f034af9b8f70f21c2dbba7f666343917" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;str&lt;/code&gt; Layout</source>
          <target state="translated">&lt;code&gt;str&lt;/code&gt; dise&amp;ntilde;o str</target>
        </trans-unit>
        <trans-unit id="f30de198812b944ea0c38ae5504032c4739c470e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;struct&lt;/code&gt; - define a structure</source>
          <target state="translated">&lt;code&gt;struct&lt;/code&gt; - define una estructura</target>
        </trans-unit>
        <trans-unit id="2c6d46f9db815f3033748933785f1777882d397c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;struct&lt;/code&gt; literal</source>
          <target state="translated">&lt;code&gt;struct&lt;/code&gt; literal</target>
        </trans-unit>
        <trans-unit id="b36187fc68c888f2b17d4ce077c877670a9fd135" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;struct&lt;/code&gt; types are analogous to &lt;code&gt;struct&lt;/code&gt; types in C, the &lt;em&gt;record&lt;/em&gt; types of the ML family, or the &lt;em&gt;struct&lt;/em&gt; types of the Lisp family.</source>
          <target state="translated">&lt;code&gt;struct&lt;/code&gt; tipos de estructuras son an&amp;aacute;logos a los tipos de &lt;code&gt;struct&lt;/code&gt; en C, los tipos de &lt;em&gt;registros&lt;/em&gt; de la familia ML o los tipos de &lt;em&gt;estructuras&lt;/em&gt; de la familia Lisp.</target>
        </trans-unit>
        <trans-unit id="be5f6f327cf8b30e85ebbea7ea5017ce1ec6c3d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;struct&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt; ( &lt;code&gt;{&lt;/code&gt;&lt;em&gt;StructFields&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;}&lt;/code&gt; | &lt;code&gt;;&lt;/code&gt; )</source>
          <target state="translated">&lt;code&gt;struct&lt;/code&gt; &lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER &lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Gen&amp;eacute;ricos&lt;/em&gt;&lt;/a&gt;&lt;sup&gt; ? &lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt; ? &lt;/sup&gt;( &lt;code&gt;{&lt;/code&gt; &lt;em&gt;StructFields &lt;/em&gt;&lt;sup&gt;? &lt;/sup&gt; &lt;code&gt;}&lt;/code&gt; | &lt;code&gt;;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="0a1ee96ffae5bfefba492eb9b5a6edea8df103dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;struct&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;TupleFields&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;struct&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;TupleFields&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="687ed7a00a27f7e2aef40cd3dd0438bf344c064a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;super&lt;/code&gt; - parent module of the current module</source>
          <target state="translated">&lt;code&gt;super&lt;/code&gt; - m&amp;oacute;dulo padre del m&amp;oacute;dulo actual</target>
        </trans-unit>
        <trans-unit id="0e7befa38ed89799a44b49feb18b6dc7bc329e1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;super&lt;/code&gt; in a path resolves to the parent module. It may only be used in leading segments of the path, possibly after an initial &lt;code&gt;self&lt;/code&gt; segment.</source>
          <target state="translated">&lt;code&gt;super&lt;/code&gt; en una ruta se resuelve en el m&amp;oacute;dulo principal. Solo se puede utilizar en los segmentos iniciales de la ruta, posiblemente despu&amp;eacute;s de un &lt;code&gt;self&lt;/code&gt; segmento inicial .</target>
        </trans-unit>
        <trans-unit id="6d05db176698bd65d99d4cfba8bd0a8376a5b0f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;super&lt;/code&gt; may be repeated several times after the first &lt;code&gt;super&lt;/code&gt; or &lt;code&gt;self&lt;/code&gt; to refer to ancestor modules.</source>
          <target state="translated">&lt;code&gt;super&lt;/code&gt; puede repetirse varias veces despu&amp;eacute;s del primer &lt;code&gt;super&lt;/code&gt; o &lt;code&gt;self&lt;/code&gt; para referirse a los m&amp;oacute;dulos ancestros.</target>
        </trans-unit>
        <trans-unit id="f0cd48e5eef0ee4e5ad3fc6a5b00fe0f25cee1d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;swap&lt;/code&gt; takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. All ordering modes are possible. Note that using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the load part &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;swap&lt;/code&gt; toma un argumento &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; que describe el orden de memoria de esta operaci&amp;oacute;n. Todos los modos de pedido son posibles. Tenga en cuenta que el uso de &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; hace que la tienda sea parte de esta operaci&amp;oacute;n &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; , y el uso de &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; &lt;/a&gt; hace que la carga se &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f9a833f8c39d11f72a5179fc587e7727914596ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;take()&lt;/code&gt; is often used with an infinite iterator, to make it finite:</source>
          <target state="translated">&lt;code&gt;take()&lt;/code&gt; se usa a menudo con un iterador infinito, para hacerlo finito:</target>
        </trans-unit>
        <trans-unit id="0c6d4555814b5e27a40b3405726eb1875f9f77f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;take&lt;/code&gt; allows taking ownership of a struct field by replacing it with an &quot;empty&quot; value. Without &lt;code&gt;take&lt;/code&gt; you can run into issues like these:</source>
          <target state="translated">&lt;code&gt;take&lt;/code&gt; permite tomar posesi&amp;oacute;n de un campo de estructura reemplaz&amp;aacute;ndolo con un valor &quot;vac&amp;iacute;o&quot;. Sin &lt;code&gt;take&lt;/code&gt; , puede encontrarse con problemas como estos:</target>
        </trans-unit>
        <trans-unit id="1c4d5a989bdc653ef5b9d0180573ae1225eeeaa4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;take_while()&lt;/code&gt; takes a closure as an argument. It will call this closure on each element of the iterator, and yield elements while it returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;take_while()&lt;/code&gt; toma un cierre como argumento. Llamar&amp;aacute; a este cierre en cada elemento del iterador y producir&amp;aacute; elementos mientras devuelve &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df1cdc20084ffce4be79625d55d0a15cb957b134" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_drop&lt;/code&gt; must be &lt;a href=&quot;../ptr/index#safety&quot;&gt;valid&lt;/a&gt; for both reads and writes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca38561eaa0d2b3485495e518384f88d58e295a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_drop&lt;/code&gt; must be &lt;a href=&quot;../ptr/index#safety&quot;&gt;valid&lt;/a&gt; for reads.</source>
          <target state="translated">&lt;code&gt;to_drop&lt;/code&gt; debe ser &lt;a href=&quot;../ptr/index#safety&quot;&gt;v&amp;aacute;lido&lt;/a&gt; para lecturas.</target>
        </trans-unit>
        <trans-unit id="130b793671117dd1b96af2c7fc1479fda179e122" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_drop&lt;/code&gt; must be &lt;a href=&quot;index#safety&quot;&gt;valid&lt;/a&gt; for both reads and writes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24250e71bc280dcaf012673fb61adf6115e05b76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_drop&lt;/code&gt; must be &lt;a href=&quot;index#safety&quot;&gt;valid&lt;/a&gt; for reads.</source>
          <target state="translated">&lt;code&gt;to_drop&lt;/code&gt; debe ser &lt;a href=&quot;index#safety&quot;&gt;v&amp;aacute;lido&lt;/a&gt; para lecturas.</target>
        </trans-unit>
        <trans-unit id="32ca24d5afb440097b6f8c3437fba5bc2c12dae9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_drop&lt;/code&gt; must be properly aligned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d65e1efb8b6b95806276fa89628096da65f3bf25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_drop&lt;/code&gt; must be properly aligned. See the example below for how to drop an unaligned pointer.</source>
          <target state="translated">&lt;code&gt;to_drop&lt;/code&gt; debe estar correctamente alineado. Vea el ejemplo siguiente para saber c&amp;oacute;mo colocar un puntero no alineado.</target>
        </trans-unit>
        <trans-unit id="36c9576b6f91bb2b8f6fa3a3a3fecf3d0448b670" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;token tree&lt;/code&gt;: a tree structure formed from tokens (the leaves), complex NT's, and finite sequences of token trees.</source>
          <target state="translated">&lt;code&gt;token tree&lt;/code&gt; : una estructura de &amp;aacute;rbol formada por fichas (las hojas), NT complejas y secuencias finitas de &amp;aacute;rboles de fichas.</target>
        </trans-unit>
        <trans-unit id="dbae8bf5fef61c9952693677560e652cecf324f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;token&lt;/code&gt;: an atomic element of a matcher; i.e. identifiers, operators, open/close delimiters, &lt;em&gt;and&lt;/em&gt; simple NT's.</source>
          <target state="translated">&lt;code&gt;token&lt;/code&gt; : un elemento at&amp;oacute;mico de un comparador; es decir, identificadores, operadores, delimitadores de apertura / cierre,&lt;em&gt; y&lt;/em&gt; NT simples.</target>
        </trans-unit>
        <trans-unit id="1d261cfc33b3f42c8d5de636d023e7ee9d3539b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;trait + trait&lt;/code&gt;, &lt;code&gt;'a + trait&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;trait + trait&lt;/code&gt; , &lt;code&gt;'a + trait&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e8aeb78903d253f17ce950d7ce86cc47925788b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;trait&lt;/code&gt; - define a trait</source>
          <target state="translated">&lt;code&gt;trait&lt;/code&gt; - define un rasgo</target>
        </trans-unit>
        <trans-unit id="034f61b98a2845dfb551b61c03baf0c796699104" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transmute&lt;/code&gt; is &lt;strong&gt;incredibly&lt;/strong&gt; unsafe. There are a vast number of ways to cause &lt;a href=&quot;../../reference/behavior-considered-undefined&quot;&gt;undefined behavior&lt;/a&gt; with this function. &lt;code&gt;transmute&lt;/code&gt; should be the absolute last resort.</source>
          <target state="translated">&lt;code&gt;transmute&lt;/code&gt; es &lt;strong&gt;incre&amp;iacute;blemente&lt;/strong&gt; inseguro. Hay una gran cantidad de formas de provocar &lt;a href=&quot;../../reference/behavior-considered-undefined&quot;&gt;un comportamiento indefinido&lt;/a&gt; con esta funci&amp;oacute;n. &lt;code&gt;transmute&lt;/code&gt; debe ser el &amp;uacute;ltimo recurso absoluto.</target>
        </trans-unit>
        <trans-unit id="175fcd7de10c60db7596f63e7d92b1ff5ef63a16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transmute&lt;/code&gt; is semantically equivalent to a bitwise move of one type into another. It copies the bits from the source value into the destination value, then forgets the original. It's equivalent to C's &lt;code&gt;memcpy&lt;/code&gt; under the hood, just like &lt;code&gt;transmute_copy&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;transmute&lt;/code&gt; es sem&amp;aacute;nticamente equivalente a un movimiento bit a bit de un tipo a otro. Copia los bits del valor de origen en el valor de destino y luego olvida el original. Es equivalente a &lt;code&gt;memcpy&lt;/code&gt; de C bajo el cap&amp;oacute;, al igual que &lt;code&gt;transmute_copy&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b1e6c4a8fa90bfd9b072eb1e4ad10fb9a5cfe0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; - Boolean true literal</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; : verdadero literal booleano</target>
        </trans-unit>
        <trans-unit id="3d1d9f6406c7cd419678ba2a518aa0edbb8a78ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;try!&lt;/code&gt; matches the given &lt;a href=&quot;result/enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt;. In case of the &lt;code&gt;Ok&lt;/code&gt; variant, the expression has the value of the wrapped value.</source>
          <target state="translated">&lt;code&gt;try!&lt;/code&gt; coincide con el &lt;a href=&quot;result/enum.result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt; dado . En caso de &lt;code&gt;Ok&lt;/code&gt; variante , la expresi&amp;oacute;n tiene el valor del valor envuelto.</target>
        </trans-unit>
        <trans-unit id="29f7e94d4a82f9517634d924c7d5bc9b59da6428" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;try_fold()&lt;/code&gt; takes two arguments: an initial value, and a closure with two arguments: an 'accumulator', and an element. The closure either returns successfully, with the value that the accumulator should have for the next iteration, or it returns failure, with an error value that is propagated back to the caller immediately (short-circuiting).</source>
          <target state="translated">&lt;code&gt;try_fold()&lt;/code&gt; toma dos argumentos: un valor inicial y un cierre con dos argumentos: un 'acumulador' y un elemento. El cierre regresa exitosamente, con el valor que el acumulador deber&amp;iacute;a tener para la siguiente iteraci&amp;oacute;n, o regresa falla, con un valor de error que se propaga de regreso a la persona que llama inmediatamente (cortocircuito).</target>
        </trans-unit>
        <trans-unit id="c9dbb3dbc94673c47f6803251cb5fae592f24819" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tt&lt;/code&gt;: a &lt;a href=&quot;macros#macro-invocation&quot;&gt;&lt;em&gt;TokenTree&lt;/em&gt;&lt;/a&gt; (a single &lt;a href=&quot;tokens&quot;&gt;token&lt;/a&gt; or tokens in matching delimiters &lt;code&gt;()&lt;/code&gt;, &lt;code&gt;[]&lt;/code&gt;, or &lt;code&gt;{}&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;tt&lt;/code&gt; : un &lt;a href=&quot;macros#macro-invocation&quot;&gt;&lt;em&gt;TokenTree&lt;/em&gt;&lt;/a&gt; (un solo &lt;a href=&quot;tokens&quot;&gt;token&lt;/a&gt; o tokens en delimitadores coincidentes &lt;code&gt;()&lt;/code&gt; , &lt;code&gt;[]&lt;/code&gt; o &lt;code&gt;{}&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="3dd7fa85f0428b74821618eabd4dcdc9c6129636" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ty&lt;/code&gt;: a &lt;a href=&quot;types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;ty&lt;/code&gt; : un &lt;a href=&quot;types#type-expressions&quot;&gt;&lt;em&gt;tipo&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb29d3374411c36298ce65db4d8035138cfdb2fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type &lt;a href=&quot;#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;1.12.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f19156090f13c0e758f648128584dd095e3ac88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type::ident&lt;/code&gt;, &lt;code&gt;&amp;lt;type as trait&amp;gt;::ident&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;type::ident&lt;/code&gt; , &lt;code&gt;&amp;lt;type as trait&amp;gt;::ident&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a6243bc35c4a5f7d3ba99fbf79ca05c5c7638dca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt; - define a type alias or associated type</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; : define un alias de tipo o un tipo asociado</target>
        </trans-unit>
        <trans-unit id="5c04ee8c701705ea7f6b5b27e4d6f39207db0a83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt; does &lt;strong&gt;not&lt;/strong&gt; create a new type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78453e1a389a3cd1eccac228fea75d93571f7806" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; ( &lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt; )&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; &lt;a href=&quot;../identifiers&quot;&gt;IDENTIFICADOR&lt;/a&gt; ( &lt;code&gt;:&lt;/code&gt; &lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;&lt;sup&gt; ?&lt;/sup&gt; ) &lt;sup&gt;? &lt;/sup&gt; &lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9c75fe9982ba1b848a81443152678ea4e87f76cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="88f46c9099f80d20300f19c839ff2ab37f453993" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u128&lt;/code&gt; / &lt;code&gt;i128&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f99305dea981511b6f042c16de62399e754855cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u16&lt;/code&gt; / &lt;code&gt;i16&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3614618f326b5e16471f9332f930fafb0c388b66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u16&lt;/code&gt; is treated as port of the newly created &lt;a href=&quot;../net/enum.socketaddr&quot;&gt;&lt;code&gt;SocketAddr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;u16&lt;/code&gt; se trata como puerto del &lt;a href=&quot;../net/enum.socketaddr&quot;&gt; &lt;code&gt;SocketAddr&lt;/code&gt; &lt;/a&gt; reci&amp;eacute;n creado .</target>
        </trans-unit>
        <trans-unit id="eea0a10535447994d2273798613463f4b3980fec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u16&lt;/code&gt; is treated as port of the newly created &lt;a href=&quot;enum.socketaddr&quot;&gt;&lt;code&gt;SocketAddr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;u16&lt;/code&gt; se trata como puerto del &lt;a href=&quot;enum.socketaddr&quot;&gt; &lt;code&gt;SocketAddr&lt;/code&gt; &lt;/a&gt; reci&amp;eacute;n creado .</target>
        </trans-unit>
        <trans-unit id="4db967591594a7f31a22eabeb86fe1ff814ba829" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u32&lt;/code&gt; / &lt;code&gt;i32&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4263c5ce767a9c3f7a0aff71a899f1124e71ce29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u64&lt;/code&gt; / &lt;code&gt;i64&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72865a346c8606d1335e7d98201e86ca99930b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u8&lt;/code&gt; / &lt;code&gt;i8&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f1a6326a774c35e62bb7b315b36c24be7cf202f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u8&lt;/code&gt; to &lt;code&gt;char&lt;/code&gt; cast</source>
          <target state="translated">&lt;code&gt;u8&lt;/code&gt; a &lt;code&gt;char&lt;/code&gt; cast</target>
        </trans-unit>
        <trans-unit id="e4f26eb956911719088b5c0bffbc986b5f9b7de3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u8&lt;/code&gt; | &lt;code&gt;u16&lt;/code&gt; | &lt;code&gt;u32&lt;/code&gt; | &lt;code&gt;u64&lt;/code&gt; | &lt;code&gt;u128&lt;/code&gt; | &lt;code&gt;usize&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;u8&lt;/code&gt; | &lt;code&gt;u16&lt;/code&gt; | &lt;code&gt;u32&lt;/code&gt; | &lt;code&gt;u64&lt;/code&gt; | &lt;code&gt;u128&lt;/code&gt; | &lt;code&gt;usize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d2337112e72d044e1b4d70325534427ef28ed7a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u8&lt;/code&gt; | &lt;code&gt;u16&lt;/code&gt;, Block | Item</source>
          <target state="translated">&lt;code&gt;u8&lt;/code&gt; | &lt;code&gt;u16&lt;/code&gt; , Bloque | Articulo</target>
        </trans-unit>
        <trans-unit id="bd0d1066cf75fe5975a75c82dc257a3da4846bc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u8&lt;/code&gt;, &lt;code&gt;i8&lt;/code&gt;, &lt;code&gt;u16&lt;/code&gt;, &lt;code&gt;i16&lt;/code&gt;, &lt;code&gt;u32&lt;/code&gt;, &lt;code&gt;i32&lt;/code&gt;, &lt;code&gt;u64&lt;/code&gt;, &lt;code&gt;i64&lt;/code&gt;, &lt;code&gt;u128&lt;/code&gt;, &lt;code&gt;i128&lt;/code&gt;, &lt;code&gt;usize&lt;/code&gt;, &lt;code&gt;isize&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;u8&lt;/code&gt; , &lt;code&gt;i8&lt;/code&gt; , &lt;code&gt;u16&lt;/code&gt; , &lt;code&gt;i16&lt;/code&gt; , &lt;code&gt;u32&lt;/code&gt; , &lt;code&gt;i32&lt;/code&gt; , &lt;code&gt;u64&lt;/code&gt; , &lt;code&gt;i64&lt;/code&gt; , &lt;code&gt;u128&lt;/code&gt; , &lt;code&gt;i128&lt;/code&gt; , &lt;code&gt;usize&lt;/code&gt; , &lt;code&gt;isize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af4d4aaa5d7119b01bc4b46793c55424d1c7bdc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uninit&lt;/code&gt; is unsafe because there is no guarantee of what its contents are. In particular its drop-flag may be set to any state, which means it may claim either dropped or undropped. In the general case one must use &lt;code&gt;ptr::write&lt;/code&gt; to initialize memory previous set to the result of &lt;code&gt;uninit&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;uninit&lt;/code&gt; no es seguro porque no hay garant&amp;iacute;a de cu&amp;aacute;l es su contenido. En particular, su bandera de ca&amp;iacute;da puede establecerse en cualquier estado, lo que significa que puede reclamar que se ha eliminado o no. En el caso general, se debe usar &lt;code&gt;ptr::write&lt;/code&gt; para inicializar el conjunto anterior de memoria al resultado de &lt;code&gt;uninit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d34b055b6273aebbdae088102662aebe027932b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;union&lt;/code&gt; - define a &lt;a href=&quot;../reference/items/unions&quot;&gt;union&lt;/a&gt; and is only a keyword when used in a union declaration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e84734326b9228c078d992e678358f7019aa6589" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;union&lt;/code&gt; is used to declare a &lt;a href=&quot;items/unions&quot;&gt;union&lt;/a&gt; and is only a keyword when used in a union declaration.</source>
          <target state="translated">&lt;code&gt;union&lt;/code&gt; se utiliza para declarar una &lt;a href=&quot;items/unions&quot;&gt;uni&amp;oacute;n&lt;/a&gt; y es solo una palabra clave cuando se usa en una declaraci&amp;oacute;n de uni&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="bc3b8191e2485b33816d2e7cf9395ebd6f0b1a38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;union&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;{&lt;/code&gt;&lt;a href=&quot;structs&quot;&gt;&lt;em&gt;StructFields&lt;/em&gt;&lt;/a&gt;&lt;code&gt;}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;union&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;{&lt;/code&gt;&lt;a href=&quot;structs&quot;&gt;&lt;em&gt;StructFields&lt;/em&gt;&lt;/a&gt;&lt;code&gt;}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b9fa04d3e3ffb533a96f1c314a534c52676f2f4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unix&lt;/code&gt; and &lt;code&gt;windows&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;unix&lt;/code&gt; y &lt;code&gt;windows&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="348330ca3bbf2eb4cff6e672d042e105af48ddcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unix&lt;/code&gt; is set if &lt;code&gt;target_family = &quot;unix&quot;&lt;/code&gt; is set and &lt;code&gt;windows&lt;/code&gt; is set if &lt;code&gt;target_family = &quot;windows&quot;&lt;/code&gt; is set.</source>
          <target state="translated">&lt;code&gt;unix&lt;/code&gt; se establece si &lt;code&gt;target_family = &quot;unix&quot;&lt;/code&gt; est&amp;aacute; configurado y &lt;code&gt;windows&lt;/code&gt; est&amp;aacute; configurado si &lt;code&gt;target_family = &quot;windows&quot;&lt;/code&gt; est&amp;aacute; configurado.</target>
        </trans-unit>
        <trans-unit id="afb0cc9d4d98597aed8631440972eb82cda44b6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.__iterator_get_unchecked&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&amp;amp;mut self, idx: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/iter.rs.html#279-283&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec1710ab76436f6294adad51e89d7c3b52b59cda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.__iterator_get_unchecked-1&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&amp;amp;mut self, idx: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; T where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.cloned&quot;&gt;Cloned&lt;/a&gt;&amp;lt;I&amp;gt;: TrustedRandomAccess,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#433-440&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a053d2143c193a7070cf2edfd95b1539027e6820" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.__iterator_get_unchecked-2&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&amp;amp;mut self, idx: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; T where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.copied&quot;&gt;Copied&lt;/a&gt;&amp;lt;I&amp;gt;: TrustedRandomAccess,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#298-305&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e83134de65113508602f79f4bd549e5617e0c675" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.__iterator_get_unchecked-3&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;amp;'a &lt;a href=&quot;../primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.array&quot;&gt;; N]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/iter.rs.html#2160-2164&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="791d4a9af8ee696933e69eb9e03fb758cc2df4af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.__iterator_get_unchecked-4&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;amp;'a mut &lt;a href=&quot;../primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.array&quot;&gt;; N]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/iter.rs.html#2280-2284&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85c525dbff64d3f7bd46581c30eb1045cb957e50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.__iterator_get_unchecked-5&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;idx: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;struct.zip&quot;&gt;Zip&lt;/a&gt;&amp;lt;A, B&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.zip&quot;&gt;Zip&lt;/a&gt;&amp;lt;A, B&amp;gt;: TrustedRandomAccess,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/zip.rs.html#62-69&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6178a69a3cd2dc8e5e7b412252d7781b61e5dd3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.__iterator_get_unchecked-6&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&amp;amp;mut self, idx: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; B where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.map&quot;&gt;Map&lt;/a&gt;&amp;lt;I, F&amp;gt;: TrustedRandomAccess,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#948-955&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dfb020550c67185d9c33834956e9d5c4fcaa28a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.__iterator_get_unchecked-7&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;idx: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;struct.enumerate&quot;&gt;Enumerate&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.enumerate&quot;&gt;Enumerate&lt;/a&gt;&amp;lt;I&amp;gt;: TrustedRandomAccess,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1444-1452&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c34ae781b36011acdada203bca76b5d089d443d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.__iterator_get_unchecked-8&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;idx: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;struct.fuse&quot;&gt;Fuse&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.fuse&quot;&gt;Fuse&lt;/a&gt;&amp;lt;I&amp;gt;: TrustedRandomAccess,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/fuse.rs.html#118-129&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3509148b33ddb63727501b601f6eeac2ff270964" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.__iterator_get_unchecked-9&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;i: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../vec/struct.intoiter&quot;&gt;IntoIter&lt;/a&gt;&amp;lt;T&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;../vec/struct.intoiter&quot;&gt;IntoIter&lt;/a&gt;&amp;lt;T&amp;gt;: TrustedRandomAccess,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/vec.rs.html#2980-2995&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d10a5a7cb5a58eff9da86335b6f4832613df0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.alloc&quot;&gt;alloc&lt;/a&gt;(&amp;amp;self, layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/alloc.rs.html#8-24&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6049c601ddb129be987c27bc9bfb5b10f5f2176a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.alloc_zeroed-1&quot;&gt;alloc_zeroed&lt;/a&gt;(&amp;amp;self, layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/alloc.rs.html#27-38&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3d42d94aea52adaa78de604d7e9056fb606582a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.backward_unchecked-1&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.char&quot;&gt;char&lt;/a&gt;, count: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.char&quot;&gt;char&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#469-482&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cbe0a0fbb1a482f2402c8f96b74d5e0196fa82a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.backward_unchecked-10&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#197-200&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8682e86225c9c31d8b6f045726d5eccd8afb204" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.backward_unchecked-11&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#197-200&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888b6b12b4114be3a2ccdf3e7ecb127c7c2b3d77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.backward_unchecked-12&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#197-200&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b387b2b75255adaa9a6e1bafce186bdeb27962c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.backward_unchecked-13&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#197-200&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da844ceba958e138f9b55b38c59e431aeffc57b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.backward_unchecked-2&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#197-200&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e56eca08e4bbd8074a6d6e0de432f7cc59e053c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.backward_unchecked-3&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#197-200&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a62cc55c649fb5f0840e12b9556b304d81177193" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.backward_unchecked-4&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#197-200&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e96e4a341719ab3cd9836d7823089487ea92aec9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.backward_unchecked-5&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#197-200&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99634b0aaa648f24ebc99b6f65500111f8d8bf1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.backward_unchecked-6&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#197-200&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed9c8cb92808d7d87b1f3023e3d431f1d307b6f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.backward_unchecked-7&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#197-200&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ba748de6728fc9e50e031662ab128fabe863d86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.backward_unchecked-8&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#197-200&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8735dbb2727865d396eb455c855124cc3302e55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.backward_unchecked-9&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#197-200&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbe212735bbfb3eddbd462d94b0ed66d789b28d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.dealloc&quot;&gt;dealloc&lt;/a&gt;(&amp;amp;self, ptr: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;, _layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/alloc.rs.html#41-43&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649a880cd42fd90faa544017eb467924f8207de4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.dealloc-1&quot;&gt;dealloc&lt;/a&gt;(&amp;amp;self, ptr: &lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;, layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/alloc.rs.html#215-221&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f72cf6d9766780ac30d9f94061dec8881b8145f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.forward_unchecked-1&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.char&quot;&gt;char&lt;/a&gt;, count: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.char&quot;&gt;char&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#453-466&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ffe6296e6ff387391bf9ae3c9f015f480d057d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.forward_unchecked-10&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#191-194&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51d21a717d4b1907314640b5d472b41d02ff9c24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.forward_unchecked-11&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#191-194&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="276ebca80e71f185e13bf84d52fae8be54b977f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.forward_unchecked-12&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#191-194&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e41c8ea27b5ffb17a11c06b6bc213d5f78e67f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.forward_unchecked-13&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#191-194&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dd72be39222e665fb1383cdccf59e4ed9605f41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.forward_unchecked-2&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#191-194&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc53fc80688ab1adba2d96aa65a2a1db46da92a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.forward_unchecked-3&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#191-194&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68f712f3e2dbfa746afa3282c7cd569e3e53db9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.forward_unchecked-4&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#191-194&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f961511a865277f7144202300bb84055f74268" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.forward_unchecked-5&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#191-194&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acc43afb598642db25bad57904a39dd5be13bec4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.forward_unchecked-6&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#191-194&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42ca3ccdc32ce80719fcc8a6594eb0f7b72f987d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.forward_unchecked-7&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#191-194&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ead0b11a164992b2d09871f7e892059352a520b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.forward_unchecked-8&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#191-194&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96157edbe1aa0c1ee625beb06e0b9576b7a51ca1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.forward_unchecked-9&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#191-194&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab590b7db6206a6beeb04dee951c8ea686d3d7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.from_raw_fd&quot;&gt;from_raw_fd&lt;/a&gt;(fd: &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../../../fs/struct.file&quot;&gt;File&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/io.rs.html#132-134&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83598cc0e5818d50236b68193535e7ac9b3d24d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.from_raw_fd-1&quot;&gt;from_raw_fd&lt;/a&gt;(fd: &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../../../net/struct.tcplistener&quot;&gt;TcpListener&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#810-813&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ba37da3d65baa665c761bc47230df4dcef8055" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.from_raw_fd-2&quot;&gt;from_raw_fd&lt;/a&gt;(fd: &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../../../net/struct.tcpstream&quot;&gt;TcpStream&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#802-805&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="489837a92c6a6de8e22bc70ba4a75332d4edb909" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.from_raw_fd-3&quot;&gt;from_raw_fd&lt;/a&gt;(fd: &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../../../net/struct.udpsocket&quot;&gt;UdpSocket&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#818-821&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e5d2502613ab654ab3e5dc6917df49a496db46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.from_raw_fd-4&quot;&gt;from_raw_fd&lt;/a&gt;(fd: &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../net/struct.unixdatagram&quot;&gt;UnixDatagram&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#1758-1760&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29f3670bee0ba5d1a046ac1f6126a2f224083fd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.from_raw_fd-5&quot;&gt;from_raw_fd&lt;/a&gt;(fd: &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../net/struct.unixlistener&quot;&gt;UnixListener&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#1087-1089&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc6d15d1399886bd3f394ccc50f0324878893c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.from_raw_fd-6&quot;&gt;from_raw_fd&lt;/a&gt;(fd: &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../net/struct.unixstream&quot;&gt;UnixStream&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#767-769&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ba12e02bd5f894f57eb337790e29905b9353be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.from_raw_fd-7&quot;&gt;from_raw_fd&lt;/a&gt;(fd: &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../../../process/struct.stdio&quot;&gt;Stdio&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/process.rs.html#175-179&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c8162b957178d3b50809786e3e694a4dd4532a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.from_raw_fd-7&quot;&gt;from_raw_fd&lt;/a&gt;(fd: &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../../../process/struct.stdio&quot;&gt;Stdio&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/process.rs.html#191-195&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ba4109b9e5ff7fe602e85df45f082a79037a43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.from_raw_fd-8&quot;&gt;from_raw_fd&lt;/a&gt;(fd: &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/io.rs.html#119-121&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a213ac3666a743d714eafdad64ef087b353c57fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.from_raw_handle&quot;&gt;from_raw_handle&lt;/a&gt;(handle: &lt;a href=&quot;type.rawhandle&quot;&gt;RawHandle&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../../../fs/struct.file&quot;&gt;File&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/windows/ext/io.rs.html#111-114&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b852d06d6dbec51fa996928eec548b1d3150bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.from_raw_handle-1&quot;&gt;from_raw_handle&lt;/a&gt;(handle: &lt;a href=&quot;type.rawhandle&quot;&gt;RawHandle&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../../../process/struct.stdio&quot;&gt;Stdio&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/windows/ext/process.rs.html#12-16&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b9644bc4ff41982cd435c42039fb6af80d705fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.from_raw_socket&quot;&gt;from_raw_socket&lt;/a&gt;(sock: &lt;a href=&quot;type.rawsocket&quot;&gt;RawSocket&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../../../net/struct.tcplistener&quot;&gt;TcpListener&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/windows/ext/io.rs.html#190-193&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c746ca29afddb663317cd221e8e82d6be76bb991" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.from_raw_socket-1&quot;&gt;from_raw_socket&lt;/a&gt;(sock: &lt;a href=&quot;type.rawsocket&quot;&gt;RawSocket&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../../../net/struct.tcpstream&quot;&gt;TcpStream&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/windows/ext/io.rs.html#183-186&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1059b6a7b19efc0e9f35aaa7ef2eeac2891158f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.from_raw_socket-2&quot;&gt;from_raw_socket&lt;/a&gt;(sock: &lt;a href=&quot;type.rawsocket&quot;&gt;RawSocket&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../../../net/struct.udpsocket&quot;&gt;UdpSocket&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/windows/ext/io.rs.html#197-200&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0693d6bf8f69ba524f79408eab990c930ba5d591" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&amp;lt;&lt;a href=&quot;../ops/struct.range&quot;&gt;Range&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#193-200&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92e5b5a1a98db031839a6efa302964bb1bea0562" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.get_unchecked-1&quot;&gt;get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&amp;lt;&lt;a href=&quot;../ops/struct.rangefrom&quot;&gt;RangeFrom&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#344-351&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d3242cf8345da38103423871a95eae07bb67c08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.get_unchecked-10&quot;&gt;get_unchecked&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#465-468&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70462a03747831acb5161ff594eab6375f7ed67c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.get_unchecked-11&quot;&gt;get_unchecked&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#344-347&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f733bf93db31fb04a56c1ba73575ae2c39d3bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.get_unchecked-12&quot;&gt;get_unchecked&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#508-511&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a24b6d81763a0988e15b150a2129c985bb77b28b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.get_unchecked-2&quot;&gt;get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&amp;lt;&lt;a href=&quot;../ops/struct.rangefull&quot;&gt;RangeFull&lt;/a&gt; as &lt;a href=&quot;trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#110-112&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428a77f7b310d8dd47a9ca8b79e4f6065da42839" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.get_unchecked-3&quot;&gt;get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&amp;lt;&lt;a href=&quot;../ops/struct.rangeinclusive&quot;&gt;RangeInclusive&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#412-415&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="859567fb8aa9714a3a9a5aab862b0c496814f84e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.get_unchecked-4&quot;&gt;get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&amp;lt;&lt;a href=&quot;../ops/struct.rangeto&quot;&gt;RangeTo&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#273-277&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23149c56ee6409c531cec3b974c9061670eb9f5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.get_unchecked-5&quot;&gt;get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&amp;lt;&lt;a href=&quot;../ops/struct.rangetoinclusive&quot;&gt;RangeToInclusive&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#463-466&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b45c1d67ade967e5e125161ba2cf6a6904c9610" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.get_unchecked-6&quot;&gt;get_unchecked&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#238-244&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="918fe0577b1b5b493c4c2bfc83d0cfb7cb983797" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.get_unchecked-7&quot;&gt;get_unchecked&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#290-296&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6279d497ef511c5690fd4f43b1ff10e2fac7c375" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.get_unchecked-8&quot;&gt;get_unchecked&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#381-384&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="194acbf8d29ad83d87dca3c0551c7ac5338614f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.get_unchecked-9&quot;&gt;get_unchecked&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#426-428&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf930ec31e9e8cb901bb897e0247b4b9bbc6b59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&amp;lt;&lt;a href=&quot;../ops/struct.range&quot;&gt;Range&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#202-208&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="196274386d271f63664379729daaed6237b516a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.get_unchecked_mut-1&quot;&gt;get_unchecked_mut&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&amp;lt;&lt;a href=&quot;../ops/struct.rangefrom&quot;&gt;RangeFrom&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#353-359&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7733bbe136c0540da2d312120d68318cb676a87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.get_unchecked_mut-10&quot;&gt;get_unchecked_mut&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#471-474&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17b002cac7b3722031f8b7f8528ef334b7c75acf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.get_unchecked_mut-11&quot;&gt;get_unchecked_mut&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#350-353&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8281dd256259d7d40ceade6f05a56c0d96dee3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.get_unchecked_mut-12&quot;&gt;get_unchecked_mut&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#514-517&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de6e9a9411231b31a488a746338c0547c24d043c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.get_unchecked_mut-2&quot;&gt;get_unchecked_mut&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&amp;lt;&lt;a href=&quot;../ops/struct.rangefull&quot;&gt;RangeFull&lt;/a&gt; as &lt;a href=&quot;trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#114-116&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
