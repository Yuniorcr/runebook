<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="scala">
    <body>
      <group id="scala">
        <trans-unit id="93b92563393eddc41387711327f63bbee56a1277" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="c3637585314dc71bc223ac9040ae70d2014499f7" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="1f7afac3374f57219a29931bc46acec28a48dcb5" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="da0b880b6ad5995a1ff675d03c4d9453b2e57ca3" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nada&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nada&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Lista&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="da0127eeeaf89c0a3956afab7c2ba6deef7f4d6a" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="8d50511564b703a97396047fd06e2630574a3470" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Corto&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Corto&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="76b3dd8dc204308dd10cbadd119893b9bcfa0574" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Corto&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Corto&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="53903dfabe79e305467c9e392961c4460be6ea44" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="b6309ad53e1f63f1a1e627beac81cd92c38301dc" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;tecla: ( &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="9f469118829bf49fac5b5847edbfc89fdd21a62d" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="b334b0efe4e7b81280e144393e07fb90673f0be0" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../collection/immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="f8a19ed4ac6b0df923b3855f6d09ae38d7815f25" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../collection/immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="bb66e941422e4daa81ca34f2cc49903b440c5e69" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="9266c5594c5a70937e3b37b652cb8aaa12aec309" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../collection/immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="d5eb79001ccce345751d0fa856c20d34c3d1cf1f" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nada&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nada&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="67a60acd923357628a23315e117f575bb9b2dac4" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;collection/immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;collection/immutable/set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Valor&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Valor&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;collection/immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;collection/immutable/set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="38555acd652a0a71cb7a14bed92f61b58ddd403c" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.groupMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;arg0&quot;&gt;arg0&lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.ArrayOps.groupMap.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;arg0&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;ClassTag&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;&lt;span name=&quot;scala.collection.ArrayOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;collection/immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="752dcf18deb09d71cd1458acc55bfdd70f90b0c1" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;collection/immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;collection/immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="a111cf994326a35035aad19f12934c289179a07c" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;collection/immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;collection/immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="2ed1b1a9626e70d3810512527b94aafb4d63580d" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;collection/immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;collection/immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="2983aaf6b8cbe008ab617684dad59e5ebfe2d910" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="faa5cfe416d4abeb59fbb357675fd11d918af55d" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="e55eed552a7143f9cf428f71527c77b87d4cedf9" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="cdb39d2548b2c20cce26fca16ba019dbf650c846" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="d265500ff93744e6f088bfedb7051f53cb273377" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="50938cf70962377bfd6543278d94a4d00703ec9f" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="6aa8764ceac65c819d875644776129dfd34c8aad" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.groupMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;arg0&quot;&gt;arg0&lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.ArrayOps.groupMap.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;arg0&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;ClassTag&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;&lt;span name=&quot;scala.collection.ArrayOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="5ff82aa4b23fab42d4103abca9455c6927f51c71" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="e8839c792e8fac8169156c4414efb4ccddce7454" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="cba0893f73121d582b33544ad71138ba88387c29" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="b8eb62bc04da4865a70bcd0da36b6a5ef747452f" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="cfc9ffb877554042c1ca7f2b9ce5acb657e6a902" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="be59a4921a8d977571dcfac7124fd4ddcb3f4c6f" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="17df3b8c93e8a39a968545895bca8f462f5ad694" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="cac9dc5840c3de63b493e100ad43434f306f681b" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="634e902c61f8663e08911f0a38479ee10f3a1b3e" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="9e4e30fe94b7d611ff1c95c739d982c049c42bdc" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="37c74302f54b2f626b26ec8387819f1215de7294" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="e1d7e47f2a395cb54f345cab30650a818c264673" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="84804e25d705bd1a683648cc0649e69ba1848f65" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="df18e3e0f1fa00bcd0d622a0ddb33e385652dffd" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="91de50c5b50ae3c197192ddc2a63d33e0f766c14" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="a4707263a35097fef55c810a6416b908514e2f4d" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="16924645689a6b20d9914373fd2fd00abf65cde2" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="ca3f3c671332057597430edab641348da8bd7051" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="ef107e7c9fdd5c91353f3f51ae5908839d846a23" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="d5603551ed90aad695bd856029f629427f8d21e9" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="44424c59f95e35334374bba8b7b4dc08e907eda8" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="9ebd2fb34c0fc61e1683800f5d7dfe25326c8b58" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="ac3d04e5d463b25b9cf2f3aa48152e690b126bb4" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="fd6b18006f7e4bf5936748dfdb334e1455277f6a" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="024c2be455ce680b3da03cfb6746f99fe8b6cc2f" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="22d13ad048703c45baa5d38ffbcdeb70158b4e5f" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="a2d9f90f188d94a4ab32583a2b1b5a98e0f2e70e" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="f08f62550b72a46b591b0f0a0dd3e86dc15bf9c6" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="094538137fa8f80c25160e3e75685106fc58fe4d" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="3641b8f62423e8623338eca6a9dc1e89e0467b7c" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="eaea5d1519dedacd7df120f9aaaa32509a8f4b4e" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="272b2a6b713ac163f9a1b4f462cdfb2da724e2e2" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="7ee23049402e86cb55b1e60d47993f9774a7fe01" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="f56669e9da72ed55bc14e881fce1d5a25d9fe33f" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="71f5b78a1e6bcb6ca1951e02ca734d85c2db0311" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="7073975ab594721cc575b02ad9b76535327668d9" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="0763cbc53cf0a0cb079bbda7a54064e26a873c31" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SetOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="0d2436ab287a5be81fd30c87d853f376843398f1" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="45b713498a546d3f40426c10e0263f71593967de" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="096be8302fe831b1f5c6552838228e7ff9ae7b86" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="443bac7bdcccec9ab708cfc6fe4b977f1c641989" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="014bd14c8036fc97db729b43fadccf6a32ea7650" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="58e771a2e856503ea7b2254eb4cef07b8362c30d" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="1f8422d54b5dcf1d9c6aefd7879f843eb3a1db2b" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="6cea1f4e16adbf57fb949ff0a22b951cd15d2c43" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="7dec9a75606315dbe6d8854d26671c1a37889912" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="50e23b766e12e27d32651da8bbda11b1b511fc91" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="7b7cd73eff2ca54c5b90c8eee422534016e41c54" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="b9ce421d3d7099ba818ab3bda2c0528f492b4d22" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="1e4d5d3d915adc94167b5a0bab6e3e4ddb7013c4" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="e0504de8241220effb0ac4b2ddf147ffc5433847" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="214f597e408712b9e560815ee6cbd2bb2f51929f" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="024593251f5c1ae3b04dadededbc4f285db2a7d4" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="b2c00392bcde0986c80b935276d18d5db44bc047" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="9303e8c8e955ef2274197af8a962a9cd8edb517d" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="fedf61dc083fde5f381dc442c1e2fcc24b694627" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="8b57fdae14159c959bec085e0f41545675261d38" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="a989b7affa33ce319b45f93e896b8eff0e8a7f9a" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="5736c97ce6a9c978d7bc265e8f23f444d6e3e06e" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="89587923c2ce5eff9c9c8609bd44b2a0b1eb4022" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="117c0b26c0041b28ecad0c4543276c7e621fa547" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="64a73d9a47201f15777f4b0d392e19dd59b46f12" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="19adc1fc7baedb059c1ac19733b9b0f7b1bb744b" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="3774557a12d0f4d9bb177fe2511fc64d4aa30570" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="18b2bb54ffce6aecd67cf20830baee735d611857" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="5fdac9cca2e133ea056dd72a7f2da14c17852f96" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="ce4d2da259d368905df3c0102076c1c593bc58ad" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="1f4298cef97e9be7e9f0f6c88cdadb2d05ea3e97" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="5cee76bedab6b8e599cc2d06e470271b31349755" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="c6f20dedd850fdf377adb43b88a556b247134a40" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="ac44d4d1041db8c08caabd3aa7d866934a302ef6" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="ebffa44342875f0ad60dd3c4ba889f078d97c8bd" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="faafde6333de30c9b11a3953e19a5348c587c013" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Lista&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="162b9a6fcf33a3022864b7aff6b41f8125d827a7" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="25baf4aca878dc8e1f3c23ba7063b305a9bc20f1" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="2a882579ac7d9e63a1ad4ec0ff87e879a267395b" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="84e6311d1080bfd7f1dc10f71cc02536ed16e346" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="c823aa74741f1158100748de5cca73d89e8b76bb" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="587be7af3efbba56351e190b71ba4059aae45300" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="ecaabf6926c31e6c404568bd16fed0af7af26b27" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="ef6796dbe37db42a6ddff58381de457a4783169a" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="b45b82ddd90693a66577a226e41161cbc3132e18" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="21262def9fe6a08ded3235f27b289b0383411414" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="f28f56c5e4371103aba8986d96033017171be02e" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="2d9470eb9ea3104b6feab3d55d0749f95fe1a9c3" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Lista&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="686a472cdce7cbd70ccbe87fdd8f55cd272d6a61" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="449add100df25e0292f898bf048783a9837bd5e6" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="f59e7c695a7e7684c0ecd5076ef1cc632ca36a0a" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="70cb396e095813090b099f7642e59d67070bee4e" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="e8751e84bf21b99cbc7ae86d32f672ac495a1855" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="d17dc9200a9a8607079d0432800ab91312160f79" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="b9a6dc73a03466f95f3f927ef98102300a8b4f5d" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="2cfa196398114534e9b87542956d99e759237869" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="99c633fc86dbb17d79a53338e92688b7dd470f44" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="11bed46754b28e11f8a8aa346c5803e157610b30" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="0a2130815da673ce55642414bf49b0052637861f" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="0ad219335ef51a91e4221810dd913ac4a632ca12" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="1763c5e1ba0be08638300507d9a3e41f838fd918" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="165ec94aaa8e5e9a2beba93d49f02e521af1ed49" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SetOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="8357629b8d02edecb07fde1fbfe3b87b93ba91f5" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="dc8a3bf06d58af74fbad8ffdbdd6b2411a153bd9" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="5b3553332dbdd642272a41aedaefd5644e20d6c6" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="19afbec2f76fa527c09c4c1180819e20ce23564f" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="a65c49ccce613b82121f7477930c092b3b49973a" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="0fb28ed392c91e15bbf4565b19f09d0e13c24655" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="9e55e8e7962cc8553c85affdbe8710e7db725b1a" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="d82fdc902ec79af68d05effb6bba7bc91e3a96a9" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="144496b757f5f4674b0d3f59812fb9dfed5c9cb4" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="8eb770afd8cdb3446856f90e1989430bb9a9a5fe" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="6861490b1a5cc58b1e524bd39d13223f2f41120a" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="f58228a63198820bfaa12cef7001904ef97aa65c" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="444e484c52d943fc1b70b2d70d89e71e149f713c" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="25e1fb5a5089f85c3bc3409dbd48eb80365a08cd" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="2b1989b3937739d7e819c48d34840168154062d4" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="c3b4af299af3542e837a55cdd25d56a9e5909856" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="cedf837dd7da58af00fcda92a6f4c759f1145b38" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="b831dc836fbb5f597a33808dfafab8f7701b2f3a" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="a5f822091d51bde79a8362173f7df580ea3c172a" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="edddde9d36530fd10903fb2f71e3030474127628" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="2fc6230d4b416e80d1f416ff10aaf8d25597a06d" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="f7e3ad1372935b95c88a7ee013ba86210310a7b5" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="69f29f29b0fcf48f781cb6e37b71adef8efd5bd0" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="6ab9b719534fb401e447fb289fd52a4982816284" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="b9377e65203ccc0ebc7bb301c2f1bf55e612748e" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="a3d9233658e8c89b2c07765d6d3946b2d9653cda" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="3e96a822ffd31b428043932def14ecb1e9d463bc" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;colecci&amp;oacute;n.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="742016229b8d0e1a63a0d13eb35e1d8b5837697e" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="2bf77a577579473e6c3cd594b1d9c41914272d28" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="e896dd3e3cbc491f6bb0493e2934bda7cbe41c9a" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="3a2ceeabee57351ed7d7749b506d5d5612a7790f" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="59934b7aa81d40f2bdc7058d158b0c8696a2a60a" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="e902a0e8455c7a326536da291a62410c44754ed3" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="de9c9cdc911a0058762639107cca488ae7eceef0" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="e3ea56d1e41ecbdb2661f87d9bb19c1d21d098b9" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SetOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="fcc6bf17882c18d5d2eadebd5764cb5e7fa09e04" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="76be9229919d357bb6f17cf0284c17983682e0fc" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="353e20bfb98fe7d338e19067440393c5c7c982c2" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="8df52244375bc7e100e144efb018f113c8890c27" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="5a0cf6bae17030dbf38e9d148595a2f990ed2e62" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;immutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;inmutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="c03b04a5af0d59325190a0393c43713fd13b1adf" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../collection/immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="820edc4ab097451344068ffa55a08c01c4294b2f" translate="yes" xml:space="preserve">
          <source>def groupMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: (&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def groupMap [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: ( &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../collection/immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.groupMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="0d898e08ae01471b1fea62fc9cfd6ff94da12d50" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="69ce9be9cc27f17d621624045a22942b6a63c9af" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Cola&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="4198baae1dfd6d24a1cf7e72d30c2ac675e12c84" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Pila&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="9fbf62ccae569138276403bd54cdad73a136377c" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8afce7435072fc2fe1e82345193095fb570f874d" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="b96833817520a081cab3d4e503a2eeb0db61f44a" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;colecci&amp;oacute;n.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="88225d450003fe8c1ed9b66186baede6008f18c9" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="caa4390b51f0397dab3bb0656be042f2cc895860" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="20456ee918c772e842df28ed9eb78f073ab81cb6" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="c54af7231cd6645014d60bbc5540eb162cc7dc24" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ]]</target>
        </trans-unit>
        <trans-unit id="a57244ce2837ac8d4ad17e034b810c49d7437e69" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ]]</target>
        </trans-unit>
        <trans-unit id="56fa96f2ba998f38721fa5620232b478a2142b06" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]]</target>
        </trans-unit>
        <trans-unit id="a3f7dd42d165e6c48f4fe3fed924000b144b5269" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ]]</target>
        </trans-unit>
        <trans-unit id="e793fee9bbe90056b27615f923019d40fbdeeccd" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ]]</target>
        </trans-unit>
        <trans-unit id="eefb948cd647c8463499eeefb94665f2467d6953" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]]</target>
        </trans-unit>
        <trans-unit id="b730737759a0e09c5ac56d6f34258c7b26fc5509" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ]]</target>
        </trans-unit>
        <trans-unit id="5d7dc3671d0b102b46ad779a4bdb0385fcdf806d" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; ]]</target>
        </trans-unit>
        <trans-unit id="7b243deedeb599d31794978edcde13811ad59a18" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt; ]]</target>
        </trans-unit>
        <trans-unit id="d33ee5a55a674bb2fd851c20214e4f3195a0ee70" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="6c119545c9c4097f632f7065c711c8bd56fb7206" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="755f07ba90e3b81be220cbc02f90a6d8eb3064e5" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ]]</target>
        </trans-unit>
        <trans-unit id="4a4d8925900f152cbcbe68c8215f493b848fb800" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ]]</target>
        </trans-unit>
        <trans-unit id="ac3e61f6315f8fb3639a61e70c22937cc6be39ef" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]]</target>
        </trans-unit>
        <trans-unit id="e34d4080e76913e50789ea430a8b781f92035196" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ]]</target>
        </trans-unit>
        <trans-unit id="f82bbcbf6c1ff1ff1cab0cb62ff6d70e3dd1703f" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ]]</target>
        </trans-unit>
        <trans-unit id="4ea333bb07206a2d5f400b3372e8ed179f4e3bb6" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]]</target>
        </trans-unit>
        <trans-unit id="90a3ece51018a6f0ed64082e0c47ecb908635132" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ]]</target>
        </trans-unit>
        <trans-unit id="9efcffa0c0cbb5a6f2ab1f16232b2cbb5866b7d7" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; ]]</target>
        </trans-unit>
        <trans-unit id="b214d31e026517feb5a6f254b470317b9a7c23e3" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt; ]]</target>
        </trans-unit>
        <trans-unit id="7c0378d54c81bd71cfeb07284a6da83960363cea" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="7491294df5a198ea34e595bd01903aaf75cb8944" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="3fc9deae99f4b6b4f68b77a11eb237947c04ffb7" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="b4b75ffd9612b7648f4c9e56d52e46e46132c4d1" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="e642a805eea046a01a070e9b6f9d0ff2aaffc226" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="44882abe571aff762b1d5392ae824c081466991c" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="0524d2b1942f4a2896a18ed292e15ca80671c155" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="3063b7a69acc9beb66ea6af97dda93a5fac52142" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="2d4c830778b759093bbb1cac647d5defaa6e997c" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="2d54dbf20f62fc71555dfff7f7bf84fe19002db7" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="0c1ccc54b8e9305204ebea6cc94067d1e8b5e8d2" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="b18b3b664359ef8a3ada82c99f7467c787d5441d" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="664a036c9656ccdd7751788e15c2d5bcc119a8c6" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="e2c0d722222c886545c584a0033301aaa53f8326" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="24763af4bc69a955dbebee1af1e1b4303f82572e" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="e1dbcc549dc9d27d8c7aac46bb230ac728d96756" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="ec4b3dd493c238a8c9e97e73c75f1cf773a033a3" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="1e4f5434fa2a5726e16306ae9007ceed3c6cbe06" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="95926020bada4c398361bff69984cf2809cbd544" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="da466005645ab76e6b2332cbc480676d1750998a" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="1263a927e5c661657d7554fa37309979b890b340" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="7cf605ca42834f6adf07aa99e1fc53ec6426fdd8" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="90ff7a1d909c50f0c520550e9889cec29a3ad618" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="d2baef6ea29da0dd3dd21460b317c61722b7ec6c" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="f9ea5ede5c31fdf0d0b8e3ba044a72ac21fdfdfd" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="865557483fc80c103cfe1621ef4d7c9073042b71" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Lista&lt;/a&gt; [ &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nada&lt;/a&gt; ]]</target>
        </trans-unit>
        <trans-unit id="a54c146fb13a7a81740e19635988880c35f48fcd" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Lista&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="57bf6ccf45e32f75907fe0849ac506dc5739e4a1" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Lista&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="77c46540d91fe36b2d366295d20d287c5a065410" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="f0eb5ec12086d6fda121219a5f5b6fdcbce77d99" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="1a4467a61ecb0e78a26bf633d49590c796d807fa" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="9b0151b8dbb004d23bd701ee6ff5fe8354880591" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="324b31b995b259ea3b029444e23201e9fe2cdcf3" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="fecf5371bdd9d09eef2c6834dca1d716588cb950" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="1ea8adccdb7ec3fac6d3e92ad433a86c8150de37" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="c509f7488de65c8910a97cacd026cd77594f4622" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="0fe33535286b7bbad1cb93047723fd81bfa49d8e" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="79d3217ca7be6e1d902bebb769ef768d33cbbd0c" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="ae12a703c8f204fa9bab3a97ead45c7ea3d25cbe" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="1bc2de2bc828f01b8545a76b4a187c9850fa07bb" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="1123a4b40c53ef9e6f0c4fb0be15a01884a046f5" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="1be840deccb324eba1b5f3820c7019780d25f471" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="561722c0477661da13b0ad502b58a7fac3117018" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="30790fdf40cbb7f9af42cc6ea6c16038b5976f6b" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.immutable.Map.WithDefault&quot; name=&quot;scala.collection.immutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.immutable.Map.WithDefault&quot; name=&quot;scala.collection.immutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="35523820c43f7c197bd389cec38f58c21d5bc9b6" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.mutable.Map.WithDefault&quot; name=&quot;scala.collection.mutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.mutable.Map.WithDefault&quot; name=&quot;scala.collection.mutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="7a85db8c23b18beb631420af0bb47196142b0ad9" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Clave&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Valor&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="e5e1a2330eb4ec313cb622bdd14f13f3cf15f30b" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="72e57159a8e3accd20793c69d34810f157b6262c" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Cola&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="947ff5838bc31c9e4958be6e67106e2852a79022" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;range&quot; id=&quot;scala.collection.immutable.Range&quot; name=&quot;scala.collection.immutable.Range&quot;&gt;Range&lt;/a&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;range&quot; id=&quot;scala.collection.immutable.Range&quot; name=&quot;scala.collection.immutable.Range&quot;&gt;Rango&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="624c425595c148d68faa05b831cea55748b3802a" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="78c8b71df49383add9e4df2415c1b7d15e50dec7" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="b2f75287424d199ddd293b3331901dcd1f80ea56" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="f6417b144a3c01385ef17dc862130b77deb71b95" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="2ea4518a24c1cd996867e815c75ff6f3c799a696" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="05b6d7517b006e6a0d7f3732edb2a155702f414f" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="d9ee6075d28d85a36d8ab049f000476846d75a6a" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="0584f2843df48780169978d486ad52c3b93e3a62" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="7d9c2a485c4d80c9cfe12ee7907c37d50a3fb80f" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="7d04787ce9a6ed1f4a58d5a242cc3b75f04f5b5f" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="52daf5e9fc2fd8d1be488f00ad8b7946f9eef207" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="ed609abc2bfd7fd34f101b46d72de96867273837" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="b9fbac5b6a4c66ca106e5fa0cb6298c9e3a45900" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="25c878d3bedb3b3b7923f843c223b9b4d7c8d254" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="c7898a59fe6c4e4f0a2ae1ced42ed8ce86627f7e" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="4c7fbcecd00ba39d6f70bcc80d327478ac816744" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="8088385ede7df5df0012d8fc2845553fa35a886d" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="0f516ee5f87e3697bdb86454b186b541d41f93c3" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.immutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.immutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.immutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.immutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="2b108b78f9d495933664f9b48bfa554cfb461f63" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.mutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.mutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.mutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.mutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="9e673ebe927daf8734882a3d039db2821bd23f0a" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="0c0a7d70248b4cf6e11c3a3544d00d5e1a826e3f" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="24722c0cf1678ec517ff57f1773f5d76107c292a" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="47380b957dec4c56356e72d8d795a192b2442df1" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ]]</target>
        </trans-unit>
        <trans-unit id="7165ee7ad9436f7084d08bcc9fffcd73d9d7586c" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="4b310551ed07c3749124f23b2aa13cd83158fce4" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="20d7342e7ba10dded8d0461c64f27d5f3e8c1d36" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="1c5c514aaf18337347c8bb4a35c01350772e7597" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="695b27ef20a3d2861e9820c01b5abca3c3735a66" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="b7118f7f754248bbc362bee6910dc78d2a179c35" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="b284e30506e37500c9305a32d3248ce9a1036f97" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="151801ed80903dd5278fd29555125444397656dd" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="6148cc473633591c7ff01e08739dd389b6c56e5e" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="600bd95df17f727711c281010f4a6d1f971be0bf" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="2671d624d72909701ae5992e2152173e19f1ff6b" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="bdf20c8fb96e13e9809c266d62818b9365b122b0" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="e5b3817603eafb5613c64622191138592d695866" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="73e254ffd145e3dd1dae48e63d12ebdaf6a00f2e" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="3acd8cbf0be3eceb11067eeada6d84a8fbfe7181" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6281cbfcbab3da624a130365bae129cbaba83597" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4a19ef5701a17c2203aa5ea51829a136f798780c" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.MapOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c3a114aa71f57d4c4a05b853edce869ae07a3e93" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SeqOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ff2a8c1b26b1e38818b700a0fcf0d8451ebc6537" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="346a659b7b078541022e18c6eaf3ec37636bdba2" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1a16e4003e6d6916e3ee9689dfb441cf4d1b6ec4" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8aa02d2f56ba6c672593f2850aa9e386c84931f6" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f66d5a614dfed705538440e7ee56086dd1591916" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="00888fcd2679ea9d4f85cb5f1344fa14ced6f3bb" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a91cddc7202167da21e2cb98844658935e2be535" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="84005d721c5f4ab8dac8572986b98bd70b02f228" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="eb48e2fcbfe10c04b3904c589fe2dccad323c1b8" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="06d3c9e1e289cfa62b13dbf026bb20a8686cf158" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MapOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2367d7f42191e27697901dfa82c5a584d1d5c87d" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SeqOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b74e30a74118dd770a08bec3584619cdceba6dd2" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="78e94325511fe350abc41912c43a5df87d542802" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e08b82e9c6da7af4f9b510476ac88a3926d12d95" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="948e7cf4448f111212fa58ae1315ad75db912ebf" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../collection/mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;colecci&amp;oacute;n.Iterador&lt;/a&gt; [ &lt;a href=&quot;../collection/mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt; , &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt; ]]</target>
        </trans-unit>
        <trans-unit id="aeacedc87f3027d5958a558687d84ea79c1b774a" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;colecci&amp;oacute;n.Iterador&lt;/a&gt; [ &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;colecci&amp;oacute;n.mutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="e52e768d8ea26751c43416037b2cc47e002d4762" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="7f74610448deb92777fa9da380ed9022adcce9a7" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="6a4e56bb74c1255f9db33c9f7b11eab2699a90a4" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="cece8fd501ec71d862994b5299bb05ce32f941d9" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="dfcf5cb3abb6b9df9ab96a62ba218674b43764cf" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="b34d106d67d35b1274dbbe4646f38378ceab7037" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="fcba95d90cb117e7850a7b36671a8a050cc57699" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="c1d4404713e08a1bc023ac04a3aa7b48ec3e19e3" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="0584b624ddcc1a10b83f8d6a8346c1d95341190b" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="e044bf2528cd512355651e818901176f0cd64a03" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="670d2b90fdc48b691b7502871872860247ff3a58" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="4e0516eea468ac979aa2605dc0012c5e928cae64" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="ff14f8f32c406276fd024295b472a805119f83ff" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="6c198a785c5fc4167380b2a22cd6f6739f59aa7f" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="c65d9f1c955f62bf87ecb3f3658c86d12bd73c85" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="214ccd1fffccde013bc0c9ca1af3199381efc9a9" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="498a25abb945bf7d220f71b1cbdd2bc816c6a2a8" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.SeqMap&quot; name=&quot;scala.collection.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.SeqMap&quot; name=&quot;scala.collection.SeqMap&quot;&gt;SeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="ad25a5cadec775de69621d759934dfe1bf6cfd13" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="826f0e7ae763861e6dc0fa0688d83525ed82942a" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="a1131a8f020ec85e605cbbf51c74a39dbc597d32" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="e79b385386d9135a13961b49723e463009e2ced9" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.SortedMap&quot; name=&quot;scala.collection.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.SortedMap&quot; name=&quot;scala.collection.SortedMap&quot;&gt;SortedMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="6904a5de4812c3d7c0c0c4274ae505502a1925b3" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="2035950d41bacdf8ae7ddb9806810f76e736e588" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="daaf1ea2d1f990571c3d324bdc66ac2a9c9aacb3" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt; )]]</target>
        </trans-unit>
        <trans-unit id="b764b414cf9b025c49dba666d919ed0e474071d6" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt; )]]</target>
        </trans-unit>
        <trans-unit id="25eae9cee91e17b402443c9fca065d3cc2ea0ef1" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt; )]]</target>
        </trans-unit>
        <trans-unit id="b798183a10c69acf3242169eadae2b31bd862412" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt; )]]</target>
        </trans-unit>
        <trans-unit id="6a295fd7fc88a66d5f99bd0c7cf870b74572939d" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt; )]]</target>
        </trans-unit>
        <trans-unit id="1d4313fa21bcbd429820f8460fd6412157605958" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt; )]]</target>
        </trans-unit>
        <trans-unit id="d580b5739987c11ae756814c2cd51a70dd46948b" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt; )]]</target>
        </trans-unit>
        <trans-unit id="0fd1682c29b1abd0fe13f253bfffc0e285a925d2" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt; )]]</target>
        </trans-unit>
        <trans-unit id="4864ea881d3b2c247fc2c4448d6c35b033db549a" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt; )]]</target>
        </trans-unit>
        <trans-unit id="1e64001d960cdd28d35ab580153dd3d5632d4465" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt; )]]</target>
        </trans-unit>
        <trans-unit id="3a654f853df1357c1e73250c58ed23a73f9c322e" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt; )]]</target>
        </trans-unit>
        <trans-unit id="1519ef87a9d3de8437851ee760dcb62075f2bcf8" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt; )]]</target>
        </trans-unit>
        <trans-unit id="be91a380658e85a446f6418f9c60c72d46377eed" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; )]]</target>
        </trans-unit>
        <trans-unit id="6d993966c3912ccc86ed6cd3cfeec2de28a03a9d" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]]</target>
        </trans-unit>
        <trans-unit id="d1aab33ece5696ef2fa7f22b08aba9ec4978be68" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nada&lt;/a&gt; ]]</target>
        </trans-unit>
        <trans-unit id="addfb8cddc2dadb78fd482cbd8df868804000bcd" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="f5ea09c3fe974ba7634d8af3f782ee55193ed8da" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="e9e0e21eea77a78bf55216039025d58822bf3ec9" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="242c0c8974c74dd93134dd0dce6387fb26e919c1" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="b357cf32103061a370cb3f6b148a3b65b957526c" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="8a4e6824db54c7d167169e0b87927983a4d2888c" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="f2f40d9a8e2c5315e6b628eb892b8dee10b5c856" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="060eb300c2ba6f0fbf038a814315430d578bc520" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="ad3b77302b5fe15bb61a18ef24a7293f4c6eb50b" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="b4fede603adc0b774117a1cedb0915783f9b7a13" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="5da0bb73d38e7af39556a690501067b0fe771de7" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="3732e3460e3dc329260a012baf32103a498bb0ec" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="b4754c25dc14a2fb0a1b5d2e196a2c9dd861de90" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="84b4f3b1651062679d18e33f7a76e8cd41207ef9" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="5d848d15958c3c7e353d31853137163d3631abfc" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="c4aab55a2ab5be3b4c35f3274bfc603dd0b470f1" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="09404f483b14d041a18a82884de278bf2ea64fb8" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="908f5aef74758ab58b8867f4488834c0345af638" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="e8ba83f91710e4c3a2df64711e0b3fc04cf81588" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="bdd94aa7d1225e219b62eba241ee429e9662e482" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="cb3a1446ab2d5eaa2d88e722a70b455091afc9d5" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="23198b583e4cb6182e1ef4c08fc24a38f56ff2f1" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="6609d825b803f230140bb3830cdba582c7820395" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="3b44d5067ff211684684a18b5078ad0ab49e4840" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="348982408dfd7484d3d8ca6b9e043333ff22c15b" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="7e5ea2dae677efbb4953f63d9779deb78bcf642d" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="29852d9636a9fe081c9b94946d845e30377510e7" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="3bc137a534d4894c3b6aca6571baea1776a3941b" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="afbfb254763090092a8760e2133c627cb7553690" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="9fc11f30ff8f682453d0135c9016931f93414175" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="0760f94bf8bf383b3116aadae35f3841e65b139d" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="d94f82f567b69ef859a91feab3384fcaabd463fe" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="f410c3ec4889f29efeab05952c1567b22b60c6fa" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="4ae8d15ccb743e156ee7f3c12821af1ee54cd1ee" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="8cefd41927e44e306809abd2c1ae0be0a923093f" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="9dc26494d39a21bc0697fc2b590b2d6421c51fdd" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="94710c86b3ec06dc37ca663c50d19f1744bc85a1" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="85b053d85601810427ec34e3d4c5685575b2a485" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="9fbc7501caaba53f5fbbbacb9de7d6d034ceae16" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="dcfffac23a836637a8ff63eba1644b3f39b3d9f0" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="0fc0549722951c54bbf9dcd13a908ac68c705836" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="e231d41e6d350c4d4962cf59f8f1b75ead96d4f1" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="16108880a7b569a74445c05d4a72e2590fda277b" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="9c32a4376f8a720fc8242188e879a6fbf7754045" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="61eb48feeb099ac11087daae08b4cbbc65b77961" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="1ea496017002b2a2d77a5939a2dcd3ae592cc599" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="fe43a2029f3865dd79a72fbb7a76f51e8d6cc316" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="7bc9b920fa36a7afbb04b4fd089c7dcc5e075554" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="9fcd23f9be8c9b85a89dfc02edd0fe2dd4d2ebc6" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="f6e8122e2eacb1fdf4be5e4aac25eb8fcb4e3965" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="de13578ac5d4710be65ef38b567b0546a050428e" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="b62460e544df9da85e2915780fab361b281150c0" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="10722df34d2c5bdd89635bc00fe262aa0acd04af" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="6ab87f1639cfa894cbf183cd22d534f551b2168f" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a1baf1b98bd6ba4b6c70727bebabd6f705619fc3" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[A @scala.annotation.unchecked.uncheckedVariance]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [A @ scala.annotation.unchecked.uncheckedVariance]]</target>
        </trans-unit>
        <trans-unit id="7f6503b0bc1453cbbc37fbf8ddc4b12eca84ab7c" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6aae01efa89595df492262a50d1f671e7d5a43a6" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[A @scala.annotation.unchecked.uncheckedVariance]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [A @ scala.annotation.unchecked.uncheckedVariance]]</target>
        </trans-unit>
        <trans-unit id="0dcde6f41ddf19e5b029356b16b959af5cf26c0f" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="46e82f901300ec766f7c6c9dc60b4a4f2acc4375" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.LinearSeqOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="39abc149c41bd29da50bb3f054990c36fbdc27ad" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, V @scala.annotation.unchecked.uncheckedVariance]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , V @ scala.annotation.unchecked.uncheckedVariance]]</target>
        </trans-unit>
        <trans-unit id="c395ada2b9adc17048b2e64d2f6bd56c3fa3babf" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8ee917738127e7ccea666eb7515f2dee652c8cf0" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1dfa40c1fcab2898237148e6b3bd3ae6cab8890a" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d4b243452da3a9ce609775fc06a1eb287e04b6f7" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, V @scala.annotation.unchecked.uncheckedVariance]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , V @ scala.annotation.unchecked.uncheckedVariance]]</target>
        </trans-unit>
        <trans-unit id="69d3960411255144c48f453ad0927a1d37cca791" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="981e81a073c048f375918d6208c33fb27503ca1a" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[A @scala.annotation.unchecked.uncheckedVariance]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [A @ scala.annotation.unchecked.uncheckedVariance]]</target>
        </trans-unit>
        <trans-unit id="c6120968a5e8762ecf61b079187388d0e38fe008" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ae3d95139e0cd76e26ea2d96c2870fb65d925d85" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="33222a30af6a29f76592d272c72317b5649a67f1" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c924be42c971f44ec7f668737cb23f5c6afdbab5" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dbbfd498a14a94a4965a7e8618c1241b00a8e17c" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d5f4783a114111239609047deee80934df5a2280" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="50dc6049de1d368e004a1fe3fed418160107e0e3" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b4a99bf41be19c400c4eec272377128428810515" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="81b789721d4a81e8d0430709492223095f91d7fe" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;colecci&amp;oacute;n.Iterador&lt;/a&gt; [ &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="7ee645c17762c16aa0a550f093172bbc06e57fde" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;colecci&amp;oacute;n.Iterador&lt;/a&gt; [ &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;colecci&amp;oacute;n.immutable.IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="8f41eb90cc1db2bb4603e19e3786b5253ce73392" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;colecci&amp;oacute;n.Iterador&lt;/a&gt; [ &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;colecci&amp;oacute;n.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="2be20197192feb291e218e6420cd39f280a0d844" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;colecci&amp;oacute;n.Iterador&lt;/a&gt; [ &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;colecci&amp;oacute;n.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="783574ee5c940d5185de3426f8a02ca02c4eddad" translate="yes" xml:space="preserve">
          <source>def grouped(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;]</source>
          <target state="translated">def agrupado ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="47bbe79411ce5d8a58e321c4289e805653d920f7" translate="yes" xml:space="preserve">
          <source>def grouped[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#GroupedIterator%5BB&amp;gt;:A%5DextendsAbstractIterator%5BSeq%5BB%5D%5D&quot; id=&quot;scala.collection.Iterator.GroupedIterator&quot; name=&quot;scala.collection.Iterator.GroupedIterator&quot;&gt;GroupedIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.grouped.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def agrupado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;#GroupedIterator%5BB&amp;gt;:A%5DextendsAbstractIterator%5BSeq%5BB%5D%5D&quot; id=&quot;scala.collection.Iterator.GroupedIterator&quot; name=&quot;scala.collection.Iterator.GroupedIterator&quot;&gt;GroupedIterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.grouped.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7f18ee49eb040550da826bb85a317c73af203ca4" translate="yes" xml:space="preserve">
          <source>def grouped[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#GroupedIterator%5BB&amp;gt;:A%5DextendsAbstractIterator%5BSeq%5BB%5D%5D&quot; id=&quot;scala.collection.Iterator.GroupedIterator&quot; name=&quot;scala.collection.Iterator.GroupedIterator&quot;&gt;GroupedIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.grouped.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def agrupado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;#GroupedIterator%5BB&amp;gt;:A%5DextendsAbstractIterator%5BSeq%5BB%5D%5D&quot; id=&quot;scala.collection.Iterator.GroupedIterator&quot; name=&quot;scala.collection.Iterator.GroupedIterator&quot;&gt;GroupedIterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.grouped.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d8d26e75da00ce87dcb1ebd97f78a86306b65e86" translate="yes" xml:space="preserve">
          <source>def grouped[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#GroupedIterator%5BB&amp;gt;:A%5DextendsAbstractIterator%5BSeq%5BB%5D%5D&quot; id=&quot;scala.collection.Iterator.GroupedIterator&quot; name=&quot;scala.collection.Iterator.GroupedIterator&quot;&gt;GroupedIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.grouped.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def agrupado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;#GroupedIterator%5BB&amp;gt;:A%5DextendsAbstractIterator%5BSeq%5BB%5D%5D&quot; id=&quot;scala.collection.Iterator.GroupedIterator&quot; name=&quot;scala.collection.Iterator.GroupedIterator&quot;&gt;GroupedIterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.grouped.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b65edd9be7eb77f2c1c03ee94413cf1b734568f0" translate="yes" xml:space="preserve">
          <source>def grouped[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;](&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#GroupedIterator%5BB&amp;gt;:A%5DextendsAbstractIterator%5BSeq%5BB%5D%5D&quot; id=&quot;scala.collection.Iterator.GroupedIterator&quot; name=&quot;scala.collection.Iterator.GroupedIterator&quot;&gt;GroupedIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.grouped.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def agrupado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;inmutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ] ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;#GroupedIterator%5BB&amp;gt;:A%5DextendsAbstractIterator%5BSeq%5BB%5D%5D&quot; id=&quot;scala.collection.Iterator.GroupedIterator&quot; name=&quot;scala.collection.Iterator.GroupedIterator&quot;&gt;GroupedIterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.grouped.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a9a74468868cb2492593df5baed2e382a604b790" translate="yes" xml:space="preserve">
          <source>def grouped[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#GroupedIterator%5BB&amp;gt;:A%5DextendsAbstractIterator%5BSeq%5BB%5D%5D&quot; id=&quot;scala.collection.Iterator.GroupedIterator&quot; name=&quot;scala.collection.Iterator.GroupedIterator&quot;&gt;GroupedIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.grouped.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def agrupado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;#GroupedIterator%5BB&amp;gt;:A%5DextendsAbstractIterator%5BSeq%5BB%5D%5D&quot; id=&quot;scala.collection.Iterator.GroupedIterator&quot; name=&quot;scala.collection.Iterator.GroupedIterator&quot;&gt;GroupedIterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.grouped.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b0390e81c7dbd3daf54a7b9a2cb89fe37efca4e3" translate="yes" xml:space="preserve">
          <source>def grouped[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#GroupedIterator%5BB&amp;gt;:A%5DextendsAbstractIterator%5BSeq%5BB%5D%5D&quot; id=&quot;scala.collection.Iterator.GroupedIterator&quot; name=&quot;scala.collection.Iterator.GroupedIterator&quot;&gt;GroupedIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.grouped.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def agrupado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;#GroupedIterator%5BB&amp;gt;:A%5DextendsAbstractIterator%5BSeq%5BB%5D%5D&quot; id=&quot;scala.collection.Iterator.GroupedIterator&quot; name=&quot;scala.collection.Iterator.GroupedIterator&quot;&gt;GroupedIterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.grouped.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="35b07104e8bd08faf30ec80fcbace5d87989fa8f" translate="yes" xml:space="preserve">
          <source>def grouped[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator%24groupediterator&quot; id=&quot;scala.collection.Iterator.GroupedIterator&quot; name=&quot;scala.collection.Iterator.GroupedIterator&quot;&gt;GroupedIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.grouped.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def agrupado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator%24groupediterator&quot; id=&quot;scala.collection.Iterator.GroupedIterator&quot; name=&quot;scala.collection.Iterator.GroupedIterator&quot;&gt;GroupedIterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.grouped.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="17e8b937bcad315b657f0f71748327c9f475f2c9" translate="yes" xml:space="preserve">
          <source>def grouped[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#GroupedIterator%5BB&amp;gt;:A%5DextendsAbstractIterator%5BSeq%5BB%5D%5D&quot; id=&quot;scala.collection.Iterator.GroupedIterator&quot; name=&quot;scala.collection.Iterator.GroupedIterator&quot;&gt;GroupedIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.grouped.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def agrupado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;#GroupedIterator%5BB&amp;gt;:A%5DextendsAbstractIterator%5BSeq%5BB%5D%5D&quot; id=&quot;scala.collection.Iterator.GroupedIterator&quot; name=&quot;scala.collection.Iterator.GroupedIterator&quot;&gt;GroupedIterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.grouped.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c6bacc9fa031f49436712c4bdefdeeebbf2441ca" translate="yes" xml:space="preserve">
          <source>def gt(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gt ( &lt;span name=&quot;other&quot;&gt;otro: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;duraci&amp;oacute;n&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a0161dcb1fb74b02f1fe3d2ce6d09d64eca726f" translate="yes" xml:space="preserve">
          <source>def gt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gt ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0ec187c47c02f5746ded8164c95730b8a9be14c8" translate="yes" xml:space="preserve">
          <source>def gt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gt ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6cca76a8e3cb6175f0df83e5da3c38edbb6840c" translate="yes" xml:space="preserve">
          <source>def gt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gt ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2bd20aaf28da6b0bc035fcf7db101dfab588d32" translate="yes" xml:space="preserve">
          <source>def gt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gt ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;doble&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;doble&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cc1de52b81bb94430b90a9aefd1446538f7cf1b7" translate="yes" xml:space="preserve">
          <source>def gt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gt ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="33cc554de7eb4313e97a8700fc466a8a09ea7f16" translate="yes" xml:space="preserve">
          <source>def gt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gt ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="19913f26225703c7e7e40055e411f9f5bdcf01d5" translate="yes" xml:space="preserve">
          <source>def gt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gt ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="caab0aa99d491db6739a1056ea9897dd49d3813f" translate="yes" xml:space="preserve">
          <source>def gt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gt ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="405499d4312dbb915b3a40289f0677f37335d724" translate="yes" xml:space="preserve">
          <source>def gt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gt ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="52166f6bf1b7c65f5ece49908ba96f51cb0bee69" translate="yes" xml:space="preserve">
          <source>def gt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gt ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;corto&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;corto&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ac930e1a8faa1729a60fe4a33eff6dd751481357" translate="yes" xml:space="preserve">
          <source>def gt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gt ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;s&amp;iacute;mbolo&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;s&amp;iacute;mbolo&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e61358f983308ee39aeb194c60370373425efd26" translate="yes" xml:space="preserve">
          <source>def gt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gt ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;unidad&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;unidad&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ae9aeb919a08bc219a7bc8b80b3a6abeddc313fc" translate="yes" xml:space="preserve">
          <source>def gt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gt ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="55e8923587df5cd196fa45878b95a453b5ffacf4" translate="yes" xml:space="preserve">
          <source>def gt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gt ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a1eb1bdc2c8be49e49e23714b0caea0402d82e3c" translate="yes" xml:space="preserve">
          <source>def gt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;Deadline&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;Deadline&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gt ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;fecha l&amp;iacute;mite&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;fecha l&amp;iacute;mite&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="197be285a98903aef3087abef9d6e266afe0f611" translate="yes" xml:space="preserve">
          <source>def gt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gt ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;duraci&amp;oacute;n&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;duraci&amp;oacute;n&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="657ca896772ad903f30da3487132a5820222c602" translate="yes" xml:space="preserve">
          <source>def gt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gt ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;valor&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;valor&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a213cc6b464d9c0f29748497a07562bae52b113b" translate="yes" xml:space="preserve">
          <source>def gt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gt ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="77c0cfd2d61c5a977c36f41c820c170a8cc821d6" translate="yes" xml:space="preserve">
          <source>def gt(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gt ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="889aefeca51b1b67dae918ec116e56e17d6bf195" translate="yes" xml:space="preserve">
          <source>def gt(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gt ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f9f19b6a98516b1a03af87fcf719d63d7c995fa" translate="yes" xml:space="preserve">
          <source>def gt(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gt ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="30d982e81b392d39258cbfd4814c94fd1493e58d" translate="yes" xml:space="preserve">
          <source>def gt(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gt ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="152dc948c4b8ae27d0715aad54cc88ff0c01f368" translate="yes" xml:space="preserve">
          <source>def gt(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gt ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6c3ddfd986dceccbce3cec78e1d3550694ad2739" translate="yes" xml:space="preserve">
          <source>def gt(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.PartialOrdering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.PartialOrdering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gt ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.PartialOrdering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.PartialOrdering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bb9e37a2216e338aeff73ab11844d09463d4e264" translate="yes" xml:space="preserve">
          <source>def gteq(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gteq ( &lt;span name=&quot;other&quot;&gt;otro: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duraci&amp;oacute;n&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c8d265c7fea79d7659028b27d52ff8b8ea9c95b" translate="yes" xml:space="preserve">
          <source>def gteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gteq ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="56036ca11b4133a3cc1f501a07eb13944f4d432f" translate="yes" xml:space="preserve">
          <source>def gteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gteq ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="037ab80a44598f02819ab608a60ef3eb9a84a10a" translate="yes" xml:space="preserve">
          <source>def gteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gteq ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c4fee8964443661dbb5521594cfa350bd41b61d" translate="yes" xml:space="preserve">
          <source>def gteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gteq ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;doble&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;doble&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="69089e3aaa43b47011a7bf430a1d6a56265e5c71" translate="yes" xml:space="preserve">
          <source>def gteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gteq ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="78430c621a11c52e806f219df327ee8a475e8a1a" translate="yes" xml:space="preserve">
          <source>def gteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gteq ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="434a53dc8db0bfac25f0b906561f28d8c11dab92" translate="yes" xml:space="preserve">
          <source>def gteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gteq ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be7b4000e1e1392ecdbe8e37b9bb3a25033f26b4" translate="yes" xml:space="preserve">
          <source>def gteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gteq ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="91eb988963b2e14f58d4a6391891a82be6a6e79d" translate="yes" xml:space="preserve">
          <source>def gteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gteq ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6ab704faf833d40caa56a0b99d0a3fc92e0d5c30" translate="yes" xml:space="preserve">
          <source>def gteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gteq ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;corto&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;corto&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="424c2d684bbec3ce439a432ad7e51a054a7df077" translate="yes" xml:space="preserve">
          <source>def gteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gteq ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;s&amp;iacute;mbolo&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;s&amp;iacute;mbolo&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9fce07432eba774b1aaed924847801f04c0d54e3" translate="yes" xml:space="preserve">
          <source>def gteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gteq ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b795c4443d6fe7d02c76ea7271769104252ba6d4" translate="yes" xml:space="preserve">
          <source>def gteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gteq ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1b1708ed43ae477eeaab7dead4d6452d3db82af9" translate="yes" xml:space="preserve">
          <source>def gteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gteq ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="57ecacbb1916b60e814bdfa493a113398852ad87" translate="yes" xml:space="preserve">
          <source>def gteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;Deadline&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;Deadline&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gteq ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;fecha l&amp;iacute;mite&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;fecha l&amp;iacute;mite&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9cf015435392d4e8de849557e2893dc4941ad36a" translate="yes" xml:space="preserve">
          <source>def gteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gteq ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duraci&amp;oacute;n&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duraci&amp;oacute;n&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53942e4ec48b3c90b31245ec36c64bd56b2657c3" translate="yes" xml:space="preserve">
          <source>def gteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gteq ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;valor&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;valor&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ae076ca1be818d6f36807597924fd8047a41fca9" translate="yes" xml:space="preserve">
          <source>def gteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gteq ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f61b25c8d5285ff621c4050d65e5c4b86a446e16" translate="yes" xml:space="preserve">
          <source>def gteq(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gteq ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3197cb8b7af1478d856fb09db43f3876bffa6ac5" translate="yes" xml:space="preserve">
          <source>def gteq(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gteq ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6c3f6564058c74cad16d72dfef4f7e616354c751" translate="yes" xml:space="preserve">
          <source>def gteq(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gteq ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2090bce1bdb23bdb2ee8fe11072089f6adcebddd" translate="yes" xml:space="preserve">
          <source>def gteq(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gteq ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f15f80e86a73a3d2ed34b85d9067a8600e78a324" translate="yes" xml:space="preserve">
          <source>def gteq(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gteq ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c8b3f1b7ce023dc601d587390b4d6a944fcf5a5b" translate="yes" xml:space="preserve">
          <source>def gteq(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.PartialOrdering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.PartialOrdering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def gteq ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.PartialOrdering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.PartialOrdering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6205a5f560ad9af3e47fd9865767b1fb0c91fec7" translate="yes" xml:space="preserve">
          <source>def handling[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;exceptions&quot;&gt;exceptions: &lt;a href=&quot;../../predef%24#Class%5BT%5D=Class%5BT%5D&quot; id=&quot;scala.Predef.Class&quot; name=&quot;scala.Predef.Class&quot;&gt;Class&lt;/a&gt;[_]*&lt;/span&gt;): &lt;a href=&quot;exception%24%24by&quot; id=&quot;scala.util.control.Exception.By&quot; name=&quot;scala.util.control.Exception.By&quot;&gt;By&lt;/a&gt;[(&lt;a href=&quot;../../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.util.control.Exception.handling.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;Catch&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.handling.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="translated">def manejando [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ] ( &lt;span name=&quot;exceptions&quot;&gt;excepciones: &lt;a href=&quot;../../predef%24#Class%5BT%5D=Class%5BT%5D&quot; id=&quot;scala.Predef.Class&quot; name=&quot;scala.Predef.Class&quot;&gt;Clase&lt;/a&gt; [_] *&lt;/span&gt; ): &lt;a href=&quot;exception%24%24by&quot; id=&quot;scala.util.control.Exception.By&quot; name=&quot;scala.util.control.Exception.By&quot;&gt;Por&lt;/a&gt; [( &lt;a href=&quot;../../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Lanzable&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.util.control.Exception.handling.T&quot;&gt;T&lt;/span&gt; , &lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;Atrapa&lt;/a&gt; [ &lt;span name=&quot;scala.util.control.Exception.handling.T&quot;&gt;T&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="5b2121680a35fe45de1ce3170215259621352bc1" translate="yes" xml:space="preserve">
          <source>def hasCharacteristics(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def hasCharacteristics ( &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ba9d00118a82bc22730627b77fdc5c5fbf61d85" translate="yes" xml:space="preserve">
          <source>def hasNext: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def hasNext: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f84d922b76c55543eab22dd490de584039b7a1f" translate="yes" xml:space="preserve">
          <source>def hasNext: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def hasNext: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c1db37ff7774d4d4461c25669ea5e322656b5204" translate="yes" xml:space="preserve">
          <source>def hasTimeLeft(): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def hasTimeLeft (): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d99fed70d03fd89f27f78fa1df68f3f74d5ce1ff" translate="yes" xml:space="preserve">
          <source>def hash(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.util.hashing.MurmurHash3.ArrayHashing.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def hash ( &lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.util.hashing.MurmurHash3.ArrayHashing.T&quot;&gt;T&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="edce90fb06755810bd3d80cfc83cc8edf3eb712b" translate="yes" xml:space="preserve">
          <source>def hash(&lt;span name=&quot;k&quot;&gt;k: &lt;span name=&quot;scala.collection.concurrent.TrieMap.MangledHashing.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def hash ( &lt;span name=&quot;k&quot;&gt;k: &lt;span name=&quot;scala.collection.concurrent.TrieMap.MangledHashing.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bb969e278be7d4723fbb3b73a584a22c6089c283" translate="yes" xml:space="preserve">
          <source>def hash(&lt;span name=&quot;v&quot;&gt;v: &lt;span name=&quot;scala.util.hashing.ByteswapHashing.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def hash ( &lt;span name=&quot;v&quot;&gt;v: &lt;span name=&quot;scala.util.hashing.ByteswapHashing.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1289bc74b1c9db54fe363a671e3d2db1fe32d889" translate="yes" xml:space="preserve">
          <source>def hash(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.util.hashing.Hashing.Default.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def hash ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.util.hashing.Hashing.Default.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="95c678d030fb59f664efdafb0f0d3980135a633d" translate="yes" xml:space="preserve">
          <source>def hashCode(): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def hashCode (): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="195bff51fb63213c5fdecf3b16211dfacb95020b" translate="yes" xml:space="preserve">
          <source>def hashCode(): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def hashCode (): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="84bf194534585e0074570f9d2d9180d2ced08725" translate="yes" xml:space="preserve">
          <source>def hashCode(): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def hashCode (): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="57ed246d1431fd5cbf90831ff991ef631998afab" translate="yes" xml:space="preserve">
          <source>def hashOf(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def hashOf ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Clave&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f441937b94f58d82607041a264a950c029d66c9" translate="yes" xml:space="preserve">
          <source>def hashing: &lt;a href=&quot;../../util/hashing/hashing&quot; id=&quot;scala.util.hashing.Hashing&quot; name=&quot;scala.util.hashing.Hashing&quot;&gt;util.hashing.Hashing&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def hashing: &lt;a href=&quot;../../util/hashing/hashing&quot; id=&quot;scala.util.hashing.Hashing&quot; name=&quot;scala.util.hashing.Hashing&quot;&gt;util.hashing.Hashing&lt;/a&gt; [ &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b30d5ba6234ff73af60d21fcfc7ba1e47b4f17aa" translate="yes" xml:space="preserve">
          <source>def head: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def head: ( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Largo&lt;/a&gt; , &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="3338f9205a8896254feb4cd1829a3e0df9f8c69c" translate="yes" xml:space="preserve">
          <source>def head: (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)</source>
          <target state="translated">def head: ( &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="71306d8d7c054c588b5ca0d794886bfd80a04455" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="fee7ab11fa8907b4a4dfa2d68333e91f6cb09aab" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="a489c118f1d19d146b744b9e3a0b96367c512741" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="f4bd8f994550a7ea1b399a4841bbeda9d27306f3" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)</source>
          <target state="translated">def head: ( &lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="2c314185c18d7ad70c352e858ddd3457aed52c59" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)</source>
          <target state="translated">def head: ( &lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="be2f25c46038862711188c5378ab1d0f08546d1f" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)</source>
          <target state="translated">def head: ( &lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="922c54dc2978a827d0c7e15bc2b287bd43e57969" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="dde67d0fc3f9eaad68654e22c3f8f6a075e9586c" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="56998dec04b97e6e23a3b497bb7682b250add4ca" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="2ae5aa1f13074420e0546950baa2e52a4394fdd7" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="483276ded04e7ff777f27b8c7669b7bed49de3e7" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="15c75f9577eee7218717ec4e9781c0da42dae6a7" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="a87f812d77b8b18879fb44358a93fd7bb3c550d9" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="a4cee6194dbee1c63a428ba4471bfd08b170568b" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="b8fd524953fe937a1996001e08fc4497f96b9d5c" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="9593fe80dcbcfd9f80e87db4ac2295e63db803d3" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="7be7cdc8694fa23ace4f427b5d46a9a8999feabc" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="bbc9e6aa23d9578c842bf19a8e2e88eb6fecaaf1" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="1cda82dddd10bb80784d44cd719da7f9820c47ee" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="581cf7b7cf9492e34d5b4d8c5cdc40391a919de3" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="50637b3864665c4d1d87a82e93e19c55c381a29b" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="ce211378d206f26c251dff3cd525a621ee191c8f" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="558b6a4e1bfe64108a4d9810029ce67734c14d9d" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="adfa04af3b9d04fe0e86fc8da7dbbd8c141298e6" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)</source>
          <target state="translated">def head: ( &lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="576ede067ff0109309d24a128a956c5cacb79e71" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="456f1bda0386e00cfd5eab42a0e150ad1e949cf0" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="8998c5d9e83455bbd07f15b7f4366213db84b476" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)</source>
          <target state="translated">def head: ( &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="49ffbe2f95dcd5db30a13850f057d2c104df744d" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)</source>
          <target state="translated">def head: ( &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="3901652444dc43df3653b7314e118b96f4d8163c" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="64eafbc1fc91894bb4aa1e1904a9d77440d647cd" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="40a6a0df09382eb0f259b128d65434bafbc5c189" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="75bbfd43c1e640254ffc69ab5367ff6894ed651f" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="dcdf758488dcaa86043e54d9ed201a087ecf52a6" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="63685e972ea7078715c0f6026a7c3b7d658ee660" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="05723cbdd826432a5d0f563eeea67a93b6840cb5" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="3c60aa539436df9839c09270dbf0157af3cc6c11" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="1d4d9683a5c814061e16601e57e35507a440b0e3" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="14c8601c419519551775de08dff04141b8d389bb" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="cb90745288722df03263fa55fb822f446c88d05b" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="50db300342eb99cb0db66b0c430dd4bdd6139303" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="4b6e714c9189cde2b183adb11dddca3f2304a56a" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="ae7177da14c387c24eccd1ccd4af8b53f10227d1" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="f270a2f3d170adc929025258b67d94354bc1b83b" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="f1e724ad3958ccf2799950eb9775166f9b5de535" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="87b0429e3375c6a397a0be662fa931dae317c1b9" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="1eb20c6158a266b83f6bad2570ee5c7607b9a009" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="80dc9c889ee6ac1dc58ae6b89a87381f087cbc2e" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="f2ee8e9a5b11c5dd803439162dcc30c93fe63e82" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="e6aac5848aa89928fd9ca05c3bfa1f7eaf53d84c" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="9b063470a3621d48a13fd6deff00993bb61361df" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="ecb73de315b5313f3ccf9ee3a49e5a33cc701004" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="d5005c9411f5edbf30de274df6de1ec61895f548" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="ce0ac0be45ff4fd3b13f13e1b0126ad7bb8d3015" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="bc3c74f93f6efc8933d11f1a17897d0a63c23592" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="657b08d401ca79e4028257f7d101e896c1255c6a" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="e2123f336dc28432dbc0fec862d4b8abc837549c" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="20cc55b02e8835e4a8877f89cd165fd19cb132f7" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def head: ( &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="492d6bd1077c9c90f598bd6bef12133e853c6b91" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;)</source>
          <target state="translated">def head: ( &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Clave&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Valor&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="1688db7562627be6c4b7fcde882ead9842120e0c" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="73f0ba8c4be886004d3da8c6d9325dd0f46c8157" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="1288208577c0ce0e9e743b1cea65eff9a4e7036b" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="847a439953960b766432a847621fa11f7c00c6e4" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="e38f395914eaa72d1d6b50ca1a63e58f18c3dcdf" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="8f158b6dcd15394adf8a1aaeaa3fc8632d1fb125" translate="yes" xml:space="preserve">
          <source>def head: (&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def cabeza: ( &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="af2df1cf0b5798dd7b6bce9738cc5802c8dff8a5" translate="yes" xml:space="preserve">
          <source>def head: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def head: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9696011f0f1cb3a8a5ba2ed9022e0c1b30ab51a9" translate="yes" xml:space="preserve">
          <source>def head: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</source>
          <target state="translated">def head: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2e65f9210217b84a534b87b38824813e3c6e8b55" translate="yes" xml:space="preserve">
          <source>def head: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="translated">def head: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="685d648a0c84c0156b62d45a38848f9c26cbe783" translate="yes" xml:space="preserve">
          <source>def head: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def head: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2140651d7a97181a2d3452f3643641960ede45b" translate="yes" xml:space="preserve">
          <source>def head: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="translated">def head: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;flotar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0501c9387282a9e0a82694cd5ad7bdd9e6e0bccd" translate="yes" xml:space="preserve">
          <source>def head: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def head: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d209b44dea98d79bed31a3606bd0c8c33bdd52d4" translate="yes" xml:space="preserve">
          <source>def head: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def head: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4cc61e9ef127248394a44dbece6953090793ef19" translate="yes" xml:space="preserve">
          <source>def head: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;</source>
          <target state="translated">def head: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nada&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="04128ce3ccd418cc2a722dc91adf2ec270564da9" translate="yes" xml:space="preserve">
          <source>def head: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;</source>
          <target state="translated">def head: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Corto&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c5a096d1ab86ed36b5f6cfdc4a998c62ad16cf1b" translate="yes" xml:space="preserve">
          <source>def head: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def head: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21933fec7e1c6a92c555239c0e469b60532b7a1c" translate="yes" xml:space="preserve">
          <source>def head: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="translated">def head: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cdfd151f862e3cde4e40664abc82c31799a8aba0" translate="yes" xml:space="preserve">
          <source>def head: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def head: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="058b59d6224596a39590f7fd786714f39d83e276" translate="yes" xml:space="preserve">
          <source>def head: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def head: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c58f4eb0ac8ac87cd714aef8c2ad91bd7aa99e6" translate="yes" xml:space="preserve">
          <source>def head: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def head: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4397ab1cb48528c097dd6bbae55924d769764b4f" translate="yes" xml:space="preserve">
          <source>def head: &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;</source>
          <target state="translated">def head: &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nada&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3bdafffc62e39c3351810c22222eb1be39c98a6e" translate="yes" xml:space="preserve">
          <source>def head: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;</source>
          <target state="translated">def head: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Valor&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0eecf6615f15e22f9a0cb49aeb2aff871b0f5fe7" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4d7af03da8aeccd69d8075c6b14ebff34169e324" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4edc41bff018d71f23883fad70ac90279a49a5d2" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="feee1a24cae15a2676382d5c8c5a0cc34ad32bb3" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="db16f19bea58018515bd756e4d14925bde13a636" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1049f7d06da2b81ac87140c3cbd74773a6c385fa" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b4b5619747899a24cfc03f60e95f95420faffe6f" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cae0965f5e02009d5311710e3453fcd50de9e970" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="790b2349e19e9ee3f8e01470d9ef2fc761d87dc4" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3b063bcfac166d49cb355cd26763bb79cb4150d8" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="aeaca4593e5a1b605d54cd87b4135cdc850c8dce" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="266faf8dc645d2fd1bda29c8be233de0302ee2fe" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="45ad4e47199ed4fdc91ab13f46ea779a8078838f" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c156dac558adac76aa2e491c5e4b642d891c65f9" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="49acad92f55df30df1a0e8921d04b4fd7d82ff49" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="102ab9b14cdf2a4c345fe92471e5fde3601bd5a7" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="49cd96782482e8f99ff3bd9098cfda21ad59d3f6" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1d4eb602ea41d255a9c63dea632da3f04cca3fb4" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ede6cff94faeea863754a325b613580b62a4a0a3" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9964fe3854903ab49f998e38eacbd9d26e257456" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b652b68e22563f097e114ac18b4a28d2d948ba59" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="794db55070a8302311017ed2015491c93681275b" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4d45045269268066df23fdc17c7cc7a841534412" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e30077ea86ce677229f82c6676a5a8a2d0667c0a" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="499eff1e348f09659d7efb984a131464ce779b8b" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="29f169de4d60b1e7a52bf2b9ad922051d68b058a" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a25b9779dca72b1bb7d94012d0ff9cd6a27f0733" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2d52e3f61f390815f8e4f8dc4d107cdf1e8fda16" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="77c2fce53f0173378f975156ec50c5fa202ee40b" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ece344c8ea62b1687a5c29ae8cfa8505f4735707" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="af5bccbfa126027feb7755ad107551dbaaf5f519" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="68632a051f8bc2ea5a1f103d555db5c257d0c8da" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5328a1462f83cbd6245ffa33f807eb90efe28ada" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ab1d2764bb056d3178d922e2c810f89ff1831b81" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e9c002aa5145a33ea142cd28b294db26881e3bd3" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="08d7b67f354cc36501d893dbb657c9af0abbda8a" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b83c85a28b160bdd8d33245503d862ba9cb6dd91" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="363fca0933565ec7d3c4536d7736bd27b03b3d64" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9eba20b77fc24f2f2d916c17cda7deb4a53c0bd5" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e7d23757c70d493c1e654a5b0f04a9efb7dbde22" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ec8481358d6c3eb97bdbb53ea6a97dcc7fd4016b" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3da9b691f75be91f5ef840d518e404e7aea35278" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cdde5aa06bfc9e400b2c70f55a3d93caf4b67bc3" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ed7a086d258afd27edb252f56958800df1b19e0b" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="faf0911f578603203a16c45f2dbd7a97c87a8f28" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bff561881fea921831879fc56ec6337eb6b59439" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f23e51f5d5b34b1eceb8c35b84d3e8e209837da5" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="83d724edc54144a31ff57396a44fb0c6b2e04e60" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3b6714c6f492d8c5b774998a494fa706e0c2298a" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1398012021e08507b915010f5f90a23bba4f4798" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b5fe637e03a4ad4e01720600b4218de5f51de3f3" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b2b74bd6352e7d342a45b271fe5251afa9963281" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6b805df30e4a0f1eb7222db3cd827528058e4cd2" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6f8359dfdf8015e2002bce275e38dd88b0fc3e4e" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="69036d49539f8ad1756aa6c261d02dd0a8cfa056" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="88c49b27ac186fc1de2281042116cd27a841ab2c" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="738ecb6eb5816be1f8d8ca259da9041f39447ddd" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1292f45c8cb73a5a9261dc623cad7cbd3da9178a" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="011be43fd23d09e1d4554c2010c7a38c08925a99" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2b8095ff7df8aac0ed886667eb2bc01e3bab5527" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="add952960dda6c615a91328d7ebda2c068f470e0" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c9836bc950d087689a86483e51fd0e066e62750b" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0199119cf53c55cdb54cdeca30be203a500c7f43" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cf7180af1a5797f99359627830c1360cefed8a39" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="90118690db3c20591f73e462a3f96f316f0acf21" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6b5ee9743b790c0ca797ae1d9971467560eb32d8" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="31d02719ed3406eeee9b499fa9c567d7fc9c0645" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9afb4f6d62605cd34d89bb4babbbbd652af68096" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="54043f32d40f8c1d6efdcfa4c79f42a81568e54a" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="11bc164098c7370197022ad5418cbf2afac40925" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="60e5f7c9610479f2434d26bc903a0664f25c35d3" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bc207ec710b95aa28eacff355e59915b2f5d94a4" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5ea323f8aaaff8e4ee69297ec452a75234f36fe8" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="067138c1ffb0078bc015baec6e615d690364684b" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f17b74134550f6f5df554ceb952956bf549ec052" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d292ad98f648062f047020f36f4015496d9ce359" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5d3f76cf87feab6a7f40eed3ff43ae62fbc3b970" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bd080eeadeb8d00603e5806e90567ffe73814a96" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ba2363cb4599cf8de4740abf882ecb03d40fefa0" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="446d2ac0cffe92afd4d0915d7ce9529911ed2d84" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="eac42af06e996195a8461e6e3e62d8aa0ed65394" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e5b8908a2238b13ce00ce682a765a4021da18880" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="95206f2a19fddfd767a0a4c1e5e9d44482e19cb7" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="01e4ce9c4560b637ed8c66f3f9d10f20cd2894d0" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a6e67d2fd4e90254e7ad629535e5e74afe6b537c" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="55440e70c52e74cdd0451575f61e804b76f41544" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e2e4c3d50e2cee0261a1fc92d22a898a0c8294f1" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6e61bb0d4c366ec3084d2cdc03f8d67def7a171e" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8c21c801c4dc6e06d1fe68b9a40631a8743bc99c" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4993e59632478113e3b512c009a1392f749ad8d0" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7fb5fdb837dfe02c6de126f5838ce05073d9ac33" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="108d4fba893dd0a3a0b642c6dae9dd3aa6f400b7" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2972ea1f4ce4d10af04fa77c660e04d56cf91c0b" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="be4f95bf0d3b5d27f02cde6170d093df1e060468" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="42be4ca9684ae347d7c249214df40c5185abaa3a" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="849c995a4ac75ee2907e57c20e154a3b7c86b4e6" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="543799d5327cd21819f0a6012299a62082d19190" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="61e32102712ff9ad711cd28af25a7857422230cf" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4278316e58dac2e77ca4512f2192b5f741024ce2" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="06c2342b87295e57ae54d339dff3ef214b51efc8" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="931a92f48ee323ed54b8aa9219e79d82a3cfaddc" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4c53f040df4bbb4bafc5853b98da6c2133417df2" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="002b22ef36a5110e843c33c34b445559ae8c2e5a" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="662fcc1b4738df91faade234872748661b0c13d2" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="17f79cd0d8c7634976a3bd2c813c4efc956b33f0" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="590b022e3538887a94e504bd597d4e1b0a38fd4b" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5e57e478e8d46040859d8f77a72b48d80bc438f8" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f716662f9c8a42407b3fd551186028f2e4b4f694" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="be4bbe6d2c2834c177aa222b8400044b2ed0ce42" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fea349890bd2a73f87361853a846ccee6ea86c78" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4c25f835b64a4cbb4970234608fa2f28ff8756e0" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6a64eb466f9eaf5767135a5112797aaf2051817a" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="05149a89a823ec18a619ec770d5adf0eb4d08c1e" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0dfa0b0c7e16aaa7b51a76cd04c77e8f229c835b" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="741b14f66e90363c711440562effcef641a1e554" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5b4a6e2005ab60bb42c37d2a56fea734012a74b7" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e7f4212dc1c4c5c92941acbe5cc3dc8724248f1f" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="aeb6868890efd41fac2e294ed031f22cf43ac92f" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="15d090cbad11c1091284efef41f777bb0ab36fb9" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="557b2234e398613bf68e9de90499a230db9ad690" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f1c81b9c8b7d4ab2ac6212fef2f10d82e8e4b8be" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b5b36dc107ba69f1cdca65a27378adf9b947319f" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="591ab8240a0f27030e0cb66bcdaf03c57ecea13e" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c153db3d4817b5045d3b52797cba921ca9a8116f" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="63dc563ab0956cb111a4684571b71b268428fca2" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ce6a12754ee9eac857850b926b72a67a9d6c50ba" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6adb06e70bbcd21686e0cc89bcd67583f74e86e1" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7f7ba9fb7dd0d655d5c154bf62d25431f51f7b23" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d4e2bc454fe62b7f5d44ac33aeeacbc46eaa2a15" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e0b024dbbba28807bf67a2fc2193eeb16a43df4b" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e24b2a57f08eb462de5b0d39c837d1d002c1f594" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="097279645ad0cc5330640fe6f50eb7fd4a5ee4f1" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f9f28aef779c02563b639c46d8057ab0d4fc6676" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="40d614070df9c5966a2c2e159030f6a924a7c10e" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="02d2a3b719f13125d94a244614e7e30f3c7b5c0d" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a7c9bf19559533ca29f14f3eaedc8f49ad1e2a19" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="13c0e6ad77553d2afa4c0d5cdc73c81aa723a7b4" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1a0fbb11941b0d73bff6bc5f5efe2b963990ac81" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ce6e79de8b646e658852721be774d1939422612f" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0f6d0eaaa4421e4bb0b646115aa617d54f86d8a4" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="362f0bd91c199675c2a16fb68340c66e3604f2c5" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="84610873f0ac786b7bee7b0bb4ab26b3c36104eb" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ca8e9173c3e661c46312059f1602c0e0b2c871a4" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9ae664f2f6f780cc3fcadaf28cf2d67850ea22ef" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e6f0550edbcc6070f7ebb1361b0e90d2f3b81e89" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="614606a92f4efd627cdabd0990166cba152fb9ce" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="02cab7cb044cf7a79b183c659c3ec4ff0239effe" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="91b571fc1daeaea803e856e3f5deb34e39f23db2" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f93345307559d6451ae8a2b6a7b97e6d4696596c" translate="yes" xml:space="preserve">
          <source>def head: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def head: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e4ffcdd6b65d9f3c21801e63ddb35cefe24d56f3" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../none%24&quot; id=&quot;scala.None&quot; name=&quot;scala.None&quot;&gt;None&lt;/a&gt;.type</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../none%24&quot; id=&quot;scala.None&quot; name=&quot;scala.None&quot;&gt;Ninguno&lt;/a&gt; .type</target>
        </trans-unit>
        <trans-unit id="0d091b6c532afce6f5fbd2e36816b107f55cedf2" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="3a1dfa8cb659ed61b5df00e22a4c95019da6b608" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="688a5dc0e817dc85ecf69a2287509f2ae65a6fce" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="2fcc5eacfff9dacba4405cf93d01bd17b6bf0d91" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="b0135f698104b21a95492c81e004127dc30952f7" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="2436a7210c5eca9af0dfbd912a92c296f6a4d0dc" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="3c0af7cee97c8697417678bb21d8b2212928f09c" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="5186f2d7951a7b9b0f1e945e38f259b351d99d63" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="7f2f4d2ce6c8c20188f807386d817973dae29a06" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="d12ea442c2cfe1935c1c59cca5823124a4da3799" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="2d25047626062eba964e37414a9af7fbfc76d124" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="565feb9495619d0a73c3ede1ce05b0cec5270ead" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="762a3a5ed825a88ef6b77ed394ebb164997a34f7" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="a1fae443c7f64ac64de917c4e30a31fa23a5be6b" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="9eede6905d903a190b081758464b4a98ff20dfa1" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="1192575a727fc12f9cddc3cbefc5f8f5a3dcbb0b" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="7f7b4af7370e5708839e7e7f52140badcd1e0a7e" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="947dec1752e48bdf56c02eb4e80fd70b1db2618b" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="7499206c9214e4657493d3377a4c655a1229cbfe" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="167c0a56482b704eeb524e99a00d11a035c64215" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="89566d7206c359972a5de39203a3328c18dac8aa" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="b889a31b44d0d643b9febe3aaee6f09b5a8e0146" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="2d73ca7717a6b3a9e9f885b9873dc296b154af39" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="4d85d243873833ef70f6c4448fae52f020edef88" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="a9bfe22e02d0571b3b0ca629598442c419e91816" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="962f8d3e32d63eac23c918e6cb43be59b6236e6d" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="244986718e9b1898dd40161d548c28c834e0d0b9" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="b909ec417d5e9dbb953e90d1a0c49b6a8a7ec1c9" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="3ab3bf3191e790c58639a0e12c30a4d76fdbb9db" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="c2b232bbc5b89a077774c23bed64652aac7ee9ba" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="638403ab025a029ea3f3a02863900242c9e2ecd0" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="41cc4e5304ff21424af9796f97c6b6b99133359a" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="784c7f2382bf4e75d434123aed1d51135cab93c5" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="a35a42b88e018f93d7bb5951e43634783a42f634" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;])]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt; ])]</target>
        </trans-unit>
        <trans-unit id="175cc7d11c14cf31c374e156963e501db6f243c9" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Clave&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Valor&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="dd619a296ed66c88a919889d7215c9673c0f6d4c" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="a3f7560f49f48862e90c2fac0ed65927453cdc27" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="6b1a041648e9cce348b7d0f440d5098d7a574898" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="c1fb1554a738a48a3912fbc18c8342f39c028004" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="fccf10b89caa1bad3e41e228f1211d65539f7a25" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="c742e3c15c8cd5a08a8f0ac2cdbfb59a174489e2" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="5ef1fb48b11df3c8f94324ae4d979132940d4ad8" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="f2da87a06d9adb805068e3b5e4f99731ef90316d" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="fb4248cf9744176cc1876734f285c66e7ad97c8d" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="820199d2a4e0841b4c44a6a3a5055131da49d23f" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="f1eee985b4d88034c4d2a9eee967cd5f218dd06f" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="d327dd7293ea6793d1652c549b2b4c3e53f28927" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="c805593e05ac7af65d50c3804864c0e90b37eb54" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="9e011b4ba78ed0af31fe80aea623920e09f3d2f7" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nada&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="9e0747de052cdb863b56260570a8980622c82fd1" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="b41ca2b53cea1818b46c86688d4a60cc53bd56a8" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="a31a69aa0946567f0c8da794ce125bff48ff202b" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="512813ffd45cc180e028b6b621374c89809778dc" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ea047ac2e81619e2e7be03e0883f17c4d2843870" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b89c3dd9ccb529f51444d55567b3893a7fb000ae" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="38812da82bde05716bdd0767189f6d9b6034ade4" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0084cace873e267f7c63331f453ae1591c44e950" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="30fc9fbb9851885d7d6db57e969dd61c56843c16" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1e862cc7b48c32209fce91540010eff279d7b4aa" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="138b5b46ffd4a042bcf213899f0403d37efcb16f" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d0fcef75708094241b60f52d7956daa27db8179b" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="42f5d2664ccadb383b266d84a0cd7d0d73f3a0c1" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1e72e80807733431e91c7fc17fb1db8aa434833f" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="76396067dcb45110c6b5ed740d055f45d6dfa96b" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ce91c4ea2ceab23b04c545759b47a890a4539a03" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="39f9a3e7842995fff69eab309783dd796792cf4f" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6b93bdf53b75a2b1198794cdbe036c63c617b8e2" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="daf59e9d07e05421a8081a12dc1161d003411ed7" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a68b4fa1f8490858cb92f50fe0f53c3194998436" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f940c5c5c8fc6b945b2295978a91cc95d2c669a2" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b2d92c4d9d4c5188a6abf5bc37fab2dce05bd05d" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="784f2137f02f03d4392da9e28fd16a1d0d4388a6" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="881c235e134b59729d752ecb4b014fcf0baccf67" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="aa4c63bf3b1c8d9b03c6085e77db75b96eb7b995" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="07fb380c60c50f06b78f6b765021867527461443" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="19625fa3f67253162be84061a166bf98d22087f7" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c27fbd73b934d90d9ded0675f626f52afc4b1b44" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2723118dd3dd968c848e0bcc320d908edf7c4d7a" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="40d1438ad74e7188dc8de8cd3803d9105f36ca1f" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d9eb7713d708a9e2a10fffd234db6a2bda435fa8" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ddfbe8fd07d79da7f4f4daf6d1bde850a872dab7" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f3c1d6ef458af5c4fed42c749af9e8653c7a3c6c" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9dddda90cea88aa5fb15ca8cd902c37e8e9610a6" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7d013ecee4407a5332687a6a89a4b8974a19a660" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="662996621093bc8439c0eca3854daeedb4ad1bc1" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c1699111a89418036aa0d426a25484a6a8decb65" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="13e79ca08cbaba5388e34461cd645b63d9817c4d" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4705922e707958d9cd6725f3316004ad50377b3d" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f3888d8bf6b245cce7aaf10af5587e0a1d104caf" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b37ce0e8025fd849df4193cc920e5ea929d0bff8" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d43a47893d832aa6909e739d1c11013eaf5a9ece" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f23005004db893324fa8158d64d885b480d108da" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="47511ab00143354454369432cc9309cb83242d71" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8759e9c51f397c7ada081bdc339a2bcb2a2da03b" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2fd84beb9fcc5c668a56b9ce57c0550b10144b40" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0c147e15c46854ceeff2b93a8cffc18efae4c37c" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="658f95022d7a2756c894527997dce58d2bd8efff" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ef769615c22472bf3b1487c1694118b695a60741" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f9b9d367f45c2b0da88108e75703b630460fb5a5" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3e83cc4abbfacfb7fd60f73f5d6caf14ecdec327" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4d7c6e23828a6c44964bbfb329b5c376deb3594e" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8701a544281dccc999947b1eba9fc1372e62e0f8" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f846bbfd2f9a3b74b241b70eafacd7cd57dde080" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0188078aa415d796825fbed1cc5ccffe08396a74" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="952b9fb04cfc8899a88d2b8782a6c45e6114fca8" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="570288e62a57be55a4879d961782cc4594b526d4" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ead0faeb0a4df666c1a5bc662795f5d2b1f46dd9" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="573d63c85584d84443dd5b28c2db46b66c642fd5" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3fdc0e17bee6780faf59871991774577ec7c1532" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a0b4117f436e93bfe59acbb1ca3168ad375f8f4b" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="da6264d0d591d41a8540852778465d2dd4648373" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="578bc3bf51872ec00115068bf7c36fc65125d3a3" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="192f3948e7d28b07e77f52209a29959f77c4bfea" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="15e3c71670e6e6e097a416c2378e12df20feddeb" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="eb6d6afa525d8389d25d878839991c2e6f24efac" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="65264e668781dad0a5b01b8d03360932825751a5" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="eb187b628941793a0e469e5dcb39578663263b1f" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="462f6f0ed120087738dc73a1c2c9dd6c6ac1a834" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../../some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../../some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b31bd70c9da1195f06bb7e12b628d6f9061e7a3a" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; )]</target>
        </trans-unit>
        <trans-unit id="fd2c4809c6bead59aeb20e82a7359f5bdca3e1ba" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="3782cae2bbaac58afb5df476c561dea869ff2345" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="21bc6c543b433d66d5bc4088dfd21ab730f88db0" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="ba26763f558772301a70de7fa9f612450237dac8" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="6405076d0165cc32aded76b9edc21976684b27d2" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="6138f0ac3a49798ef34c438883382b665b76a421" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="05da9a084eca30182493f741c3608c9108f29307" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="8883e19dcb0d51b00eaac2570f49a5484f69c06a" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="4d1b9e8524acbdefc89d84c6ccc0a299350a9939" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="d701a85efd034b1746c199b36f0de8065535938c" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="3ba3320feb73b431cca53d0fbbb82b0ceaba885c" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="d04077356b3b97e051b00d94dc7a0ee07328e0c8" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="9e22433d77bd8e27fe59bfa03bb4446f15f7be70" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="9b9b10f36c67aeb010b3850fe6cf402b8ba29f69" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="4eefc094b7201b49bd3329b70e44e37ba467e6b9" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="ce553820119ba3ec7ef3d4189171db4eb6aa52e3" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="040d15ee2558417589565ea72028d91bcc9d2a99" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="aad274d3dd0f312244565e3588d48869536e10b0" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="2078ef82edc58d9736d33467fe105b7998f7d3c6" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="85d36db9609e07267898e75a2af9711dde0c079a" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="87c5fe3f5e361163cef24772d0b66e4c32ff25e1" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="6b802ef08e0386791ed440605f6bf1a56c91c2ec" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="888e9ecdd1f355cea1905592f509a382b3d3dcee" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="5be5a72df15d95caca13daa2630176ea20b4afe8" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; )]</target>
        </trans-unit>
        <trans-unit id="67be941c4e57b570f050cbe38abb7654861ffd94" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="0b19bde965d896fdc596e4fbbd92d46ff1ec5928" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="d5a861aa3d089855548dadae04d45f072bee3a96" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="0f9824d91dfc3c2f6715ba2775b447252ae9cd2d" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="6dae826366fdeb9b071c6c3505d078db2a9b4843" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nada&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="859e2c44982ba07554a0ef5d9725b938f716d306" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f31d665260b1d072b631a0bb85d8f4c8c158281f" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6c5ff0881e30313e5b5d175126f4cade8e5e7c46" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="43b4da18b1e41e9a43d596bbead201edf61ea9f5" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bd95955ef0bbbfa2f34fecaa6cde1ba590698ba4" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f05aac7a766e4f8403851eff4fa90be1f7c827c2" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="caa95cc169130430e53fa364a89d367815c738a8" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f92c892e507bd1817fb1e672619b8b8be2734983" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e0294732fc083f1390b48ca6e11f54a416d55857" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fc510716fb13dcfbab17c3337ec5c0b40dc1b2fb" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5627391fdf5258e3175243050888c0661440b0e9" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="818a7131b42bfc8a8d3ba7300cffe705ad213011" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8923bef58e6cee2daaa638ebc44b5060a2f63615" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="43cc4b61178d882559c13bec6574bcaea414d371" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="423ec2f40c1343b0e9bfedc3a42441d9d9e001c8" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="590960167387081eae6e29be65bb19cef3a6e287" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6e696d046f0c3024052dec95ab484e88c8c3baf0" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="441c41d2544424dbc64327c3de82f5333de56d95" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1bafd07f5e398df6c5036ae3a21e77b09e17ff54" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="925fa8963b77fc4066bf83dd38a20656b1670dda" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="64616aaff09f89e48e8c19abc929a96d11341689" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="54a9f233fd4b5b3db34a9c9db6da0047154a922c" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1e50ca63af0710699413b50341f12b68422e2ca9" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7c922087c2db9bc9ddc4801b95d9d51dc436d35c" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="83d346af0231150e6643a30c340e4f5b9bc14b9c" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7abe093aff6fe05490f107a8e7acfd28ea27376d" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9abadf8d6f3df875985a67c12c7541b00ab17e98" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0751c9e0d221be18db19bb00482af92eea9ea427" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bdaafe7340ed1ef5a39f601293ac7d27fc356666" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bbe0d383c32a0c9aee0a55b87929c0118757c0b4" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="781bd62c025723ea8c52d9b1a8bfc70f17914654" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9772bcb2e703a6153bf7fe2f4fb33964b0c8578d" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1048ffd9f1ea8a981f689e5d9093898c1cb66f16" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0bdc9171b434d8913127315ee4cbc05af5523cfd" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a61b80c2b8fd1c8429e83ed804b70e1655e3d34c" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c229cde9d6ddf24cd6c5d0c743497b6bb02cf1e1" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="837b2a1e73ef786cffce4b3feff6f28825594489" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="61c57f67c0f9bdc78caa543e4705cef5d4ce3f9a" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ff944c24ca944b5f071b6d2a2aa758ba738ea3eb" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7e516d0ba368bcf6dd0dbf9f8a917c2ed938cf5c" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f6fae7dea9844d54090d8b8d5debab2d4ddbf613" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0e6ccf26656d39478a2e92b5f8d8304c6da60755" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fa56722a87ca1ae1ecbf69ceabc5183b8af85030" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f2ecadc585304b923bc4f05fe907fe5d71816bf9" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="df20dcef7841f9a6e944a823b9daef50a131b363" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="62f9ebadb481c4d5aa4ffaca439aa0a589eb2422" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="17906e28fbb9e99f758bae57fbfea776d124af05" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9b51413df27533e8d94d5fb3474a7439b95d3b85" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="678a2fd22a93d563da3a62b736a5a069ec63f4bf" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="47fab828a704399f8eaff307f06c766baa2115c1" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="27c7dc208e57cb182c8dab9b88f57a45d3690116" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e4c05193b95038641c08c10225ce61e27a0de926" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d3923f778b1603cb15461f0a640dbea4cdc9c7c9" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c15106db18e0c837c92683355e51223b5a04a9aa" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="67f266c4d714ca6e686ce285463a610dee7a9138" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6bfd452a1489ab0224e5e3a89582d968db2450a2" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="57a17dd3d00db30f48f1e8f6a6bf5c6119a87c3d" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a05ce347cdbee35d33586d73c0d3914896a9345a" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6095537ca88eb86f702cdb474b4102bb6f36936c" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e4aac895b55254d71116e6c9c908edfa636b4acf" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="82d6f9528c71dabcc4e6537ad0f9999f7e7a6f15" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6b3a2ab5c9485b259bd0b8412e93ae6c3f0acbb6" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2499afe714d3292769c8ee2f62648f4bb47c3fd1" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="feecaba31a778be8c31f3197025e1b996e80a9fe" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b452d59acd090ea453281876e3838112e5ea6af7" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="74496b4d43f9e52b14cf4a9b582ff4c98dda52a6" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1d4da643c9ae286727ff332cafe044acb10b4325" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1a17bce6f2baa165f6fd01dca99796f596cead6c" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="06caa47f6eacd66a9f5a833e64840c6d20faa994" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5b949efbfef1d9c8c50d0489ba07b26646bfa5f9" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="969e96508150ff5615c10857f5e4952e53a91a8e" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fd9c13a75c1eefd2731bef35c0c96313d9d75a3a" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="637408b00a89977c3010e4cae63cf170f5c526ae" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a4c18de1dcee349ea222cfa3e8e2b5ad7f33224b" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ef8aa0ad963f2d1ec5e1a7510b3920efc3e94b82" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="018ed2a65572bac591e13afffd6ff3b395679f0c" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="70b72aae0e7b0440252697cb0f0ef7bc3790897b" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="26ea53063a15c928a660d10b02c039256b578d0c" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="57c91255ae41a2075089826982c708b602ec5cab" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3be6c92b88676b85f5b60f53985f3402d3042ae8" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="886bef7bf29ed47f8b5ca40196fffb689e128ebb" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="262c78a1f97cc0490f3430d5d9bfd003754ab0c8" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6a32de999ead1e6030b3b2b7743749f618dce614" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="b6e3d968abb64e53034ffef913ca24c5634678f4" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7e47c4c55d028b076d0244358b4643ce97499d43" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="514c3c54dd1c7aa76cff684a745576f0e197d510" translate="yes" xml:space="preserve">
          <source>def headOption: &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def headOption: &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c581b185650f6fc1b191d8e7d9d7665178487b7c" translate="yes" xml:space="preserve">
          <source>def help(&lt;span name=&quot;key&quot;&gt;key: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">def ayuda ( &lt;span name=&quot;key&quot;&gt;clave: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2684731ec2627c3aed7885aa01079c0bd735319a" translate="yes" xml:space="preserve">
          <source>def hour: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</source>
          <target state="translated">def hour: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d057af0c75eb8f82a8083368163233175a866a63" translate="yes" xml:space="preserve">
          <source>def hour[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;scala.concurrent.duration.DurationConversions.hour.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;Classifier&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.duration.DurationConversions.hour.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;durationconversions%24%24classifier#R&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot;&gt;R&lt;/a&gt;</source>
          <target state="translated">def hora [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;scala.concurrent.duration.DurationConversions.hour.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ev&quot;&gt;ev&lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.concurrent.duration.DurationConversions.hour.C&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;Clasificador&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.concurrent.duration.DurationConversions.hour.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;durationconversions%24%24classifier#R&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot;&gt;R&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ad7fb33a624c7dcb097c901ed69d6d167f7780ea" translate="yes" xml:space="preserve">
          <source>def hours: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</source>
          <target state="translated">def hours: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="82f9502094dad402c7abe6335fa118aa70735fa8" translate="yes" xml:space="preserve">
          <source>def hours[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;scala.concurrent.duration.DurationConversions.hours.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;Classifier&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.duration.DurationConversions.hours.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;durationconversions%24%24classifier#R&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot;&gt;R&lt;/a&gt;</source>
          <target state="translated">def horas [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;scala.concurrent.duration.DurationConversions.hours.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ev&quot;&gt;ev&lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.concurrent.duration.DurationConversions.hours.C&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;Clasificador&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.concurrent.duration.DurationConversions.hours.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;durationconversions%24%24classifier#R&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot;&gt;R&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b496192acb7f0409acd15c1c4b716420e4d9b877" translate="yes" xml:space="preserve">
          <source>def hypot(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def hypot ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;doble&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;doble&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;doble&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2d1be7766db5a431facb18f80f0d3e5ff6e7edf3" translate="yes" xml:space="preserve">
          <source>def id: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def id: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2067c29188412b8eccfe87375b7212af65df22c7" translate="yes" xml:space="preserve">
          <source>def identity[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.Predef.identity.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.Predef.identity.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def identidad [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.Predef.identity.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.Predef.identity.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e6c59a106b186df0dd4f914799ee028bec2091cb" translate="yes" xml:space="preserve">
          <source>def ignoring(&lt;span name=&quot;exceptions&quot;&gt;exceptions: &lt;a href=&quot;../../predef%24#Class%5BT%5D=Class%5BT%5D&quot; id=&quot;scala.Predef.Class&quot; name=&quot;scala.Predef.Class&quot;&gt;Class&lt;/a&gt;[_]*&lt;/span&gt;): &lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;Catch&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="translated">def ignorando ( &lt;span name=&quot;exceptions&quot;&gt;excepciones: &lt;a href=&quot;../../predef%24#Class%5BT%5D=Class%5BT%5D&quot; id=&quot;scala.Predef.Class&quot; name=&quot;scala.Predef.Class&quot;&gt;Clase&lt;/a&gt; [_] *&lt;/span&gt; ): &lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;Captura&lt;/a&gt; [ &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="d018e7c004299c3a9b0a2db00f6d2d05b24d0fae" translate="yes" xml:space="preserve">
          <source>def implicitly[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](implicit &lt;span name=&quot;e&quot;&gt;e: &lt;span name=&quot;scala.Predef.implicitly.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.Predef.implicitly.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def impl&amp;iacute;citamente [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ] ( &lt;span name=&quot;e&quot;&gt;e&lt;span name=&quot;scala.Predef.implicitly.T&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;e&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;e&quot;&gt;&lt;span name=&quot;scala.Predef.implicitly.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.Predef.implicitly.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="83c0e77756a8b2235aa89dfe76699cf737c6808b" translate="yes" xml:space="preserve">
          <source>def improve(&lt;span name=&quot;hcode&quot;&gt;hcode: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def mejorar ( &lt;span name=&quot;hcode&quot;&gt;hcode: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2cce42bbe5e05fa757f00e10073896409a67fec4" translate="yes" xml:space="preserve">
          <source>def in: &lt;span name=&quot;java.io.BufferedReader&quot;&gt;BufferedReader&lt;/span&gt;</source>
          <target state="translated">def en: &lt;span name=&quot;java.io.BufferedReader&quot;&gt;BufferedReader&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1ea3805d81e0ed9e64efea6d28bdb900dda642b3" translate="yes" xml:space="preserve">
          <source>def incl(&lt;span name=&quot;e&quot;&gt;e: &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def incl ( &lt;span name=&quot;e&quot;&gt;e: &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="43b4426e9653d57a8fa8068c03dc6327c8208a1b" translate="yes" xml:space="preserve">
          <source>def incl(&lt;span name=&quot;elem&quot;&gt;elem: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="translated">def incl ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5db41aebf5f8741c8148323b6baff08fb300767f" translate="yes" xml:space="preserve">
          <source>def incl(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def incl ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="828f8ce467085b50b69182d161969ebbeabefa1c" translate="yes" xml:space="preserve">
          <source>def incl(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def incl ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8761bcec776498292b54459b5983304fb3269064" translate="yes" xml:space="preserve">
          <source>def incl(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def incl ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a4da87e505a11859d8d19cb308e67d4200287b12" translate="yes" xml:space="preserve">
          <source>def incl(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def incl ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="63fa7b45c932148caa442dc44ff8f6d222a2dad9" translate="yes" xml:space="preserve">
          <source>def incl(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def incl ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3ed326f05600c5ad045f3d0da53f6bbbd8e70c33" translate="yes" xml:space="preserve">
          <source>def incl(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def incl ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c50fb5616dcd3eb35b66715e6d3c50355cccb8b3" translate="yes" xml:space="preserve">
          <source>def incl(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def incl ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="967689bf4537c0273c52716497501e40fbebc884" translate="yes" xml:space="preserve">
          <source>def incl(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def incl ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="951379900b8fa5f2c9161d4978f23d03def220ba" translate="yes" xml:space="preserve">
          <source>def incl(&lt;span name=&quot;element&quot;&gt;element: &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def incl ( &lt;span name=&quot;element&quot;&gt;elemento: &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="86f26c07aa9c3e63e3ce033944ccebb8e5d2e60c" translate="yes" xml:space="preserve">
          <source>def incl(&lt;span name=&quot;value&quot;&gt;value: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;</source>
          <target state="translated">def incl ( &lt;span name=&quot;value&quot;&gt;valor: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Valor&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0e6bc332d1b2d6c8a8c5915b00ded87c365dd935" translate="yes" xml:space="preserve">
          <source>def inclusive(&lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../index#BigDecimal=scala.math.BigDecimal&quot; id=&quot;scala.BigDecimal&quot; name=&quot;scala.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../index#BigDecimal=scala.math.BigDecimal&quot; id=&quot;scala.BigDecimal&quot; name=&quot;scala.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;step&quot;&gt;step: &lt;a href=&quot;../../index#BigDecimal=scala.math.BigDecimal&quot; id=&quot;scala.BigDecimal&quot; name=&quot;scala.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numericrange%24%24inclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Inclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Inclusive&quot;&gt;NumericRange.Inclusive&lt;/a&gt;[&lt;a href=&quot;../../index#BigDecimal=scala.math.BigDecimal&quot; id=&quot;scala.BigDecimal&quot; name=&quot;scala.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;]</source>
          <target state="translated">def inclusive ( &lt;span name=&quot;start&quot;&gt;inicio: &lt;a href=&quot;../../index#BigDecimal=scala.math.BigDecimal&quot; id=&quot;scala.BigDecimal&quot; name=&quot;scala.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;end&quot;&gt;final: &lt;a href=&quot;../../index#BigDecimal=scala.math.BigDecimal&quot; id=&quot;scala.BigDecimal&quot; name=&quot;scala.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;step&quot;&gt;paso: &lt;a href=&quot;../../index#BigDecimal=scala.math.BigDecimal&quot; id=&quot;scala.BigDecimal&quot; name=&quot;scala.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;numericrange%24%24inclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Inclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Inclusive&quot;&gt;NumericRange.Inclusive&lt;/a&gt; [ &lt;a href=&quot;../../index#BigDecimal=scala.math.BigDecimal&quot; id=&quot;scala.BigDecimal&quot; name=&quot;scala.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="0ac5a8dc4953baf429b3bb853dcb10d3c18a06ee" translate="yes" xml:space="preserve">
          <source>def inclusive(&lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../index#BigInt=scala.math.BigInt&quot; id=&quot;scala.BigInt&quot; name=&quot;scala.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../index#BigInt=scala.math.BigInt&quot; id=&quot;scala.BigInt&quot; name=&quot;scala.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;step&quot;&gt;step: &lt;a href=&quot;../../index#BigInt=scala.math.BigInt&quot; id=&quot;scala.BigInt&quot; name=&quot;scala.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numericrange%24%24inclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Inclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Inclusive&quot;&gt;NumericRange.Inclusive&lt;/a&gt;[&lt;a href=&quot;../../index#BigInt=scala.math.BigInt&quot; id=&quot;scala.BigInt&quot; name=&quot;scala.BigInt&quot;&gt;BigInt&lt;/a&gt;]</source>
          <target state="translated">def inclusive ( &lt;span name=&quot;start&quot;&gt;inicio: &lt;a href=&quot;../../index#BigInt=scala.math.BigInt&quot; id=&quot;scala.BigInt&quot; name=&quot;scala.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;end&quot;&gt;final: &lt;a href=&quot;../../index#BigInt=scala.math.BigInt&quot; id=&quot;scala.BigInt&quot; name=&quot;scala.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;step&quot;&gt;paso: &lt;a href=&quot;../../index#BigInt=scala.math.BigInt&quot; id=&quot;scala.BigInt&quot; name=&quot;scala.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;numericrange%24%24inclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Inclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Inclusive&quot;&gt;NumericRange.Inclusive&lt;/a&gt; [ &lt;a href=&quot;../../index#BigInt=scala.math.BigInt&quot; id=&quot;scala.BigInt&quot; name=&quot;scala.BigInt&quot;&gt;BigInt&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="ae2e8253a7c1f0b99313bf083979f81f41788d92" translate="yes" xml:space="preserve">
          <source>def inclusive(&lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;range%24%24inclusive&quot; id=&quot;scala.collection.immutable.Range.Inclusive&quot; name=&quot;scala.collection.immutable.Range.Inclusive&quot;&gt;Inclusive&lt;/a&gt;</source>
          <target state="translated">def inclusivo ( &lt;span name=&quot;start&quot;&gt;inicio: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;end&quot;&gt;final: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;range%24%24inclusive&quot; id=&quot;scala.collection.immutable.Range.Inclusive&quot; name=&quot;scala.collection.immutable.Range.Inclusive&quot;&gt;inclusivo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99d31b47503c8b6654b48da5024c324b5696adc2" translate="yes" xml:space="preserve">
          <source>def inclusive(&lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;step&quot;&gt;step: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numericrange%24%24inclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Inclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Inclusive&quot;&gt;NumericRange.Inclusive&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="translated">def inclusivo ( &lt;span name=&quot;start&quot;&gt;inicio: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;end&quot;&gt;final: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;step&quot;&gt;paso: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;numericrange%24%24inclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Inclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Inclusive&quot;&gt;NumericRange.Inclusive&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="fbe885df320a3606a1ada0aad02ee9e61ce4a74f" translate="yes" xml:space="preserve">
          <source>def inclusive(&lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;step&quot;&gt;step: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;range%24%24inclusive&quot; id=&quot;scala.collection.immutable.Range.Inclusive&quot; name=&quot;scala.collection.immutable.Range.Inclusive&quot;&gt;Inclusive&lt;/a&gt;</source>
          <target state="translated">def inclusivo ( &lt;span name=&quot;start&quot;&gt;inicio: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;end&quot;&gt;final: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;step&quot;&gt;paso: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;range%24%24inclusive&quot; id=&quot;scala.collection.immutable.Range.Inclusive&quot; name=&quot;scala.collection.immutable.Range.Inclusive&quot;&gt;inclusivo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d1991428699371234caa69c4ef96db3f0d22205d" translate="yes" xml:space="preserve">
          <source>def inclusive(&lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;step&quot;&gt;step: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numericrange%24%24inclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Inclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Inclusive&quot;&gt;NumericRange.Inclusive&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="translated">def inclusive ( &lt;span name=&quot;start&quot;&gt;inicio: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;largo&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;end&quot;&gt;final: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;largo&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;step&quot;&gt;paso: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;largo&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;numericrange%24%24inclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Inclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Inclusive&quot;&gt;NumericRange.Inclusive&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="d29776c3bf060049c380201e74b2d306f65a1fca" translate="yes" xml:space="preserve">
          <source>def inclusive: &lt;a href=&quot;numericrange%24%24inclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Inclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Inclusive&quot;&gt;Inclusive&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def inclusivo: &lt;a href=&quot;numericrange%24%24inclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Inclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Inclusive&quot;&gt;inclusivo&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="054572e473ba2b3e9ce0f229d2ef6ccd25abddd5" translate="yes" xml:space="preserve">
          <source>def inclusive[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.immutable.NumericRange.inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;span name=&quot;scala.collection.immutable.NumericRange.inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;step&quot;&gt;step: &lt;span name=&quot;scala.collection.immutable.NumericRange.inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;num&quot;&gt;num: &lt;a href=&quot;../../index#Integral%5BT%5D=scala.math.Integral%5BT%5D&quot; id=&quot;scala.Integral&quot; name=&quot;scala.Integral&quot;&gt;Integral&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.inclusive.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;numericrange%24%24inclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Inclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Inclusive&quot;&gt;Inclusive&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.inclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def inclusivo [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;inicio: &lt;span name=&quot;scala.collection.immutable.NumericRange.inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;end&quot;&gt;final: &lt;span name=&quot;scala.collection.immutable.NumericRange.inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;step&quot;&gt;paso: &lt;span name=&quot;scala.collection.immutable.NumericRange.inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;num&quot;&gt;n&amp;uacute;m&lt;a href=&quot;../../index#Integral%5BT%5D=scala.math.Integral%5BT%5D&quot; id=&quot;scala.Integral&quot; name=&quot;scala.Integral&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.NumericRange.inclusive.T&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;num&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;num&quot;&gt;Integral&lt;/span&gt;&lt;span name=&quot;num&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;num&quot;&gt;&lt;span name=&quot;scala.collection.immutable.NumericRange.inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;num&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;numericrange%24%24inclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Inclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Inclusive&quot;&gt;Inclusivo&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.inclusive.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="227d85964ed5d95c31c6c647f9f9908c57eb7a2a" translate="yes" xml:space="preserve">
          <source>def incrementExact(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def incrementExact ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="05543a087a0ba26dbecce0fc38ef2070e262b4b0" translate="yes" xml:space="preserve">
          <source>def incrementExact(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def incrementExact ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c60ee2afe4156d8879771d6c6c52e211f35d1cf0" translate="yes" xml:space="preserve">
          <source>def indexOf(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def indexOf ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="54cdbaa80d95bc90fc08fe7525faa660627efb59" translate="yes" xml:space="preserve">
          <source>def indexOf(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def indexOf ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="17bfcb0b3b5c0728f7ecb617b80545643fe298e6" translate="yes" xml:space="preserve">
          <source>def indexOf(&lt;span name=&quot;str&quot;&gt;str: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def indexOf ( &lt;span name=&quot;str&quot;&gt;str: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="da96ae02a876575941aff9642fa2054841ad73b9" translate="yes" xml:space="preserve">
          <source>def indexOf(&lt;span name=&quot;str&quot;&gt;str: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;fromIndex&quot;&gt;fromIndex: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def indexOf ( &lt;span name=&quot;str&quot;&gt;str: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;fromIndex&quot;&gt;fromIndex: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4b21ac44b6743946ba6755014229d17a9a555fe7" translate="yes" xml:space="preserve">
          <source>def indexOfSlice[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.indexOfSlice.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def indexOfSlice [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;que: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;colecci&amp;oacute;n.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.indexOfSlice.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fd47873f53612ff7cb4a1d86e64db5f8618ebb7c" translate="yes" xml:space="preserve">
          <source>def indexOfSlice[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.indexOfSlice.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def indexOfSlice [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;que: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;colecci&amp;oacute;n.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.indexOfSlice.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6270db449f3f589a846005c798d88f5f473cb62f" translate="yes" xml:space="preserve">
          <source>def indexOfSlice[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.indexOfSlice.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def indexOfSlice [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;que: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;colecci&amp;oacute;n.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.indexOfSlice.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fffb0b53d7601f03ea6c41858045c4a4a50b49fa" translate="yes" xml:space="preserve">
          <source>def indexOfSlice[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.indexOfSlice.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def indexOfSlice [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;que: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;colecci&amp;oacute;n.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.indexOfSlice.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
