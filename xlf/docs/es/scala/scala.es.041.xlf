<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="scala">
    <body>
      <group id="scala">
        <trans-unit id="4e419a5449157d56a840f696190dceffe83d48f4" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;colecci&amp;oacute;n.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;colecci&amp;oacute;n.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9db549eb7a9d1e743a177449637bfd5b4229977d" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.WithFilter.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.WithFilter.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.Option.WithFilter.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.Option.WithFilter.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="359fb9532324d2e000736dced090eca43a34ccbf" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;colecci&amp;oacute;n.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;colecci&amp;oacute;n.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="31c05781baf6b2fe54c594c1d2c0208464d73ce0" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1037e2e899238a88b34bfd8b6eea79e51334180a" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="87f7d86d0052715ca71792cd596f291a20cf7a1b" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="efc644a0835ab7145f6bf333015906de525c98b6" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="707efb222db6af644f104914da765daa9badd23c" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="244d5aff5207f960b2b627da4a1e89f946742b09" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="80286dc6b364d8210153ebf0b9197f937b561aa3" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9b0268e81b975705c09643b08741e233f0a3cde6" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;arg0&quot;&gt;arg0&lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.ArrayOps.flatMap.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;arg0&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;ClassTag&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;&lt;span name=&quot;scala.collection.ArrayOps.flatMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="886a29c6ebdd9ef8d70e156682a865cf4fe46ad3" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.ArrayOps.WithFilter.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.WithFilter.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.WithFilter.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.WithFilter.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.ArrayOps.WithFilter.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.WithFilter.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;arg0&quot;&gt;arg0&lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.ArrayOps.WithFilter.flatMap.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;arg0&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;ClassTag&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;&lt;span name=&quot;scala.collection.ArrayOps.WithFilter.flatMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.WithFilter.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="47047a7fee17518feea83d0bc413911903ef951b" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="90d41f69f453b48a9df04138d11ff29a1b0e82da" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="09e622b7922124e1ca2f49b0a4b2174e3d735545" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="405c74545f02483201c71212c735e6824a812f1f" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a2f89613e76c124b38cdd7763575b99945bbbf8f" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e16258b589c634eeb1cb0399b63c1d2d879597b5" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="68faa4be8f2c169ac2eca36f54fb245b51440945" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7729ff701a765879f93a395c48d82af82126cf57" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5df2d394001589ba7349005ee2a35ab685a1e8eb" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3ae75c4af11db6118014d63a154ec4415d0a1355" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d8ea9dd27b3ea467507e91ebd825230337ab3386" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="69f91c553c9c6f5d3eb39e2555ea9af5b2d53df0" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="532d760719b9851a7063aeea59310f81a2cf0980" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3a87fff330e06fc54eb40e3990323e5b9d540616" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="07c21afad242f7524c8d4b14913ed2a1c43944e8" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8bb4c303dd6de808c4dc03965577a4c692a611d8" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fc61c226254066bcff8a94bfbf6f39e3e23801a2" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7c23eb20c659c6f75d1cc93f36f2f09255737257" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c31dc214e1c84a6b6deaf9b44f22f7bf2339a772" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3973c595917493b7edd9f467c932d05ed8205718" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableOps.WithFilter.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.WithFilter.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.WithFilter.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableOps.WithFilter.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.WithFilter.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.WithFilter.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8022f645708b233028ab8b1d69d88333c55a9de8" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d0fec03b4c8b4156d32f55b9d737b10bdfa42d88" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6b3709e2c9d90b04a60779b4954261139ad527ce" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f698b369ecb6d9db5a74031905614245bfc46f00" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="079b3927458edfb7b6a38f1c49418d64d023a2df" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="92065393d923ed686f1797e72f7c1787f6c63a37" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7ead942103a4169741f6e867756735dfe378ca04" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="992054f3e3b496d8fd23bae3c0d384de09615885" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3cbb9ce3e5322e29af3c6de3405c68ed016e5df1" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="13efae6c7e1e8e8037c5c7888196c8530bcba7ae" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6d14f14d2839556cfe9e1b21d775dc33cd67b4a0" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="af6f282a97fceea6fb02216b983f075efeea6f96" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dd5ccd86d156844be6a7f845f202d57ee15cbaa2" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1333c7ca0c9f05ffe6930e8b525f62834d1a636a" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="96da83f26ba0c050238f1cd3e7fc9f5e348e00d4" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="15b0806bd0d66ed2ec59bf7dd200fb3ea6337c42" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bf6cecb141e8dbde0b8b0b1bb9c197e4086e7a75" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4f32737534e5f80fcd353a5352390ba10dc794cc" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6fa06ea270381bf2bdd4e673d1f9b7cee64f9094" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="feba5501b33326d161d7409c031cce169cba2817" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SetOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="002d7f27f36938bfe660700337b8841cac986ab0" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ff9a3ecf6b6e582397f2eb7dae87b974a1b9c22a" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;ev&quot;&gt;ev&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e8b0d42bc5b63d9468260654795f816ac4532bf5" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="87abf216d033f14ccf03e785350b842fce27bf31" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;ev&quot;&gt;ev&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f13153886938ca587720253f38a0df4ccdd84937" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e56a5174948a8fb0197a9c01c01e34b2b5fb2605" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9587b58f2ffb001f1a329dc413225217c69292d7" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;ev&quot;&gt;ev&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedSetOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ce60f7d32df7856368365175f776413c238d17e3" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.WithFilter.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.IterableCC&quot;&gt;IterableCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.WithFilter.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.WithFilter.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.IterableCC&quot;&gt;IterableCC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.WithFilter.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2ea64a3a5e79cc211bd85b46343af4496f224759" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;arg0&quot;&gt;arg0&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.flatMap.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;arg0&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;&lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.flatMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9c0db94b312fe1a5c9b810ecddfa0aeda3821271" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="44580cbd6f229cd2661a1233c49448be273c9393" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="55fab7a48d8a9125c584977342619e728f61e144" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5701e685c06f2ee0411636821394131f62845bf0" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f5579a1d661b36a5539a043282b3ab94a63f3043" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f9f5de927b97502e64e6e494597efba673e45fa0" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;ev&quot;&gt;ev&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.flatMap.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="186595e029dc679375c5d8890fdd186c3b1fc1dd" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="84e9b5a837567a2bfdebe19cdbfb1665c46f05d9" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="aa0a4ccd77cfebef29091a68f020e4a53933d8f0" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4b1530c9cf5f29b802eb8a196a4f99e0abd036fd" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6b6ae5cfe77c1bf2eda857d8f6d9aa70ef1c2ffc" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ced0412d408d152eba527dcd3a94e813c4c08da4" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2afb3236d8224c5de073d6cd29e58bbc88613285" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9c58941eb3b1bd19359a10f5af1ec51f3ef8b145" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e16ba078140edc9a76664a557666c7d4e9aa825d" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="946fcc0ebe8cdcd2e49c69e20bcbf9fb9d36f917" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="055232021542e47691d7ce6717ecc27b8c25431d" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a6c814ef59de911d2c6d615b0f762de05722cb19" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f05885c4f36a7ec6fbca1b4cec6e1c646097b090" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="64249daf9f45f55827def63375614c965af1a25a" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d3d409e97dfaa43a4f9629925bcc68dea9f5bbb8" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b87efabfe5e22993742f7d3e77c95a8bd9938ce5" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b11febe5a90f32f10e79c1d1f81b1e9c498dbbf1" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="29bacdb15aaa1fb7dc02000548f9a53b550ddbad" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="892af1a3997eef59587a451396abbf51bdaa2303" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d38c012ab38de243587ca722479cb922ef2c278d" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bb660df567083cf7e05f1e030f13f3924c9ad592" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="688cf8c3e6ce6b1a39467da5c74a474884feaa4b" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e85f6ad0aa7ff2ca52c8f24dd1a9f7c0158dfcea" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a85c272e828ede5f47dd40f9b484720bd0682f98" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cc6a14309607bf5ddea3861abf216a1320a55caa" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6126ff99e4ed9bf484920691bfba47cb99df2bb1" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a034f500a0f8a09116b037a058462816722d6199" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1186d2ec77b6b5df814e925737ad7211a351f373" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bbe0e8c3f518fa1b946a2501da4ad4a63c46796b" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a8ca1997d42da53d46cf3db0e5ff0c4996a15195" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1036af0908026e5fbf4a9cc1850611d9e1df6ded" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ebd713ff39000f543f56d965fd163cd2a3e352fa" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c82e253937413ba73ea2e5385623ff9abe8597f9" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="42b35e6aa8e74d6468f0437978532d9a87ecf601" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2fc9eb6c3e2bb4a4ea6763ee0f9319a4e550da15" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LazyList.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LazyList.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b1c6488808112c0f39986e25acdb51bc2bfefe62" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b4fe5d7f5e353f0c77833d6bab0d35e7d85e35e3" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a6aa2814a3cab2066d6415f9a4127ae211115ce8" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8a81857a69c8b7389be57cae55a5fd300bdb9836" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b499682541373fb2846fcd47bd281ec2782a2121" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e9992b9e577d3ff01538030375057f4cecc8b9af" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e4a619d99de95216d924abbcd31d6f1fa7a0a00d" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="03916beb60801335a72eda3664a2158a8bbdc2a6" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Cola&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f872687393e426569e8c981c5fad61e0f3bfe0ad" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d65ee36792a25b1f745735a06e387e8483493e36" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7907234a86b09586f52d80d880ea999ba8de24a0" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1c7f0564b474dd484eb3a6ac8f5db51327b4a112" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d27e13655c20d839603ae253032ce64a793a44be" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a0d91342205bf3bd1aed3c7fbf2c948d5edfcc6c" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2b63cda819bc9054aef794be693e93c2ae13a585" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f009c80b56f9bd6119902b6a9ab5cfe5bb79bfe5" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SetOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5a5bb2145528b8994a24f19014322ad0c5c51528" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c61cf4c6432eec6c05dc2bca3f59535870b3fef8" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;ev&quot;&gt;ev&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2c1a4611b62394e57ed54c3f825070b5eb8107e2" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bd59979fa32770c7dde5dc668d8ef6fa64a40d39" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;ev&quot;&gt;ev&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="83508f7f6f1b0f2aa57a779a8d62ce42b3ee5fb1" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6c4997a181ccadeda1dbb93d2db1e7544cc9882d" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SortedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;ev&quot;&gt;ev&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SortedSetOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c539d7cf6c06df1a271a38b2e603d3afa70057c7" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1886d5a097d781d78aebf3e34bf9cc74014e1ff0" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bb42019e4344692834c4b48118a7a091200d633f" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2112af6276372cb5f273f72aa81ef6d2358b6dc1" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;ev&quot;&gt;ev&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.flatMap.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d9896628f0ffec56e74c173c4afb4c207d6fb5c0" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="87e68fec05511d5ba55fff32a2f899bbc9baaa15" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;ev&quot;&gt;ev&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.flatMap.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bf27fae552b19aedbe661226c1b3a9c639dd320f" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c0029fe4796116cb13adac629f050b01df3680a1" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="afbfdebe3e162a0af26aa5430711b5233366c00d" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1aaee5578617d3beb624e563450a88c663fd7a04" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8c2adfdf5709bb18821ee415100a18e884384d4a" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dc7a2841ff4bcf91d76af5b621985bac048a08bd" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ffb874eaa583abca39016a71cd32c133feb52a5c" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="29520c6c673ac8be83d50649d5c7374ffb2f3d18" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="593b05303e6891db0b2f59bad2454993bbc65dd3" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="84093e3c69bc9ed1dec8528bd86d8913131785cc" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4f8aae898737615cecef0aa2d339f0c97ebb31c9" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2bd7bd77f8a8fcd88e60c84564adff780e309fee" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c61d311735257390ea4d073cdc21702befa66728" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="be4073b314d2904d7f37b99110c98842209781c6" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="11d22ce2ae4e13550a0b1008ae237ae79cee4a19" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0782f8e5e9367538ec40551a93378c2e83259ec8" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="01420e2d442b994c5cd62ac6d2c0080200a3021e" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6a96d3c2cbb4e3a6ad29359fb47ee89ca3e0f6fe" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8456177fe202b2c7fce23ed5d15b5a1b379877c2" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;colecci&amp;oacute;n.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f65b69331c55d1cb93db5af59587ac092333eeae" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="29d9a879f305d52f6726094a2881759da443524a" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="42f60118c385fb43ed89a25d157d749ffa79248f" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a3e2d7dbb42117cd670399581e6ce15f65bc34d4" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Cola&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c6a489642f2da8ea91c322a9ac1ac6f373da4c8f" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="010e8a60c825a921744bdba362e87fc78aacd385" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dd6a75e1d208762467d6afc77b05af442ab7890d" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0440ee2c292495c93be951e21969d793c2d4e29a" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SetOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dba7f01c1ae7a53f39144e443f2560a6f5aff728" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3e32c1ee36de1e8718daf149e3424d69dbb3acce" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;ev&quot;&gt;ev&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5f3c3f926565cf03adff7d30705c5640065e8753" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8d2f3c4eeb979515bc9d84402aa5a740eb299998" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SortedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;ev&quot;&gt;ev&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SortedSetOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2593039b22fc70d147eb0036f1cb04be3c086991" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Pila&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1d50ca0f37862216e7b05567f261686dd076c85b" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="560946b571d75796587a345a61e5cc781c08181f" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;ev&quot;&gt;ev&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.flatMap.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="968316983e88ba27f02663ad997c302588fa31aa" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a14a966805ab6cf61d700d097d7dcc2a2bba032c" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;colecci&amp;oacute;n.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;colecci&amp;oacute;n.mutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b5123b805dedf2095caa47a8132ede6c9a29356a" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e4d7d8dd49a1253b3add239ae1ae2fe8f2b6120c" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (A @scala.annotation.unchecked.uncheckedVariance) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (A @ scala.annotation.unchecked.uncheckedVariance) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;ev&quot;&gt;ev&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="50ca40a5568999b2f8cb13d52254e906c16051c9" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;BS&quot;&gt;BS&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.flatMap.BS&quot;&gt;BS&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.ArrayOps.flatMap.BS&quot;&gt;BS&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;BS&quot;&gt;BS&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.flatMap.BS&quot;&gt;BS&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.ArrayOps.flatMap.BS&quot;&gt;&lt;/span&gt;&lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.ArrayOps.flatMap.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.ArrayOps.flatMap.BS&quot;&gt;BS&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;colecci&amp;oacute;n.Iterable&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.ArrayOps.flatMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; , &lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="126a28d9c4f15921c4398b8baac44dc3f7b68358" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;BS&quot;&gt;BS&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.flatMap.BS&quot;&gt;BS&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.ArrayOps.flatMap.BS&quot;&gt;BS&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;BS&quot;&gt;BS&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.flatMap.BS&quot;&gt;BS&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.ArrayOps.flatMap.BS&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.ArrayOps.flatMap.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.ArrayOps.flatMap.BS&quot;&gt;BS&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;Iterable&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.ArrayOps.flatMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; , &lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d9501b6bfded195f207e0d43ac62a957e72be899" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;BS&quot;&gt;BS&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.ArrayOps.WithFilter.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.WithFilter.flatMap.BS&quot;&gt;BS&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.ArrayOps.WithFilter.flatMap.BS&quot;&gt;BS&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.WithFilter.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.WithFilter.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.WithFilter.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;BS&quot;&gt;BS&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.ArrayOps.WithFilter.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.WithFilter.flatMap.BS&quot;&gt;BS&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.ArrayOps.WithFilter.flatMap.BS&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.ArrayOps.WithFilter.flatMap.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.ArrayOps.WithFilter.flatMap.BS&quot;&gt;BS&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;Iterable&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.ArrayOps.WithFilter.flatMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; , &lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.WithFilter.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.WithFilter.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7e539e90be50a6c2fe1b831faa1f4f5ccb61fbb6" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2 &amp;lt;: &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.AnyRefMap.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;dummy&quot;&gt;dummy: &lt;a href=&quot;../../dummyimplicit&quot; id=&quot;scala.DummyImplicit&quot; name=&quot;scala.DummyImplicit&quot;&gt;DummyImplicit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2 &amp;lt;: &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.AnyRefMap.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AnyRefMap.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ) ( &lt;span name=&quot;dummy&quot;&gt;dummy&lt;a href=&quot;../../dummyimplicit&quot; id=&quot;scala.DummyImplicit&quot; name=&quot;scala.DummyImplicit&quot;&gt;&lt;/a&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;dummy&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;dummy&quot;&gt;DummyImplicit&lt;/span&gt; ): &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AnyRefMap.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AnyRefMap.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="67dd12c438d50c61c4dc9df1f55052a62fda8d6b" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="102fbc31f585a216eb479f72f84feaa61c60afcf" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)) =&amp;gt; &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; )) =&amp;gt; &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;../collection/mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d7728542b13c43ef4fb4faf76e4e1471782092cc" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5c5509401265770f88bc1f8d08409c03b09cbee9" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="52e969a42f75dee2f0ee9364b0a8ecf7804ff761" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a123132051ae5f2945ee1089374a10b8a5482163" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="295adebc37cd31f413dd90478405174c38f9e8e9" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6a1255624f124675143e08d1995b69c23873ed49" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4e58704fcfc8fe0dc2a290c809b8335580dd0766" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapOps.WithFilter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.WithFilter.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.WithFilter.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.WithFilter.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapOps.WithFilter.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.WithFilter.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.MapOps.WithFilter.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.WithFilter.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.WithFilter.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.WithFilter.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.MapOps.WithFilter.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.WithFilter.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a2b1ccb4f1779b89b329d2dc13ab015d4cf99ccd" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="bc05af1ba2dc4f9d4d10f7f4739941c9847f6ef2" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="fcce60b69ed5c1fab3a7575567398ade029c17da" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="8658adc74fa977b1f7ad61e5f63c8085b9cbedf9" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="91df5cf5edadb79c4b20daf7484ad3ad75b387f7" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="7dca9d3e732bfe26a1b4ea3de9f1897630f5e854" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="0a3478a31e0be3db38da250312987201da1909c4" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.SeqMap&quot; name=&quot;scala.collection.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.SeqMap&quot; name=&quot;scala.collection.SeqMap&quot;&gt;SeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0c7bf5e70f0fc090ff7f597ddaa01ddd8c382bf6" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4c8aa18eb77a3044adf90fb5e68b41b80864c086" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.SortedMap&quot; name=&quot;scala.collection.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ) ( &lt;span name=&quot;ordering&quot;&gt;orden&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ordering&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt;&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.SortedMap&quot; name=&quot;scala.collection.SortedMap&quot;&gt;SortedMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9e9837b54e84afadc083ad12df6fd8520b9748e0" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.UnsortedCC&quot;&gt;UnsortedCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.UnsortedCC&quot;&gt;UnsortedCC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1b740c4c8a008d337a84899a6c5054a031ed0898" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ) ( &lt;span name=&quot;ordering&quot;&gt;orden&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ordering&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt;&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="13a8b37271ebe9cc7a1f1351dcd35996e2e8c471" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1364c668afeb28f9ebf8a093757e11efeab8af2b" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ) ( &lt;span name=&quot;ordering&quot;&gt;orden&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ordering&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt;&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedMapOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6f3b9dce75f436951f24bc97d61390c6850081d1" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.WithFilter.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.WithFilter.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.MapCC&quot;&gt;MapCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapOps.WithFilter.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.WithFilter.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.WithFilter.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.WithFilter.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.MapCC&quot;&gt;MapCC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.MapOps.WithFilter.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.WithFilter.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9e501d1c2fbe91115e5d9622e76a70c1bb373fbd" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.flatMap.K2&quot;&gt;K2&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ) ( &lt;span name=&quot;arg0&quot;&gt;arg0&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.flatMap.K2&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;arg0&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;&lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.flatMap.K2&quot;&gt;K2&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7bd3184bea7c919f441d10ba27f5ae25bd27906a" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="12030da4dbcfceea97ffb53e36df6986b742acaa" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9d8fafec5baeb8bf0b6017de62054fed8d2355fb" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ) ( &lt;span name=&quot;ordering&quot;&gt;orden&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.K2&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ordering&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt;&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="eea30461c5955296da4b3ffc67d70b18674441ee" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="273532b1ef7f68c122bbad1d4c80da45954f4adb" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="944161ecce2a4baec867bca8deabdb34294f876b" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="07a5a30acc48ca37abffa73122e8fe36f2fba5e5" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="699878b691686ea34f91d7e755f5ba672c6c929b" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b34505611e2d7e73dbb0035759dc879a64f9fb91" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cef1065fce6db609141dbe9f62e51356e690e113" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ebad6d7f166be17407c34b23dc14944b084d9e72" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fba73a4a37825501ee7ce31fc58803511e1c68be" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a6581341cbff9d2e782d33b98c56ad3f2e467018" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="10edaea03090e4aea015821df7a1fcfb442a6ba2" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e6aba33b880799916c179f10f7ba2465cbdb9886" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4958bf3e84209cfcc8d35eb7b57c75a15c6a185a" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3ad078fd3973aa30853f3c3cbee26aa38aa0cea7" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.MapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.MapOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f2f8e474ad7a740b45bc81a73690e536d6aabea4" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="49c5ee0fb703edd8b0f9070019339dae29773f95" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3683dd5865f5bb57034352e36eb283962883cb18" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ) ( &lt;span name=&quot;ordering&quot;&gt;orden&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ordering&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt;&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="aae19b8a31cdfa194789acab16e6a6cda2b709bb" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ec09312674be909ecd7ba18154589382645f101b" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ) ( &lt;span name=&quot;ordering&quot;&gt;orden&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ordering&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt;&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="87582f0c122813a43c56c882f542fcf207d09c8a" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="eaccacc3f94defb36f225e3b89fa2e4e93e7e855" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SortedMapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ) ( &lt;span name=&quot;ordering&quot;&gt;orden&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ordering&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt;&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SortedMapOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bd80c5c96f9d2a7b55249662eb1c6025b3a3e416" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7e4b01f28d4331030199edb60d2b3a221c2e01d1" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5cb637b800a4bd5a75a9dedbedd2ace12e1b4d67" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ) ( &lt;span name=&quot;ordering&quot;&gt;orden&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.K2&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ordering&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt;&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="65df6511cc2919b7cee5c2a708f065b983cc7214" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2ccaadcd8c0a5565351d8de0affdc35220f1578c" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ) ( &lt;span name=&quot;ordering&quot;&gt;orden&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.K2&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ordering&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt;&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a2010ae17dd7e92a4e7d694a8f6e0b394a649b10" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="51f7d4941900c09754a7861a878ddcc0dbb7318b" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d8cd2b30a477580a8652022be7c2c7aae69bc3b8" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a6d4e6ea92381534990a0bbf8e50f13c90bb9c2f" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e964df159b13b00a4b6bf7863e77845d7c0609e2" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9b78bdd37eb95e3fdb35943f4902358891bbd850" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.flatMap.K2&quot;&gt;K2&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ) ( &lt;span name=&quot;ordering&quot;&gt;orden&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.flatMap.K2&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ordering&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt;&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.flatMap.K2&quot;&gt;K2&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1a8e9f291cadf7962454b8a5c65f01b2d9937ace" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e0a15d15767a7903e704f84c90aca9e80e35b41f" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6d05bcd42528dd4f2be64eb20688a9c52b673e81" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="496f4299323893cfeaf664d3139496b5ffa8c20e" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1a1e047ba482d30fd909e90e995a5779f4afb468" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0a3f8a0c42599f2361aade4756eafbeb508165cf" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.MapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.MapOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e9caca41dcb7d2d0d2e1b41feb40e6bf09a7dc75" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;])) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt; ])) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b0970253523e2f4beec8a31f54e8c96c6a5c09a4" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="019cdff0ecc09240fb8b767235392a1253b84577" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6ade8b76dc7781f313bf38d58b6fa1cbc96343b8" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4f19f8e821dc5aa26b661884c5587d101acdeb19" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ) ( &lt;span name=&quot;ordering&quot;&gt;orden&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ordering&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt;&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b8c0edc6e5352b0efe4571c737290f8c7b96a7d0" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="aed428a1bfae89017a138db01d36bacac7fe2b88" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ) ( &lt;span name=&quot;ordering&quot;&gt;orden&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ordering&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt;&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="198ddbda9f9da153b326b550e3b844b919442866" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c0e3460edd4229efd921987396111fdc36cbadf1" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SortedMapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ) ( &lt;span name=&quot;ordering&quot;&gt;orden&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ordering&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt;&lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SortedMapOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bb908738513a83db162867cdff7ca59c45e094a5" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a371ba7affc8a8c450a2146e363caa0182057af1" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ) ( &lt;span name=&quot;ordering&quot;&gt;orden&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.K2&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ordering&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt;&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ordering&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c2d73003fd6b7c0a596ef74673268ed587135dab" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.flatMap.K2&quot;&gt;K2&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dc8e5d939e7e3497bada229c93d9635d44245c4d" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.concurrent.Future.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.flatMap.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;executor&quot;&gt;executor: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.flatMap.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.concurrent.Future.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.flatMap.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;executor&quot;&gt;ejecutor&lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;&lt;/a&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;executor&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;executor&quot;&gt;ExecutionContext&lt;/span&gt; ): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.flatMap.S&quot;&gt;S&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="33931e13bcbd91b242b88ca89f22ff9ac18b990a" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.util.Failure.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Failure.flatMap.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Failure.flatMap.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.util.Failure.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Prueba&lt;/a&gt; [ &lt;span name=&quot;scala.util.Failure.flatMap.U&quot;&gt;U&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Prueba&lt;/a&gt; [ &lt;span name=&quot;scala.util.Failure.flatMap.U&quot;&gt;U&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f0e481410e1ac8469df7bfaa96f03dbffc5912e1" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.util.Success.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Success.flatMap.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Success.flatMap.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.util.Success.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Prueba&lt;/a&gt; [ &lt;span name=&quot;scala.util.Success.flatMap.U&quot;&gt;U&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Prueba&lt;/a&gt; [ &lt;span name=&quot;scala.util.Success.flatMap.U&quot;&gt;U&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6ce8bee49b5abb06cf139adb3d077ba38af6467a" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.util.Try.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Try.WithFilter.flatMap.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Try.WithFilter.flatMap.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.util.Try.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Prueba&lt;/a&gt; [ &lt;span name=&quot;scala.util.Try.WithFilter.flatMap.U&quot;&gt;U&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Prueba&lt;/a&gt; [ &lt;span name=&quot;scala.util.Try.WithFilter.flatMap.U&quot;&gt;U&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9c35ab815c0167f9f1384d9ca76805473587d992" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.collection.mutable.LongMap.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LongMap.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="448d4d6dada00a6cd312b8fb4aa20d0ea0835eaa" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.IntMap.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IntMap.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4e7171fc1ee135ec1a0b0b26774be26fd44e87a3" translate="yes" xml:space="preserve">
          <source>def flatMap[&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.flatMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.flatMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def flatMap [ &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.LongMap.flatMap.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LongMap.flatMap.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e8b98c978f5f6aa51cfa317487e0838022bf2aae" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.util.Either.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.flatten.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.flatten.B1&quot;&gt;B1&lt;/span&gt;]]&lt;/span&gt;): &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.flatten.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.flatten.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;A1&quot;&gt;A1&amp;gt;: &lt;span name=&quot;scala.util.Either.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&lt;/span&gt; ] ( &lt;span name=&quot;ev&quot;&gt;ev&lt;a href=&quot;../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.util.Either.B&quot;&gt;&lt;/span&gt;&lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.util.Either.flatten.A1&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.util.Either.flatten.B1&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&amp;lt;: &amp;lt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.util.Either.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;O&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.util.Either.flatten.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.util.Either.flatten.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]]&lt;/span&gt; ): &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;O&lt;/a&gt; [ &lt;span name=&quot;scala.util.Either.flatten.A1&quot;&gt;A1&lt;/span&gt; , &lt;span name=&quot;scala.util.Either.flatten.B1&quot;&gt;B1&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d0067ba1c6352efcdf5c26b132a8a93001c98d48" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.util.Left.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.util.Left.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.flatten.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.flatten.B1&quot;&gt;B1&lt;/span&gt;]]&lt;/span&gt;): &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.flatten.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.flatten.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;A1&quot;&gt;A1&amp;gt;: &lt;span name=&quot;scala.util.Left.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&lt;/span&gt; ] ( &lt;span name=&quot;ev&quot;&gt;ev&lt;a href=&quot;../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.util.Left.B&quot;&gt;&lt;/span&gt;&lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.util.Either.flatten.A1&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.util.Either.flatten.B1&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&amp;lt;: &amp;lt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.util.Left.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;O&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.util.Either.flatten.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.util.Either.flatten.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]]&lt;/span&gt; ): &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;O&lt;/a&gt; [ &lt;span name=&quot;scala.util.Either.flatten.A1&quot;&gt;A1&lt;/span&gt; , &lt;span name=&quot;scala.util.Either.flatten.B1&quot;&gt;B1&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="53757fd3fec411f8409ac38061f1d2444e1d4372" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.util.Right.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.util.Right.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.flatten.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.flatten.B1&quot;&gt;B1&lt;/span&gt;]]&lt;/span&gt;): &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.flatten.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.flatten.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;A1&quot;&gt;A1&amp;gt;: &lt;span name=&quot;scala.util.Right.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&lt;/span&gt; ] ( &lt;span name=&quot;ev&quot;&gt;ev&lt;a href=&quot;../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.util.Right.B&quot;&gt;&lt;/span&gt;&lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.util.Either.flatten.A1&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.util.Either.flatten.B1&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&amp;lt;: &amp;lt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.util.Right.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;O&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.util.Either.flatten.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.util.Either.flatten.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]]&lt;/span&gt; ): &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;O&lt;/a&gt; [ &lt;span name=&quot;scala.util.Either.flatten.A1&quot;&gt;A1&lt;/span&gt; , &lt;span name=&quot;scala.util.Either.flatten.B1&quot;&gt;B1&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="20c29d7bbddbece114ccb20f57ac499705091522" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)) =&amp;gt; &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;collection.mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: (( &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; )) =&amp;gt; &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;colecci&amp;oacute;n.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../collection/mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;colecci&amp;oacute;n.mutable.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="97015b7abce719f2cbb754fcb3cc39168e3327c9" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: (( &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ea40a503b99ad18e6a4aad3b85597405a5eb7c46" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: (( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; )) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6e9637f7c65bbeb631a502d8bee2d615fe8131e7" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: (( &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="05b880dd41c09c10e9fa42401461f2a53cdf1a67" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: (( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; )) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dc5b42783c98337eef51fe640c70f549b0342f2a" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: (( &lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="619c759de08f8525dfd0fc50fb65d6ce999940a7" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: (( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; )) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2f68dcee456c6029c3f42a8e45a447e15623b6b2" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: (( &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="855117264cad0b39b9498c440bf3b8b82f26a54a" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: (( &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6ba73ec0a14df730a56401a431b02276a7457133" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: (( &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="139be3bca03096e71b2268b8d881b354eabb0ee5" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: (( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; )) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="88550dbe2f98f8e2f6f8e8bed523b94254309fb7" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: (( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; )) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="655cabd2d508b6c3973e0f709b0cda19dfe62964" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: (( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; )) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="009d932ca4215e51bff3dc360943cbeb5432391b" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.MapView.V&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: (( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; )) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="faf17cb0e4d258c21db866bc745e56153548bb12" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: (( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; )) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="56ae241261b9b731a9cb0d820877275d23797733" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: (( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; )) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="922a84548b3ecc04da8c4a8dce0f8a0345c228e9" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: (( &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5e89b143e31bdb262752dbe4bd397caacc1ecec7" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: (( &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="29579da36278e8bf3bb23234aefdffe0411baece" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: (( &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="389f06bb31e5ee2363c73ccf6fe6650cb67caaee" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: (( &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5ee2bac84b6e566ccea4babe675954d099391f45" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: (( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; )) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b21e5ffbc28aa63a474789e68ecc97a7f87fe4f6" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: (( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; )) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="48c9768989b02a44dad69dee9ff9cf7d873aa7bc" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: (( &lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1426916681215f786bf56a03cc7deb85500b4113" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: (( &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0f1f7c5ddb366e08872872ece63dc14531fa3f1f" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: (( &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8202749096e2094d4cd0cbe358ddb2b5aae49ddc" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: (( &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="17899763ea5cd167a487c7c640450a4773dde3ae" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: (( &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c2426c6cca7cc8f2b36ac8a998c3f85b23f400b6" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: (( &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="df2c55320d6df35632233c6012ff3d86885d774e" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: (( &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="43f31addfe3b7d2271d8d0e578bbb2b095bf6bf5" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: (( &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="db321444407437a1a2bc175e41e40aaeb032839d" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: (( &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="27603e341186529034e74f70f82cbaacae2ab866" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: (( &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="253c823c899e6edddb7b8695b9225c86feb103a7" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: (( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c91494370e876dc79b37d2cbb27bfd2e8a97fc4a" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: (( &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="daa45024e942b188261bc85425518f200e11f69a" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: (( &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="17151275b036484df5358e9ddad9d26fe8a291e9" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: (( &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="12c1dc5dfbfbf36f5e47d303eaf1e9e139a56430" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: (( &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ac7b7f8ec0c1a498d2c14ca4a38f0d4e3844a886" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;])) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;&lt;/span&gt;&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;&lt;/span&gt;&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: (( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;Set&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ])) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0e96368eb1cb000a4587fda2aad3b48a37f39a8d" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: (( &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="53f0a88d644f74d45f7b2f6c826813a6956721e7" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: (( &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="61e782b8579d37543cf341999588bd52055a653d" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: (( &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4cbbe0d4a92947b6e500841190725d1604083f6f" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: (( &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b5f701979353c81e655424c78e1bd6f1e366c079" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: (( &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8cf35bce526c59af81f71f42a00b97fbc4bf3a17" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;Char&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7c84af4f3b2294b72dd17b6e409c482ed71b104b" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;Char&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0e3cdc43f31fe2f29e582f568504452ec08a9465" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;citamente &lt;span name=&quot;asIterable&quot;&gt;asIterable: ( &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7f02e02ae8f240bdd8991823fe6d5ba3695f0db4" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;citamente &lt;span name=&quot;asIterable&quot;&gt;asIterable: ( &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="455574f81d5a304387c8b18237c70675dd13797d" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;Double&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;collection.IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="56cef9eb6dc4f7a48c3a54ccb361a47904f45b7e" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;Int&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;collection.IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cf21c3c278be2056e353eb26e514a25f6053f832" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;&lt;/a&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;Int&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1546138582cea8f01ce43d780eca39315d9309da" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: ( &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f63c7ffb1c21fff3e4558667fc9b9566c4910adc" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;&lt;/a&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;Nada&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5daff316b0a4a84ba286a85ba12d64369b5e207a" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.Array.T&quot;&gt;&lt;/span&gt;&lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.ArrayOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;colecci&amp;oacute;n.IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.ArrayOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; , &lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="896dd39317e8eda6f61dbd25041783f4b8fb49f2" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.Array.T&quot;&gt;&lt;/span&gt;&lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;collection.IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a2065f30a3aece7f5d399db59d02614a81a8373f" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: ( &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;colecci&amp;oacute;n.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;colecci&amp;oacute;n.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f86926c63edb33a67f354d3dc361bc83730b369b" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: ( &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;colecci&amp;oacute;n.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;colecci&amp;oacute;n.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1da04a42be245d44c16b16198d4a6ff143c1b39f" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="417fe2a4fff08f5a60c5a56e1867489e6e1be320" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: ( &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1627b0ffb3e9652c0ca7f923b06b5e294efc067b" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4f049661ec743e683b903b4d7b0817e1809697aa" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2fca8f32d976db005a26b13bc2be9a3f95d86195" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="593c989783794b97b1ce75a8926ab1995d99f082" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6005aeb8ef62428b416769b25ca8fb64106fab4d" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.ArrayOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.ArrayOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; , &lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="06f78f807e576c88eb172235084bc8a16bd7f1ac" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: ( &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d5765bf7da13de7d1ae13ed5f1c9480e05af699a" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: ( &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7e5400442a2ef5df0c3d2b96103d2a9e6e4b4c3d" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: ( &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6c766ddd0672201a9509670a8d27ce38c073b850" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8610601e203ad295ca5bb493bbfcd53556d0b2de" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="52ea361ff8223299ee3aa64795fce5c72c9dc349" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4357c10dd89d9b4ea58f1a5389dc796b2ec6f3e9" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6da398b534ad99fea8c0c66d5cd66731d35f6b4c" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0413d3a951f9a819d620f22981177acca13fcd87" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3387bac1a07213017e5374939c223a3138075fca" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="87504ec5e62bf6f670eb0c5f8e7605afb288c728" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="08d8f88f9607bc169328f21d21fa2264aff5a449" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="21e21562fe8855410245c9e0fef9ee16ffc8ab73" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bc7240d1637d8833bf6c35798e35d9a01d59c39d" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4525e03b5eb44d461b62116908bec93e09355141" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c07f8c842ebb2fae49b0be579f10e47f64f2f174" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: ( &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8b439c2a1017e8c3efa2af0293df7f954f017688" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: ( &lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fc1482441395c36a210fc1daf9daec693cb5bc74" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: ( &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4111d76188b65684389b8f893029aeb1889b2bbf" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: ( &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3d9a3c1240b0d465c9bf41e359e874bcbdf6fa82" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: ( &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b60e97527a0cfabd3ae915769d923054adf2eb68" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e7de1c1a663d2130013a03c5ae8a8ea1f33baa24" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d3553048a07c6313105768774f6ce44e713a1416" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: ( &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8e77b25a289402496500926ca709bb1eef76224b" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="581aea7f8d7e76e006ab4d376867b053f4bf19ad" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e969e95ee2ba967b78233c47b3a464c28859fb8e" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ef91effeca80fc345a4c1b17d18f71da0623c5d3" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a2ded114a714908f177094f4a07d2ec2113ffb22" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f874408520e44f73ebc7b065755b6b3fe5fc7a51" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f60afee4d8d84700998aff82b6708b3f929f9be8" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c5b0933f526d0cbd8757b81f28d3cebf777dad55" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="98e0e8fd26dceca95bbe429e04da7c28fc4ec2b9" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="988c9d83607f3dcbacab5c2fe4962fc376d9d87a" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="093dda36cd9527efbdb47a612fcc83d918d6f2ff" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9b2ae5a4be23ddb2e35e35ac5d10f990ff626da1" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a6283db20ed5696d8e82bffdbf1cf6b760a7b83e" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.Set.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e1b24ed3c14965e05cb03d60edd4f0657fe17ca0" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: ( &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SetOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="448b5657db050fc4a5b125d216bc4ef9b35cd448" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="63c5ba067a9f71c14fc1da10198e0af0524cc95b" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="27324d5a8b802efc011d6447a2cc11274d5a1551" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4f08097346afa08ae9862d4375bd5669966f10e7" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8a51586d765ec9fa6032db9ba0ce68634798b187" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.View.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="36117f3450a1327d7ecfe9fdcc9e52ae6946f23c" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e931f9a257503629d460abf2dc128e97729d1f96" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b8f5bea61ce32170d37a5505a7ad119fd2299766" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="37d25b44ed6762d203f648b7f78d5c011d10e11c" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b55c1554dbc46ae3e8d69decc901394dd64586c4" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7c8a73bccc6abac8251ac89976f1377cfb3ac710" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e0535a63016b0858a1d81e57a45671e4cb8549e1" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="61e10dc4957415b1f2cbbbdef2ffb5137fbc44ae" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="31fc45cbced23a14e3f4dbfa87362c17fe67785a" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="03ddbfd377616429ce930337affd3d2d7814dd67" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="209ae9ef426db3afd37288bcae9ea635e7e7f56d" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="de79398cd69fe715661f7afd9ecc1c7de48ae9db" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="47ea8aeb33f31006af78c4e7a75422f0d5bb540f" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f00b3c7ca8e66ba05e80a80bf0578a04c20f42e5" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5d4d63ebd5aab134ad3a5d6fc7f57f1b472b54dc" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a3a5fe18436e3e8145a438029194fd988173bbea" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b95abdfa6aa8b9c13bd61f26b772ae80464490c1" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ccd30647275d70aac9dcc642516f814e9a2fa40f" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="922ff90efb6d0d8e21d222b75fb89157be03b07c" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="70ec80793199129a4e1b0cfc60b7b729b28323cb" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d7eb96d9406c153feb94fd355c8ab1189ee572e4" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f0bd3475ee33b853ff12c26f2bfa843638cfdea9" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ad78047092fafd80e6086f0c2ede1d0ebb93491c" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c4b786c75ff1628efb7d2f094dc41305e194a6b9" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="13151f37d3ed07ec5b2aba3ff5325cd462c3ad49" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="63df825cf0df3f70bcdaac3c4c3688501ebc4731" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="177ffe08b885b63ac84927708c3e52bd189029f7" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="eedea83bb6c464a168e58f5d51cedb24b3f60595" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="de31e81790ecbdd591830749e2ac6354f8eaba22" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: ( &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a6cfcf303c99d4f34fc39b268870a5220c34fff1" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: ( &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cd4f7d2f692295ecc0e449fac75b3bf605af0287" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.LazyList.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.immutable.LazyList.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LazyList.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a8d5764ee94582926b8706c36ac1b945e6469743" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e8f32e6eab6cd73f1e5edec25a6aa49232676089" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: ( &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="17500405ce945fa96b9aa9507339b57614b0c0ba" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;&lt;/span&gt;&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e44eb0168173acb393660d197f6eb41a92d69499" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ebf07533a06ebc3800961012571e0ec2b43afc50" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: ( &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9b3a32a5cea3284694331590b77df9caba103d4f" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ac02fd2ff610df20921d559f4ac1de7018c7f1a1" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: ( &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SetOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c9c890de8ab6d7b5ca2bf0f7d765c9ca75f7f224" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;&lt;/span&gt;&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="10a85fdac2380fb8d2ea43f941cd9867c1e3e48d" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="395a4f0aca2968ee56027de06b603be2689d8e97" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="874ffd869d9558466675e3ca53deee9795e0f655" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;citamente &lt;span name=&quot;asIterable&quot;&gt;asIterable: ( &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a748d2add781f680f8da9c498ebdb76d99fa2bca" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;citamente &lt;span name=&quot;asIterable&quot;&gt;asIterable: ( &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="318fe6d508d1f5beca6c65262c9a532bebb07aa0" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: ( &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9572dd9e793672db96e9b6b218f68f6dbb4ca158" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: ( &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="94c05ba712d844d5df3a6e2229d16308aa227c5b" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4a0c51ca574f47c0ab41c46855bddbba03a5c81b" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="33c435f4767a29cc30c08c59e4c9965af9d9539a" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="88ecb7fe06926adf85ee8f339412b0858c1e7773" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: ( &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5b016f02163d5802b9b87d5af5252cfab8362a63" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: ( &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ca0c9ea74e905b40c6a5824e8716bde1314b796b" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;&lt;/span&gt;&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="57d95887df7f596b623580a22f8459d384c82b82" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: ( &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b08c7f928a37db8f3370f1abbc6fe6bc46fede63" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: ( &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="254612048635302b7106b5189e5bd8f5462826f5" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;&lt;/span&gt;&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;colecci&amp;oacute;n.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d0cdf33e2483917cdb8f73cd6039d93a30bb0d2e" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="78ab6f49da3b807eac9a9ac3466ec87775b6fcdf" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: ( &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2540c19adc92c4178ce5b4fc36b9397617ae250e" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2c0bafb6e50e3fee6e3487f815b02620c0b36fe7" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: ( &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SetOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="afb5ce952d1f05f5ba45c78e884d9b1a7098f115" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7bf4520cec12273f843919f652af07ec5e8e0977" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c7ec2861f8a0271ac9a5ce14dd2a6383aa31508b" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;asIterable: ( &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;colecci&amp;oacute;n.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;colecci&amp;oacute;n.mutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7184747070bf7bc1705931759106edbc7f7217b3" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;asIterable&quot;&gt;asIterable&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;asIterable&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;collection.IterableOnce&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;asIterable&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2f915b63373610d96c61666c1f9877dc6b3ea87b" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: (&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;ev&quot;&gt;ev&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;String&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;collection.IterableOnce&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fcbf1da94280ccc7b536185a3cf479543116d104" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;ev&quot;&gt;ev&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;Char&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;collection.IterableOnce&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4fc6299f977faa281c75b687664a7f973b40ae50" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;ev&quot;&gt;ev&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;String&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;collection.IterableOnce&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7da7653cacd6085de3530443507587daa5315063" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: (&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;ev&quot;&gt;ev&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;ev&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;inmutable.Seq&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4265d6bbe7d18e8ffc23f40577c95f93ce0fbe3b" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: (&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;ev&quot;&gt;ev&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="17bfab8887bd8dc3ee29b2f550961703bb23cb95" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: (&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;ev&quot;&gt;ev&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ac20becb53d680d642cb905a96ae9d5cd0ca2ebd" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: (&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;ev&quot;&gt;ev&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a67de275ee91cd11a28a9ba51f31d707e48774ae" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: (&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;ev&quot;&gt;ev&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: ( &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ) =&amp;gt; &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;IterableOnce&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="21a59a9f554cf0ac69bbc43aed370409eda321b9" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.flatten.B&quot;&gt;B&lt;/span&gt;]]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;ev&quot;&gt;ev&lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&lt;/a&gt;&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;&lt;/a&gt;&lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.Option.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&amp;lt;: &amp;lt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;Nada&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;Opci&amp;oacute;n&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.Option.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]]&lt;/span&gt; ): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.Option.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="02274d13f66ba76c7de348e239860903075a874f" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.flatten.B&quot;&gt;B&lt;/span&gt;]]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;ev&quot;&gt;ev&lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.Option.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.Option.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&amp;lt;: &amp;lt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;Opci&amp;oacute;n&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.Option.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]]&lt;/span&gt; ): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.Option.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2aa44e0baa4c1cc177f077ba44b4225471c45cdb" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.flatten.B&quot;&gt;B&lt;/span&gt;]]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;ev&quot;&gt;ev&lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.Some.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.Option.flatten.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&amp;lt;: &amp;lt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;Opci&amp;oacute;n&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.Option.flatten.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]]&lt;/span&gt; ): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.Option.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="42a7d8fe05d5a46b0a8eb48a8be6a2b2b39233c9" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ((&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="212d9c449292f478aa8f3d1bbe506c4708ffd513" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ((&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="144b72cc3b35f884a7eba8d3f89f03fac317eabc" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ((&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (( &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6508c6c29ae2f7816beee4637dc660309b610f46" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (( &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c1fa234634837b8e9f7eda65d4fcc51a35815c43" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (( &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="87832b00a8c29060c5333bd1e1294c1646486f9d" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ((&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (( &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bfd974cf0b17a7c8fec9ad5c1ce6e418499004ec" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ((&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (( &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="20b523d12d95fbbab5f87b82bf576cc994bc139d" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ((&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (( &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b5b59abc91b63737729468ef6d02d048d4f3afb0" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ((&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (( &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6dffd2860c605fabdcfc193cbc2aaf7da98882a6" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ((&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (( &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9b07fd10338cdba7cfcabc7685ffd9cd699f5d3f" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ((&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (( &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c6f591825ea144efec781e3f653b43623448ae88" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="82ebf0644888314c6f8db31a3192bae2ecb6f716" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="353e0421b6b80ef311bae07ac40f41a5e34c95a1" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ((&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (( &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4f071b736edc42fc24b367c2049d3de9df892c5a" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ((&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (( &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ab7a7961a4c39514ff8ca68e3abb8f4aef8c75df" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ((&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (( &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c2743f8f4ce6660b0291fd1cf2ae6cae4af55669" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ((&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (( &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="897d4f7a33f062b89c71ee20f2962585ea81737e" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ((&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (( &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="00bac4fcc43d2d288dc3404977a5513a1784aedb" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ((&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (( &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3030ab59e881aaad0be9067bafe962a28a3e637a" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ((&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="850ad5985b7a06a248caeff2aaf3ac1519c3254c" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ((&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (( &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ef0fc32beb69a795ea82182d0b869a7473130534" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ((&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (( &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="897581d0d8bd3aa7666f34bbd4f729ef5cc9ffae" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ((&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (( &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="34da69bd155f044ceee53753bbf336da61746ca8" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="56d7140f7851854fef0db12b4ab4b794223b3148" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="51cac2064ac47e7b0889ce37255e878fb231fcef" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c95ee8b51a90323bf2caa614b2df9a68e20b5c44" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="40d1746b1cca03c5993c923921b2ef01077d61b3" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="944379b5fb3b1dca1ffc28f933ce08bd135399dd" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="05d312945743e6d8a9026f1b168ebfdeb9828767" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="edb4721991bf1e2a7ca3d3073eca77288871f779" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="978ddbdd4fb75916befe70d20ad732dceb3a0e11" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1659c1140f58de7b9418c7b03f4835ca218754f8" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f4387ec3af4335e10481c4d301184f677f518ec2" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5f744c72928c168ea31cf2c9db7171c569664e06" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="078febe3140fd7b748122b02af555c31271f30e3" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="65bbeec5f90609ff2472a1888384fd6caa06780f" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b54fc0ac55858f4800ad116c2e90051274674b7c" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c083b2be573e63bebd835384c654fce1e190442f" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="38e66e94b6624ee14c178257f74aae419d226143" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0de31458d6c7e22a96ed3a1f3b36804c152a841a" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Lista&lt;/a&gt; [&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ad6583de617968eb8bea098c7e932a03d9b2926c" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1627a7b087e274ae1db438f61eefed9e32c66d21" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e5ad2ff2793a0d646b1644cbff131cd188928c83" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1f44a2e429a876a15ece7ea4ae2ec4ab1e440a51" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="64a92e42b47ed467ff26a6b8992430fbd3961080" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/immutable/set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;collection/immutable/set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="817a4251b22c5ea5bed773b09c66829a8c162244" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="665329ce3a7cdceca730387e4d0c2ad1a78bdcac" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="51dc537121586955a2437a4d6541d351dbc9279d" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="24c66e4dbda062d3019473302f0b262ea62e8b6a" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2d51d8ea7fe250f841456d94eb877c2145cd5824" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3e877c5bf09e95e76f1150d8f919b2700ad56a7e" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;citamente &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Lista&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2c6519afac9b6cd30bf3a0f17938c26a95f3814d" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3752539bbabf486b2b4475767897c3a29dca08bc" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cf15b4c09c3ba536145baafafd1d23a2c2f42d32" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cd637637d9949113a9c860550824b019e0bbc950" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;citamente &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Lista&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0a63c149ec9fab366e9103deba7eb4b55452a03a" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="87ecbb5918aa4671fb3a5184c49f16a247826fc3" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="49d7cffdc5cc0ab8e010b71da240d537a81211af" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="195fc27b213167d5604ad016322c11cc862f5eed" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9dedeeace1a2b7c1eb3128bada744f51c3d863e8" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Cola&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a9677b457f3ed0ee0826450f3f49e4988721ee89" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f3b0f28d2878b95000c2e53060874649780798a4" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f6ce9c2e92fc9e348d938fda16e55a9d2fac6e19" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b5d188ce94c9df5288d33cb4619c1151ec4f1abf" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d32e8eead614f20d4b1573c19ee1c1c63adbe980" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a58c716f6eccf9976eac229b88347093cedfbf84" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="144140cc418cbc377705dc03a668f070b9cb6162" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="759273766e853e59f677a4c26a374ec5039a02da" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cecf05669bbac7fa8072449b52e0aee9cd834eba" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4393923de9738678324995ed6f26afba66c858a1" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cf6e42c3364ce91b24bc74f164ca22f2ce064caf" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fd9f1d029090cbc74eb5983e04219621d95e2ace" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b5d8a33a8158ac7868b67a751e01587b9af9af73" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="269dea4f7cc638b054d5330e2c9054dd4c96a832" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c9060057147fb0232f410a8c656158c11b09527f" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1b986ddf23fd9b7260e429f43ef22957233bfa12" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="89ca4f66f3071a6ee490bf31b983b559eb22865c" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c2df30594742d1b4ebb1e7a5e0d61747e1e47ddc" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a63ad8aaa802cbafc01f32edf6425fe07cdd8275" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Cola&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="09d76907d26d8845f7b6a41fcf04707c16095c37" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Pila&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8f5d6972325916cfe314c124b1d3e336fdf94a8d" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8368353c684b9087e97719bf2d051cd49989743a" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: (&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;toIterableOnce&quot;&gt;toIterableOnce: ( &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.flatten.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4e270b8712832d7a995147020ec86b5a8f47d1ee" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.flatten.S&quot;&gt;S&lt;/span&gt;]]&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.flatten.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="translated">def aplanar [ &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt; ] ( &lt;span name=&quot;ev&quot;&gt;ev&lt;a href=&quot;../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.concurrent.Future.T&quot;&gt;&lt;/span&gt;&lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.concurrent.Future.flatten.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&amp;lt;: &amp;lt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.concurrent.Future.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;Futuro&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.concurrent.Future.flatten.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]]&lt;/span&gt; ): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Futuro&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.flatten.S&quot;&gt;S&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="07480a4d9ee0ada304fdc83071980e76a8d8b570" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.util.Failure.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Failure.flatten.U&quot;&gt;U&lt;/span&gt;]]&lt;/span&gt;): &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Failure.flatten.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt; ] ( &lt;span name=&quot;ev&quot;&gt;ev&lt;a href=&quot;../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.util.Failure.T&quot;&gt;&lt;/span&gt;&lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.util.Failure.flatten.U&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&amp;lt;: &amp;lt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.util.Failure.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;Try&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.util.Failure.flatten.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]]&lt;/span&gt; ): &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt; [ &lt;span name=&quot;scala.util.Failure.flatten.U&quot;&gt;U&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="991d59be7b11876d6c99535d53e8f7abfefc796b" translate="yes" xml:space="preserve">
          <source>def flatten[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.util.Success.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Success.flatten.U&quot;&gt;U&lt;/span&gt;]]&lt;/span&gt;): &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Success.flatten.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="translated">def flatten [ &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt; ] ( &lt;span name=&quot;ev&quot;&gt;ev&lt;a href=&quot;../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.util.Success.T&quot;&gt;&lt;/span&gt;&lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.util.Success.flatten.U&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&amp;lt;: &amp;lt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.util.Success.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;Try&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.util.Success.flatten.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]]&lt;/span&gt; ): &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt; [ &lt;span name=&quot;scala.util.Success.flatten.U&quot;&gt;U&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f5f6f8e6971eb73285b340b9dbd796449bfc6e9a" translate="yes" xml:space="preserve">
          <source>def flip: &lt;a href=&quot;%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.=:=.To&quot;&gt;To&lt;/span&gt;, &lt;span name=&quot;scala.=:=.From&quot;&gt;From&lt;/span&gt;]</source>
          <target state="translated">def flip: &lt;a href=&quot;%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=: =&lt;/a&gt; [ &lt;span name=&quot;scala.=:=.To&quot;&gt;Hasta&lt;/span&gt; , &lt;span name=&quot;scala.=:=.From&quot;&gt;Desde&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="655784ef7d87f8a5af14f25342769adf826d2bae" translate="yes" xml:space="preserve">
          <source>def flipBit(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</source>
          <target state="translated">def flipBit ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2a5d859713031748d438c53b1ca3f82c451cf80e" translate="yes" xml:space="preserve">
          <source>def floatValue(): &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="translated">def floatValue (): &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Flotar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99d8de4189df4c014ff36abe8b6fbfdd7b08073e" translate="yes" xml:space="preserve">
          <source>def floatValue: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="translated">def floatValue: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f45a4ad302ed28863c92bd135225004f134d984c" translate="yes" xml:space="preserve">
          <source>def floatValue: &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="translated">def floatValue: &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8dac5a8bcc5b684efcd38ba122319936607f9d25" translate="yes" xml:space="preserve">
          <source>def floor(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def piso ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3cae92049acd7fa08dd19f4df2209d9620736b72" translate="yes" xml:space="preserve">
          <source>def floor: &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def piso: &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="08158943a3e7ceac277d02a800f299327cee5ccd" translate="yes" xml:space="preserve">
          <source>def floor: &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="translated">def floor: &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;flotar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5e7477d57a0e8b281381ff32da2b0fe8700a6184" translate="yes" xml:space="preserve">
          <source>def floorDiv(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def floorDiv ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5e54ee4faa5d6f3e24f0851ffbd5f3412aa7092b" translate="yes" xml:space="preserve">
          <source>def floorDiv(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def floorDiv ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e7c10ba4eed34677b89bf37ac13824a8fed7daf" translate="yes" xml:space="preserve">
          <source>def floorMod(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def floorMod ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0f828d2173557469446f8fdfcb6cd0d1b33be2ab" translate="yes" xml:space="preserve">
          <source>def floorMod(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def floorMod ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1451b960cd078b3ea40854bbb16e5d38486dbdca" translate="yes" xml:space="preserve">
          <source>def flush(): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def flush (): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c02b671055b90729113de1ee570378630eced31d" translate="yes" xml:space="preserve">
          <source>def flush(): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def flush (): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="19d2a9b6e5f6ad5d421080afe5151d034b781a05" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.ArrayOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.ArrayOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.ArrayOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.ArrayOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.ArrayOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ArrayOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2e6bb0434b793b30d9a02d372286795462f68c11" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.ArrayOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.ArrayOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.ArrayOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.ArrayOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.ArrayOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ArrayOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c250b0ce7a60de6cac077a877c2952ddf3fa9dee" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="46a4d24f703ce1709060b4410c9097077ce47b6b" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="24c212c43b086e11fa4f2f833d1b32275a83eda3" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6c8908fbf4d71488705ed097b5577b4f20737de9" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="51a912db01b17c179a5d52c63c8da9a0835359af" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="11edd1b28d5bc94b38233f678025ea56ba2e2235" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="05e16f9ffa3e2c735abb90ee501b8f252049d9b8" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4033139d3b3102f00a91726c69d7f34bde7b6844" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f2f9aa424db22873c5e586176bd91e4b5ec36419" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="53ab7f99790993ca107e42245d1132d01c108ee7" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c4ab35146fff510b9d58a5453304f29996574f5d" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e731831efbfca64a86b4e96fd91f030e4731dc36" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d13a77ffb363cb51aed91eeb6b356d468385e58b" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8d23e04cac5729cf417dcaa41e86649147da68a7" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3ac5bd4c6bbcc412686fc53a2be5cb60ce0170db" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="49ee2fda533eacf4c99c1ccc5b2873d28c126450" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4e8b506c83aa326754c0cec66f91c1490e050c5e" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1c632ece83401fcc8fb5f48504608b20aa010398" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="02d4c32df5274d5d4e286f937498d9e1cf58f02f" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e21599a5cf0d7579ff8fcb60a9153aa98b321e06" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5b40c36dd078b3d26a7c4b46c12ddb5573933db5" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="240a20dc1927c24a0ba9f8b58e4451ec4a857495" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="778d1fcefa126ad729fcb12f8ce83a254fde9958" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cd5b5380c1908cf8aaba4d531f5ad3e7efa34302" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="db73025076b69d50fc23d334dea2ec6c4db1b6fb" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a1aaf623f409297aec54cad3b2396ceb22048587" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c1f4da6d6b9c386161a213545f7ea33058e769bc" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0f8af2ec0d423304519b42656489c9bc35e56310" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a9f39ac77c063cbaf865dce29057c440115993a6" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9d4383a210179563423369618ed4ef51477c5e5e" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="734c4d63da56ce0e7fc91b0f77a46cc6be74fb5a" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="da18a3785c9cac7a9a7da0d50c742470eb3afe04" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ed21d5b8f894380d850af886fd9f6eca4f2a3fa2" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="26034765e52e2334aebc0adebd67f4dbbd8e7972" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4b95e78479e17921205b449359e839c0e1ba6d0e" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6a9370bee2722b708904a89bc16b95cb48d2e11a" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3a106e44382375d2cf25dc21e47df99e560db1f2" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="750e12931185f43f3eda8af51fa628350a2da578" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f0cae5f876171a5d4198c62cf7bcdaeda3d5e7a7" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="54a49d7e494e06262857fa674d070da91cd390b9" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="166952384e575d7be3466001cd4a384c68fcc0c2" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0d6f599874051f10985e41d8f87e914ab1807b5f" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="40b53d08284e1ef4a6bd6c92526d29364e092e8e" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9df63a4ca078145b4617d345aaa092d77e4585a3" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c53bcdf436866146c64dcaa58a0cc94b6881d5f8" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8543002b3150fd70c27e1f106b5632d095e3a060" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f705a7ffdca93c53c1637930aef18ee20da60574" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b45443c323e548464dc9461d19e13f386ff5054d" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3310a4a9635f1560c610d39123d610657789cdd9" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="32c864d1eadd641c0ae76898e42e05dc53e64b6b" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="24b4ee23e8147dc19fa8732d93a7471600617326" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a1fe236592a8ac6b90f09c9d3c969b4e68a01862" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="97f8e710b96c900db5c2075ab874fe18bcc44db4" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="40759dc078b5130c1530cccc9cc78c3954585a0d" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="586956bb81011df06f7a18ed7fee4af952153c70" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7ec47469bc415ff8c3dccaea72b15e9206927ffc" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ceadd202b5f3a891ed8b7eb713649252f4ec4182" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b7bc54b68ea630b0c227efddf7bd557b2b262412" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b560b8101be1c7c64c4b743303886b140f119a6c" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;])) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt; ])) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c79aa1a1e48a594d24d3717be3cfb11368729859" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0cfde9a250ae7e7a1c3f18d885621dc35a8048b8" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9d40838d30ef1a344d8e91a6d1f91c544dd269a8" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d481eafc3f4a42a8ae7d50c7be646d1ff63bee51" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9d1aaeee8c91bec630bf00cef33919bedb5f97bd" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5c44ba478fbec977805727a10c8b06d6373d245f" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e9b990b514d77160e1848e8a44be5acfa94eb397" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , ( &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8fcadab43865ef782a6fc119bb72e1b15577f508" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e59f9708bc757649e13bc63c5dcf3bf0f4983008" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="12281b2d0dd21f5af94fc95bf39078a4417f4736" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b248f65fd2271e5ffbb3fab27fb8d1b6d79eaad7" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="572736d36a20164752076571281602f76838200e" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="902a183132b639da194bf7bf7ab74c631613196d" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6b7f42edb56ce8f6660dd1009c3e106d1ace4c8d" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="80047e99db6cc53835aa5e484af9c96a223d6ea4" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f416fcec65a26d11c91a9b6f725dff6012a43e64" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="67f9e6604c3041b964bdd81783830f847752aff6" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a8b9782c4c5732c761bb99aedaca5fcd67d1f462" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="53e9cc9f76d2b35b2ffabd5e5ca60784994c450b" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="76809bdfb18befbba4544e054f86d6207b56d5db" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="15f6ec3d242900ad81a5bfe72aec2db80818b1b5" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ddb2dd80cd1ab97d2b6eab4864d6c86ae1466a66" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b2fcedf4dc1346b875a219ac7082897cac5c95fc" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4ae1c1a8364b78b4debfc4e8b6f3088d0cd76334" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7ba4e82027b1c68e525a0629c9686d26e0d64dce" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;inmutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt; ]) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e34c632deb0845291d1b826878ceb3a8abc2e619" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9a77c52ed70fe12a261c2ec1b2efcd2f7ad6bd50" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="96330e0368882c8e1f8381174264dce77ceb24a3" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5d5bb4ebb5a91d219eeb5d44916519aa06cd7ecc" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="856f613e1eb92e96e9bda147a6455522135679bf" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6910b27df1d31bfd5a2fd561cd2274ca87c5fdcf" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d0191f4227558ec612d5265ce8f2040e417210e4" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8fafe960ba50fd99e296a6221736e4728e33db3f" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="eccae918e45f8e00bf41aeacfaa74b3f19b57aff" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1bc102c026931b7a4ff41d6040da062c74d493bc" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3f6dbacd8560b44f2bc5fb63bd9685b942be1310" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3f65859c4caedd4c5c0c6758ae248e352e313934" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="216b963af8ad7f04b5af7d874176d3656bd7c8ae" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f26036c02e655d7128cc27b46631bb632221a823" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9fe2a202fc5ce21a9e43c1a6675dc3fc893da058" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1309b4168a6d46526eede8bb7dbbfa472b85fa11" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="16d7f589c3b7971799b0469405635bf879a1fae3" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c2b7fff17779a8fbde78f584066c2a5ea6b2c7ea" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b03e7496921a6d996ac862ce06dc555b18c36f48" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6fcfe4b235ebf2d241767d099f8d4a788fea718a" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6f64261bd779c00fa9c7c15b77e6f4780ffc32b3" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cd39b9af243fbc940d80c5119a49ba8ecac6fa65" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d7b7960863c160f4bc319084a390d3a85d01145a" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f28c24c65a1c47d9a928d4433e08359515c1a60d" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b5c4043a1e6fdd5e3cd38b00e79cacb153593ff4" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7897b43967ccea4040c0b6e0d7ef26ad89d6c94f" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d8918e8e23a7fad965baeb908428f8434cb74185" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b474032a8a714dc7991eea1c066be47b46645efb" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="af989f1793ed6f9ad38e0f8beada8d33ee93cfba" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="93255a2572b9f122661dd3029955c72a65d7f9bd" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e1e5aaebd8a22bd2fa0fd12726a640bde6f88503" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9c90f1a009de4f552399bd1e88f7a55bf8cc5af1" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fb7cf10624302309744ad3257008ec3f17c65c2b" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f3f7578731f582c46a106998e0cc5369e06ab741" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8f85a3196e2422dc23c25904b8214e1254e245e4" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f207e0a5fb47ebf8b2a68c67c6b35cee74465529" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="41c710a7a4052e7c8e8a0841c5a33360e628725f" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fa8b59da8041c026f6fd7cbc03e37169bd36a5d3" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="66fc887e8f2764007533b8d757fb3aa686cc9c51" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="890c992c9ac1dfbf5f30e2c44c4959f00ec1b38a" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9bb593e7b5be710d6c80ab5281a30f79299a4e8d" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c1b1b400b4193a420404d2c7581c3c46869aa54d" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="473ca74af60a8b81df564d4530523c45dfc5846c" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8cc42a2b2bc1bd1fa088f8166838591330b20585" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="79115bc0fc6f9161439f7d4f34701c7ace997f54" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0f5f8787526c983a297fedc22d78d6954bedd06a" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="523e4c0908962d733350155701f6e9754cc1e74e" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b7ef6c93b12afc910d6300f6071a0cbc8a869d10" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5dbbd493f623ab344a4058a631d929cf78dfd4f3" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7ba5451a356c849f0540b49595529924773cee5f" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="63fc6e516aa2baa2f85e134847923ec29d22d9d6" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c37df9c5a395c83a8b30875ff16da7bc14e33571" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2259c10dd0a5715d21d42bd8fd67bffaf88663eb" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="58a5cd0a4edb67c07d399332d040b936491d6f11" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d6389c46091fe1355536759434090c9f175c8f50" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="957183c571bf585488228b6f4de8b9e8dfc38317" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cb8542b65d1fb2c65f246f6718ff9a5ac949246a" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d3cf0efe24245852e435048ed5fd526dc8a25e0c" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="accfb0d3bef8ebd6114ee1396177c5d0e4f10dd5" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9050e47bdf89c6193830312f4da6ce45683a5bd0" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cb9679fb4e85c1c91b2ecf25067546696f7c6410" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fbdfe308c625b009c3a9d14dd5de92d0c11b22a4" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fba7cee78b751e8934cc27c69a2f50dbfd8c56f5" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9ec709545106a119fe086f24d59b5f3b4b2f5bd5" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4518b41330f9bef8b14bff05e9017177b91b4a5f" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6188f0b35d46c8ecc87ef1cb02fcde7fdd927fd5" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f7cf3ad88b9ddcc1d21cb27527c0525e629d904f" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bd12123d0576af48a2ba139777e015e024f9c158" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="52430457d0628f1f7b669b27f18a16817a3e55d9" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1688414c1889aec0bb5bde8ccdfbdc1202e7beac" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d50e846cb7118f61fd47d2fffd62be20fdf6b600" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="78d50748fa754c8d08afc0ce59f1a08d4ec36da7" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="050a9a7b042d68f3a132b5d828d96ffd27acf5f9" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="17e9ae290f084acfde3cf92fa95982cc0f7d6c13" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f08ebb0324ecbbababdb182c511e224e6626a429" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a16f00d321106c832f0360c0afc6b95a4bbb6587" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="01b972d56771450ff571ecdab38e807571c7b623" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="91202885a5d1706599df81444408493a551c0080" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="736720f9c44c445fbe1a2ebd3033b695999ed73d" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="49162cf1d2ed5829696528315c2b298a6920651c" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="269e3768d3568f02da49bd2635ac693000ce0218" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f8a29025a1447b60f8412453237ce3aa17f2800f" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ede3666326edd23aa22535c4c7c6f898f9516c98" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b966607fb4ce707511a3d12867893a353d6e54b1" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="832adbe00163e297e9c0dcd94caa996697d5e53f" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bb01f8b18f3516af8d1c44d2da6471a987c0ca7b" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="44996aa005d11b9a4a507bd6bb75d9082c28ae8d" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="57a382fc7bea4b06ca017b9052e9fea84de0fbb1" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7152d7dc1d3f1e507b6137b96ed715fadfd04e1b" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8d67df1255a0f27df44bfd06073686c5876b0d9c" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="987c6fc4e791fabba6052e878cb3efd6c9a8e238" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d57b23e918f92b82a365ce8b5ba346c2fd92f6d1" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="db31ecc0bb067372f9d8deead7a1194b6c1467b5" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="25d12c6f4ab0f6322df0d077961c6c8b9ab986dd" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="224bf60c0ace165ac2cd8d24a830347e81eafaa1" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c3273ebfbf293d78d91613364c6ee3f84c580e8a" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5f1c924c56a4a58603e2230a50969cdde62905d8" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7ef102e57129174cd25314a67223ffd25f7b4377" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f4a01ed15e70e6971e489396548ce5555789b8f9" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1236e064e63d98a1b89530c2c40f98f169f64863" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4a7ced6c14c1e48cddc93d60aa76d5f8d0144a4b" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="27b1a3dbf7b502a3312abcbdc9713c8787aa5af3" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0cbb77af3dde76aaa163d161a4e20dac4c9cf9ac" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2fbb955316e095eb98eff46dd2556ab5f8e6ca02" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a1c3d1be3871994310de06b50359cf4af00c04dc" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="673cdcf5a6dcdbe239608d464e1f2293635c0f26" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5ff9b27cde78a8f69d69554390e07490b163245d" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ed460250f9960029f82b702c932aa7194239ab32" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e032753f38d039e5a05df17754d9c9e56c549d79" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="22bbf267e6a8fbe7419d0d1a44bdcd5e1d2997e5" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d337ad33fdbc543c09184102a4a62396cab5a38f" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3c52be9b4840626c96e62c30cdcffb0c3570160e" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2a2b0af82ac971a5985f9a6877e0fcf1b4fc51e1" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a2cd30591322a14acb56a499f6afa44ff89e561a" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="71bf5ce0e60d8a8ebce25201ca1a022d2b4a1228" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f6aff04e507b3bc92930d9ebe0780f55dadf5223" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a7bfc1a5f07222b68b10830734693a6e81ba3066" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4bdaf521a3650a1c37b56a47cb81a37a3531a5ae" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="023dfc5b8359bf730af47a2fce95cded0b15528d" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="81c55b5a2cee5fd73faf3693899876df760bc439" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5b5f11acbba61bcf2906a1351322c3d57d6c58ad" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c5b697117798f3364ea94f5463b741e81154b3e5" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="276b8a5523113ee28926f44b9961390dc018dd76" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9c8b1668f377a93f3c4fa50d392cc91bdb05abed" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="12d90a41c25f9bf5a73be2a562e68e865fbcdb0d" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6e375f4bc753e30481516f2c49b8cbd0012fd0b3" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f6b0a21521d0afc585c1f5c328731c7600c60419" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="77a215548a4042e1f68bb2613f88f87a3d8b47e0" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="42ca34477f6f9fc781195422d34ea604e8af3e70" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e251a89680264cb70026310479c074d4277c85a5" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a0b21b54d4da411dedc8dde3e82c285c47add0d3" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="acac0a26351de938730c28fa51cf80e0d333ccb5" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fc4385ce8948347335dfff066166cc07ca53eb2c" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="24bad7b938f2e73e31295895d216db1f350a5fde" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6da733cf8b1d1b064bcaed3e5c08c6ffe343e665" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="482d9f7da3262041e63c0bdcba9e484923f3d6b3" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5600937a4b987ae55d1bc4408e5b9585c2991279" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="882607633797c0dc77eb43f064fa1bbdb38f4a7b" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="383b198eff9fce81bc2827cb4cc0a872c805d0d9" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="727a6440af3e3730328270ca826d2e2ef74af83f" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="303c1d114517db98a7ce495c2bf9fc70c7345216" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3b7709beac5c40b349bb0b53881d9d4547c62d07" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="27eac3b874466665dd67046c7679b986d2b0b5a2" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d6508fd608cbbafc78e45427505dc138b7eb984c" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ea0db44a97aacaa7acf68decd2d72e1c77c88385" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ca41a284b04dbb51253779483f73b1fcc193cb8c" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="91fe8ae3c218114ba1bedfcdd33a97f74386a778" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6a057043109e2082c00f2c55700beb5f6d2b510c" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="87858da5735c482384da099de719a8c2db997a16" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9584965733948bba5b1579140807c65e29bb53c9" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c2e3794fb3b7d504a6204321b3a49a262836cfa1" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="610e99aebb5b0e64d8fc2bfe96706a8cd1a0e8d1" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dd42d4e298f63d498b680cb4d314baf8493c0ae5" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.LinearSeqOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2898fa590982ad6dbdac96f2f58f4949f13e7a32" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StringOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StringOps.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StringOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StringOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StringOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.StringOps.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.StringOps.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StringOps.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="68016316ad7bdddb80f2ba8dc92fb76c8e7c0d18" translate="yes" xml:space="preserve">
          <source>def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.immutable.LazyList.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.LazyList.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.LazyList.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.LazyList.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.immutable.LazyList.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.LazyList.foldLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.LazyList.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.LazyList.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="db0a8669170243a058eb0d55b6982e64ef2e80b6" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.ArrayOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.ArrayOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.ArrayOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.ArrayOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.ArrayOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ArrayOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="138a106c107b2e0c5c596a0fdb91fe4468e44c72" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.ArrayOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.ArrayOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.ArrayOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.ArrayOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.ArrayOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ArrayOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1a00db0afda9f3938a96ad6e5793cd9ee7796c5d" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2c26b541bb590b85344c115dc61a13cb715e766a" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2e418db2c16982d1f1d8211328e90b6e9790f2c7" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9ca2869e336eaef25aae89a66a15ae7d7d6a3b7c" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="07cc952479f5e83525fc647b99a2e5931c9a6866" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f28739eb1b0732530b134a9a6bab592a6479ed7e" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="757ef577548de02b3520797b9e60792f4f6214aa" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d4f7beaead93f186db3bdaabcfd53cfbe5ab4327" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d44fd46ac3eddee45c86094ae76007e2d6713560" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ebead667143437c9bf9706c44d8b56821f9fe8ad" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7fd48942792d65f36b07a5aa5badac41a0fe90fe" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bff136a8c357ff729616e5c05dd370f3ad49c572" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1079b630ddd8b96bba5ce98e5cebd63caa102800" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2cc4dab09e6d22f3540be1fb66c10062b1e83caa" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1366a497efdcd19848607a85ae363a6951363045" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5333434c213c3e8c33814c55210e0859720980f3" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2dcd0554c1aff0f5d47d1ec76e2571bad92e7b41" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6d9c988f65492dbf9c9a52b6225abc8e53a8c537" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d3c7da50155d3f966092fad5b4dd5b2db09772f0" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fc1c1c0f4ff9f55628e5b7e1b05b8bf103aecc5b" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6b5c75f9847afcc780bf6d5b899477070024aa8e" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="70403175237afe3d6017de49a219620c64980eb0" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="89ffc0cfc3e896e877cfb5a0ccdb07207792b80a" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a5faa9ee7f4947ad67a42a359e50da168730cead" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f828183fd241ac6d0eaded1b4ebd943e5e3575c3" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ece4e2fa990c7b5848377934a4fbcd5a410f9657" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2627b41b80d920a92cbcd54e2e14172293ddb8ec" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a463f79fc6c0ae427c17341b8646074583c90554" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2b63c47fa832f24d233cf8b100818dc1efd37be9" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ff1ec80c5dae9b3dc438f2befbb5dbbd94dba101" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="166ef797d7773d032d983039004b364baf513dc3" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="65453dcb44b5854bd42920591357dc3a3e9d29ca" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f1b6ff2442073c775800a1333dec198a373fac81" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="64df3761dbca50a082ba055a8776ca6962701a82" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5da74d4bcbe22ded045d1acc5afd664c0431e79c" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2e1a4c9e44ddc39c9dd9e889a45adc95aee79695" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="60e2b4aca742cd8c559e2f4bb5add4fbf4ecbee2" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="023f4aa4eab1bc6357f7d96478d4933cf723f682" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8b0e9838eee368cba1fa9b9cfad30661e4de88f9" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5aac8dc534212b7d859e84313908c1c3509c82d7" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4a10f44350542afffd9cb4cc385ea440fcd813f5" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5b24e013fb654815cf2fea8b5667e3b8a3058920" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7d1e3ac0cc98b763406579cca9b71822c78e8026" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dd4e854af1f3a1ecda724724f91cf92db8772df8" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="63a791cc62766fd2fb9a0294c545c0f319eee407" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9a8f307b80556b5220fc8f962704380773c3ce66" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="94561cd0816b16e0041f653a99cb71e0bbb39e28" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0b92b60f1dd94d0bea7fdd990732e2a771d791ad" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="69c699ec07702ae489227f82c6842a7709aefb05" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="127e878a209427d8d1a8ade08a9bb8becd47ea30" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="074506efe077ecfedcbb041f9d847a2216572d31" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bbbab8ccc15c268fc5a4bcc3122173fc79a3c5f5" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2639d3781e9ac372ca5d7b9cb48d9aebb0892be6" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="66132a875f18ea75067af737342d3412eba3cec3" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="605d3eed23f7d42423f0afd1308f5aae13fa220d" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="70d8b4a367215bbcf7015ef469f9470ce509b2bc" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9505a2a3dbcf5b7d797e87fccdfc1aca16150b3d" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4eb6c7177021e8bf0fc73d769c46b84c2e4668a9" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7e31a76890b495ce27dca123e50908d911d10a33" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt; ]), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0ccaecf0ae6c6660e8e507343515bf542f84c893" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="85819ab2d41a3e03e6bf1575c2f8fb3e184d4124" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="347999a2003d0aadfb251b4ec1c4bc5244aad8a6" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="28cabd83461f8de0537beee14f6718487dae7ec6" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4689dae65b7433f74ec2b775520af66821577992" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e20d2093ee13f1853c1875d6749c77278c77e11b" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="575203ff9325706ecb7a10a48e583b3d96d8100d" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: (( &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="171ee3701b7389793dea041a4623bcb565e968ee" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e6d0876ce0e2d53021fc852a8345fa40b45fd09b" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e6b758be4b8c93415fffbc2e9070ca2d2ba4500b" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e958bc3970d0cfe77824a9593382cdef568e4293" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0ffb8365eda80db8f628a464adae59c39bf92c31" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="63ca1f99185d039ff11a3c96a57056df04980ff8" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="69971cd32a7debc6c08951637ad38efea341bcaf" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="74f1798c25310f207bafa218e8ffd25b012067fa" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5e30d0ee3a3a4a3e231e693b42230cbdac11ad40" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7d44c0b959706d0dfc33462fd82f0003f366d6bf" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f45880ef8a2c150c6cf273e8c4cdc66d340642f9" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="74cf495ce289c1e38160578b297d60d8ec80e657" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7d580fe196e51732ebb6e7e7c1622fad0370aea1" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b7647e901303928767753c273aa44bfbecfbb73e" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b4eaa2f588f412c1532befd6d97509358024c2ca" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="04d634e22a86adcd6bd0be5b5aeb0002028771d5" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4b3b28432706a79a8b70e0fa054c6052a947f8ea" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="86ce3f6312da0dbf99f375e029127290bc6950ae" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="135beb11372687bd4ca39572f4fb8e23be37e758" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;], &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;inmutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt; ], &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5f72a0daafc2cbd5e68163c42f0160277b370c4d" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="84371f746011e2aa9f80c760eb2d9b3a430bcfa3" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b70141d982f71ec6d401c83bb77cc1ae6dbaa51a" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a18f2200dc940e034489ff3c7b9b97d226681a0b" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="193f76bb7fdcdcff75d96965a8d0dd1ee460f41a" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c9d568cd4894360da54a2b5cded40063c4e40636" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9eed1d358feffbffb0a1573d73bcbf32e2df7c33" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="33de745817f4898bacf6fcd6cccc98d0d0bba62f" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3d6b20b93db0d3c6169678976db9c5cdd946d799" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="52e2dde1d42c21a721e89a1ebeb327515fc46ea0" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bfa896f4bd0efbd82ee7c2f1aa2dd0977db81373" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d945b4945806aeb24cb1ca3698c359a2b9a1206d" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c9ef07d703a56919618f3a6059ce9a2a780b08d1" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c3c8054dffb7918c7df8f359b00328ae9e28f94d" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="13cf73eef664c42d98f74012d03522c77b999db0" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2decbb567eb98fbcd041b347a7aaac0e08a71261" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b7602215637ca7e601bfeffe126dd1b29bd58844" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="63c80a3e6d7e59c48539950faabfbfce8dc11ec8" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c8ed2b2204b3ac143278529200c8f842dc6390be" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a598123dfe3a644a1f01ca7f3d89298506dd6c0e" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b96e128e4917d886372927f7a8a5bb6bb8a71973" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b8b8919755f12fe76eb3f8e610e6aeab3d47fce1" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b9e1497adc4e8e1fa5a9437939f2c9252944a978" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="11d75eaa472172792a07a144c63cd508ca5202ad" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3f7f623d83f4264dcaf2c89fdb28cab8a1d9e494" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="85a15a394ae5320df9bb4e96ee8780c1958d5a51" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cb4cb799df052ba0981720656fa87ac0b8524770" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f37ea9bbebbf06f485f104a66b64946acf2c34c1" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dcf3819a43068d8168619a4c964926da4bb153d2" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="04f17a8ea8a87ceb79ed2365526682db20533876" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="99bb5fe38d114791820fd88e7de225978e2dba23" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9eb6fdddc4aafa27b9d260ab2a2e196c53499fa8" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="864c34ea7547b9e8dea3d02f98da1fbb76df6e14" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b8d3e07f9a76b6e029187e3ff8aaa56ae044cd22" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9a76881f023d3e5ca716f39756aaaffa801f9df1" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="78b8a0d1992a39c34023e7b9baf1ecf363cf643f" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="67acc52bacb95971e39da95c4554ff069bcb8b5c" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bc8ba84cd72427b3353777c35d6d8df5a9b479bd" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dd65cf99940992bb39c8835854786f510ccf3560" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="321735b1f111723b52f35fddbcfa8ed8b33f0826" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f33805f7a43d70e07cfbef37c20607ed07bd6eca" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b1d4fa477324f5a384c51f4b271093a4e23ee85a" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="155913376373f00ac65affd988abe2a567c6439a" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c31686337b1f0b046bacbab13f6d78ec879dd0f3" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="52e6505fadca73ef2c4566a236d83d8944df4960" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1c2b7141c575643e4b870c49b53a4d5db5f59135" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8b1c4849e2c33b68e536922cca02f2768f1152b2" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="487175dcf6f296edf33a81f055c3805e6f5de007" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f4ccd5717de05028af28730a9ee824dd74efc4c1" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8ab8b83ab815200cd1cb43e4b6ea942de3557e34" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="704bddb3ff6882d82e09cbf44325a9a20ae82235" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ee1671848033f5e37b9b398edf2909f0015ff13e" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="045d4ddacf6a7b85ac0ca9c36ecd7b9bdc04d123" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bd029e4fdc6295b353e1c19df9c133cf568bff78" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="998efc701d610f4d8bd86dcbcef11b9b45a0c35b" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2df858af70a52ec02a30540b0795450e81a2d6e1" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5f8324b0e5eb66e082988442bd20431e56960b5a" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="61d610ce7605a68da018e7b67c73bb26eb0f51bc" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="82185266eb16e64d7094c5aa494eec439a259049" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="32c468283ea7ac3042e547514044a1f7ae282834" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="da6a1694fe756d7731e1a6ff87709d072602bec5" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5244a4af0f51a9e415803d0e1b451b03c1d8e423" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ce0324743612e4189b198c1150b990f33dddac7d" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f023f48f8803b37d120af4f39155da0367e9046a" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="83d89dbdba983fe211c3d12b44bfbcf69c82fccd" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="907a824fdffb9a0bf63a25c97026bc67a5349892" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="61cde1912723afc5254cb001b91e2f669d346190" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3eee797664d9576e08f0f8eac9e0385262e7f85c" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bc16fabcfa698d96cff3cfe4757731aadf727376" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0cfd1ed8bd83513bc77b98a3ede107c1adc10fa9" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d3a90b4fd91d1541bf6a6a2efe0b400d09d0446d" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a1221bed54809909123b6b45d62a6f69a1524f9b" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9ab78d63eb090cd6f3050996e7dacba69bbdd52c" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="217a4a3ccfbe7a48f7cf2071ff839e13153ac81d" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dfa1858ae4117dd0e679e747df2076df97f0b0b9" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="abc85d001e3524cb08874eecea920beb6fad75f5" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9d8975c38783df6cfb0ec7e5e7f35044f191b6ea" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="33565c9e855bd2e4e5ea1be24c18d146fab0c383" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bcae91199fff1bec9745d45afdccd73dceb80df6" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6dd268024f207e485b92bbc0e75eaf2a5936a8de" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9a28829c1ed355ee6960880a945906ff59a92152" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="14cfe9ee37e7181368a699f8cb374300d3333da5" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2e210e9a1aaafd6c3f397a6333f5c4ea4cefdd94" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="60664acbbadcfb2009badfa775ab8291907dd210" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="abab7b7f623bfd8f690ad519ef499742891d6fac" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6e380d56ecaeaac8d77ac0fc58e6d4ba0edb7363" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e3bc712f91b1a75601586514451ad1933b8b9e22" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4a3c3d1806b24a45d8cb96376f033950e5f02dfb" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f326c4196ee67132b22c258b0fd6aff2531714fb" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2e31c7d1eec15176c6be6a5355f8bef96d5e2b54" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="be5e18e0055832d3f0ee7da5a48ab9babcf178c9" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f35521984586fe828a147cc28e45a85b2c3083fc" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7fb6b55aa6488a8c7e8bf163f3b33c72a3f592f9" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="47b5164832ff5caefaa7d6dd152dafd2e749d6c2" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7b21430e17e4c234d2e82ff70d1a9f0dc7c0109c" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5b7d30c0c8b97e0af326d67ed676883f746645ec" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="71161970b3eacf8fa2c0d418832e3baecc4a9b97" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c47b1ce10b78d21bd521dcc900424716db72ee76" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="68495fd32c882729d25b837ffa371f7e28703d93" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3119bf18267778bc92f853fbb67b570a548f4483" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dbcc2b08449d8d06d45046beac5d2282df2394c6" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5027e012ebf1bc60e2f485ba4f28d53025c1a411" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9e5c9daa2a86a3b1db774f16d133e565eeaf88e5" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5d0d2ce63ea057b0b9d2b1b2dda7e58842ea584d" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e89096600be18f204eeb7523208f94eee9ac92ff" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a74f786ed158555f223c6e905043af0ed3074f59" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="78b8b264ad9a1589bdddc9e84373fda11c2ab8de" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d240dbe3c117b150bcb6cbbcbb0c4b6769fe65b5" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="26918f94ac2e455ce0cf0e4b738a036f24be76fb" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a2344e48022f8d6714130297a666d340458df0c5" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f5379961307cd7d5f249e01546eac0bbba4349be" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="20cd55a3aa109ee587580244ebc932a8eec6b7fb" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4f84c7fd0b427f31f15a7fed75f459075edf7957" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="829ae6ae4f7b84c597168ee550fc45ceef462bb2" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f4b96f80bd21433c924e6d83f41259bfe2b3763e" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6517c3f655ef4c70866132d21cb4882647195649" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="92f98de4b1327a86d5f6606c2001005f7d9250f8" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3e29b6e3b9e3b7a83cc3834969d427d976e15328" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6a0703f38cdf8dc79ef944b2f91973a1b34b7339" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="df9f3080f3fad5396d3e211851e8cadea5dfa9b1" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0244df863d8f968cb67155e09406d63f97605bdb" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1ffab8c44fdd113605c8e1619e59868ca289d27f" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a16ce317333686bf5a877083febc57e2c620cdc3" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bea5f17b85399d44134f1a9c9c16a703224fe7d2" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="79073233ee9ff8b814b3269db485e15fa4c12a26" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bf90c2ca0896ff9b81e18bcbbe33841ad66f5825" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dbe6dc033d1acdedd4b794ebbc64053569a708af" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b3aa1413c6c4e1636fba98eba352c87c2a3ef327" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c20fd4ce780f3a9b85b6ef25488e1a1955adebb1" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7a8f8d8c897dd5716567aa6c5b20e25d642523cf" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="338e66fc0228d2138ad34f5f3239ea7388f44813" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cd5335c16f1056a3f6d8ee105b4ee31612ccc550" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2ed1af86de873730a2eea3daf53cbff6b8c5f49d" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fdd380a5f37a90068c50b9537435bce411f67093" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="35dad5f2bfcaef93486951df36429d67a5e940ec" translate="yes" xml:space="preserve">
          <source>def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
