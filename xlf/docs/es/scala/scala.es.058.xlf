<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="scala">
    <body>
      <group id="scala">
        <trans-unit id="ad3ad8161cb0a8da6a034b5294b27cbeac4e8105" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; )], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; )])</target>
        </trans-unit>
        <trans-unit id="1fcba3151335f2b369b8a268228837f07764707c" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="26c17dd630f061c500f00635284bb0dead7cd45e" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="0293d348e723318215548ae73846fe9bf9171f0d" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; ], &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="80d311179ed82fadac9ce7b5660da770d41a4753" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; ], &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="1213bf683efe69493dfc0daff999f34ae4369721" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="8d30f21a186bf5be5c292af23a6d7877e977cd4a" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="87336c890ad057f79d993f559beee607bd2c38f1" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="abe6b1b6eadf46b4dcce3a2f33ee5542a61574d9" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="7d0dd400ad2828b98198e8e04974ee082fe21e58" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="a2179eb40f8e5b6c968dddce00f91dc2869c95e0" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="8cf3c8c45d1d97381f17ee0645e9377f85b1fa60" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="12b22cdbecf868deb35bf851bcf487527f403710" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="061ca40400195ccd2cddbc31266a7a55f2a49277" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.immutable.Map.WithDefault&quot; name=&quot;scala.collection.immutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.immutable.Map.WithDefault&quot; name=&quot;scala.collection.immutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.immutable.Map.WithDefault&quot; name=&quot;scala.collection.immutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.immutable.Map.WithDefault&quot; name=&quot;scala.collection.immutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="49d5322f23d17a1d69eadead0ac249ac5e005636" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.MapOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.MapOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.MapOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="341050313f51ec002886169ac1e3e78e0c9b9148" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="d8365bd9e0829a8b3e538f4ba8432d1c39398bf4" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="a7830c015662cda9ce0a88050aa75fbe9533ccda" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.immutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.immutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.immutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.immutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.immutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.immutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.immutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.immutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="39de32d4fedfdfcf893c6d03e8fdf2eaea780a96" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="856f621f11f2785f98cfa85bb7a6e33fc57d86c0" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="8642031e3aa6d1b6ac35e0dbd2f43af6d9ac0121" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="89de0886a517bded8ed48e4c618f9c1e5028f9a9" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="dab781dfeb78e74b9da9276a286fd7bb382eeacd" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="e79a8511993ab2b8cb2c058f025fea702c5382e5" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="b809adf652bdbffe63f8dd3790d9677a8d51bc47" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="4632a71c7c8a4a652509e765ffa5088d447807d3" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="84c2d51270589318e3c6acb38ea946fc38247258" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="ff32221b38b464d9bf35c34fee4b78f61db9189f" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="0eaabb423cedcb57c991b77a90ee480e61379fdc" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="95caa7a8229d09f4b3643efbca07d3f4d86f0364" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="daa7edfe168bd3334231519dad7bf50a3b6887c0" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="9778e6fba9fd1e3fe06cc17a14061f26bfb4b2c6" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.mutable.Map.WithDefault&quot; name=&quot;scala.collection.mutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.mutable.Map.WithDefault&quot; name=&quot;scala.collection.mutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.mutable.Map.WithDefault&quot; name=&quot;scala.collection.mutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.mutable.Map.WithDefault&quot; name=&quot;scala.collection.mutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="6bd6391a307d82e7a48f563c0ea47ebd25bd1827" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.MapOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.MapOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.MapOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="4c8f5b045600136739f4a5ca911bbc08a4f9b204" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;])) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]], &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt; ])) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt; ]], &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt; ]])</target>
        </trans-unit>
        <trans-unit id="9edb85aa257aa6b6b8c5175cfef58b7eb3bc4a81" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;], &lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Clave&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Valor&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Clave&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Valor&lt;/span&gt; ], &lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Clave&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Valor&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="1b9bddbbb06ffafd4c1d691f194bce0e452e2204" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="86c8d91a58467fc412c634c31650ca787daf23bb" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="cd6e25979b840d7eeb4ab417394107824be5ab4e" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.mutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.mutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.mutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.mutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.mutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.mutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.mutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.mutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="36fab923ddab246ddd612c3264f3d3bc4b24d9c5" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="10c52ef684727601c2b6bc382411ac6d580f394a" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="7de63b6389d9653a6f58fb7e8e59040cca1c1653" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="6de07df7674430b54903a30269128773ba834401" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="0978fc0e30eaf9e5761388eb7786a132f09a98ea" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="e19d5ed12c1b22171b4a64abeba4be3a104ce4af" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="e8140152aeafa253956e2e354e9e487bca50ac65" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="a2d01bcc700448a9bfe1dae6cdbd27cba0aa32d4" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="c60412d02d796b0ef7a955cdefaa7c575bcafbd6" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="5f4956d615a1eb864c77a367e1c94a10ed0d8e4a" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;, &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt; , &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="ae66ed7bc23fd80a2ab4ff4ac4eda4e66a368065" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;, &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt; , &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="c215d8fd8d46d9da8b5bb3b9b724737686090cf7" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="0f5008d0e6dd733a0fd20083fdfad5db1084815e" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="78da876d29e5edfd29a27754baba5737367942f4" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="d864ff0b0a2c03da3ff61845588f3f5d9d3ef33d" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="aaf8d7698e535e55e2e3ad0bae257fa9d3a38329" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="ea18e413dd7a72e9414901cf193599511ac8baad" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="a99b7c5d29f3d272f65bbd01a7ea36f35e783a84" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;, &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt; , &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="2d14137afc88db2dbda2bc860d558a24b46143a7" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;, &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt; , &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="a4eff734c1d9613dc6bb68041a16f96f814a302f" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="4c1f425ee0e8f0aa9b3377138b1fba77fe973670" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="4666a6afbe81e50bb837340bb31c6ab8c3ac0669" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;], &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Transmitir&lt;/a&gt; [ &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nada&lt;/a&gt; ], &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Transmitir&lt;/a&gt; [ &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nada&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="216f741cf049fba4784f0a2658f6bf9c33b6ac9c" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;], &lt;a href=&quot;../../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ], &lt;a href=&quot;../../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="9cb917c26375d68d311fad43a5ab9633668406b6" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="5ce6f5c150396f857eb175e5554578c82e1f8698" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="ee339c0a5d39ddab04e481bc0e770a161f248884" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="e2dde3e011a9fa348dea428b178c46915fd4d350" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="a8f48d8f91fb2522bd12dfc39f42328dbb7188bd" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;], &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ], &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="a880c5ca84eac51597b5b0f35302c35d96e8e23c" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="3a28f23e3ee9ecc433c3450a1865edea7ad42a37" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="dafdbb4bee5923a82850dafc23635e4b1b8c76ca" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;, &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt; , &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="c8573cb0360b67db46c648c7c4192e812703e39b" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;, &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt; , &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="44470155042cd0bb8482a5ee69de2cc1f440ec38" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;, &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt; , &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="a1ba000600cf17030e1342f52afe68625e431e2f" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="bc99726b1a73f56316ee934df9b8b3a9a77b03b5" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;, &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt; , &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="c425371fbd5af29580d93049ab1cba34532e3e39" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nada&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nada&lt;/a&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nada&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="3a49a3cbb98946e9e403fbdfb64d60616fa0d4dd" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;], &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ], &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="58025e24687d95a3c5381d793b1184d0fe65a839" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;, &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Valor&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt; , &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="621ccc5e664b85ae73a2e6e8a98a11a9fb660520" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]], &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;inmutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt; ]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;inmutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt; ]], &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;inmutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt; ]])</target>
        </trans-unit>
        <trans-unit id="232ce80a9d078702ac6bb6eea3bc423e96adccb3" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ], &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="e20799cd24145f913a59285e37966787ea690717" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;colecci&amp;oacute;n.immutable.IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ], &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;colecci&amp;oacute;n.immutable.IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="a28225b90893a6689bf1569421af74aafba72206" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;colecci&amp;oacute;n.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;colecci&amp;oacute;n.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="7a5b25a4493162e4d7382452f4efe31d2954517d" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;colecci&amp;oacute;n.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;colecci&amp;oacute;n.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="51f48738f60d614d4a2035124e43bac514dbe88d" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="45612132a39a9552c9c62317333097bd8790f6da" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="91e118d888b42b28cca2c78cbd5711a3ebd736cb" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="f8239d16630f7b5a969a78f5ac28ca565a79e0f4" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="e0379bee027a54caf34acf344b233b76049db1d7" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="015ae18a29e8c4dca9f28c6bd86c94010baa373e" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="36fddd461cfa8eca87abda9952664f631d85ad59" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="9e455f245d1bd97c7caa2911035660bd213f1b5c" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="efc508596e10d05d2c4c9a0b21e3d65f1771913f" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="8340f6d99bbfa5c6b1c23798f076510d9e27066a" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[A @scala.annotation.unchecked.uncheckedVariance], &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[A @scala.annotation.unchecked.uncheckedVariance])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [A @ scala.annotation.unchecked.uncheckedVariance], &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [A @ scala.annotation.unchecked.uncheckedVariance])</target>
        </trans-unit>
        <trans-unit id="2ee17990dc976e9ee1e9dd8ee70d206b7f7cb1ef" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="9f812b49e75d74b7993bab1d1921143c401107c1" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="04d7218750e81856f7cf05167ebb9173f4d4f0e0" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="58feb3ac7fd99673461ac64a5c9e1a85c50ffd20" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="c015d6b627b9362e02500efcdc171799d04e79fb" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="c406a0f4c69b03c6852a2df06156e45f5111ea98" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="98fac4f8b3e670ba0118ff91f1422bba065935f5" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="d869883eac1afe6b2bfdb4983fc3f120c5ecf5eb" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="bbdf1664874ddd3a3c1fafe415678e517825d0aa" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="45a4bf43b1a98ef494db8748bfe0493a4e8c9f30" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="763bbedf0b0089678ed32cf1d157a989ff2b5fbd" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="37b2d193704d31049b5958c93f885de57554897f" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="38de3d34b481e1009ada79df469b9f1194510eda" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="06530088134d0cba91b14d8c82f36e662aa16238" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="b0eabf59dff83ef7c98a1ff49e6fd20ae2bcd35b" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="72db540c50429b23671c88fe7f44cd38342e5292" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[A @scala.annotation.unchecked.uncheckedVariance], &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[A @scala.annotation.unchecked.uncheckedVariance])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [A @ scala.annotation.unchecked.uncheckedVariance], &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [A @ scala.annotation.unchecked.uncheckedVariance])</target>
        </trans-unit>
        <trans-unit id="90e8b49c947e1d445c1b1cb4a00dc52af540cdae" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.IterableOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.IterableOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="7c1784766227353ea86b095b7c335b4de59f91ce" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="96ee165fdf2e08ce768ee4f08b00a6ad7b35dda7" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="e78280b6268d384af8310704c43f4a4458c12129" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.LinearSeqOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.LinearSeqOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="a7172384de6d1643286e9c086cde886f66753880" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; ], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="ab075714fbecc544e2ce90d0e13db9133ad0145b" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="93a1f28a6bb8040f6880b436708906b0869fc1e5" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.SeqOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="f0a97c1956de9d2046acd70c9e457bce7b55ca8b" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="2c0e9a67c91e7a43424efcdc259f5c06b50332a1" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="12363fd2ba76a20c7d9c6bc3beaef10b6e608ebf" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="325e61c1b76ba43f073b24e6995b612d7397d2ab" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="90713ee1b196e407b4cddb68349621d0c6623886" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="3cda351698e33217cb473e4ceac92f734adfde89" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="a8105470dcab8159d3081323e2b51aee82728a27" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="9db71656e4d6d3f6e792fa5d18bc81f690c65910" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="d522297b71cebddfaa98712ef9edc97ccc6b7e97" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="c84c4942b0b9277e8e31e14d33b16d0ae5a91e70" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="27b72ae4f769b6b21e248a40ac425ea40c570ac7" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="2bbbfd99ba680ffb6c45c4a3695bc1a4211ca7e5" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="22bc1ce9ef3797c3db0a340d013aa025e0fb0c4c" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="24644595416272688862bf38e4ee83e05ef69312" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.SetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.SetOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.SetOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="93f2dda0108efb1242c1760574587b65e36a19bc" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;], &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ], &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="ad1b8598391a63dbdec6c0872c582b6c9d766428" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="8b1f3b37d8300f51690cb823c52246208f4be5cb" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[A @scala.annotation.unchecked.uncheckedVariance], &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[A @scala.annotation.unchecked.uncheckedVariance])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [A @ scala.annotation.unchecked.uncheckedVariance], &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [A @ scala.annotation.unchecked.uncheckedVariance])</target>
        </trans-unit>
        <trans-unit id="fc7356a702918d946fc7b592241e5ade1966302d" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SortedSetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.SortedSetOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedSetOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="037917be9480efc374b5642f6ffb4e4dd125ebdd" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="4144bd7204eb2fab3fdae56126555227b29e2a6e" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="c6d22b8fd1fc55d7e037f0717971bc6b515da6c9" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="69cceb5c506d4ff14b94d57b3e30d64e9438cd2a" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="36b88b9d5dc37a5ce07bc102affcf5b5af0bbef9" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="92728b5962a6af629edb971141ec8d6833e2f3dd" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="7edd5c24a627b74b4c9b3fb3c1952e0d70b8caa3" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="845d0e2f6449b4c242e50d8636c3986a0a2153ae" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="0af2211b968e6a649a6302378f17a20925ee87d4" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="003e84b442a288566ffc53aa3dff559edcb59d7b" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="ca26328cde063d3257942264fba52f8c218217ef" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="e50427c5f6145bfd2f2e69f1e6203e9ece1abfc9" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="f5a3f03e7d90c38997ac4ab2c9c8f857a7dc69ba" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="6f2da2a1bda3b3f99f7392c7472fd8c89e70e7f3" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="bb30acdbcd02cf98d5130ab34f962ed1e18de163" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="29bb785944ffb3d955728da55f6647f8ca1691ef" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="d8b91b15cccf6eea76caed82feaed3a8d3b15ebb" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="8f11021d138ed0e4acd8a92f0343a7344edd1f12" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="09784cef5fdabc6c08a6c18dc115c5847ed1a1af" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="9352033d5ac4b02134e5c24ae76e1d356b9ff8f9" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="e4594e3d1a3490cbec4989ecdfabb9e7295c7e94" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="dfd8ffadfa371be89aa2c66f30bff1fc351a40a9" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="d718189c436236dbe18c9db9d0c81347cc57048d" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="3ee4f21ae1cf55446ab51e713c3a65d541fa8861" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="bff038a73bd7a13abb61ae3873f9e3762a3b5281" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="cbc10385af8f2400e29fa64473d1585286e94f36" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="62813e10606d0dbed389e857d4de649e2e6520b2" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="a78c7fefbb06247c9906cc2a1981ab4ad9e965e7" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="c8cf350efb7528451d26d6a6832df8a6a3c1c99e" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="819c4cd90d059a44de950589aad1c6522c84b496" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="5706a0d53ed0c956fec007b74fc0f794f4d73e78" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="a2ff455854c461433210e65b129762f9692cdc15" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="f3d7cbaba17fee75ccfcb681e33ac49d5851432f" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="97bc6fc93fa37341f2d2b7065f836dbc1f3e5272" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="787d4667c294dca4c549ec904619357b711b425c" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="94dda9beeb54868f5cb46154d3e1f36782b00390" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="e8f21f91490bae8ec17ea30f291a993d2a5524b9" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="896df44bad27e3619d9f72270f8956d2e3af27fd" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="8107d0f9c5cd4aa08ed0328b4c4f6f77e0ed1170" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="d7c12fa15e5cc1ab15a8af2d596dc8c63b087ef0" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="54469d7865f884c6dc5570c42e96da91e58be268" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="dfa5cca3f371056f00cae67adddb78e2bbdf0154" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="7a2fb2c2f753f4d0b6ce4a97c9b95ee7533894fc" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="6c8098c040c6710fbf9fa796b9fa1a65fc6304d2" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="ffdf328719c35a814b8cdfd3b4abbb26ca5e3da9" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt; ], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="8370445fac2a7e32613b1c5c80aa882c49c8f130" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt; ], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="5ba6e50b26cf2a6a8f3cd3891e8dded624efffde" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt; ], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="e538f85b2c470e0593550cfc879f0f8ee00bb5d9" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Cola&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Cola&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="81e5082830f41981142367771005087d0556b12c" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="f6d52a1f98e54ca3bb97bd975e220199ae27edba" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.SeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.SeqOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SeqOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="71dc76c4fa9303ba199f45a42590f512fcd2c062" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="ff82e3761e55cb3b027f686cf4241e45f46a202a" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="ae7883302b68d35031125184cfd621fb3b6e456c" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="b1e8957a9a124adefa82ce0a1e1270a08e9f05e1" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="39432d204dd17a45667dbc743c181013096d7099" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="5a6c1eacec0f8273b680453824e3b427aa06ae7a" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.SetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.SetOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SetOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="55d22740225a709b708eaf7797ebf4b8541dbaf9" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;], &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ], &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="40a017cb3943c2cc74e7047a23e80e360f8e287c" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="99ff74ff2753842215bca34dc33c652c377acc73" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="a44b0790f102098ee7b501070d64a29864fc93a8" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="10dd559cebb0c0a1f5aae5a194229904f0b1bfa2" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="a606f42ba904e2a69e0b8a7f43d250354f53fe47" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="5a311b540ca62e6803da344f8f5177677dd4e101" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="25a04569f256f645c06f4e043b91705854327e6a" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="a2db1230e7d9ef78d08ccb53a30582416fa47025" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="2215fb6dc403bb52a9b6a294e8afa5268420300f" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="c00216a61e3a617803b6f3a66993d3d4b6651868" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="6dfb7dfe2aceaeb594861afd684c90b418381e08" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="615d5035b6bdd0e1e169989b4d7a9b1486e2fb65" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="c918765f7db2f2e78aaafc95019fde55f14419eb" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="c82e17aa2b497c9e19194b0c9e4d2b5c936cebd4" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="6ac579cb82041419118a4316f3de4be4f861efb5" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="4ee18ebd93ed44503c09bbcc946f137e55d89d8e" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="31c05e1366b9be15e475a8c4fca0777f91d8de3f" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="43bd9bf9d86d7f661fc79b070374132720abb5c0" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="dfd59a782241a8406a8cf734bc538633d45b8320" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="8c875a1b2b656c965fa1868847e70f89a3d3c31c" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="d7e1f4e5770bdf03042c80a351416c1e8419f679" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="e83d82be3abd29ecf841f6b3573ee6f9cc81a9b3" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="231a83f5cfd296d877df292985cc740f984f3cb8" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="e95c50fa9f123770ddaa179ec1049d4a4e8f3b0e" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt; ], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="366c109759c594e8119ac02970b3eb95657fd8f7" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="f951a03ffd1156ae8830da5c076a4368cc0d55e8" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="d0c842c30f72fc8cbad86db24daf8c5ed6a29edf" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;], &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;colecci&amp;oacute;n.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; ], &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;colecci&amp;oacute;n.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="26842fb423d89a347e6aa7c6397de95566c58018" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="06d648b2cc4ffe48a7aa14dda4e75af2481ead5f" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="50bbb3e2a95841f7bb855393191a34dfd75d909b" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="6a5fe11b6ba9d9f3e37de4cb348caf38d928af06" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Cola&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Cola&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="12513302cbb3b0a322b1021978631830705cdb38" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="a7940a261222b52b409420bc84f96b5bac464764" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.SeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.SeqOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SeqOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="651a3f2acbf4364428bf3db2ebdac7d02c0e4915" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="07c8a5833fe081f060381e403e4d373d4eee264b" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="f83dcf4f37c787de15468a220a3e41a84346ff39" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="09db8e04c4568868cfeda05631f6e9316b48fd39" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="d6de14943919b6e66898d3fa72ca36c3d49f899b" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Pila&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Pila&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="e5c837df875894240675103234ea7ff2ef537fef" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="dc336cba9b8f47f87dc7a43216b81bc510740741" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt; ], &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="0b2ee6dc299987de7a4be5c5dd1412f93f549659" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;colecci&amp;oacute;n.mutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;colecci&amp;oacute;n.mutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="58374a20e86d4508584a21a181854e7e73677659" translate="yes" xml:space="preserve">
          <source>def span(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def span ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="56c2dd713acc5def9b317f138e3f56128f5362d0" translate="yes" xml:space="preserve">
          <source>def split(&lt;span name=&quot;separator&quot;&gt;separator: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="translated">def split ( &lt;span name=&quot;separator&quot;&gt;separador: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="3e74e3c2974d89670e4752bb96bb7be0f830aa32" translate="yes" xml:space="preserve">
          <source>def split(&lt;span name=&quot;separators&quot;&gt;separators: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="translated">def split ( &lt;span name=&quot;separators&quot;&gt;separadores: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="8d3024ec39f123a21f23976e36a0c23fd17d96e8" translate="yes" xml:space="preserve">
          <source>def split(&lt;span name=&quot;toSplit&quot;&gt;toSplit: &lt;span name=&quot;java.lang.CharSequence&quot;&gt;CharSequence&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="translated">def split ( &lt;span name=&quot;toSplit&quot;&gt;toSplit: &lt;span name=&quot;java.lang.CharSequence&quot;&gt;CharSequence&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="08ccd9cce655c3d2ab102fb4a51ec277e0937cfe" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;], &lt;a href=&quot;../../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;colecci&amp;oacute;n.Iterador&lt;/a&gt; [ &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt; ], &lt;a href=&quot;../../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;colecci&amp;oacute;n.Iterador&lt;/a&gt; [ &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="5f8cca7c96c3504f005d706e5b2fb501786e17b0" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="a22b32ac6889a311574428b3ab8130cc0c1e31da" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="9d2c29a30a65ea0476084aad44e87b068bb6f5b1" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;], &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;colecci&amp;oacute;n.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; ], &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;colecci&amp;oacute;n.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="2307fa31190be3beaf28638cf32d307f1d5a7bf5" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="fedc6f9d1d0d0398bfcc588a7a7a977b14015002" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="c31b75565cf172e199d022e84fafe544e14e49b7" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="e0230ae10acb5de5c71bdddf3dba29c8982325e0" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="523dc9e2821d314eb483361db0d430b97c2567a7" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="3c0f0a4f31531aa9a4b07c2a088aa4082a0be537" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="918d015b5945a1529ae69966e055a5a5213a13e8" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="cef49ad2efcebb7c3b35fbd067a864d9793de743" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="6435be48d4c7fd1c7c1679a24a01e623499408d4" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="ba299224473ce7bda32cff074c0e7a12d3bf2c49" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="11b497f7435f6935329781384bffd8d232a12fae" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="296704bf86bd29015a8a34d96ceb5a5cc69317cc" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="81122501b9a540f005d29fcac1f9d2722f2ce34f" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="5bcb69c1d9d26ba2a386caba8537485c422b7668" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="89525ee2e0003ffb6e13d3de556b412f3321ec70" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="7664cb418f786ce14673f11340ea8c3baa279a13" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="a514505870990659ce7e6996f86a4e77f36c5bd1" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="5ec2aff8e2edcf3f6a3ca57f152019c49d5e896a" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="5962534f0fb4975c406cd1c4efc135f9da2aa86e" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="962c96fecf90a2c57d8f1a3f3c7388a4e2b607f1" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="3682522ef4abe1127002b960b0c5dbae057f3770" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="df669442f7845f4fa1b009619e11b5ea0fe932da" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="a9b2170ec2b064572e2a79703c1ee83de0407545" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="7695e561149c019affe4104aea1c2ac7ca394eca" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="707bade5ce90ace62e3a0680aead2220cc2feced" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="ea53d7bfe3646f00a78683288d8530fd3da16a62" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="510ab807ddbb57ae38aa4d23f3a8c7561e5e5041" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;, &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt; , &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="72a1aab608c7f4304dd231492b072958291bdb4a" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;, &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt; , &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="e1e6751218d20ce51f6aaa2b4fc9ba0a21e1cb3d" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="421f33164780e8c03c769d231d08c16eebea57f2" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="324142f222e0774d89e9142b9098017c4dacc98f" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="5e710a70d88a3e855c5be77e859d048bf2f934c5" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="9da9d5b8d2aea9fa0d92e6dc9ee3d193885cb180" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="0e9aabb0e290c6a52f81dec9a5395b72f2bdb107" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="d08b414c277bd3ebb64b4d5f8a05e4d60dd713f0" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="8400582f50e733fcb460d7e27e29a2b2eacdd44f" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="d4f99d2f3951556ec9ff48454c1d6892f59abb23" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="f3e4fc8dc39240295fdac776ee6c51b06201fced" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt; ], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="b24f9cd5a70d8b039cf10002317f80201080ff45" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; ], &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="719867dd82ee7dd531fa90627f463592f9832a2c" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="a1ab43febee89aac216eeeb4813a17bea16edc22" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="718393d6a6ac1e2d53afc43a8bcb28955a22c0fd" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="3b6bfa57f82a3a3128fa8d8f9828156c44a7e2c8" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="0526f1d853685c089bb5f41c463d2f25ce36dd9e" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="e9b142aeb5136cde1526ba6c9005b3c2b4d8477d" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="08b6b59a0073a9b85c0a2207be43f19d943e4947" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="b877f51b73a767ed9a8b668b746900712d894bc2" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;], &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Lista&lt;/a&gt; [ &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nada&lt;/a&gt; ], &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Lista&lt;/a&gt; [ &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nada&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="74b6b4c6a51ea5ce3d4d489771fe2ba997693d0a" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Lista&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Lista&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="9dd214f94680516e45b0a4bdf40ef189ab959bf6" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Lista&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Lista&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="df130dfdd8ba64fc72fe19a8c20887e6a37a443e" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="f60901c72a0fb1deb42fe0c1f4f344ca879e0bb9" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="9666a8e4b7794585133052b6b4cc557b75fa8fc7" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="4b14af7bae16f77f596d07a931eb3d2229e88e2c" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="69d48d73923a92da7f181e0068852dbfdbc527d2" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; ], &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="45b0f2a805bb5a50257c35b1722133a787fbfe7b" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="f127d6dbb4fa8dc4d2067a4d89e2eec888ffd4b0" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="5c8882307248dab7569210abda0a2f0d93bb4a06" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="ab5b2bfae1303c1e561f1f1c67e55a392fa85ad5" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="6b673df6ba275c68fdae3eb0d602a2918598332c" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="593fdeae1c6438533ce1a47a2e7a6d872bc5adb2" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="d0bcd08e0729602c19e45996ac2e8b8d97a7a059" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="87e0aa672dd14b26199a428c418f30755476abb1" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="cc11dd8c14d911e2dc9b4dcbf0ef13ea9caca702" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="e4b4c62d439e911c25290fd314c3541ff5d50c68" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]], &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt; ]], &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt; ]])</target>
        </trans-unit>
        <trans-unit id="a8c60944f3462aa9f4ce54b207d7d3b5cd6b6c1e" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.immutable.Map.WithDefault&quot; name=&quot;scala.collection.immutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.immutable.Map.WithDefault&quot; name=&quot;scala.collection.immutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.immutable.Map.WithDefault&quot; name=&quot;scala.collection.immutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.immutable.Map.WithDefault&quot; name=&quot;scala.collection.immutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="48e4c490456c7f9a50bde6f03ead8e6966e62256" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.mutable.Map.WithDefault&quot; name=&quot;scala.collection.mutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.mutable.Map.WithDefault&quot; name=&quot;scala.collection.mutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.mutable.Map.WithDefault&quot; name=&quot;scala.collection.mutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.mutable.Map.WithDefault&quot; name=&quot;scala.collection.mutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="6f4ad7f97c10f38c1830cd181d07eec7ff2225ba" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;numericrange&quot; id=&quot;scala.collection.immutable.NumericRange&quot; name=&quot;scala.collection.immutable.NumericRange&quot;&gt;NumericRange&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;numericrange&quot; id=&quot;scala.collection.immutable.NumericRange&quot; name=&quot;scala.collection.immutable.NumericRange&quot;&gt;NumericRange&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;numericrange&quot; id=&quot;scala.collection.immutable.NumericRange&quot; name=&quot;scala.collection.immutable.NumericRange&quot;&gt;NumericRange&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt; ], &lt;a href=&quot;numericrange&quot; id=&quot;scala.collection.immutable.NumericRange&quot; name=&quot;scala.collection.immutable.NumericRange&quot;&gt;NumericRange&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="a03355a7f367943cb549d9036fbdaaae0267b9de" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;numericrange&quot; id=&quot;scala.collection.immutable.NumericRange&quot; name=&quot;scala.collection.immutable.NumericRange&quot;&gt;NumericRange&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;numericrange&quot; id=&quot;scala.collection.immutable.NumericRange&quot; name=&quot;scala.collection.immutable.NumericRange&quot;&gt;NumericRange&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;numericrange&quot; id=&quot;scala.collection.immutable.NumericRange&quot; name=&quot;scala.collection.immutable.NumericRange&quot;&gt;NumericRange&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt; ], &lt;a href=&quot;numericrange&quot; id=&quot;scala.collection.immutable.NumericRange&quot; name=&quot;scala.collection.immutable.NumericRange&quot;&gt;NumericRange&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="e6ddef88fb7d744c160fec3a4890422edff4d220" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;numericrange&quot; id=&quot;scala.collection.immutable.NumericRange&quot; name=&quot;scala.collection.immutable.NumericRange&quot;&gt;NumericRange&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;numericrange&quot; id=&quot;scala.collection.immutable.NumericRange&quot; name=&quot;scala.collection.immutable.NumericRange&quot;&gt;NumericRange&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;numericrange&quot; id=&quot;scala.collection.immutable.NumericRange&quot; name=&quot;scala.collection.immutable.NumericRange&quot;&gt;NumericRange&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt; ], &lt;a href=&quot;numericrange&quot; id=&quot;scala.collection.immutable.NumericRange&quot; name=&quot;scala.collection.immutable.NumericRange&quot;&gt;NumericRange&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="adc30a6b642f249a61176dc5f399a3ff37e466fd" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;], &lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;clave&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;valor&lt;/span&gt; ], &lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;clave&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;valor&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="ec276946083719b0210bea246e46303470229e94" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="e2168224a1ece5d7e7fe3b6fd1c9cb42e609fe0a" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Cola&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Cola&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="804dc24370220450a42e8b4fa62420f7bc439249" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Cola&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Cola&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="cdf9d4429c7562852b99682db5efae9209b452c1" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="87424baf280a37f23c1dee3fb1aed00992e5c9ea" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="331de31832b21491e57f3e0308cacff873c3c88f" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="2ce46bd1f404c13ef35426ccbce1d4b8ebe47da9" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="7b800e05e37df7a1c6abdf8fb02e58693f845943" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="c26936f2369a40775cd00788473476b9b23e2328" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="56fb91d4e326bbb5889a77e0a091bda692b7e15d" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="cc459a7e411d3c907de8324faf045909cf1b63db" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="7ae574223c5c34b1162d8940d9829a09b909ff28" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="0c0ac9093bb929c72f0fdf110b092c8f237b1fe4" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="5828620c5ce31a4e9619546d205d41b14b1bfe00" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="131657de8126d82693912bb78617e781bdf77a8f" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="79b1e8ffe95edfe643c0865f99a146fdbd28417d" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="087343e946e4201aaf4029ad38a0afa4a3b7929f" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="021a62ec349ca4b5448b3b31fa9f4c1b1852d258" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="7cefa18ff27897eafde6e8b3c24f347f7f0f4e15" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="11c6850312c4be00f097b6ee6f348b96de553017" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="a913a4d043460b754203afd2d7ebd73fd884c00d" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.immutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.immutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.immutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.immutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.immutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.immutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.immutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.immutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="99d91d1d56f0bd3ec98b1b64789af32778f5e687" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.mutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.mutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.mutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.mutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.mutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.mutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.mutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.mutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="37aada0e3b604aa8799b9445b30af5b1c180959a" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;], &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ], &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="9eb51624b1aae4fb193ae5fa9ba3114d02d4102a" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="7aee2fce8a905f99166d08b926945eaee3f65c0b" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="5bed254d4fd82854488fb16408013c4e644b23fe" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Pila&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Pila&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="753afe1c946c7222c5262f795c439a00f392ae92" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;], &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Transmitir&lt;/a&gt; [ &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nada&lt;/a&gt; ], &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Transmitir&lt;/a&gt; [ &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nada&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="d5f06b5e719c4a6db592f9b40a6beca3dbfdfb8e" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Transmisi&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Transmisi&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="5439a1f2c80400d950e4ef14382208feef58582c" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Transmisi&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Transmisi&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="f78cbfee69a4e2a068d68053d6e53959e9eb5fbe" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;, &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt; , &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="dd7212309f2ceaf25627412ceaa79c2acabb1cc6" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="a8092e7f7f9b4abcd9ebebfd00a91f1c5e02a223" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="1983131dacb79a0decaadae1a2aa15b973b43e4a" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="727f7c9019e21c112418723371f8c447abd632e4" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="65e810a5fb23f72ba44101849c0b5ac7b0155b51" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="67eea28bd857d0c8dff7d3ed2c9e0d73504ce579" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="06eb9b6a7bd48484874433a2c5565c46986fa154" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt; ], &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="b4dbb08725f44bd115ac0a76c0c5d8eaa15c7263" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="dea9c433db3a4fdd69027be70cb40b71cd826890" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="6271bf6125316cf173d3100a0a14fcce5b2978b5" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="eb631d1a4c618b2aa4eb2bd19133f8cd402786ad" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;, &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt; , &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="9bca2a20e9f25e436f3cf77ac4e2333ac81e0618" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="a0f382a01eccf98675583fb5da1902646166fc61" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="b384d38d487be3367a926e6bab9c0a3c4a99cca7" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.MapOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.MapOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.MapOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="9469d750c2a90602ed5a2872cb64f42c9c43c456" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.SeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.SeqOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SeqOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="37a320b2c4d6db978091d84fafd49ea415fbf568" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.SetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.SetOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SetOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="5a41013ec7ec94f5b04e9a6e827827f289213075" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="525a7dab891dcb45c2531ea1abb213924d84c048" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="ae4d6efdfcbe06bb355ce7af8cbb051ee85a39e8" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="81c4f48f65326d48036f74151cdda30b4c6829ac" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="9a0a35df9445641083a67928610233dfc247f178" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="e8d66f2249bb89dbe610c7996785a713c9ea0134" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="d9e7030f1c3b35638599a3f65c6a447ce3796013" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="46c17d156866983fc55214f2185d7345dd46dcbb" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="62518040253442b47d067cca424e4fa6c7b5a26f" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="981021ec04a3e884e5b2071209109d7ef6cc2810" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.MapOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.MapOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.MapOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="a7ef6d9162a69cc8db954b948a8a72518b8e13fa" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.SeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.SeqOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SeqOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="fe8eea0312ad624667b6c303b2097756afad6209" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="11a9a19253217ae7277e1d0beb2ceb4b4c68f1d1" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="35be01a72d49f1f1dec7a4c2c47842e4b1cd725d" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="929715e1074085dc06e3988a6fad7c6672f865e8" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="df58457612f72812d46bc7aec5ed8a99bae432d1" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;], &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ], &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="75add4653042859edba3400b0569c3f12e099a0d" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;], &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;colecci&amp;oacute;n.Iterador&lt;/a&gt; [ &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt; ], &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;colecci&amp;oacute;n.Iterador&lt;/a&gt; [ &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="890e1d12a7c3985ecb0349ccf7028f266ebc5256" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../collection/mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;], &lt;a href=&quot;../collection/mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../collection/mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ], &lt;a href=&quot;../collection/mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="1117878edcb4b13b5848c770751fea7e6c2efc74" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;colecci&amp;oacute;n.mutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;colecci&amp;oacute;n.mutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="9b1278689103a22c132154371e2971e47173789d" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt; , &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="7714dc64725c72f166c991d34c967d1ff85eaeee" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="0b1ad08eb86dc26962aa29b66f6ba1f6cd278831" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;, &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt; , &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="f89b0abbe7c41b8a43c9b002e79b2bcf7b44d487" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;, &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt; , &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="161f1eec22e8c750042de099482520e0c5ed5d25" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="d1d410baf53855a56cdbe30b4725bd0c3dcc6824" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;, &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt; , &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="82c9256b2375794e91424bd81260401468cdd108" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="86aa28459b1ee4d42bd8929f8555a045581780e1" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="56c1d6970e00978b6c5becbe26da3b527b31c2f2" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]], &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;inmutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt; ]], &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;inmutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt; ]])</target>
        </trans-unit>
        <trans-unit id="14a745bd128920191a6c2f2264513b27822e7240" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="296de4ecfe2eb02fbb087321b3d4e088926a590f" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="a55bd60b8b0c513cc0eaeb93cedf2630f0d67ef2" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="23156c2c568acfd93bddfee84e030441af8ab8c3" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="7dfcd4c65942d19b02f8fa378267f2b8545008d8" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;, &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt; , &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="d499899c67e96d9c8b9572a48c1c1e92a1333493" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="178157223ea161ec7e28b287b957eb0386ea9c0c" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="b098ddcbf30611c5e391519f009296dad0279db0" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="1d59eb0a1e50b6e275943bbff7ce709151ef820c" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="1fe1b94443a16439cadb28f862446d3284b2e358" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="75d9c2dc6a19daacbd8467438b65b256ba26c75d" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.SeqMap&quot; name=&quot;scala.collection.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.SeqMap&quot; name=&quot;scala.collection.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.SeqMap&quot; name=&quot;scala.collection.SeqMap&quot;&gt;SeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.SeqMap&quot; name=&quot;scala.collection.SeqMap&quot;&gt;SeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="884a44a9920e4c3ca7b92ccdd1763a9c593aed62" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="d47133d52725abbd89770a8cfedfc32527315f79" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; ], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="f5706fb0d35fb93a0d8668670658bd38839399f9" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="a4921a7ff1a0a5c3e81dd284c5f4ccd5ec016b0f" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.SortedMap&quot; name=&quot;scala.collection.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.SortedMap&quot; name=&quot;scala.collection.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.SortedMap&quot; name=&quot;scala.collection.SortedMap&quot;&gt;SortedMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt; ], &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.SortedMap&quot; name=&quot;scala.collection.SortedMap&quot;&gt;SortedMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="e23d937bb0191691b8b5ae4af90908c636112e29" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;], &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ], &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="5ceaaf8481780e22a7f09f57ba1348ce720ffd99" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="6c8bb1ddcc1d8697a968e4483a1d1fb1666201bc" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt; )], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt; )])</target>
        </trans-unit>
        <trans-unit id="e6e741f27d3456f812b6118016dbf21fd1f6ad8e" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt; )], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt; )])</target>
        </trans-unit>
        <trans-unit id="1cf025af7a89444c86f95a6772b0d3753b69c729" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt; )], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt; )])</target>
        </trans-unit>
        <trans-unit id="9871950e4ceadd53f6e638dfb7076e86eae37366" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt; )], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt; )])</target>
        </trans-unit>
        <trans-unit id="fda0aa4729edf839450c2daa58245e5b58b3a1a1" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt; )], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt; )])</target>
        </trans-unit>
        <trans-unit id="43d512ba287006769ca2af6d3bfb804f5cae2af0" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt; )], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt; )])</target>
        </trans-unit>
        <trans-unit id="b8f39d039b5091c1676befd095e6661997f3c493" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt; )], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt; )])</target>
        </trans-unit>
        <trans-unit id="0789c6073d5abaac9be61881d1ab68a0da933d22" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt; )], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt; )])</target>
        </trans-unit>
        <trans-unit id="b540eb0aba56a24b2b895cc5fc7de30953aa802a" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt; )], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt; )])</target>
        </trans-unit>
        <trans-unit id="28e0c5a2d305f10fa8870b05f0d36bbe4d9fcf1f" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt; )], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt; )])</target>
        </trans-unit>
        <trans-unit id="9a2fe24788f0737c8b78d23c70fba69ac747dc6f" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt; )], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt; )])</target>
        </trans-unit>
        <trans-unit id="30df61b65dead48b3bd33e28599bad41fdc67fdc" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt; )], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt; )])</target>
        </trans-unit>
        <trans-unit id="9b04141dc09f2997473ce2e7239f25e2e37c555b" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; )], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; )])</target>
        </trans-unit>
        <trans-unit id="36af31f08adbd3bc9f586b1ac246c7108856bbb8" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="2524bc978b724515b22f1f49ac3e6e53a35af56e" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nada&lt;/a&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nada&lt;/a&gt; ])</target>
        </trans-unit>
        <trans-unit id="ae5ad1235a4a7fff082b483765a61094690dacdb" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="c8db14cfe76916b49315751866147bd50ea012d2" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="510d152da99f7fc13e1660e1095195c716c0e7e5" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="aa8d362f63941c2609a78bcd138443c0167a9743" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="2728a3cdb75fa5195442b9a31e32668ed76b65d0" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="7ed8fbda633fc6a70b0bf3debba66063e7ed3240" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="7aee00381cec34d71bccfbbe51a3706a653bbe05" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="7ecb7253328e8eae05ad5a7e2479f0fd227e4db3" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="99ef4e6a002105f8270cb1779256575563def893" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="96d4c66569d27911a1e870e436b83d15c8be0b31" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="75f54db8d36cc1f3f6dcef9dc827e3e699f71768" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="f0bfd344329542ec159f4b10d9bf7a0e3b9deb83" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="4ab92d2fccc35e14943978e24986b9a117bbe64c" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="f5259c891794fc3218a909bfd189638f834c0946" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="f71feef39f80247cfc72b9460e543c4589a0161d" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="3716f54237279511db1cc3596ba0c27b701acdec" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="140dab01912312089b945fc1e73b2ef9d81ebb57" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="5123bff680fdb85b4ccacf01f4ac5d8af6d3b1b9" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="4e074481da90c40ac40dab37330793d242310b46" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="5aea60c7a83e695c7b43b2d7ff846474cc73f693" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="f3aefb61f5406662271472216a6f972bbcd8806c" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="13169699f0cca03648feae26acb60ceff29b0d4d" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="b6a818ce4bf822a9ffa8936b66ce79d75f23244e" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="b49ed3f79ea21391b8ac7866045bd3b761f5a773" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="b14e9268ba16bd593ab4c6b9803d8283a5290960" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="3617f99fce62006e60dbd46315ce51e0e3c8ab3e" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="53681ba8687d49e6e8ae329f31fccdefa9a959c3" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="40169ca0b99cbc05eadf546632589a886fb08d8a" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="0002518ef2835af5b2425f5352421c603ac8b906" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="e6d1b7c3e5ceb36481de98ff0e4bd96aad929e30" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="6651d7d1a1ce7d215ca327b3e71115845e79bf6e" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="8537cc57dad8a87288b80f149a523fb55f281458" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="94de0bceaa19e7f7f3be290fbbac90aae2d0f811" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="5b76c02102302b20ba56519e27861ff41d3a69af" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="62c8ed6cacb8658aefd3a6c1a4ce38ec041a015c" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="f32c2763d64d40d4ef25ba3533ab57b96156c0dc" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="38dd7ec5427133db3f13f1bdca0bbfff8a965a91" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="18a1a625c740ab49a6e2edde225708281fdd9aec" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="2c468aa1c5da9a4f736f471bb3e5e3e1c3285aab" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="6b0134a8cda225f9839826d9f63368fa168639ae" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="4b7cb2c58a083c60dfcb722ea508f22868ff0b1d" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="c2c5026644864189ce24a979c901812bfa7fc2db" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="52db7386fd0b002ac239e6b973f965357111fe29" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="8bdcdcffc42573ca9643112a6e1d8da4b8794e9e" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="3a3a1d79973d9a93e7d493bc7780466a2223e556" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="347d17e7ecad3885a32a349ce083c5abe4371644" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="ea2e7927754cba7b2179813cc87a0caa08d5546d" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="e44a53ed1c8c6ce4d28d5a7b68cc4b59a854c32d" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="39c7d4359404ba04fc83cdc9822930a55e4b0638" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="1d0dc157aa64ae1fed4cc84b23c6a19e20a012aa" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="e0f1ecd7587bdbfb2d1c50836d0c337b29116514" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="677a60f8731f6b2aaca22723e4d0b753ba968cd3" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="cdbb308514806bde51ebec635d6be8124d0e5fe9" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="fd50ba754f62b025c649ece676f16a06ed140061" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="6181f3a896ae2a870f6a69c9b2bbafffd65d7bf1" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[A @scala.annotation.unchecked.uncheckedVariance], &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[A @scala.annotation.unchecked.uncheckedVariance])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [A @ scala.annotation.unchecked.uncheckedVariance], &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [A @ scala.annotation.unchecked.uncheckedVariance])</target>
        </trans-unit>
        <trans-unit id="34ad3c676539b358438d2107f63112acaa0aac87" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="fa5bf1aa6b4fbe54bfbb60df37c063d7af34531d" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[A @scala.annotation.unchecked.uncheckedVariance], &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[A @scala.annotation.unchecked.uncheckedVariance])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [A @ scala.annotation.unchecked.uncheckedVariance], &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [A @ scala.annotation.unchecked.uncheckedVariance])</target>
        </trans-unit>
        <trans-unit id="f43419acfcde51c0697b3e1c6c4ed7db2e37a35a" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.IterableOnceOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.IterableOnceOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="a57fa1bf07984c65629e19ef1cca1fd490bf8c64" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.IterableOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.IterableOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="5c24cdb0cc028f0862756b0fdc9d70a4b3605392" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.LinearSeqOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.LinearSeqOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="08b152bab2bd4d6837d5ba2a64d4a475108c99e7" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, V @scala.annotation.unchecked.uncheckedVariance], &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, V @scala.annotation.unchecked.uncheckedVariance])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , V @ scala.annotation.unchecked.uncheckedVariance], &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , V @ scala.annotation.unchecked.uncheckedVariance])</target>
        </trans-unit>
        <trans-unit id="6d7486966dffc5835c1046c34205292d46ff582b" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.MapOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.MapOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="bac5cb22043a0300e267d8c338bee0b48668cae6" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.SeqOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="ff9d96913e698aa220ee3209a3d7d273bbc445ba" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.SetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.SetOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.SetOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="8b9bd497f32a2c02cfb56e3671497ad1a733033f" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, V @scala.annotation.unchecked.uncheckedVariance], &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, V @scala.annotation.unchecked.uncheckedVariance])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , V @ scala.annotation.unchecked.uncheckedVariance], &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , V @ scala.annotation.unchecked.uncheckedVariance])</target>
        </trans-unit>
        <trans-unit id="f7ae527c5389609c55c357fe15ef8758092f3685" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SortedMapOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.SortedMapOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="8654f071d5e36cf4726e980bfcf1a29830e3ce7e" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[A @scala.annotation.unchecked.uncheckedVariance], &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[A @scala.annotation.unchecked.uncheckedVariance])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [A @ scala.annotation.unchecked.uncheckedVariance], &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [A @ scala.annotation.unchecked.uncheckedVariance])</target>
        </trans-unit>
        <trans-unit id="32ef899e28111fd46c44d78c69f85743d21a1942" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SortedSetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.SortedSetOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedSetOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="57c3ab0d4a05288fcebac56e87223ddc24b10bc0" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="fa85ab73b9a8658bf678c9bff375df58f54b730c" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="4564e4c5d73c46d460da7b19e3eab9d573eab213" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="64cdabd70a3fc5792d8e99c234b629fb6a25a507" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="a0f5ce4b233e6664084d42df1582f7a0e31d3b82" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="7fb9f682a51b956acccdc98ba8c69b2ab411d3c3" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="a02d62b3bc77001a311b18ea47bb06d3cf34bf1d" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="e855492eea5de7bdd449bdf4828b2fa198cd51bd" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ], &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="277fd1c35842815d7b665e9b6b3af22e04b17b0a" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;colecci&amp;oacute;n.immutable.IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ], &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;colecci&amp;oacute;n.immutable.IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="0601bd632263d6829871dc77b7e501031c50b9eb" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;colecci&amp;oacute;n.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;colecci&amp;oacute;n.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="69dcada4203848e0112ad5fedb8d94d87ed5967f" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;colecci&amp;oacute;n.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt; ], &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;colecci&amp;oacute;n.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="9247bcb1c165a9a6637ff06760dd7f19790a3623" translate="yes" xml:space="preserve">
          <source>def splitAt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;, &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;)</source>
          <target state="translated">def splitAt ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): ( &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt; , &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="479e9ba64a27619c5a5124af8e49de6993eb3cce" translate="yes" xml:space="preserve">
          <source>def spliterator[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;]: &lt;span name=&quot;java.util.Spliterator.OfDouble&quot;&gt;OfDouble&lt;/span&gt;</source>
          <target state="translated">def spliterator [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ]: &lt;span name=&quot;java.util.Spliterator.OfDouble&quot;&gt;OfDouble&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="626142361fd2c4d46fdf7db2f779c1feb45c3413" translate="yes" xml:space="preserve">
          <source>def spliterator[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;]: &lt;span name=&quot;java.util.Spliterator.OfInt&quot;&gt;OfInt&lt;/span&gt;</source>
          <target state="translated">def spliterator [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ]: &lt;span name=&quot;java.util.Spliterator.OfInt&quot;&gt;OfInt&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ba74b19fa07a7e702a9e358ab6815e8622e24c93" translate="yes" xml:space="preserve">
          <source>def spliterator[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;]: &lt;span name=&quot;java.util.Spliterator.OfLong&quot;&gt;OfLong&lt;/span&gt;</source>
          <target state="translated">def spliterator [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ]: &lt;span name=&quot;java.util.Spliterator.OfLong&quot;&gt;OfLong&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c5ecb7c7c6fdea4df894b1941f1d298926121357" translate="yes" xml:space="preserve">
          <source>def spliterator[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AnyStepper.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;]: &lt;span name=&quot;java.util.Spliterator&quot;&gt;Spliterator&lt;/span&gt;[&lt;span name=&quot;scala.collection.AnyStepper.spliterator.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def spliterator [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AnyStepper.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]: &lt;span name=&quot;java.util.Spliterator&quot;&gt;separador&lt;/span&gt; [ &lt;span name=&quot;scala.collection.AnyStepper.spliterator.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="041cb075eee306b639286cbe0f7820ee79f22989" translate="yes" xml:space="preserve">
          <source>def sqrt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def sqrt ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="97b9f8d074a3df6a2295b7d4b86a4a390ac1f528" translate="yes" xml:space="preserve">
          <source>def stableSort[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;M&quot;&gt;M&lt;/span&gt;](&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.util.Sorting.stableSort.M&quot;&gt;M&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;arg1&quot;&gt;arg1: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.util.Sorting.stableSort.M&quot;&gt;M&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def stableSort [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;M&quot;&gt;M&lt;/span&gt; ] ( &lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.util.Sorting.stableSort.M&quot;&gt;M&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;arg0&quot;&gt;arg0&lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;arg0&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;ClassTag&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;&lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; ]&lt;/span&gt; , &lt;span name=&quot;arg1&quot;&gt;arg1: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.util.Sorting.stableSort.M&quot;&gt;M&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="159a1580da7a59dbc528e4211c403a2b21846ad9" translate="yes" xml:space="preserve">
          <source>def stableSort[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;](&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def stableSort [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; ] ( &lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;arg0&quot;&gt;arg0&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;arg0&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;&lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1a68267c31c7ff04c8fc6f7954e3497ed9920023" translate="yes" xml:space="preserve">
          <source>def stableSort[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;](&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def stableSort [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; ] ( &lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="61e83a19d1009ded49299fec3dae338e1fac7105" translate="yes" xml:space="preserve">
          <source>def stableSort[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;](&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def stableSort [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; ] ( &lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0ae85aa6fcab9428df143c9f9fe3c2c5dc466285" translate="yes" xml:space="preserve">
          <source>def stableSort[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;](&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def stableSort [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; ] ( &lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;arg0&quot;&gt;arg0&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;arg0&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;&lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="554b71f73eb40188c941b787e87de401fff50196" translate="yes" xml:space="preserve">
          <source>def stableSort[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;](&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;arg1&quot;&gt;arg1: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def estableSort [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; ] ( &lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;arg0&quot;&gt;arg0&lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;arg0&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;ClassTag&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;&lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; ]&lt;/span&gt; , &lt;span name=&quot;arg1&quot;&gt;arg1: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="08709a441767e1905f380440cd975b95b8a1f050" translate="yes" xml:space="preserve">
          <source>def stableSort[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;](&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def stableSort [ &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt; ] ( &lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;arg0&quot;&gt;arg0&lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;arg0&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;ClassTag&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;&lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.util.Sorting.stableSort.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d89e39ba960184a9e665eea9fa9839a880b894ed" translate="yes" xml:space="preserve">
          <source>def standard(&lt;span name=&quot;connectInput&quot;&gt;connectInput: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processio&quot; id=&quot;scala.sys.process.ProcessIO&quot; name=&quot;scala.sys.process.ProcessIO&quot;&gt;ProcessIO&lt;/a&gt;</source>
          <target state="translated">def est&amp;aacute;ndar ( &lt;span name=&quot;connectInput&quot;&gt;connectInput: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;processio&quot; id=&quot;scala.sys.process.ProcessIO&quot; name=&quot;scala.sys.process.ProcessIO&quot;&gt;ProcessIO&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0f0e246f71f40a643e663dec113d413aa440d8db" translate="yes" xml:space="preserve">
          <source>def standard(&lt;span name=&quot;in&quot;&gt;in: (&lt;span name=&quot;scala.sys.process.processInternal.OutputStream&quot;&gt;OutputStream&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processio&quot; id=&quot;scala.sys.process.ProcessIO&quot; name=&quot;scala.sys.process.ProcessIO&quot;&gt;ProcessIO&lt;/a&gt;</source>
          <target state="translated">def est&amp;aacute;ndar ( &lt;span name=&quot;in&quot;&gt;en: ( &lt;span name=&quot;scala.sys.process.processInternal.OutputStream&quot;&gt;OutputStream&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;processio&quot; id=&quot;scala.sys.process.ProcessIO&quot; name=&quot;scala.sys.process.ProcessIO&quot;&gt;ProcessIO&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b94855c27823c24bd66b5f60ca3a1549740f85f0" translate="yes" xml:space="preserve">
          <source>def standardInterpolator(&lt;span name=&quot;process&quot;&gt;process: (&lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;args&quot;&gt;args: &lt;a href=&quot;collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;]&lt;/span&gt;, &lt;span name=&quot;parts&quot;&gt;parts: &lt;a href=&quot;index#Seq%5B+A%5D=Seq%5BA%5D&quot; id=&quot;scala.Seq&quot; name=&quot;scala.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">def standardInterpolator ( &lt;span name=&quot;process&quot;&gt;proceso: ( &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;args&quot;&gt;args: &lt;a href=&quot;collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt; ]&lt;/span&gt; , &lt;span name=&quot;parts&quot;&gt;parts: &lt;a href=&quot;index#Seq%5B+A%5D=Seq%5BA%5D&quot; id=&quot;scala.Seq&quot; name=&quot;scala.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ]&lt;/span&gt; ): &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa86188b20a0d5797485a974077da4573d47a7ed" translate="yes" xml:space="preserve">
          <source>def start(): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def start (): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8a9975a8dbe8ca8f93c17d7fcdd680636d35b359" translate="yes" xml:space="preserve">
          <source>def start(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def inicio ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e56403daf2c40f14073b480378362dff29101821" translate="yes" xml:space="preserve">
          <source>def start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def inicio: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="92680bc388db4dbcd8a259f98c079164b3f13f8c" translate="yes" xml:space="preserve">
          <source>def start_+(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def inicio _ + ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be00451a4adebf77c98d5f9d3ad3d97c63c8e3a2" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4fd6c8c12811be2829dbeb11520f31840d269bf3" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bab8064322ea2af10face24b9cbb6e5b0329a6ec" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5e9705e29547f9ba4e3e6ca2227b0bbc459fa865" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.WrappedString.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.WrappedString.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f95aea90d0fec5732f2416751e46bc8607678869" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="51e0d4ba36bfce527c2c28daed9f9aa481afb631" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="62de1509c1dfee869e79180d43164d0798b4127e" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4795a11cdb9f65bfad3556da750c905e0701cb10" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a08bc923692e708060e004da6e6f0aa10d1367de" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="44c5538dffbbb321fd05ce2afafcd877d97baf69" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3a0e59568185af0c58c11fbb18baee014ed443da" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6b4fafbfbf39c0530678637469585b4d19d65313" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c0510f8467568745b15ab958d4f8fbb766f50b9" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f672e75659f5580f04754b69f1948f2b5bbd723" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fdbd512f44e5b6547c605640415df6f56fee9a51" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e40a8ac4a833cdd5fd649acb25cbb3f1230c4ea3" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a1c52a4c022d6471906a6fb14d8824f74c1ca94c" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c374150d03c051ec8cb1bd0cd4ae080ff40936a1" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e76d3c540e8f259af5f6da58fddd4c9f3a51bede" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;que: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d39f4fdc1b2ae89970ce4751eb7d9b62b9500c1a" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0c94e5c839bb3b9ea1762d2eb4f23e1b2e40f80a" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;que: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3108ab7ae996581ce36fac411531cf5ae5aa0dfc" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b671073daeb8cab4e1cc0087784bdc93e600a6e1" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c5c1acba8862719341908a2a96514c20656b18cc" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="77427e291a7af19f24f0c4cda0ffe625857f548e" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="19a29ba273ad4256177d2b17950ae043c6599908" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6b670aca5c6adc9e60af315de92a52849095ddce" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a2408468bced5e32a7ab34db8e0c2fe72469b176" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0893ee1fd9afe804878272b2dbcfe7ad8d5decf8" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d681aa7796fbc61cf3b91ba1cc0e8c4cfd6e4d59" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e4542ce036066ab352b29072d6a6de7b50d20a32" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1cac6626f95728425758d470d2249e8e797f7f99" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="91a1b94b44fc8d2232bba03eaddcc5da69cd3622" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a535444de9ba5aa00aa41680ff312aed1fa09c43" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="11119108a2fd230710d3c25d48df30f20d23da9c" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="82096aff677e20512dfac57016ee3d96c85a4758" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1e2d990c6ed85a49adea75c710220b0811fda81a" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="51c21b6aa8ac94ee6885f80a6144ed3d67309ec3" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2817b8363ef9ea08a6d11fe2bfe214c5e3d57236" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="50163e462924349af1195fcfc3b489674575d2b9" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c7d13d59dee85a56475efbed70c09604659ca58" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="69f4d60982864a832f33afba692b75c98d97787e" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0da49d3d7205d013ed013dc3400113252543eabf" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7cccff593f2800d7a45978ab1f08e6f596d33410" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2c50ac2c0e93243dd7e93c9d541948e2bd1ef8ce" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d93de174e1e94846171bb5dd6cd7d29f95d54989" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5eef7a0d9249bf6233880031390d28e77c5db1bf" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6feee68885d022ff8a33dbb044430da8a356765f" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3cea8b77083615e4c85786cac15b2a0f6b4d4251" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="24ef8c82da0150af60c398fc3addf66be12ce522" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea3826effbe8f37c18176c456953ed6241a8ea1b" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6577de4c7bbb66c1885a7183efa1b2000b6f8d6c" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="614c77abf17072e577ec0e446efe509ab7d60f65" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4456ae54721e37ff17042d4a7841cb25417f398c" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="096848b9ec0f7ffd12fe5b5275bf6589210a9b20" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="60fd13e4fa13e1bc43c7064dea05ecd61bf818cd" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c968946453001c2b66eea4a622ed9d0ec95927b4" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="65e03e72192da460e76494065037f6f5b029da59" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="335cf7e56c60ca23cac11b34d19332c7d60f4563" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9a6fc6036b32d742858aee788535452775ca52d7" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="879bd3366b0c5cc28b25309901f7cfc40862d103" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c56ef4c64a7760a650305823b5d34b2256874c7c" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f606a1d691cad08022939cd98e8b14e72521892" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4b83d4d686161aa328f19fc81371577c8dd556e8" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="06ccb383964b69d7183c23aec67218365ad1d307" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="23e3f5a73e67fcc6929ae6382d5d6e3f3ef075ca" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a1676d018211dfbab83ddac88268eb3010ed1b9a" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3699159797a1b2dbf90265c717d930804f7e5d3c" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b846e4fa56285e6e1092f3f777d6640ca08793d" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8178fa55aead50abeadfb717ed8b629feef82486" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="af13a7f81b217f97b2d1a5306e76a14b0251bacf" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f950a26f7c21a0a31cd229c05b2c0ade3276c2e6" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="12389eaa232049a9181058e8018f1f587301b6df" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3dcd38c46cf5ab3d862a0d34d70f1f8bbbd5d0a9" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5ead829ee6dcfa8ba7f31e1bc3a384b6d9cd4ea6" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="534fc9f3bd1667c081e6023ef70b92e597a11277" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b3cec593fb7b63502d6fc354e3c93f793f4cc716" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="75c26d76e812f4bddcadfd518712290eb0ab1ff0" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e64b31330c23b84518c588a9e72e83f695b00328" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0cab4e76412a86b8de5206f63d7d91984e9f3e81" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="881c3d623b1b722323ea2377c413fbc445781288" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d1532bcc465d1ee0b3cc08762d4733eaf3202845" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d739be51b293f2fb020a57509275882fa17b42d" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="148efac9c33d748f8d5b5138e435e63636c6379c" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="75047cb684586c2b7f37a914d67512a2ba1a065b" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ef53b36d4a56429b30cbbda3cd15be437a977b0e" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6539c1f5d992bf0bdc61c96af2fd4229593c6d6a" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="daa49d185c115c0684881a58d777a9e7a380bad7" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e0a5ce4a2d41d9451445d214cfc4ea3f8e373ac" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db037942d1e5b3723586553345dbbed7ad009612" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="928cf1705c24a135cfff98582e4d19b94f0f4498" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="877198299068cb6c3e6bef086350fb1b428e3faa" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4692e4e64f6a9f581087f29add59c187ed77cbf0" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2d35ec23f9f61b9b2e041c0835ed4507d5fed918" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4288130caceffedcff38bc72e76bc6f3ab2c0477" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="40edbb5523dda312cf8ca7c652c15afd86a7c6b4" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="23af3a5cfb5a4efbdecc9aa670f0606ae443f169" translate="yes" xml:space="preserve">
          <source>def startsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def startsWith [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.startsWith.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ac8a964957c41edf219b6dd824125c2edc19708" translate="yes" xml:space="preserve">
          <source>def stderr: &lt;span name=&quot;java.io.PrintStream&quot;&gt;PrintStream&lt;/span&gt;</source>
          <target state="translated">def stderr: &lt;span name=&quot;java.io.PrintStream&quot;&gt;PrintStream&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="898dd75f7e67bb4e74c74e216c8d3841674c2650" translate="yes" xml:space="preserve">
          <source>def stdin: &lt;a href=&quot;bufferedsource&quot; id=&quot;scala.io.BufferedSource&quot; name=&quot;scala.io.BufferedSource&quot;&gt;BufferedSource&lt;/a&gt;</source>
          <target state="translated">def stdin: &lt;a href=&quot;bufferedsource&quot; id=&quot;scala.io.BufferedSource&quot; name=&quot;scala.io.BufferedSource&quot;&gt;BufferedSource&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6dce4a25c1f1e9bde5561fdbbfddef4c03a48ff2" translate="yes" xml:space="preserve">
          <source>def stdin: &lt;span name=&quot;java.io.InputStream&quot;&gt;InputStream&lt;/span&gt;</source>
          <target state="translated">def stdin: &lt;span name=&quot;java.io.InputStream&quot;&gt;InputStream&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4daacfadcf53dc170c1d832949ea26c3a683f2e6" translate="yes" xml:space="preserve">
          <source>def stdout: &lt;span name=&quot;java.io.PrintStream&quot;&gt;PrintStream&lt;/span&gt;</source>
          <target state="translated">def stdout: &lt;span name=&quot;java.io.PrintStream&quot;&gt;PrintStream&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="831f9fb16961847835347196ecd239ef54780265" translate="yes" xml:space="preserve">
          <source>def stepper: &lt;a href=&quot;intstepper&quot; id=&quot;scala.collection.IntStepper&quot; name=&quot;scala.collection.IntStepper&quot;&gt;IntStepper&lt;/a&gt; with &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper: &lt;a href=&quot;intstepper&quot; id=&quot;scala.collection.IntStepper&quot; name=&quot;scala.collection.IntStepper&quot;&gt;IntStepper&lt;/a&gt; con &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a22f9b3c17734a64e42484ae805f5324353a718" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../../collection/stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../../collection/steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../../collection/stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../../collection/steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;String&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cab1eabc28e377151d7eea3ac73dba778c67df53" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../collection/stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../collection/steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../collection/stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../collection/steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;String&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;String&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9dd4b84cb1f9af49e7a6dd34194841b9b37bf183" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../collection/stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../collection/steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../collection/stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../collection/steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;Char&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7a834256f7e384dec331edcfb859f19ab18f30b3" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../collection/stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../collection/steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../collection/stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../collection/steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;String&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7cf309664dffb2933bcb43713813a3ec260da89d" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;Long&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fd345d6dd7b2115fa4d24138295b72ea6beca100" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0a60384012fdd61a1a3111c8dd7f71b5d0a1a0e2" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1ff14152d0617c88766d11c6cd8695141a02d669" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f75d4165cbbe0077ea129946caaceadfcf4887e2" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="887af018ee5c65c857b01eccd14847e5a921bcb9" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a12eaf0976b2f429b424662f0951ec90add1b0c6" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.immutable.HashMap.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.HashMap.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.immutable.HashMap.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.HashMap.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.HashMap.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6f3f6152fc5d064ebb59db90176515129979d17" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4648218938d3d0fbaf682f11abfdd88d21d73c0e" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ac77302350bba7c41fceac1ba8c8d8ef3d9336d7" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ceb012aec1603f2e32db6638eea4f681b21d7e5e" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ca7ba9baad0f005094ef20718408825f8839f8c5" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f15fff49df98db71b4d54140242fc4694ac15507" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0f65987c9aec123d17e530cd5e8568facd608056" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c77a63944683fa3a643def88775c9c5c9b1461fa" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6a505b4e37417df6692a47fec25bb478c5f7fda4" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d239c54e0d26c5d600135039bebd228047ed9c8e" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="de63c02f6d164d570eb95929745216b55eb04de5" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="11b072d9bda0157f39d9c91d6196ea4f188c89ff" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="602c8596297ae8c1063754cf87eafb2d565f703c" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a23651e3532a5124043130bfb4d16fc66fa9e614" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8ef94fb9a20718859ba2254b9526fbd8457cecfc" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.immutable.TreeMap.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.TreeMap.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.immutable.TreeMap.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.TreeMap.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.TreeMap.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8acc17e42c59adcb2d41aebce4878045c8794f85" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8fba688852aac1140d592dcd73ebb4a0fb044646" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.immutable.VectorMap.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.VectorMap.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.immutable.VectorMap.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.VectorMap.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.VectorMap.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="052e57c26d19931062815eb1cda3defc3632de70" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c4f488741804ee9910e6360b74462d4997bce60d" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="086a981be0082b6a2ebae4a0b7a80bbeb267fb47" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="56062cbd5c17804735a8e221d38f458e9b5da562" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.mutable.HashMap.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.HashMap.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.mutable.HashMap.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.HashMap.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.HashMap.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="87dcc94517bedc18b4af56aa52682121cb7b3224" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a7176895cebfb5c1c4d4e2ed3eccf663a8a21ae3" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6463e1bebbf5ca2db5f0c2e07e76e977c2c8890c" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1cbe703d69ce0588fac0829e5312ef6a84a393af" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="214f6fc3dcb88d21654d903bef8255a4b94e5daa" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d772ecfcccc7ce1b3383caacd4a6edec398d4a8d" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;&lt;/span&gt;&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;Set&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="67ac349b53fa9e7f7fe4f40686230713cb2bf866" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;clave&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;valor&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3afdf64cd389ae63d4b09e65920b375b021ca232" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="43ab462f1d99804268011d9a595442f0ebdb3c16" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="977ae175d65353ef78afdbffe9a6884f8dd176b5" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fdb7efff54539e33ed65c3f1f3ea078774302c12" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="99b26fb226a01431be640ecf77104a451a5bffd5" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.mutable.TreeMap.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.TreeMap.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.mutable.TreeMap.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.TreeMap.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.TreeMap.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a479d735664e577200a98db3347aa4e70107f3af" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b06bb51c1b6b5973ea099408d9a4c57a2c15c383" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;, &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;Boolean&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a8ef0c7fa16f1f5c0e60591f42f816bc7ef3e39b" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;Boolean&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="870443f3dcfa5151ff2da7cffa3cf8f8bd637c27" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;, &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;Byte&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6539fbfd1ce5e94978279900941d124f2e7fb94b" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;Byte&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ac74e2d469ce58b067b6ab3173368bb8f88c7f6f" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;Char&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="71fbb0760198ab261e35cd2c60b202bd9b53b202" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;Char&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d01f1d0ce087c4392c2c0c736b855aff4f61e9d5" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;span name=&quot;scala.collection.immutable.WrappedString.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.WrappedString.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.WrappedString.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;Char&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.WrappedString.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.WrappedString.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2d9252f71105194231cd86b91fbaf752a0a7c94e" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;Char&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="716292d08478990f74782b38aa92d38c42528480" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;Double&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="275ba2946fdb23fbf91008b63e695a4dcc78b669" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;Double&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3912eefebc4e20705a5dcbed0c31ffcbd68a0555" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;, &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;Float&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a3a9a1fa68c94dec64f317de6bc16f41125c841c" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;Float&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e3a4a6b9cc3b878946155ffe584c0918db06c661" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.BitSetOps.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.BitSetOps.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.BitSetOps.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;Int&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.BitSetOps.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.BitSetOps.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6304d9152e563312fa8bff5d621ad040f5ba2b0d" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;Int&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8ce8102fa2df629091d3610d642574a69552a937" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;Int&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="197933b8d3e60b931384d31a2587c340f32caac9" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;Long&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a9a4584d84fe5996f29450f96fbbca241978e4c" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;Long&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0dbcc81159eebb54e47696c606e456a6fceb7847" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;Nothing&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5b4f31074eefd25514f97e3d258a9a2c9e6eb4c1" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;, &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;Short&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="00e7112f43f9c29dda4ecb5ff799af19d3bf8e6a" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;Short&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c1fa616579038cba80ded780af4ad667c84abd2" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;, &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;Unit&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3dd68d2f29a37c23eabf7a2ee2180acc03f4a5cb" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;Unit&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="46f2ef56eededad5a8244f576611bbab50718eaf" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="46400d7d3b6f38283719b9b46ef7dd422769e683" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3ffe8f3dde29f46d3a243ac79f24f933dd13098b" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8675d76574c25478a257edf101bbc104c85f3b02" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="833bcffab3ec2768d226bc7d323777bf2d1adb65" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ee37c27ec8ed2219f25c5109704406f37fbca03" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashSet.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.HashSet.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.immutable.HashSet.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.HashSet.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.HashSet.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c473fb1197b26a01f0465dc9a5d533d87d0ef73c" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ccd7c1ecda37fa473143ae8a0d34f3307312e122" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="234596a579c98cf53526eb2d1c85798ee6743cc4" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4fbf5114b9f9410ca2c22c90f2409121e5d3dc9e" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b651686ddf8419de419c858976348f5d86e804d8" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9e1e8a553a5e58b3b6490e19fc67066bbeb4b164" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e966ef8379218806f356e48d04b8ba6149e4e2eb" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6237e8e1038ac4f4fbfda12d2372e286b313ac83" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="81bd908eb37fd09a5adae24c4033aac95e2080ae" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a73b0a055c65bb5566639381c310f01972316884" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.NumericRange.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.NumericRange.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.immutable.NumericRange.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.NumericRange.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.NumericRange.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d7e8e2c984eff8efe9f75cf5ed100ca9f0a7fcb7" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.NumericRange.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.NumericRange.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.immutable.NumericRange.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.NumericRange.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.NumericRange.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ef5eefc64973f1999bccb159da672e784d4abbc" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.NumericRange.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.NumericRange.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.immutable.NumericRange.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.NumericRange.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.NumericRange.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="054e96b0049cba9582da59b4239092f832da6d5b" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="948088bef28c31c478ccab9cd3aeb7f85557511b" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="353ea33f8998885f8b61ebc6fe022832ecf0cc4f" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7db407c8aa1241132649018f1b2185ebd3daa6b1" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a34d875ba58a17ecae8449eacf7dc784ca5a14af" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5bf97fcce119082ad3d3a4e47890fa47b12a1862" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1a4890544ef6637d1dca60460496fc543097556a" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="160866f51be88bbe171b8eb757bd307c09e88471" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="49b5f603da4514d5942e33b84b97572b2b6fea75" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="795b50fcb8b7199a782bdad7941b91eeed152957" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="876b291449f676141669d14ea14a8870224b2313" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="931aff8408b1d54833020b0d58dd7321a1f05a57" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8f78ecf19be3182f41ecc5fab229b8172b856ef7" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a23cf6a972fbb4a39b0bbeb496f729f114d4cf45" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="34e43f032c8ebc8d35d2cef82e4e1a4f57cf18ff" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6190e68b4bf427188414869630d98cc16723deda" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="990796fccfe7d10bcb7cbd5c5c46f8d005c23c9c" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="909a25864b2a5e8de0fed427f430e49ad33e1044" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSet.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.TreeSet.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.immutable.TreeSet.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.TreeSet.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.TreeSet.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0a54d867ce6356a1e9b08667781c3bbafee0bd23" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Vector.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Vector.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.immutable.Vector.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.Vector.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Vector.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b02171311085507f36528f801bbc5d037452b9d6" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="399146d611cec5758e4afa40da91275dc0725c46" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="32e3706a5cf5d7ad0f35657128b8a1ea6a7d33a8" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6f95ab97c737dbeb1d4d9c9b5349ea0db295a00d" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dec7de0b0da25c39a3d690ab45db4fbded4a1816" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4394f371f5616add79abf08d9e1d70cb4cace5f5" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="16d19bfffe1abcfbc8718b858937282f137a50ad" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="30eb584533d4d6316d4b99eaad838547767854a3" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArrayDeque.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayDeque.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.mutable.ArrayDeque.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.ArrayDeque.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArrayDeque.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf06efcb7fe70f2411a42c7526acde710389e41f" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="eb6e0e9e3e0eb14df1987ea1c68591aebe306e08" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="121d8c73f1a48db39085747f2c310c5c73e58b43" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArraySeq.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="48d22f27b5386420a75b290b076ed21a23ec31c6" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2235c4aabc8ec1593821e945fc26bd52a9c8c49c" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashSet.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.HashSet.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.mutable.HashSet.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.HashSet.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.HashSet.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e64c35c957cd8f60f9c5d6a032dfd6a275dff3d7" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ef06f5b64e99a86be0ceedb7fd93065ad2849401" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="10732163f4763e81cb1af8138addfa7921c614b5" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="81e9cf338847511158eb30396d58bc9b8cbe0f7e" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fb12a7fdf849857a03d072d434e138fc5f2e2ee5" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="444e2247129e107935a273f981b58a63173597cf" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="773d38ffa7af2c23d76ab301709a59774dba2cbc" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f0b5f616dc1bc508575ebe1b455525458fe73111" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a405a800c282008209a02b2e4ef264abbe415615" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArrayDeque.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayDeque.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.mutable.ArrayDeque.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.ArrayDeque.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArrayDeque.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="685d2bb07982b8e65b605cf466f3af051691b735" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b9e2512e63b994ef68455be16ae0831713a62c36" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fbb5575989fe256a2cbb6293c1e1fe71833e75b4" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6f6ae73751564b0b9e4bf9d9494e022c56f49316" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3ce46741ea38e4946d820614e08c9ee95790ca61" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="00cd28cf057913acc659ef7298d81e2a91901437" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="891fd5fbb992b34f59dd5497927ced07a559e8e5" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArrayDeque.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayDeque.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.mutable.ArrayDeque.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.ArrayDeque.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArrayDeque.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f8990a1577cc9c037b1ef97c0c6f3c211739c1aa" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeSet.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.TreeSet.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.mutable.TreeSet.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.TreeSet.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.TreeSet.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b80512fa7c23ae48b0b6c82667040862b6fa5945" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="437f4bd78a084f2962e2995feed7440adaf65856" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;collection/stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;collection/steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;collection/stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;collection/steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;Value&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2b1d6c3482fc05aa0dace66d970d1b04c1a19479" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;collection/stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;collection/steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;collection/stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;collection/steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;Nothing&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="76598215a88871ed99000476a0d833f8e1482ffb" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;collection/stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;collection/steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.ArrayOps.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ArrayOps.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;collection/stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;collection/stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;collection/steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.Array.T&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.ArrayOps.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.ArrayOps.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ArrayOps.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;collection/stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be854c76121094bfea60777b720fcdc0bcc53217" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;collection/stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;collection/steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;collection/stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;collection/stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;collection/steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.Array.T&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;collection/stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e4bd9e167bd23592c9382d3e4f434030146498fb" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;collection/stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;collection/steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;collection/stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;collection/steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.Option.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e9cbc624ef3ccee14310cc7c5949c8f756034ace" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;collection/stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;collection/steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;collection/stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;collection/steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.Some.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bc3872c1881c1f364059bf460e3562a46176753f" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="290172f82844d79a322b353d584d6185251e4d84" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2f31b0c513dd9885b632e11f3ca9c52d071aa7ba" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="578fa49b2deeda53d44c295ec612aefe25219431" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9901ee99840b60a6725070c5f1bfa208e2e5e082" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b599e70a472cdd30b6574e068d4df3b0e0231371" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="328fc965eb7e5ce547b03890bd7e684c07994e61" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.Map.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.Map.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3719f693dc9f605f9c71cecef0ec751460c38843" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4e00d2d16d079d658962129200ca9debfe4dc820" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="08d1796e127b961634ac1164f32114390c752e11" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="48cb415b0d0a0c12b8f6291686c7f39c7a2f7adf" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6949059a00c5f03d98087c37da705640fd8f4479" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e04905f2cd1a509c1594909cccdc64c69f113386" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.MapView.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="500f52ab44d7a6c96b25429b5c09c1d6afb5ada3" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5c5b52169b9b8b69ad5aefef0bc85a909d4ee386" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="986d7b6c683e58725ecb98efd43a1094e3110d77" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="38a00f504e25e04ea5f387257b57c466323ce380" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8f8888792bb9962b1172b1bd7939fbf7b3f8f704" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e559ce5a46818395ed27c778f605a9632bf6cb3b" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6b7d48d436011535b171056b9ab7f26453615bcf" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4d22932255855189704c3d791ef5a407e837af13" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6fd8d8ecd26b33c10f808dfa5e6296738b61b71c" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="36b8ba099316007057c88c3e65dc250cf7eadf97" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="03596d4496c094419c85b290416a8f2222c0c895" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;), &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;&lt;/span&gt;&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [( &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;Int&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ), &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3a028371e84d520e66d5ed8927d2152234c0fe98" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;Char&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="256912ebc6ee888b4ff4a112ac3f78b802035478" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.BitSetOps.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.BitSetOps.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.BitSetOps.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;Int&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.BitSetOps.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.BitSetOps.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="23d438d221a016cb79b4fabc253c980dbd14c402" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;Nothing&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="61755b3a773e6de572ab4e86632569d96383caf1" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;], &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;inmutable.Seq&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ], &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1afd42e051458487f3d02c8b9be0dc3bb587d73f" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0645acc5e1e4412970ee74075b06bf1364858e58" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e59f93cd5a231d2517ac6988976e01a0ed15a0a7" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7b69cced1cdf6c03398da40411ee32cac70f0988" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="39f6026a3902457d0950503ae0afc8bef85cb61b" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d3561aa322755fcac15934c08c32a165446f9a6f" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9f421afdf35ff93b60b5ebcfb691b25a868daa53" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5a05f665cd0d202d8fe53d6bc83a19ff537d43cf" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.ArrayOps.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ArrayOps.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.ArrayOps.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.ArrayOps.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ArrayOps.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="33003a45c715ef7681c5c95a42535ce30fd25559" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a591c9a13f18af051618c197f3449ffaa27bc134" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="969fca698e6ec87902bf797094a9acaaeaafdfb3" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eca0350162a3793e181e93e64ccf5712a1830e1a" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3b188631c8fc098cd2c3372809d34d0290e1a02c" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="54024288bbff51707d1849dc166a5fefce894217" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1694101481f62d39b69f7c21229204c90313fe0b" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea4aa8a6a461778d20c81b613c9fbb873bcb7a23" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="593784933a196f38e18ad3d8d847bd2237caf70a" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="24edcd9a8fb99ac7af1953c6fbf53e5844babb2f" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cc3801e901251fd5b34e839b5ceb30443329c38d" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9d245e03dc41cc51fc4f75c70b4159b7fa632d88" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="23cdb00dad95d86e0be586d8b645d1ebf39dd3c9" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4b29902336d71e26c81c7d58c2b95632dabdd031" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1923c0435088d92b49d969fdd6d02d13232175ec" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e98879c791e325db2e1ffde5cafa8dcfdc47fa91" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.stepper.S&quot;&gt;S&lt;/span&gt; con &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="af7763c093bc229a69b0cda7410c1c362d9e8fd6" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="220cc1badf88529e8f0d408fe24113eab84e341b" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d78a9283674c7d7e9d01f1370ae1bfad0bb4a6a0" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnce.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOnce.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bb8bdcee24e6146528357f3474576fd4a9e1a08c" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="593385e9a7bf5b6b091cc62a14d9175044cc0415" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c5553ca7fbe5f750ff40f273a70e9f35d3cfaca7" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0500506aa830197f1a7372404cfb265221f07f48" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="363d30c6991da6a853777046d70840d1673a64e9" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="792d3382ee1bf50f85d2364440bca67934e1b821" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="24f6793304a64c6eb178c67296cfccf6a4d0d057" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c88930c0525c766848a783cefb2ade88660a0d86" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0b121b129ba41284eef190374d1607bfdf78f63f" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="eb2d11e5ae1b5c9c6bcc7399f1a5b1ad941c965c" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4c12f2231bd06648fe7de1a35361151189ae710b" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1b8e9208a690d34ed47f0cfc13adb46dcf0bae7f" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2a61d20b8a5cdb76cb7ba7151304b9830b8a1ab1" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b27f501f16f37b4566a001cb020a89ebe212a694" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="16f0bab224580af237b9f726a68126d8c241c3cf" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="57d4ad2c4589426be0078a442966bd0e821ddc3a" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5787792605acae91ae194e5baa33a75a1aa8a0ce" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0fff6b826a0af7e77476aeef58feb2b6ca6b8f19" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="08e55283fc6af3ca9bc9a72216cb088d4dfd63a3" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="112e24fa591ed7659b7743ba72795891d216d5e2" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.Set.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="731f42422059647040c776615ad42c583bbe3415" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="099ad5dae3c51236709cebb34b9d7a7c059495b5" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5082dc141a40a1699083cf53288526f0b68fcf69" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b0dc4f523eb25cae91f758a118888b18b9b3d8be" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a0e29a0dccef8ce8a257f10c6e942f95d8d8bb27" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0b2a1e03e04dd6784d1c7f1f990cbd84550604f6" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="16de99828c0e578d04623adec01a35740a80958e" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b885ba3d1c6858a8ac05cfdf027b513a054b03cb" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="117c1132efbde20d10c2950bc5429ca6dd9d91fe" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="79900020984099b1fcc20d2e29ef9dd3d2c9fad5" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.View.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2bbe02a0d917a2f6df4f8be4d5114e3e2b72a9e4" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="32ccba93bae0e9bd75b8efa152f200d511d37fe5" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c49733bebdfb1b133618f12477489de5ea2d55b4" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="81a983b26f77b64c34b924dca15ff8bf7e0c624f" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c130d054b87108c15ed3f8cc028cd5175b82c11a" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="640a71278711109c098b0fd52926411ac6f13dbf" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c4319908de3307c525e85a5e9cf096d92f05df46" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="64dda003849ddb96e47cc7982f8b8168ff58888a" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="97738d0116c3279fc76933bdd108d707ccff2a30" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ed022c88d700c2bfa779660d1123c76b8c74dff2" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6959a9c7c0d170a1b1cf0814ccd0652e9001aa0a" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e89035328d2a5c20bfd9672a5e5f30818e514b9f" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a91fd9b0899c22205233f16093e47b5484b6eb64" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e2a4dab2333fd5fe07a7dc466731f5fd2b1693b8" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1edfb7d14e3d9348acacb29316ebc5f45e4fb6fb" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f1c7a45f45fae733b442ed5669741c7d480a9347" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="74a76b30608643c43252263e167c20135c75ded8" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="184512415dddb802b431fcb181de7d5f078ada20" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6475cd9da40b5b6558643a53468ead9ebcd88aa4" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5f3599ca6829be46c165873b694403fb054cd021" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a6abd7eb0a4be04e94079e766269908fccbe989c" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b0019f49839f811626df20bd57aad046268d4692" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e7e016a756c01bfd31aa8991e892578b57dc52f6" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c8026f8ea0067d6e01a4fac998aebef8553fd7cf" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f1f78534574dc5143945ba723aa9fe9f4613454a" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c313cb6f7bf75a8bbcf9f69e3858c52db6f145c5" translate="yes" xml:space="preserve">
          <source>def stepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[A @scala.annotation.unchecked.uncheckedVariance, &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def stepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] ( &lt;span name=&quot;shape&quot;&gt;forma&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cita &lt;span name=&quot;shape&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;StepperShape&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; [A @ scala.annotation.unchecked.uncheckedVariance, &lt;/span&gt;&lt;span name=&quot;shape&quot;&gt;&lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;shape&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnce.stepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e987cfe567a5b9938fdce0cfeba0c8246b58d092" translate="yes" xml:space="preserve">
          <source>def string: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">def string: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="83ebe302db61731410e4e953549b08b2552374bc" translate="yes" xml:space="preserve">
          <source>def stringHash(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def stringHash ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8dd08650270bdd51bddf053737c9e552b7bd107b" translate="yes" xml:space="preserve">
          <source>def stringHashing: &lt;a href=&quot;hashing&quot; id=&quot;scala.util.hashing.Hashing&quot; name=&quot;scala.util.hashing.Hashing&quot;&gt;Hashing&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="translated">def stringHashing: &lt;a href=&quot;hashing&quot; id=&quot;scala.util.hashing.Hashing&quot; name=&quot;scala.util.hashing.Hashing&quot;&gt;Hash&lt;/a&gt; [ &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="646dae38fcd85f097419fc7f9be99fdc0cd9c744" translate="yes" xml:space="preserve">
          <source>def stringPrefix: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">def stringPrefix: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d369340f0b64af38cda375bd7aacb65e8856850d" translate="yes" xml:space="preserve">
          <source>def stringPrefix: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">def stringPrefix: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="59969f53150c910f5e3cc1b77bba588a034cdcf4" translate="yes" xml:space="preserve">
          <source>def stringPrefix: &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">def stringPrefix: &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec50c7f44ca5abbbb1523db2246189c3bc3e72fa" translate="yes" xml:space="preserve">
          <source>def stringPrefix: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</source>
          <target state="translated">def stringPrefix: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="536c8260309e72c260ff2c5610df316538dd77d1" translate="yes" xml:space="preserve">
          <source>def stripLineEnd: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">def stripLineEnd: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e3f178f333aba34c4fb76a125ef4ee737a134638" translate="yes" xml:space="preserve">
          <source>def stripMargin(&lt;span name=&quot;marginChar&quot;&gt;marginChar: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">def stripMargin ( &lt;span name=&quot;marginChar&quot;&gt;marginChar: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aebe4b58651d146197f30075a3bf5fbd064e994c" translate="yes" xml:space="preserve">
          <source>def stripMargin: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">def stripMargin: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fd3e4d15bcf944e2747282120a57421bf1058aee" translate="yes" xml:space="preserve">
          <source>def stripPrefix(&lt;span name=&quot;prefix&quot;&gt;prefix: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</source>
          <target state="translated">def stripPrefix ( &lt;span name=&quot;prefix&quot;&gt;prefijo: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;java.lang.String&quot;&gt;Cadena&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2280440fa6bb9e62d09185d4146893ad7d6a4c54" translate="yes" xml:space="preserve">
          <source>def stripSuffix(&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</source>
          <target state="translated">def stripSuffix ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cc19e03227ca42d8efa7b9bad61e1370befc7fb9" translate="yes" xml:space="preserve">
          <source>def subSequence(&lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;java.lang.CharSequence&quot;&gt;CharSequence&lt;/span&gt;</source>
          <target state="translated">def subSequence ( &lt;span name=&quot;start&quot;&gt;inicio: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;end&quot;&gt;final: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;java.lang.CharSequence&quot;&gt;CharSequence&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b2e5d063a5df426fd1673351bb7a6287ef26fabb" translate="yes" xml:space="preserve">
          <source>def subSequence(&lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;java.lang.CharSequence&quot;&gt;CharSequence&lt;/span&gt;</source>
          <target state="translated">def subSequence ( &lt;span name=&quot;start&quot;&gt;inicio: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;end&quot;&gt;final: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;java.lang.CharSequence&quot;&gt;CharSequence&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="489d7b9bba8d4f76eac226c60cb11459ba78c961" translate="yes" xml:space="preserve">
          <source>def subSequence(&lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;java.lang.CharSequence&quot;&gt;CharSequence&lt;/span&gt;</source>
          <target state="translated">def subSequence ( &lt;span name=&quot;start&quot;&gt;inicio: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;end&quot;&gt;final: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;java.lang.CharSequence&quot;&gt;CharSequence&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b0d1f26cbfa4b7238c926701eac0b39f5ce86c0b" translate="yes" xml:space="preserve">
          <source>def subgroups: &lt;a href=&quot;../../index#List%5B+A%5D=List%5BA%5D&quot; id=&quot;scala.List&quot; name=&quot;scala.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="translated">def subgrupos: &lt;a href=&quot;../../index#List%5B+A%5D=List%5BA%5D&quot; id=&quot;scala.List&quot; name=&quot;scala.List&quot;&gt;Lista&lt;/a&gt; [ &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="384dbf91f456f34186055b1a4cf703da1a200942" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9bebe6d24f77cd33407c99ab91c18f27c3b8a47c" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7bd24d23f81665338d8690efd651ca051b022acf" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99f73021163f8ec7d56384b75addc4703b0fc866" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0237ee484170e258c86ac5f0b2bde0d8e15b1590" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d299655a5b997c6788e1ab13fd866d361ef9a4cd" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="00a4d1752e17e99a6fafd536411b3591f1529dde" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ebcf1d435678fbf0784c0b581c9cd60bcc4bd327" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ae359caea6708cb5ae8ba369e1f1ee610ba5a3cc" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d72849db144ed7738ac4e0463e35dda981dceabd" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c392ef9a62610d0490b96ae2a32a674e1a8cc0cc" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="39e5aed448091ee14bdeaf428ba40064a0642b6a" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d59d3e3160c66abaf65a43a70245e7a31342b59" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5ee63491435d24da487794fc731b2b0ccf7a3c54" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1a47becdfdeb109f863540dde179e68d5057c506" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0295a6d592722c626b71effa8aebbec598269782" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3a62ae029a200a57f78814ae78a1d74fdfeae310" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c4db13cc6743a8a006aece42493c8435d7d1c021" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f9d2f3ac95352f630da66816311b75e94bc2643a" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1da35684d5672c5ad2ca43da22b5aa5829a40b6c" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0da5cba4423b83363d1709f0841d4f2378d889ab" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a30e0a0a5698a11464870a54b237f36e44ab196b" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e20b3f735a7d63442532414b129e7b0c644a1661" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="12501b875c0aaf85b524e43968e8c69a33f66a20" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a97bae13bc595d21a848e8ca52cd202d7abf379d" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ae8df2da8c4990c0ea0b13baf55e4fda106d7dba" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9d3e4ed97bc3bd8a4cec30a27da8c2be5ee16a56" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt; ]&lt;/span&gt; ): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="42541f9b0b69a72f40c598ffeb1a3b7dfabb5c5c" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="683defbb98970bfb2e0afa174c6a5c9e10a875eb" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="463d9a8e985c3edb355f962f040ace5756498006" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="acd57de34bae7b8cce1a1f581e5cc2b107eb4b45" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="41895b134e0b3ee5dc3c1eb6c69a0798439ac422" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7effc920a1c05c674a4cc4c339902cb3ec0ae328" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2a8fda6a186796b4b3f99a8def4ce42ff7869172" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ef76ea37722ff5366f2882b6657bb7fb43d7832" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="808e2f76de5e50a6c988540026820b6c693bf733" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8ce1fb8a6a61d86c27189011342ee8ffe1813c7d" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e3e190fb736fca4311228ff21ecbd1d0d348e55f" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[A @scala.annotation.unchecked.uncheckedVariance]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [A @ scala.annotation.unchecked.uncheckedVariance]&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1076f90f2cc6c66d98bfb095a7e3df0f99ceecdb" translate="yes" xml:space="preserve">
          <source>def subsetOf(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def subsetOf ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="81c29b33e271030c11153fe79467f1a56948f2b8" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;colecci&amp;oacute;n.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="961e3ab5c54fe9ed41bf3bd0a9e425be7e26cf66" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="d344f92c32cc6262096f2dd84e0be7bdddee7332" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="b9299c907c008751f22adfac65da558ed967af04" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="e3acd74273589d354ad7d9fca23ca2683f8da7c0" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="4b2451c7e04dea9f8782316a2cb93d2da577ffd6" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="783af15682a228e30f1b72d2044a5012972bd59f" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="0d281dabb4c7b7b5e472eea2c6a354b5eac61a84" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="5e079318f15ef4aff1df6f40e039317c808219e1" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="4eb79abdfc0ff26a2865d929a2a0356f7888c888" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="c10b74b92adcfb95fbc9a6285f200b0dc3c30a93" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="aaa2bb96c1ce1401755642eeccbaeeb252a7a511" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="c5e9ae65fb8c12e105ee775d7b2e8e8181eef187" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="dfe1d0d35cec74e1ae512dff19ee3a26217bbf8c" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="4d8f9be3877ccfdad462d2d2f6c80e7b72f2dc9c" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="ca9130593b30fb44af419e28d3d60238178462cc" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="1aea1a991d76c52d233050b50a9fa8ff07fcc966" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="b9c663e642141a0c21817d7b9ae433c04b88cca4" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="d80f9966645d89c90410df8d4222e29a0b601439" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="a1da74c442e31eae1e57fb4888b4c3478e031b52" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="6c9c407ff3b49c50565fb5b99e33c9eeefdd3f75" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="ff95d0a9fa4b81cbbadb5827a147369768796b8f" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a1108be2855184935c5df1c8a0aa1ae86437aec4" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="676134a568067ec06abd96cd8a5f5b5804bca712" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f2c3be510454f25c40d4e24c8083e1719ef06262" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d8a68799d3e855de7f40bade3e1a23a431285a36" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="49be12434ad35bb43d86305fcca44290b872e001" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="21672ffd2b18e600fd9b0a29e6681f09cc19f03e" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;]</source>
          <target state="translated">def subsets (): &lt;a href=&quot;collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="47d6b2812fe498a5bb668362461fcf059f95f268" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="23151633ecf6eee7eed546ce458f156506780d2f" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="fb0e5440c66df841cdfd9a0c9a40364ea2e38157" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="8a4c3b0cdb5dcb7be19074d0fda1771cea829b6e" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="870a2633d15a5f07b715e4468364f2f6427cdba0" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="4a0e9d69b1df69051e3630d557c7d1257e136789" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="2f61551a317454bfe299339e98f91b4bdf355270" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="eba350389c7178388814b98c61ddd0b573b099a6" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d159d48b178f45b1b48088fa0498ac0f9b38e94c" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[A @scala.annotation.unchecked.uncheckedVariance]]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [A @ scala.annotation.unchecked.uncheckedVariance]]</target>
        </trans-unit>
        <trans-unit id="5d47c10f0d3f20f49a87b578553199c3101380aa" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6803cd58695b92b2f589083ba7e6f497703a54f4" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="969b5cd29bac48dafd0ad0912da95ddbe17059f6" translate="yes" xml:space="preserve">
          <source>def subsets(): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def subconjuntos (): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="09e082057330c54e390b3e53f99eb95854d657d9" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;colecci&amp;oacute;n.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="08e823ab52660f05b1a4720ec690d68e1b3c4d4e" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="5f3ce1ee60015002df68f4faa22a0dc0859541e3" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="0f219501c8d63d2e1df4f905958c7efeeb422228" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="c0d54ed7156f499d0e847ec1838c489a8f8307a8" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="9018c4a2d4d2f900fcec6910dd0ebd84268e8950" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="5fca5b56f144e7fd7f0367714b7363813e6c3eff" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="382f572a58155199c5063566438cd04e5b55a790" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="7a76dd4605410c043f9d3a7de2bcab7184fcef42" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="d7779ccc8cf742c91c9dd0e69e7b05c17508494b" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="d1ff9cd302886588de7f39c095e513a0fd67ba9b" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="953e0d119b6a3a610b55f1e12bee79bd17fad3c0" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="a87d34bd145a40306a7bf12809ed3d2111795d77" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="53eee48b0e6b4c396a82b6d9bd48d164ce613fd1" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="f73f17b24f03e43677397105f9cefc9ab1dffcd0" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="3bc6908ed231f56119eee9c06e7124d86be707ab" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="72ffc13f561657c8637c77f10fe7a68919cf171d" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="750e4080c5ba9d909f6954b5432937ef2b3011eb" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="26c3248aba28f08599a011c616326dbca2f843c1" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="da6040120d3104342f6ea74c9f23871975d2e340" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="676b8813091bad77630a17a04389541f1a176b90" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="8f3cc799d7b82400ab7470840952ff621b57bb6d" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="92464bb9ae5b3fba6498c6eb62c351864d332931" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ace8245a7f63e5c7542ad35be5920b4ac4ac00a7" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="20e9bda845339e2aa8d11ddf4a0b463c456146a6" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fb93ac363220ac20c2d84f9cfe263d1a6d2f666c" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e40807cf79af0b86c555831a56d48e250973488b" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6acebccc0d4cce76e941d5910504a31dfcdee603" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="c41afc0cf7db9529e1f21903050808e0e6e9bebe" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="1e0aa667339dc6030ab9e3d88af0d12b1e37bbf1" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="fac6982ff6d6855f17518de33120159a85918dd7" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Conjunto&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="8e4545bcd9db188fa4233f0ffa18c16ce087a91f" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="cc3f967ef3b0be3518c0d6b4382b4a52b7b0b165" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="36ed2861a7041a4dd806ac502532dd32be12910f" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dec5259027a4e517a44967f41187caf84aa3d0e6" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f12baf859a1b6407404d27e6e217267fda8a31af" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[A @scala.annotation.unchecked.uncheckedVariance]]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [A @ scala.annotation.unchecked.uncheckedVariance]]</target>
        </trans-unit>
        <trans-unit id="402d3aeffa6063aab3e1e6f3b4d6f34104494c52" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1af3f4caa4c8b89697dd92be863f30b6e167cefa" translate="yes" xml:space="preserve">
          <source>def subsets(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def subconjuntos ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
