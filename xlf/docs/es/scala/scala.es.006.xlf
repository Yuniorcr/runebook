<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="scala">
    <body>
      <group id="scala">
        <trans-unit id="1885737a28f4142ff6392725cb781a271e75d243" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofInt.equals()</source>
          <target state="translated">ArraySeq$.ofInt.equals()</target>
        </trans-unit>
        <trans-unit id="78c4c6555c757cfb379580db958e0f90622c8ca3" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofInt.hashCode()</source>
          <target state="translated">ArraySeq$.ofInt.hashCode()</target>
        </trans-unit>
        <trans-unit id="65d7f129f2c547140235a3e89141f6b8be8b8315" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofInt.length()</source>
          <target state="translated">ArraySeq$.ofInt.length()</target>
        </trans-unit>
        <trans-unit id="711b129f5a275e78906e136fdb604ab6278abe5c" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofInt.ofInt()</source>
          <target state="translated">ArraySeq$.ofInt.ofInt()</target>
        </trans-unit>
        <trans-unit id="dc1ecc6950b59831393b4cc4fb25328991217025" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofInt.sorted()</source>
          <target state="translated">ArraySeq$.ofInt.sorted()</target>
        </trans-unit>
        <trans-unit id="ddbed9d691f87c97cfb75927ccd11310a114fda9" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofInt.unsafeArray()</source>
          <target state="translated">ArraySeq$.ofInt.unsafeArray()</target>
        </trans-unit>
        <trans-unit id="d8d22d07d158d997019b5b609b996e3b1bf5a021" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofInt.update()</source>
          <target state="translated">ArraySeq$.ofInt.update()</target>
        </trans-unit>
        <trans-unit id="1d4402504004a764a90d3ee6e387d80a8af84161" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofLong</source>
          <target state="translated">ArraySeq$.ofLong</target>
        </trans-unit>
        <trans-unit id="d9d8aab520ac7cc0b6aa3fff07df6f77f057e6d7" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofLong()</source>
          <target state="translated">ArraySeq$.ofLong()</target>
        </trans-unit>
        <trans-unit id="7fd88e1213c39267b1e56ad05db538aab9929074" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofLong.apply()</source>
          <target state="translated">ArraySeq$.ofLong.apply()</target>
        </trans-unit>
        <trans-unit id="7f9bf836bd10a7fe8f45774d4a2d18c352cc7ca5" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofLong.array()</source>
          <target state="translated">ArraySeq$.ofLong.array()</target>
        </trans-unit>
        <trans-unit id="775166bdcee680593a2ad122ec3133b1ced99fc0" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofLong.elemTag()</source>
          <target state="translated">ArraySeq$.ofLong.elemTag()</target>
        </trans-unit>
        <trans-unit id="cb9b459133bde14b7eb4c80bd3c7bad27f6f9539" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofLong.equals()</source>
          <target state="translated">ArraySeq$.ofLong.equals()</target>
        </trans-unit>
        <trans-unit id="938ec8e80093a0faafb191293c26ab966e023b59" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofLong.hashCode()</source>
          <target state="translated">ArraySeq$.ofLong.hashCode()</target>
        </trans-unit>
        <trans-unit id="c7408506881db6c3bc9507d611a6a5a32b989cc4" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofLong.length()</source>
          <target state="translated">ArraySeq$.ofLong.length()</target>
        </trans-unit>
        <trans-unit id="3c2131062685af18fc6867a797449bf4b41b86d7" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofLong.ofLong()</source>
          <target state="translated">ArraySeq$.ofLong.ofLong()</target>
        </trans-unit>
        <trans-unit id="ad4e1d568e8aab567ce22dbabdb3bd72ed13a8ce" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofLong.sorted()</source>
          <target state="translated">ArraySeq$.ofLong.sorted()</target>
        </trans-unit>
        <trans-unit id="a2aa946c8803b002c43afe6183f7369e76809770" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofLong.unsafeArray()</source>
          <target state="translated">ArraySeq$.ofLong.unsafeArray()</target>
        </trans-unit>
        <trans-unit id="1ddb8ba6158558ea6c5f8732b153dc915394d419" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofLong.update()</source>
          <target state="translated">ArraySeq$.ofLong.update()</target>
        </trans-unit>
        <trans-unit id="964106242ac5dffa19ab5c7b5752518393868655" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofRef</source>
          <target state="translated">ArraySeq$.ofRef</target>
        </trans-unit>
        <trans-unit id="e92e51e4b7e76ae9dff6d11ba2ba07e408a1ddc4" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofRef()</source>
          <target state="translated">ArraySeq$.ofRef()</target>
        </trans-unit>
        <trans-unit id="63f0615acfaa7019e102cc1b286e52391040dc80" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofRef.apply()</source>
          <target state="translated">ArraySeq$.ofRef.apply()</target>
        </trans-unit>
        <trans-unit id="7cc8fe35b156c4a3c1c02ac0a01a28c975b21a37" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofRef.array()</source>
          <target state="translated">ArraySeq$.ofRef.array()</target>
        </trans-unit>
        <trans-unit id="bdaf57d98402d5cc9e3fdcb7891301c8b673cc9a" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofRef.elemTag()</source>
          <target state="translated">ArraySeq$.ofRef.elemTag()</target>
        </trans-unit>
        <trans-unit id="35bf0428701bf0fb767bccc8e334f8cc9e448726" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofRef.equals()</source>
          <target state="translated">ArraySeq$.ofRef.equals()</target>
        </trans-unit>
        <trans-unit id="61d9002e755a5c130c9c2f6f0b8a783b7607b9e0" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofRef.hashCode()</source>
          <target state="translated">ArraySeq$.ofRef.hashCode()</target>
        </trans-unit>
        <trans-unit id="0ebdfb13bf7a614eff2b91d6702d67605ba176c3" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofRef.length()</source>
          <target state="translated">ArraySeq$.ofRef.length()</target>
        </trans-unit>
        <trans-unit id="e793af26e58f19d077b96186d6350819cef782c8" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofRef.ofRef()</source>
          <target state="translated">ArraySeq$.ofRef.ofRef()</target>
        </trans-unit>
        <trans-unit id="023eab58a3234355d57cf187ea39563d7552f183" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofRef.sorted()</source>
          <target state="translated">ArraySeq$.ofRef.sorted()</target>
        </trans-unit>
        <trans-unit id="0daf74afa6c69680bb02f51259114e4f9c97f783" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofRef.unsafeArray()</source>
          <target state="translated">ArraySeq$.ofRef.unsafeArray()</target>
        </trans-unit>
        <trans-unit id="d38b4ae768434f3d5133b452fc31059c14dec19f" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofRef.update()</source>
          <target state="translated">ArraySeq$.ofRef.update()</target>
        </trans-unit>
        <trans-unit id="6448ee66c657bfd46ecad0bb778164178388fac8" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofShort</source>
          <target state="translated">ArraySeq$.ofShort</target>
        </trans-unit>
        <trans-unit id="514673030de0906780c67fb0610eccd7314ea9e7" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofShort()</source>
          <target state="translated">ArraySeq$.ofShort()</target>
        </trans-unit>
        <trans-unit id="f2b9925f9b6780d4391550b3d88035eab9a55ba7" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofShort.apply()</source>
          <target state="translated">ArraySeq$.ofShort.apply()</target>
        </trans-unit>
        <trans-unit id="155bb7b7bc21b6ea71e946fb3d646f81f553f749" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofShort.array()</source>
          <target state="translated">ArraySeq$.ofShort.array()</target>
        </trans-unit>
        <trans-unit id="7dbac11401c912658853a236877673cf2c993430" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofShort.elemTag()</source>
          <target state="translated">ArraySeq$.ofShort.elemTag()</target>
        </trans-unit>
        <trans-unit id="44a05376e8773084f7f9e6d9fe07d15b70424158" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofShort.equals()</source>
          <target state="translated">ArraySeq$.ofShort.equals()</target>
        </trans-unit>
        <trans-unit id="7bb6d2c713632b8bb2d7756bcf378784226184cf" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofShort.hashCode()</source>
          <target state="translated">ArraySeq$.ofShort.hashCode()</target>
        </trans-unit>
        <trans-unit id="9b16acc80a7e2f39bde36997d77e71fc5324c541" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofShort.length()</source>
          <target state="translated">ArraySeq$.ofShort.length()</target>
        </trans-unit>
        <trans-unit id="ebc079af40809a076eee2a37f3a3032f8ad2597e" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofShort.ofShort()</source>
          <target state="translated">ArraySeq$.ofShort.ofShort()</target>
        </trans-unit>
        <trans-unit id="edd4b91accdc15c22666d5eac557a6e2f23655df" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofShort.sorted()</source>
          <target state="translated">ArraySeq$.ofShort.sorted()</target>
        </trans-unit>
        <trans-unit id="8c51fc6358934f3b3a103c190a5ee01042622f05" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofShort.unsafeArray()</source>
          <target state="translated">ArraySeq$.ofShort.unsafeArray()</target>
        </trans-unit>
        <trans-unit id="0b919658a511940c4fbb4fceeaa1311d7ff240ed" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofShort.update()</source>
          <target state="translated">ArraySeq$.ofShort.update()</target>
        </trans-unit>
        <trans-unit id="8d7da778bdd246b157bdada564265bbb47195d9d" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofUnit</source>
          <target state="translated">ArraySeq$.ofUnit</target>
        </trans-unit>
        <trans-unit id="aae73bd312e7c416a026d7344c05d77422a3a4a1" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofUnit()</source>
          <target state="translated">ArraySeq$.ofUnit()</target>
        </trans-unit>
        <trans-unit id="c0a52ba6cc7191a38e11c42b221eb613a717c356" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofUnit.apply()</source>
          <target state="translated">ArraySeq$.ofUnit.apply()</target>
        </trans-unit>
        <trans-unit id="00801f9c2febd2e0e9c708840371cb1a715b7fbc" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofUnit.array()</source>
          <target state="translated">ArraySeq$.ofUnit.array()</target>
        </trans-unit>
        <trans-unit id="4daad254eeff609d8897066243365fc92f5bdbb2" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofUnit.elemTag()</source>
          <target state="translated">ArraySeq$.ofUnit.elemTag()</target>
        </trans-unit>
        <trans-unit id="edb607f9a209a693f2ec59cc1dc0fc3aca7a9a36" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofUnit.equals()</source>
          <target state="translated">ArraySeq$.ofUnit.equals()</target>
        </trans-unit>
        <trans-unit id="15d7430ecb0b987c8bae1798e9d77ab83e11443d" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofUnit.hashCode()</source>
          <target state="translated">ArraySeq$.ofUnit.hashCode()</target>
        </trans-unit>
        <trans-unit id="e5fa7051883ff8973a7e4f52b43b7968f29ec2b4" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofUnit.length()</source>
          <target state="translated">ArraySeq$.ofUnit.length()</target>
        </trans-unit>
        <trans-unit id="46069762c2ff1aba80bcc368856ec67bef4c94ab" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofUnit.ofUnit()</source>
          <target state="translated">ArraySeq$.ofUnit.ofUnit()</target>
        </trans-unit>
        <trans-unit id="ff0c4840fe8827eb0420444bf136b2ae60b096ec" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofUnit.unsafeArray()</source>
          <target state="translated">ArraySeq$.ofUnit.unsafeArray()</target>
        </trans-unit>
        <trans-unit id="bd07f4362d452cd8b43b0aff007f240b06ed50b3" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofUnit.update()</source>
          <target state="translated">ArraySeq$.ofUnit.update()</target>
        </trans-unit>
        <trans-unit id="bce45f65af8fe933aba6082a9368098df342c93e" translate="yes" xml:space="preserve">
          <source>ArraySeq$.tabulate()</source>
          <target state="translated">ArraySeq$.tabulate()</target>
        </trans-unit>
        <trans-unit id="4b0ed21db40eabc00b41bba6d73f24ac718d9a67" translate="yes" xml:space="preserve">
          <source>ArraySeq$.unsafeWrapArray()</source>
          <target state="translated">ArraySeq$.unsafeWrapArray()</target>
        </trans-unit>
        <trans-unit id="85f7424bf8d8a21dc0fee35b9fa75ec776465439" translate="yes" xml:space="preserve">
          <source>ArraySeq$.untagged()</source>
          <target state="translated">ArraySeq$.untagged()</target>
        </trans-unit>
        <trans-unit id="51a06e0400c62fbfb1e02199e8607d8b132de6d2" translate="yes" xml:space="preserve">
          <source>ArraySeq.appended()</source>
          <target state="translated">ArraySeq.appended()</target>
        </trans-unit>
        <trans-unit id="467cb20e6afc8cc3c63b4bffa489cdea87a27457" translate="yes" xml:space="preserve">
          <source>ArraySeq.appendedAll()</source>
          <target state="translated">ArraySeq.appendedAll()</target>
        </trans-unit>
        <trans-unit id="feb06a1cf57388b3cb596b27c260cdf51fa2c799" translate="yes" xml:space="preserve">
          <source>ArraySeq.apply()</source>
          <target state="translated">ArraySeq.apply()</target>
        </trans-unit>
        <trans-unit id="6a3ba2330ed3c0094cbf9df33dce6435c5a1fea3" translate="yes" xml:space="preserve">
          <source>ArraySeq.applyPreferredMaxLength()</source>
          <target state="translated">ArraySeq.applyPreferredMaxLength()</target>
        </trans-unit>
        <trans-unit id="88628942bf13003b2598ce3a21c6cfa674b9a9f2" translate="yes" xml:space="preserve">
          <source>ArraySeq.array()</source>
          <target state="translated">ArraySeq.array()</target>
        </trans-unit>
        <trans-unit id="ae686caed7e73838306a540b2770d3097ae55e78" translate="yes" xml:space="preserve">
          <source>ArraySeq.className()</source>
          <target state="translated">ArraySeq.className()</target>
        </trans-unit>
        <trans-unit id="9f5eddd1b366e097b3cff67fe67c8ba3c8a09008" translate="yes" xml:space="preserve">
          <source>ArraySeq.clone()</source>
          <target state="translated">ArraySeq.clone()</target>
        </trans-unit>
        <trans-unit id="a6999abaec599a24e4b0a0e4dabc23a15259ab2e" translate="yes" xml:space="preserve">
          <source>ArraySeq.copyToArray()</source>
          <target state="translated">ArraySeq.copyToArray()</target>
        </trans-unit>
        <trans-unit id="c5e30ba06c4d8f7103bd2e9de860f2d3270642c4" translate="yes" xml:space="preserve">
          <source>ArraySeq.drop()</source>
          <target state="translated">ArraySeq.drop()</target>
        </trans-unit>
        <trans-unit id="f1bbcb92db1b8213da0248d4a8c2bb5d6cabda8a" translate="yes" xml:space="preserve">
          <source>ArraySeq.dropRight()</source>
          <target state="translated">ArraySeq.dropRight()</target>
        </trans-unit>
        <trans-unit id="fd14a8841d9aa49caad4c8771ab56bd109558843" translate="yes" xml:space="preserve">
          <source>ArraySeq.elemTag()</source>
          <target state="translated">ArraySeq.elemTag()</target>
        </trans-unit>
        <trans-unit id="aa170d5e1b53f7d84f22c079bcb8353b476b2ec3" translate="yes" xml:space="preserve">
          <source>ArraySeq.empty()</source>
          <target state="translated">ArraySeq.empty()</target>
        </trans-unit>
        <trans-unit id="833d080e5b715a953a6083bb107f73228b16a341" translate="yes" xml:space="preserve">
          <source>ArraySeq.equals()</source>
          <target state="translated">ArraySeq.equals()</target>
        </trans-unit>
        <trans-unit id="1364d129a38da995672d6863d8b9133e253f3639" translate="yes" xml:space="preserve">
          <source>ArraySeq.evidenceIterableFactory()</source>
          <target state="translated">ArraySeq.evidenceIterableFactory()</target>
        </trans-unit>
        <trans-unit id="17fc18b031e5bccaacd1788b81be4a2a8a16aed7" translate="yes" xml:space="preserve">
          <source>ArraySeq.fromSpecific()</source>
          <target state="translated">ArraySeq.fromSpecific()</target>
        </trans-unit>
        <trans-unit id="6e6e17033c33c4426fc0791b1cdfa489d5ca8ed6" translate="yes" xml:space="preserve">
          <source>ArraySeq.iterableEvidence()</source>
          <target state="translated">ArraySeq.iterableEvidence()</target>
        </trans-unit>
        <trans-unit id="f996d74e1f640be8a744366e67d2f85f3461ac39" translate="yes" xml:space="preserve">
          <source>ArraySeq.iterableFactory()</source>
          <target state="translated">ArraySeq.iterableFactory()</target>
        </trans-unit>
        <trans-unit id="1f8d9d23d2f65f294560f641f6387e64989976f9" translate="yes" xml:space="preserve">
          <source>ArraySeq.map()</source>
          <target state="translated">ArraySeq.map()</target>
        </trans-unit>
        <trans-unit id="22560a9f8b4d3276743002bff5e737fdf0fe7b66" translate="yes" xml:space="preserve">
          <source>ArraySeq.newSpecificBuilder()</source>
          <target state="translated">ArraySeq.newSpecificBuilder()</target>
        </trans-unit>
        <trans-unit id="8f25481912d141bbfbb9d72b643e4e8ff67b5c37" translate="yes" xml:space="preserve">
          <source>ArraySeq.prepended()</source>
          <target state="translated">ArraySeq.prepended()</target>
        </trans-unit>
        <trans-unit id="c8e4c4eb78a3f42c21caeb99debd8902d2309bd4" translate="yes" xml:space="preserve">
          <source>ArraySeq.prependedAll()</source>
          <target state="translated">ArraySeq.prependedAll()</target>
        </trans-unit>
        <trans-unit id="00c994b879ecc16a57acd9b3df06c62351f7c5ad" translate="yes" xml:space="preserve">
          <source>ArraySeq.reverse()</source>
          <target state="translated">ArraySeq.reverse()</target>
        </trans-unit>
        <trans-unit id="f4edbf4880c2cab37bfb35344824feb69fb1687c" translate="yes" xml:space="preserve">
          <source>ArraySeq.scala</source>
          <target state="translated">ArraySeq.scala</target>
        </trans-unit>
        <trans-unit id="a743619a2827c543afa1d3b59720c516001e349a" translate="yes" xml:space="preserve">
          <source>ArraySeq.slice()</source>
          <target state="translated">ArraySeq.slice()</target>
        </trans-unit>
        <trans-unit id="ace71bebad2a95ed3cb62ff6f4e1ca5c58c0e2d6" translate="yes" xml:space="preserve">
          <source>ArraySeq.sortInPlace()</source>
          <target state="translated">ArraySeq.sortInPlace()</target>
        </trans-unit>
        <trans-unit id="cfbba109cf67fed0216928bf60ece93de947fcf7" translate="yes" xml:space="preserve">
          <source>ArraySeq.sorted()</source>
          <target state="translated">ArraySeq.sorted()</target>
        </trans-unit>
        <trans-unit id="45fcdf62cd231e3003070ff77a22aff6bd87ac24" translate="yes" xml:space="preserve">
          <source>ArraySeq.stepper()</source>
          <target state="translated">ArraySeq.stepper()</target>
        </trans-unit>
        <trans-unit id="ddec169dce264c7edf661272d2fc49cff3666f8a" translate="yes" xml:space="preserve">
          <source>ArraySeq.stringPrefix()</source>
          <target state="translated">ArraySeq.stringPrefix()</target>
        </trans-unit>
        <trans-unit id="b26e9006f9750ced387485c7031cfa92398ae45f" translate="yes" xml:space="preserve">
          <source>ArraySeq.tail()</source>
          <target state="translated">ArraySeq.tail()</target>
        </trans-unit>
        <trans-unit id="0f057220199f8fee965fb3d8f38f077e10c77b28" translate="yes" xml:space="preserve">
          <source>ArraySeq.take()</source>
          <target state="translated">ArraySeq.take()</target>
        </trans-unit>
        <trans-unit id="98d2da8f785e6e4821117a44557aee30697c34a7" translate="yes" xml:space="preserve">
          <source>ArraySeq.takeRight()</source>
          <target state="translated">ArraySeq.takeRight()</target>
        </trans-unit>
        <trans-unit id="41e196c16512534e96aecc154c543ea5d8c473cf" translate="yes" xml:space="preserve">
          <source>ArraySeq.unsafeArray()</source>
          <target state="translated">ArraySeq.unsafeArray()</target>
        </trans-unit>
        <trans-unit id="9944172cbd1e67846dd7116301afb434c7fc9ca8" translate="yes" xml:space="preserve">
          <source>ArraySeq.update()</source>
          <target state="translated">ArraySeq.update()</target>
        </trans-unit>
        <trans-unit id="8758db5672e60a90d6fad609fc787d81e69000b6" translate="yes" xml:space="preserve">
          <source>ArraySeq.updated()</source>
          <target state="translated">ArraySeq.updated()</target>
        </trans-unit>
        <trans-unit id="6667f80483c988292e0a438b8f0f739ecc25b5a6" translate="yes" xml:space="preserve">
          <source>ArraySeq.zip()</source>
          <target state="translated">ArraySeq.zip()</target>
        </trans-unit>
        <trans-unit id="a5d137495fd6c88573f01d472e5d6600c6ecd75d" translate="yes" xml:space="preserve">
          <source>Arrays are mutable, indexed collections of values. &lt;code&gt;Array[T]&lt;/code&gt; is Scala's representation for Java's &lt;code&gt;T[]&lt;/code&gt;.</source>
          <target state="translated">Las matrices son colecciones de valores indexadas y mutables. &lt;code&gt;Array[T]&lt;/code&gt; es la representaci&amp;oacute;n de Scala para &lt;code&gt;T[]&lt;/code&gt; Java .</target>
        </trans-unit>
        <trans-unit id="24641622fbcbc93b37c76c0e79ccaa3ac2f280d1" translate="yes" xml:space="preserve">
          <source>Arrays make use of two common pieces of Scala syntactic sugar, shown on lines 2 and 3 of the above example code. Line 2 is translated into a call to &lt;code&gt;apply(Int)&lt;/code&gt;, while line 3 is translated into a call to &lt;code&gt;update(Int, T)&lt;/code&gt;.</source>
          <target state="translated">Las matrices utilizan dos piezas comunes de az&amp;uacute;car sint&amp;aacute;ctico de Scala, que se muestran en las l&amp;iacute;neas 2 y 3 del c&amp;oacute;digo de ejemplo anterior. La l&amp;iacute;nea 2 se traduce en una llamada para &lt;code&gt;apply(Int)&lt;/code&gt; , mientras que la l&amp;iacute;nea 3 se traduce en una llamada para &lt;code&gt;update(Int, T)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d7219655237475a3607b543b22287ad49606447a" translate="yes" xml:space="preserve">
          <source>ArrowAssoc</source>
          <target state="translated">ArrowAssoc</target>
        </trans-unit>
        <trans-unit id="c8d3dc102c143aad2445dd166730dd96744d03b3" translate="yes" xml:space="preserve">
          <source>As Try is a one-element collection, this may be a bit overkill, but it's consistent with withFilter on Option and the other collections.</source>
          <target state="translated">Como Try es una colección de un solo elemento,esto puede ser un poco exagerado,pero es consistente con Filtro en Opción y las otras colecciones.</target>
        </trans-unit>
        <trans-unit id="563f8ccd3ca447c1f2c1f50a2a76a23b1eccb949" translate="yes" xml:space="preserve">
          <source>As a convenience, &lt;code&gt;NonFatal&lt;/code&gt; does not match &lt;code&gt;ControlThrowable&lt;/code&gt;.</source>
          <target state="translated">Para su comodidad, &lt;code&gt;NonFatal&lt;/code&gt; no coincide con &lt;code&gt;ControlThrowable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="57d9f952996fef72c4340f35d30cb54b00246485" translate="yes" xml:space="preserve">
          <source>As an alternative, this method creates a BooleanProp which is true if the key exists in the map and is not assigned a value other than &quot;true&quot;, compared case-insensitively, or the empty string. This way -Dmy.property results in a true-valued property, but -Dmy.property=false does not.</source>
          <target state="translated">Como alternativa,este método crea un BooleanProp que es verdadero si la clave existe en el mapa y no se le asigna un valor distinto de &quot;verdadero&quot;,comparado sin tener en cuenta los casos,o la cadena vacía.De esta manera -Dmy.property resulta en una propiedad de valor verdadero,pero -Dmy.property=falso no.</target>
        </trans-unit>
        <trans-unit id="ba5c72eb2070c58b83fe6070f5dc7047677f0348" translate="yes" xml:space="preserve">
          <source>As of Scala 2.10, defining direct or indirect subclasses of this trait is only possible if the language feature &lt;code&gt;dynamics&lt;/code&gt; is enabled.</source>
          <target state="translated">A partir de Scala 2.10, la definici&amp;oacute;n de subclases directas o indirectas de este rasgo solo es posible si la &lt;code&gt;dynamics&lt;/code&gt; caracter&amp;iacute;sticas del lenguaje est&amp;aacute; habilitada.</target>
        </trans-unit>
        <trans-unit id="acc3260bc71b528595beca36c336adfbc6846fd0" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;:++&lt;/code&gt;, returns a new collection containing the elements from the left operand followed by the elements from the right operand.</source>
          <target state="translated">Al igual que con &lt;code&gt;:++&lt;/code&gt; , devuelve una nueva colecci&amp;oacute;n que contiene los elementos del operando izquierdo seguidos de los elementos del operando derecho.</target>
        </trans-unit>
        <trans-unit id="9bf4ce5bfc0950f4aeffb5cbb40650e917d759a1" translate="yes" xml:space="preserve">
          <source>As witnessed by the &lt;code&gt;@uncheckedVariance&lt;/code&gt; annotation, using this method might be unsound. However, as long as it is called with an &lt;code&gt;Iterable[A]&lt;/code&gt; obtained from &lt;code&gt;this&lt;/code&gt; collection (as it is the case in the implementations of operations where we use a &lt;code&gt;View[A]&lt;/code&gt;), it is safe.</source>
          <target state="translated">Como atestigua la anotaci&amp;oacute;n &lt;code&gt;@uncheckedVariance&lt;/code&gt; , el uso de este m&amp;eacute;todo puede no ser correcto. Sin embargo, siempre que se llame con un &lt;code&gt;Iterable[A]&lt;/code&gt; obtenido de &lt;code&gt;this&lt;/code&gt; colecci&amp;oacute;n (como es el caso en las implementaciones de operaciones donde usamos una &lt;code&gt;View[A]&lt;/code&gt; ), es seguro.</target>
        </trans-unit>
        <trans-unit id="d408196586b495aefa79c39be3f4b0cf8a305da8" translate="yes" xml:space="preserve">
          <source>As witnessed by the &lt;code&gt;@uncheckedVariance&lt;/code&gt; annotation, using this method might be unsound. However, as long as the returned builder is only fed with &lt;code&gt;A&lt;/code&gt; values taken from &lt;code&gt;this&lt;/code&gt; instance, it is safe.</source>
          <target state="translated">Como atestigua la anotaci&amp;oacute;n &lt;code&gt;@uncheckedVariance&lt;/code&gt; , el uso de este m&amp;eacute;todo puede no ser correcto. Sin embargo, siempre que el constructor devuelto solo se alimente con valores &lt;code&gt;A&lt;/code&gt; tomados de &lt;code&gt;this&lt;/code&gt; instancia, es seguro.</target>
        </trans-unit>
        <trans-unit id="81aaf1b0af658db3c0a049856d6eb4744d2f4ccc" translate="yes" xml:space="preserve">
          <source>AsJavaConverters</source>
          <target state="translated">AsJavaConverters</target>
        </trans-unit>
        <trans-unit id="476935fc2e82fbce99851c80d9f88856fb61cddb" translate="yes" xml:space="preserve">
          <source>AsJavaConverters.asJava()</source>
          <target state="translated">AsJavaConverters.asJava()</target>
        </trans-unit>
        <trans-unit id="683c6b120c8aff3934d924d7ae02eaeba3e510c5" translate="yes" xml:space="preserve">
          <source>AsJavaConverters.asJavaCollection()</source>
          <target state="translated">AsJavaConverters.asJavaCollection()</target>
        </trans-unit>
        <trans-unit id="f1015f0991d313a8824e7f853ec194e1a7bf0801" translate="yes" xml:space="preserve">
          <source>AsJavaConverters.asJavaDictionary()</source>
          <target state="translated">AsJavaConverters.asJavaDictionary()</target>
        </trans-unit>
        <trans-unit id="824fefb9fca258e69174646fbb7cddf48447fadc" translate="yes" xml:space="preserve">
          <source>AsJavaConverters.asJavaEnumeration()</source>
          <target state="translated">AsJavaConverters.asJavaEnumeration()</target>
        </trans-unit>
        <trans-unit id="fb11f74f19842d0d4e98ff3209679675f2695e59" translate="yes" xml:space="preserve">
          <source>AsJavaConverters.scala</source>
          <target state="translated">AsJavaConverters.scala</target>
        </trans-unit>
        <trans-unit id="f553542bb21640236d50c9c93a2f78d071e0930d" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions</source>
          <target state="translated">AsJavaExtensions</target>
        </trans-unit>
        <trans-unit id="26c11ece98df681a065fcdb1f82ba966ba7819d2" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.BufferHasAsJava</source>
          <target state="translated">AsJavaExtensions.BufferHasAsJava</target>
        </trans-unit>
        <trans-unit id="34d9d9139993b590b3ccca28b919c9733e4006c4" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.BufferHasAsJava()</source>
          <target state="translated">AsJavaExtensions.BufferHasAsJava()</target>
        </trans-unit>
        <trans-unit id="38a2881f4dbdf8d89640b8e2589dc76f51a449ac" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.BufferHasAsJava.BufferHasAsJava()</source>
          <target state="translated">AsJavaExtensions.BufferHasAsJava.BufferHasAsJava()</target>
        </trans-unit>
        <trans-unit id="6c818e8a79c4eac3eb285c45453bc4dfba327944" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.BufferHasAsJava.asJava()</source>
          <target state="translated">AsJavaExtensions.BufferHasAsJava.asJava()</target>
        </trans-unit>
        <trans-unit id="8ef27a461fd74a3d23595a4349276b5ce15835e7" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.ConcurrentMapHasAsJava</source>
          <target state="translated">AsJavaExtensions.ConcurrentMapHasAsJava</target>
        </trans-unit>
        <trans-unit id="575ca1876777d35a57ed71d275d533aac12ad65c" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.ConcurrentMapHasAsJava()</source>
          <target state="translated">AsJavaExtensions.ConcurrentMapHasAsJava()</target>
        </trans-unit>
        <trans-unit id="d92b139dcd378272b99f0fd755e36882ba438a7b" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.ConcurrentMapHasAsJava.ConcurrentMapHasAsJava()</source>
          <target state="translated">AsJavaExtensions.ConcurrentMapHasAsJava.ConcurrentMapHasAsJava()</target>
        </trans-unit>
        <trans-unit id="480d4dae7bbf39fff77aa3d6054ae4eb4d0c82ba" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.ConcurrentMapHasAsJava.asJava()</source>
          <target state="translated">AsJavaExtensions.ConcurrentMapHasAsJava.asJava()</target>
        </trans-unit>
        <trans-unit id="853b9e56094a0a76997b38bc8ebbeceea3e58c2d" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.IterableHasAsJava</source>
          <target state="translated">AsJavaExtensions.IterableHasAsJava</target>
        </trans-unit>
        <trans-unit id="fe0ddbcbb4d1f5617b9b0954c9aff47c62d5c4fb" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.IterableHasAsJava()</source>
          <target state="translated">AsJavaExtensions.IterableHasAsJava()</target>
        </trans-unit>
        <trans-unit id="8598d41379cb24fd37e857b42c26dc4044c9f8e0" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.IterableHasAsJava.IterableHasAsJava()</source>
          <target state="translated">AsJavaExtensions.IterableHasAsJava.IterableHasAsJava()</target>
        </trans-unit>
        <trans-unit id="766c9abe63273e03a43ada40e6234d9b0f512e78" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.IterableHasAsJava.asJava()</source>
          <target state="translated">AsJavaExtensions.IterableHasAsJava.asJava()</target>
        </trans-unit>
        <trans-unit id="b06df35b86b4bbdd3b488c30f4bd9ab79ea22d82" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.IterableHasAsJava.asJavaCollection()</source>
          <target state="translated">AsJavaExtensions.IterableHasAsJava.asJavaCollection()</target>
        </trans-unit>
        <trans-unit id="de6fd473dcc1dd25a64f48e7dfec82ef398e60e8" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.IteratorHasAsJava</source>
          <target state="translated">AsJavaExtensions.IteratorHasAsJava</target>
        </trans-unit>
        <trans-unit id="9264e453b8ff88c167c957faaae92a08601b1eb5" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.IteratorHasAsJava()</source>
          <target state="translated">AsJavaExtensions.IteratorHasAsJava()</target>
        </trans-unit>
        <trans-unit id="96879acbda24d98ac2d00b2b2ea48a8070333872" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.IteratorHasAsJava.IteratorHasAsJava()</source>
          <target state="translated">AsJavaExtensions.IteratorHasAsJava.IteratorHasAsJava()</target>
        </trans-unit>
        <trans-unit id="e14d1f388e983484de036db1d42f0f7bcaefe23c" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.IteratorHasAsJava.asJava()</source>
          <target state="translated">AsJavaExtensions.IteratorHasAsJava.asJava()</target>
        </trans-unit>
        <trans-unit id="b3467e9d96569f67e3f590b3d8d8bc0dd1be45a4" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.IteratorHasAsJava.asJavaEnumeration()</source>
          <target state="translated">AsJavaExtensions.IteratorHasAsJava.asJavaEnumeration()</target>
        </trans-unit>
        <trans-unit id="db7bad94fd474ab35c49fa8c41b03ca1d2de837d" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.MapHasAsJava</source>
          <target state="translated">AsJavaExtensions.MapHasAsJava</target>
        </trans-unit>
        <trans-unit id="79d6770597686ae19a887a775232ed0d89ef0853" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.MapHasAsJava()</source>
          <target state="translated">AsJavaExtensions.MapHasAsJava()</target>
        </trans-unit>
        <trans-unit id="d7937fa06fc710e670cbd3d95c2e2af6d680f539" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.MapHasAsJava.MapHasAsJava()</source>
          <target state="translated">AsJavaExtensions.MapHasAsJava.MapHasAsJava()</target>
        </trans-unit>
        <trans-unit id="77f426a6c68f9757467564cd6750779d0e79f147" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.MapHasAsJava.asJava()</source>
          <target state="translated">AsJavaExtensions.MapHasAsJava.asJava()</target>
        </trans-unit>
        <trans-unit id="18e6e921f61b567e80fba8094a1ac5dab923ad0b" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.MutableMapHasAsJava</source>
          <target state="translated">AsJavaExtensions.MutableMapHasAsJava</target>
        </trans-unit>
        <trans-unit id="0c89f566415d93471ae6b988dc28ce1206ddfba2" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.MutableMapHasAsJava()</source>
          <target state="translated">AsJavaExtensions.MutableMapHasAsJava()</target>
        </trans-unit>
        <trans-unit id="229cce71c31bfffea6013b545b50e4052128ca0b" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.MutableMapHasAsJava.MutableMapHasAsJava()</source>
          <target state="translated">AsJavaExtensions.MutableMapHasAsJava.MutableMapHasAsJava()</target>
        </trans-unit>
        <trans-unit id="54575efd5d76d6db58d3d01b387dfeb05cb74469" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.MutableMapHasAsJava.asJava()</source>
          <target state="translated">AsJavaExtensions.MutableMapHasAsJava.asJava()</target>
        </trans-unit>
        <trans-unit id="9073cc2643c91a3582747f53ad6dc32f2b29a223" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.MutableMapHasAsJava.asJavaDictionary()</source>
          <target state="translated">AsJavaExtensions.MutableMapHasAsJava.asJavaDictionary()</target>
        </trans-unit>
        <trans-unit id="33b885756d9fe0514ee8daa8be73a3e1b431fb5f" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.MutableSeqHasAsJava</source>
          <target state="translated">AsJavaExtensions.MutableSeqHasAsJava</target>
        </trans-unit>
        <trans-unit id="f816aa73a0fed3c4ad586dc35086703309c42358" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.MutableSeqHasAsJava()</source>
          <target state="translated">AsJavaExtensions.MutableSeqHasAsJava()</target>
        </trans-unit>
        <trans-unit id="aa0816efc6dc0b7f06f2378289f6049d8c009950" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.MutableSeqHasAsJava.MutableSeqHasAsJava()</source>
          <target state="translated">AsJavaExtensions.MutableSeqHasAsJava.MutableSeqHasAsJava()</target>
        </trans-unit>
        <trans-unit id="c8a0c38e59288a6ceba5c7b56d5f7125461b7723" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.MutableSeqHasAsJava.asJava()</source>
          <target state="translated">AsJavaExtensions.MutableSeqHasAsJava.asJava()</target>
        </trans-unit>
        <trans-unit id="a3e7c636fefd7440d53529687884edd7a3c9ffe8" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.MutableSetHasAsJava</source>
          <target state="translated">AsJavaExtensions.MutableSetHasAsJava</target>
        </trans-unit>
        <trans-unit id="ca1ead7235708787ba7a954d04a36e60920f10c7" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.MutableSetHasAsJava()</source>
          <target state="translated">AsJavaExtensions.MutableSetHasAsJava()</target>
        </trans-unit>
        <trans-unit id="85f902ab5789bb2670d10b2e0412e274590e4091" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.MutableSetHasAsJava.MutableSetHasAsJava()</source>
          <target state="translated">AsJavaExtensions.MutableSetHasAsJava.MutableSetHasAsJava()</target>
        </trans-unit>
        <trans-unit id="9c87d367245ea189fd0973dc2ec2c508bd808b68" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.MutableSetHasAsJava.asJava()</source>
          <target state="translated">AsJavaExtensions.MutableSetHasAsJava.asJava()</target>
        </trans-unit>
        <trans-unit id="b53c79bb6c935d226bb14087a1b4b2ba9b7a08c1" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.SeqHasAsJava</source>
          <target state="translated">AsJavaExtensions.SeqHasAsJava</target>
        </trans-unit>
        <trans-unit id="8422bc9458779d6d88a833ecc944d75d1d1c2a63" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.SeqHasAsJava()</source>
          <target state="translated">AsJavaExtensions.SeqHasAsJava()</target>
        </trans-unit>
        <trans-unit id="2e51ca7bcca19b5f61ed002bda567bcaeb538928" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.SeqHasAsJava.SeqHasAsJava()</source>
          <target state="translated">AsJavaExtensions.SeqHasAsJava.SeqHasAsJava()</target>
        </trans-unit>
        <trans-unit id="1f36894fe27ed52e8328077a6727a82efefecb76" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.SeqHasAsJava.asJava()</source>
          <target state="translated">AsJavaExtensions.SeqHasAsJava.asJava()</target>
        </trans-unit>
        <trans-unit id="cade5b3cbcf5fb5d51166833bd4d4d68a14354ae" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.SetHasAsJava</source>
          <target state="translated">AsJavaExtensions.SetHasAsJava</target>
        </trans-unit>
        <trans-unit id="8083d23c8d704cf88a3f5c5d513c35bcc685e088" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.SetHasAsJava()</source>
          <target state="translated">AsJavaExtensions.SetHasAsJava()</target>
        </trans-unit>
        <trans-unit id="13427093b2c34e989418be31065bec47ebfd480a" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.SetHasAsJava.SetHasAsJava()</source>
          <target state="translated">AsJavaExtensions.SetHasAsJava.SetHasAsJava()</target>
        </trans-unit>
        <trans-unit id="a936957a563bf3c8c02b771c73207c4c2ca19b55" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.SetHasAsJava.asJava()</source>
          <target state="translated">AsJavaExtensions.SetHasAsJava.asJava()</target>
        </trans-unit>
        <trans-unit id="9531780802d3921ad18be57cbaefba5883782c38" translate="yes" xml:space="preserve">
          <source>AsJavaExtensions.scala</source>
          <target state="translated">AsJavaExtensions.scala</target>
        </trans-unit>
        <trans-unit id="054dffc054935f190de66743b3013382ba702933" translate="yes" xml:space="preserve">
          <source>AsScalaConverters</source>
          <target state="translated">AsScalaConverters</target>
        </trans-unit>
        <trans-unit id="6b0eb366ec91dc2839faed54f45f21e9c4e671d2" translate="yes" xml:space="preserve">
          <source>AsScalaConverters.asScala()</source>
          <target state="translated">AsScalaConverters.asScala()</target>
        </trans-unit>
        <trans-unit id="95de52d2dc5437a3467f22ad8c663aaeda717d79" translate="yes" xml:space="preserve">
          <source>AsScalaConverters.scala</source>
          <target state="translated">AsScalaConverters.scala</target>
        </trans-unit>
        <trans-unit id="48a9d86c57b8679fd8272ac3edbf338a1cb77f04" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions</source>
          <target state="translated">AsScalaExtensions</target>
        </trans-unit>
        <trans-unit id="07ecac84c4b037a60959707b4515753a85ca55a5" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.CollectionHasAsScala</source>
          <target state="translated">AsScalaExtensions.CollectionHasAsScala</target>
        </trans-unit>
        <trans-unit id="4599e83cbc821d453d0abb1a2b90a0d9565d5905" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.CollectionHasAsScala()</source>
          <target state="translated">AsScalaExtensions.CollectionHasAsScala()</target>
        </trans-unit>
        <trans-unit id="fdbbc93e2531a36cb2d75b566c5b59ff6abfe742" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.CollectionHasAsScala.CollectionHasAsScala()</source>
          <target state="translated">AsScalaExtensions.CollectionHasAsScala.CollectionHasAsScala()</target>
        </trans-unit>
        <trans-unit id="8e04929407c74022696df3562c0b081c2f7c6673" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.CollectionHasAsScala.asScala()</source>
          <target state="translated">AsScalaExtensions.CollectionHasAsScala.asScala()</target>
        </trans-unit>
        <trans-unit id="be9c666c53da75b84857516d406b0c7886c3e02b" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.ConcurrentMapHasAsScala</source>
          <target state="translated">AsScalaExtensions.ConcurrentMapHasAsScala</target>
        </trans-unit>
        <trans-unit id="a55666af7022feebe3809c6545acf9607c2ce6eb" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.ConcurrentMapHasAsScala()</source>
          <target state="translated">AsScalaExtensions.ConcurrentMapHasAsScala()</target>
        </trans-unit>
        <trans-unit id="04edb82893d39760a2759a58de1a52d626cd2854" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.ConcurrentMapHasAsScala.ConcurrentMapHasAsScala()</source>
          <target state="translated">AsScalaExtensions.ConcurrentMapHasAsScala.ConcurrentMapHasAsScala()</target>
        </trans-unit>
        <trans-unit id="15b61a710e457ec1249946928c1d502a2c9340d7" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.ConcurrentMapHasAsScala.asScala()</source>
          <target state="translated">AsScalaExtensions.ConcurrentMapHasAsScala.asScala()</target>
        </trans-unit>
        <trans-unit id="7546c433fa1e080ed89ca7eb33deae296cdd5b07" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.DictionaryHasAsScala</source>
          <target state="translated">AsScalaExtensions.DictionaryHasAsScala</target>
        </trans-unit>
        <trans-unit id="088dfad77675ebaba5b2a00472d8f3e7b5119212" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.DictionaryHasAsScala()</source>
          <target state="translated">AsScalaExtensions.DictionaryHasAsScala()</target>
        </trans-unit>
        <trans-unit id="224a0259071528eb73c98acbc525ac4718b49fa7" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.DictionaryHasAsScala.DictionaryHasAsScala()</source>
          <target state="translated">AsScalaExtensions.DictionaryHasAsScala.DictionaryHasAsScala()</target>
        </trans-unit>
        <trans-unit id="567ae48d831415ddf07f0be00d9ea3115a6400e0" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.DictionaryHasAsScala.asScala()</source>
          <target state="translated">AsScalaExtensions.DictionaryHasAsScala.asScala()</target>
        </trans-unit>
        <trans-unit id="ea7f2d7cb2d222a7ca52458182b3f12c96d3b838" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.EnumerationHasAsScala</source>
          <target state="translated">AsScalaExtensions.EnumerationHasAsScala</target>
        </trans-unit>
        <trans-unit id="d570998eda45b38a31d8ec0c18da84f0313ef11e" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.EnumerationHasAsScala()</source>
          <target state="translated">AsScalaExtensions.EnumerationHasAsScala()</target>
        </trans-unit>
        <trans-unit id="3269619baa8e38658bd8037adcd1fa8652416248" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.EnumerationHasAsScala.EnumerationHasAsScala()</source>
          <target state="translated">AsScalaExtensions.EnumerationHasAsScala.EnumerationHasAsScala()</target>
        </trans-unit>
        <trans-unit id="e73d5e8b5bc3ca6bb6e85f839ba4d7752f0de364" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.EnumerationHasAsScala.asScala()</source>
          <target state="translated">AsScalaExtensions.EnumerationHasAsScala.asScala()</target>
        </trans-unit>
        <trans-unit id="5ba6fcd0fc2ba5df901fdf18067542ecef9563db" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.IterableHasAsScala</source>
          <target state="translated">AsScalaExtensions.IterableHasAsScala</target>
        </trans-unit>
        <trans-unit id="993c856e628ba8b4e13d90362c91709610ee201e" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.IterableHasAsScala()</source>
          <target state="translated">AsScalaExtensions.IterableHasAsScala()</target>
        </trans-unit>
        <trans-unit id="611aad835ba214558bb7a509f4c096e0368aa68e" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.IterableHasAsScala.IterableHasAsScala()</source>
          <target state="translated">AsScalaExtensions.IterableHasAsScala.IterableHasAsScala()</target>
        </trans-unit>
        <trans-unit id="20ee76adefd30e3d3f3f4f210088d302b9320b56" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.IterableHasAsScala.asScala()</source>
          <target state="translated">AsScalaExtensions.IterableHasAsScala.asScala()</target>
        </trans-unit>
        <trans-unit id="555057c130a11c43e7fe0dc3820130d7d203c1e1" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.IteratorHasAsScala</source>
          <target state="translated">AsScalaExtensions.IteratorHasAsScala</target>
        </trans-unit>
        <trans-unit id="8dd7a8b605ecaa73beee2426739ea407c8217428" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.IteratorHasAsScala()</source>
          <target state="translated">AsScalaExtensions.IteratorHasAsScala()</target>
        </trans-unit>
        <trans-unit id="809d0b3aac2e1a9554d863c642513fa78aedd121" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.IteratorHasAsScala.IteratorHasAsScala()</source>
          <target state="translated">AsScalaExtensions.IteratorHasAsScala.IteratorHasAsScala()</target>
        </trans-unit>
        <trans-unit id="e82193733cd05c8d4ed01e4991b8baef96891986" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.IteratorHasAsScala.asScala()</source>
          <target state="translated">AsScalaExtensions.IteratorHasAsScala.asScala()</target>
        </trans-unit>
        <trans-unit id="6d3ded1f837a8d7848d17c6d986a6199703279d0" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.ListHasAsScala</source>
          <target state="translated">AsScalaExtensions.ListHasAsScala</target>
        </trans-unit>
        <trans-unit id="2bc760803833c11171dadc0760ca4ac9d495eda6" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.ListHasAsScala()</source>
          <target state="translated">AsScalaExtensions.ListHasAsScala()</target>
        </trans-unit>
        <trans-unit id="ac2803759f891e443b95b19b672974e9fa1b0274" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.ListHasAsScala.ListHasAsScala()</source>
          <target state="translated">AsScalaExtensions.ListHasAsScala.ListHasAsScala()</target>
        </trans-unit>
        <trans-unit id="d93cf449223d617dfad1a428c0257ca28f50ca53" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.ListHasAsScala.asScala()</source>
          <target state="translated">AsScalaExtensions.ListHasAsScala.asScala()</target>
        </trans-unit>
        <trans-unit id="f99f6b3b47d82a2f948ec44c1bd5068019932805" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.MapHasAsScala</source>
          <target state="translated">AsScalaExtensions.MapHasAsScala</target>
        </trans-unit>
        <trans-unit id="6962119ac67547f23519724c46138ab0d242f903" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.MapHasAsScala()</source>
          <target state="translated">AsScalaExtensions.MapHasAsScala()</target>
        </trans-unit>
        <trans-unit id="c01b89a89d5033caa6c814179b2c10782b42205f" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.MapHasAsScala.MapHasAsScala()</source>
          <target state="translated">AsScalaExtensions.MapHasAsScala.MapHasAsScala()</target>
        </trans-unit>
        <trans-unit id="39c95fa4d7f2ca641ff872cc3c60c41f356945f4" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.MapHasAsScala.asScala()</source>
          <target state="translated">AsScalaExtensions.MapHasAsScala.asScala()</target>
        </trans-unit>
        <trans-unit id="5bd42de8f4b84f6bfdc8d9f6de398c4c43788ee7" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.PropertiesHasAsScala</source>
          <target state="translated">AsScalaExtensions.PropertiesHasAsScala</target>
        </trans-unit>
        <trans-unit id="ccdd608e34c5621fe26c6d7d3b63ec4049add44a" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.PropertiesHasAsScala()</source>
          <target state="translated">AsScalaExtensions.PropertiesHasAsScala()</target>
        </trans-unit>
        <trans-unit id="243b01806b4837c2f7c0ad1b3d008499e3380c7d" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.PropertiesHasAsScala.PropertiesHasAsScala()</source>
          <target state="translated">AsScalaExtensions.PropertiesHasAsScala.PropertiesHasAsScala()</target>
        </trans-unit>
        <trans-unit id="88b4dfc63fa75f9489104cc3b4518ca6ed37e8ae" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.PropertiesHasAsScala.asScala()</source>
          <target state="translated">AsScalaExtensions.PropertiesHasAsScala.asScala()</target>
        </trans-unit>
        <trans-unit id="93510bd71a0ac30435ed1d93ac3f5217418f1361" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.SetHasAsScala</source>
          <target state="translated">AsScalaExtensions.SetHasAsScala</target>
        </trans-unit>
        <trans-unit id="92de10a1f224a0c8ca92cb657796797208e426ed" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.SetHasAsScala()</source>
          <target state="translated">AsScalaExtensions.SetHasAsScala()</target>
        </trans-unit>
        <trans-unit id="1a4591447feb5661a05039ea472ae85ffa8a52a8" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.SetHasAsScala.SetHasAsScala()</source>
          <target state="translated">AsScalaExtensions.SetHasAsScala.SetHasAsScala()</target>
        </trans-unit>
        <trans-unit id="061fb59695c540999ef4c1f0d2340f680e7344e4" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.SetHasAsScala.asScala()</source>
          <target state="translated">AsScalaExtensions.SetHasAsScala.asScala()</target>
        </trans-unit>
        <trans-unit id="610a952bce9af77aa7dcae107ff31d0396c1d175" translate="yes" xml:space="preserve">
          <source>AsScalaExtensions.scala</source>
          <target state="translated">AsScalaExtensions.scala</target>
        </trans-unit>
        <trans-unit id="49bf55dc112eb3597726ba8ecf785a4fae4cbce0" translate="yes" xml:space="preserve">
          <source>Assertions</source>
          <target state="translated">Assertions</target>
        </trans-unit>
        <trans-unit id="600151b5da4dc339fd1ca37353d2eac459a67393" translate="yes" xml:space="preserve">
          <source>Assigns the specified &lt;code&gt;value&lt;/code&gt; to a specified &lt;code&gt;key&lt;/code&gt;. If the key already has a binding to equal to &lt;code&gt;value&lt;/code&gt;, nothing is changed; otherwise a new binding is added for that &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">Asigna el &lt;code&gt;value&lt;/code&gt; especificado a una &lt;code&gt;key&lt;/code&gt; especificada . Si la clave ya tiene un enlace igual al &lt;code&gt;value&lt;/code&gt; , no se cambia nada; de lo contrario, se agrega un nuevo enlace para esa &lt;code&gt;key&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3b47c8a748ab4de89d6982c9ba70f274434cb013" translate="yes" xml:space="preserve">
          <source>Associates the given key with a given value, unless the key was already associated with some other value.</source>
          <target state="translated">Asocia la clave dada con un valor dado,a menos que la clave ya estuviera asociada con algún otro valor.</target>
        </trans-unit>
        <trans-unit id="5a734a0baca18bfebdb8bf14f0c1dbb5a1204298" translate="yes" xml:space="preserve">
          <source>Asynchronous computations that yield futures are created with the &lt;code&gt;Future.apply&lt;/code&gt; call and are computed using a supplied &lt;code&gt;ExecutionContext&lt;/code&gt;, which can be backed by a Thread pool.</source>
          <target state="translated">Los c&amp;aacute;lculos asincr&amp;oacute;nicos que producen futuros se crean con la llamada &lt;code&gt;Future.apply&lt;/code&gt; y se calculan utilizando un &lt;code&gt;ExecutionContext&lt;/code&gt; proporcionado , que puede ser respaldado por un grupo de subprocesos.</target>
        </trans-unit>
        <trans-unit id="30b226417aeebc818385943778a2e03e517840ce" translate="yes" xml:space="preserve">
          <source>Asynchronously and non-blockingly returns a &lt;code&gt;Future&lt;/code&gt; that will hold the optional result of the first &lt;code&gt;Future&lt;/code&gt; with a result that matches the predicate, failed &lt;code&gt;Future&lt;/code&gt;s will be ignored.</source>
          <target state="translated">Devuelve de forma asincr&amp;oacute;nica y sin bloqueo un &lt;code&gt;Future&lt;/code&gt; que contendr&amp;aacute; el resultado opcional del primer &lt;code&gt;Future&lt;/code&gt; con un resultado que coincida con el predicado, los &lt;code&gt;Future&lt;/code&gt; s fallidos se ignorar&amp;aacute;n.</target>
        </trans-unit>
        <trans-unit id="ea2af455cfc7c02981858972d2172e3495cd17d2" translate="yes" xml:space="preserve">
          <source>Asynchronously and non-blockingly returns a new &lt;code&gt;Future&lt;/code&gt; to the result of the first future in the list that is completed. This means no matter if it is completed as a success or as a failure.</source>
          <target state="translated">Devuelve de forma asincr&amp;oacute;nica y sin bloqueo un nuevo &lt;code&gt;Future&lt;/code&gt; al resultado del primer futuro en la lista que se completa. Esto significa que no importa si se completa como un &amp;eacute;xito o un fracaso.</target>
        </trans-unit>
        <trans-unit id="2cdcb598a9bf612cc1e70bc8ec10f03407dae1bc" translate="yes" xml:space="preserve">
          <source>Asynchronously and non-blockingly transforms a &lt;code&gt;IterableOnce[A]&lt;/code&gt; into a &lt;code&gt;Future[IterableOnce[B]]&lt;/code&gt; using the provided function &lt;code&gt;A =&amp;gt; Future[B]&lt;/code&gt;. This is useful for performing a parallel map. For example, to apply a function to all items of a list in parallel:</source>
          <target state="translated">Transforma de forma asincr&amp;oacute;nica y sin bloqueo un &lt;code&gt;IterableOnce[A]&lt;/code&gt; en un &lt;code&gt;Future[IterableOnce[B]]&lt;/code&gt; utilizando la funci&amp;oacute;n proporcionada &lt;code&gt;A =&amp;gt; Future[B]&lt;/code&gt; . Esto es &amp;uacute;til para realizar un mapa paralelo. Por ejemplo, para aplicar una funci&amp;oacute;n a todos los elementos de una lista en paralelo:</target>
        </trans-unit>
        <trans-unit id="19c44999139c4ced874b76100620aaad711a5912" translate="yes" xml:space="preserve">
          <source>Asynchronously processes the value in the future once the value becomes available.</source>
          <target state="translated">Procesa asincrónicamente el valor en el futuro una vez que el valor esté disponible.</target>
        </trans-unit>
        <trans-unit id="a89ff4845f9211f653992b0e2c8058976eb2ed0e" translate="yes" xml:space="preserve">
          <source>Attempting to retrieve match information after exhausting the iterator results in &lt;span name=&quot;java.lang.IllegalStateException&quot;&gt;java.lang.IllegalStateException&lt;/span&gt;. See &lt;a href=&quot;regex%24%24matchiterator&quot; id=&quot;scala.util.matching.Regex.MatchIterator&quot; name=&quot;scala.util.matching.Regex.MatchIterator&quot;&gt;scala.util.matching.Regex.MatchIterator&lt;/a&gt; for details.</source>
          <target state="translated">Intentar recuperar informaci&amp;oacute;n de coincidencia despu&amp;eacute;s de agotar el iterador da como resultado &lt;span name=&quot;java.lang.IllegalStateException&quot;&gt;java.lang.IllegalStateException&lt;/span&gt; . Consulte &lt;a href=&quot;regex%24%24matchiterator&quot; id=&quot;scala.util.matching.Regex.MatchIterator&quot; name=&quot;scala.util.matching.Regex.MatchIterator&quot;&gt;scala.util.matching.Regex.MatchIterator&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="65a6b0a4f8fe27f9dab7a299bf0d71710545ea2a" translate="yes" xml:space="preserve">
          <source>Attempts to match the input string to the given interpolated patterns via a naive globbing, that is the reverse of the simple interpolator.</source>
          <target state="translated">Intenta hacer coincidir la cadena de entrada con los patrones interpolados dados a través de un globo ingenuo,que es el reverso del interpolador simple.</target>
        </trans-unit>
        <trans-unit id="a6652617f2c799eb11ee727b16c5646c48af6905" translate="yes" xml:space="preserve">
          <source>Attributes</source>
          <target state="translated">Attributes</target>
        </trans-unit>
        <trans-unit id="954a7aa82f3a2970af6e92444484657af0bd1441" translate="yes" xml:space="preserve">
          <source>AutoCloseableIsReleasable</source>
          <target state="translated">AutoCloseableIsReleasable</target>
        </trans-unit>
        <trans-unit id="d8ff350df27dab12e84a90e8582631a3a03aa967" translate="yes" xml:space="preserve">
          <source>Automatic imports</source>
          <target state="translated">Importaciones automáticas</target>
        </trans-unit>
        <trans-unit id="ec620e18be44e25e25644fe842005e47424ce411" translate="yes" xml:space="preserve">
          <source>Avoid Blocking</source>
          <target state="translated">Evitar el bloqueo</target>
        </trans-unit>
        <trans-unit id="4d242fe25493446adb8541876c2f1b9c0de7420e" translate="yes" xml:space="preserve">
          <source>Await and return the result (of type &lt;code&gt;T&lt;/code&gt;) of an &lt;code&gt;Awaitable&lt;/code&gt;.</source>
          <target state="translated">Espere y devuelva el resultado (de tipo &lt;code&gt;T&lt;/code&gt; ) de un &lt;code&gt;Awaitable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="11f01ed47c309714148159802f20b07a85a171d8" translate="yes" xml:space="preserve">
          <source>Await and return the result (of type &lt;code&gt;T&lt;/code&gt;) of this &lt;code&gt;Awaitable&lt;/code&gt;.</source>
          <target state="translated">Espere y devuelva el resultado (de tipo &lt;code&gt;T&lt;/code&gt; ) de este &lt;code&gt;Awaitable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="06fe385057c2cebdc3ae1c0e7f96f71eeaca78e4" translate="yes" xml:space="preserve">
          <source>Await the &quot;completed&quot; state of an &lt;code&gt;Awaitable&lt;/code&gt;.</source>
          <target state="translated">Espere el estado &quot;completado&quot; de un &lt;code&gt;Awaitable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e556aed2ab5716c39dad0c5b39d85ec803fed295" translate="yes" xml:space="preserve">
          <source>Await the &quot;completed&quot; state of this &lt;code&gt;Awaitable&lt;/code&gt;.</source>
          <target state="translated">Espere el estado &quot;completado&quot; de este &lt;code&gt;Awaitable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c58c5f5ec0f6f135f8f3f2ba10652e948a9f579c" translate="yes" xml:space="preserve">
          <source>Await$</source>
          <target state="translated">Await$</target>
        </trans-unit>
        <trans-unit id="047197a6f0bac12459ffa519d12329ce9bc79912" translate="yes" xml:space="preserve">
          <source>Await$.ready()</source>
          <target state="translated">Await$.ready()</target>
        </trans-unit>
        <trans-unit id="e2f727ae39f5a357a526f161911c6b9dac61ccdc" translate="yes" xml:space="preserve">
          <source>Await$.result()</source>
          <target state="translated">Await$.result()</target>
        </trans-unit>
        <trans-unit id="e78b45e31ab31ef70d565c238d8d3390e0f43d61" translate="yes" xml:space="preserve">
          <source>Awaitable</source>
          <target state="translated">Awaitable</target>
        </trans-unit>
        <trans-unit id="f6f47e5a54efc8793ccd68519da46f1d583b4374" translate="yes" xml:space="preserve">
          <source>Awaitable.ready()</source>
          <target state="translated">Awaitable.ready()</target>
        </trans-unit>
        <trans-unit id="d1a20260262b419e100d7f5ab7c05febb69917f5" translate="yes" xml:space="preserve">
          <source>Awaitable.result()</source>
          <target state="translated">Awaitable.result()</target>
        </trans-unit>
        <trans-unit id="9c54b8de5525a7d21c12f52722ad5ee4e7218cdd" translate="yes" xml:space="preserve">
          <source>Awaitable.scala</source>
          <target state="translated">Awaitable.scala</target>
        </trans-unit>
        <trans-unit id="ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec" translate="yes" xml:space="preserve">
          <source>B</source>
          <target state="translated">B</target>
        </trans-unit>
        <trans-unit id="ef48c8d0df5118edd036315d2021412c3ca49d8a" translate="yes" xml:space="preserve">
          <source>B1</source>
          <target state="translated">B1</target>
        </trans-unit>
        <trans-unit id="a9414ab04c2bdab21e6b6d136628a187e0dfaa4c" translate="yes" xml:space="preserve">
          <source>BLACK</source>
          <target state="translated">BLACK</target>
        </trans-unit>
        <trans-unit id="2c555160f33984b3782d8b480c4f3e05e1904562" translate="yes" xml:space="preserve">
          <source>BLACK_B</source>
          <target state="translated">BLACK_B</target>
        </trans-unit>
        <trans-unit id="c4f8490d87d22bb11f7e9b82a4a72913b3d84d06" translate="yes" xml:space="preserve">
          <source>BLUE</source>
          <target state="translated">BLUE</target>
        </trans-unit>
        <trans-unit id="73b7baa5ae521a93b13f232d780325142d23b145" translate="yes" xml:space="preserve">
          <source>BLUE_B</source>
          <target state="translated">BLUE_B</target>
        </trans-unit>
        <trans-unit id="64dd60fe1a049fe6db3eb1369dec2e42bf428e21" translate="yes" xml:space="preserve">
          <source>Background</source>
          <target state="translated">Background</target>
        </trans-unit>
        <trans-unit id="1dd98752209a340d0dcdca174942d6ce82db3620" translate="yes" xml:space="preserve">
          <source>Background color for ANSI black</source>
          <target state="translated">El color de fondo para el negro ANSI</target>
        </trans-unit>
        <trans-unit id="40632da777d02b59f83d637b351e1ea742fbc55a" translate="yes" xml:space="preserve">
          <source>Background color for ANSI blue</source>
          <target state="translated">Color de fondo para el azul ANSI</target>
        </trans-unit>
        <trans-unit id="1ee0d1415fdd61e029bf8a174b08b8af301cc290" translate="yes" xml:space="preserve">
          <source>Background color for ANSI cyan</source>
          <target state="translated">Color de fondo para el cian ANSI</target>
        </trans-unit>
        <trans-unit id="2f9b0212d477840dc9a95a517f1f676df1101f70" translate="yes" xml:space="preserve">
          <source>Background color for ANSI green</source>
          <target state="translated">El color de fondo para el verde ANSI</target>
        </trans-unit>
        <trans-unit id="e1ccd14402a2119916f331586bd2ab4c2428ca5a" translate="yes" xml:space="preserve">
          <source>Background color for ANSI magenta</source>
          <target state="translated">Color de fondo para ANSI magenta</target>
        </trans-unit>
        <trans-unit id="7cf93f26cedd5c21464eaa0868b798e3ebd6b4ae" translate="yes" xml:space="preserve">
          <source>Background color for ANSI red</source>
          <target state="translated">El color de fondo para el rojo ANSI</target>
        </trans-unit>
        <trans-unit id="7f1fe5e25cf1a1cec85d14631952c8ca571e2e9d" translate="yes" xml:space="preserve">
          <source>Background color for ANSI white</source>
          <target state="translated">El color de fondo para el blanco ANSI</target>
        </trans-unit>
        <trans-unit id="07d1f48bb76ddcc2d2175a99d62de4617d3fca49" translate="yes" xml:space="preserve">
          <source>Background color for ANSI yellow</source>
          <target state="translated">El color de fondo para el amarillo ANSI</target>
        </trans-unit>
        <trans-unit id="5ef680af6694df1cc3c1f0458563e4e66f0e6134" translate="yes" xml:space="preserve">
          <source>Base Map implementation type</source>
          <target state="translated">Tipo de implementación del Mapa Base</target>
        </trans-unit>
        <trans-unit id="3ee1d290223ac6b3d483f9e1e46504b745578315" translate="yes" xml:space="preserve">
          <source>Base Map type</source>
          <target state="translated">Tipo de mapa base</target>
        </trans-unit>
        <trans-unit id="234f976eee2687a182375fcfeb5aa45ad5c5772a" translate="yes" xml:space="preserve">
          <source>Base implementation type of bitsets</source>
          <target state="translated">Tipo de implementación de la base de bits</target>
        </trans-unit>
        <trans-unit id="6ccb28ad7dcaeb332be004374135b49b35681bac" translate="yes" xml:space="preserve">
          <source>Base trait for Iterable operations</source>
          <target state="translated">Rasgo básico para las operaciones Iterables</target>
        </trans-unit>
        <trans-unit id="7ff65bed3cf563f9bfb875275f178412d61ebc03" translate="yes" xml:space="preserve">
          <source>Base trait for Seq operations</source>
          <target state="translated">Rasgo base para las operaciones de la Seq</target>
        </trans-unit>
        <trans-unit id="e747708d35668a92263eecd50e6a2248763dee26" translate="yes" xml:space="preserve">
          <source>Base trait for all products, which in the standard library include at least &lt;a href=&quot;product1&quot; id=&quot;scala.Product1&quot; name=&quot;scala.Product1&quot;&gt;scala.Product1&lt;/a&gt; through &lt;a href=&quot;product22&quot; id=&quot;scala.Product22&quot; name=&quot;scala.Product22&quot;&gt;scala.Product22&lt;/a&gt; and therefore also their subclasses &lt;a href=&quot;tuple1&quot; id=&quot;scala.Tuple1&quot; name=&quot;scala.Tuple1&quot;&gt;scala.Tuple1&lt;/a&gt; through &lt;a href=&quot;tuple22&quot; id=&quot;scala.Tuple22&quot; name=&quot;scala.Tuple22&quot;&gt;scala.Tuple22&lt;/a&gt;. In addition, all case classes implement &lt;code&gt;Product&lt;/code&gt; with synthetically generated methods.</source>
          <target state="translated">Rasgo base para todos los productos, que en la biblioteca est&amp;aacute;ndar incluyen al menos &lt;a href=&quot;product1&quot; id=&quot;scala.Product1&quot; name=&quot;scala.Product1&quot;&gt;scala.Product1&lt;/a&gt; a &lt;a href=&quot;product22&quot; id=&quot;scala.Product22&quot; name=&quot;scala.Product22&quot;&gt;scala.Product22&lt;/a&gt; y por lo tanto tambi&amp;eacute;n sus subclases &lt;a href=&quot;tuple1&quot; id=&quot;scala.Tuple1&quot; name=&quot;scala.Tuple1&quot;&gt;scala.Tuple1&lt;/a&gt; a &lt;a href=&quot;tuple22&quot; id=&quot;scala.Tuple22&quot; name=&quot;scala.Tuple22&quot;&gt;scala.Tuple22&lt;/a&gt; . Adem&amp;aacute;s, todas las clases de casos implementan &lt;code&gt;Product&lt;/code&gt; o con m&amp;eacute;todos generados sint&amp;eacute;ticamente.</target>
        </trans-unit>
        <trans-unit id="77660d6edfd2bb0a089855cd6ab579160da4deed" translate="yes" xml:space="preserve">
          <source>Base trait for collection builders.</source>
          <target state="translated">Rasgo básico para los constructores de colecciones.</target>
        </trans-unit>
        <trans-unit id="d847b1b9659c5745641374ec8af96c3c217edfd3" translate="yes" xml:space="preserve">
          <source>Base trait for companion objects of collections that require an implicit &lt;code&gt;ClassTag&lt;/code&gt;.</source>
          <target state="translated">Rasgo base para objetos complementarios de colecciones que requieren un &lt;code&gt;ClassTag&lt;/code&gt; impl&amp;iacute;cito .</target>
        </trans-unit>
        <trans-unit id="868bb0076b4832bbe8109f7b3134f53fca322785" translate="yes" xml:space="preserve">
          <source>Base trait for companion objects of collections that require an implicit &lt;code&gt;Ordering&lt;/code&gt;.</source>
          <target state="translated">Rasgo base para objetos complementarios de colecciones que requieren un &lt;code&gt;Ordering&lt;/code&gt; impl&amp;iacute;cito .</target>
        </trans-unit>
        <trans-unit id="bd55c0a9361db0bbaddf0e4155d85a9c48dc0a06" translate="yes" xml:space="preserve">
          <source>Base trait for companion objects of collections that require an implicit evidence.</source>
          <target state="translated">Rasgo básico para los objetos de las colecciones que requieren una prueba implícita.</target>
        </trans-unit>
        <trans-unit id="05dea3dfd0ff79b71c639f99b7f62bcf48a6d3f9" translate="yes" xml:space="preserve">
          <source>Base trait for companion objects of unconstrained collection types that may require multiple traversals of a source collection to build a target collection &lt;code&gt;CC&lt;/code&gt;.</source>
          <target state="translated">Rasgo base para objetos complementarios de tipos de colecci&amp;oacute;n no restringidos que pueden requerir m&amp;uacute;ltiples recorridos de una colecci&amp;oacute;n de origen para construir un &lt;code&gt;CC&lt;/code&gt; de colecci&amp;oacute;n de destino .</target>
        </trans-unit>
        <trans-unit id="f7591e261c7d32152f36487d270deeb4df9294cf" translate="yes" xml:space="preserve">
          <source>Base trait for generic collections.</source>
          <target state="translated">Rasgo base para las colecciones genéricas.</target>
        </trans-unit>
        <trans-unit id="74312224f5bb1414c9eaa7a3a4633b701c40a623" translate="yes" xml:space="preserve">
          <source>Base trait for immutable indexed Seq operations</source>
          <target state="translated">Rasgo base para operaciones de secuencias indexadas inmutables</target>
        </trans-unit>
        <trans-unit id="772aa5709114c5fb9e9a1ac34c190e709998c2bd" translate="yes" xml:space="preserve">
          <source>Base trait for immutable indexed sequences that have efficient &lt;code&gt;apply&lt;/code&gt; and &lt;code&gt;length&lt;/code&gt;</source>
          <target state="translated">Rasgo base para secuencias indexadas inmutables que tienen una &lt;code&gt;apply&lt;/code&gt; y una &lt;code&gt;length&lt;/code&gt; eficientes</target>
        </trans-unit>
        <trans-unit id="3504752015aa54f506fe862fe93e0929cee65870" translate="yes" xml:space="preserve">
          <source>Base trait for immutable linear sequences that have efficient &lt;code&gt;head&lt;/code&gt; and &lt;code&gt;tail&lt;/code&gt;</source>
          <target state="translated">Rasgo base para secuencias lineales inmutables que tienen &lt;code&gt;head&lt;/code&gt; y &lt;code&gt;tail&lt;/code&gt; eficientes</target>
        </trans-unit>
        <trans-unit id="575fc6e08206131d32c1928865580b1289adef81" translate="yes" xml:space="preserve">
          <source>Base trait for immutable set collections</source>
          <target state="translated">Rasgo base para colecciones de conjuntos inmutables</target>
        </trans-unit>
        <trans-unit id="1f51d0c09aafe6519fd0b8ca0fa92e11b72d7028" translate="yes" xml:space="preserve">
          <source>Base trait for immutable set operations</source>
          <target state="translated">Rasgo base para operaciones de conjuntos inmutables</target>
        </trans-unit>
        <trans-unit id="cb39a5423bfa91647171101d62b7b1bd7c4991a5" translate="yes" xml:space="preserve">
          <source>Base trait for indexed Seq operations</source>
          <target state="translated">Rasgo base para operaciones de Seq indexadas</target>
        </trans-unit>
        <trans-unit id="f006404432c18d1bd8562defa8529c5b98a70626" translate="yes" xml:space="preserve">
          <source>Base trait for indexed sequences that have efficient &lt;code&gt;apply&lt;/code&gt; and &lt;code&gt;length&lt;/code&gt;</source>
          <target state="translated">Rasgo base para secuencias indexadas que tienen una &lt;code&gt;apply&lt;/code&gt; y una &lt;code&gt;length&lt;/code&gt; eficientes</target>
        </trans-unit>
        <trans-unit id="143a261223c4cfd072581a4334245ee0e8dbc1fd" translate="yes" xml:space="preserve">
          <source>Base trait for linear Seq operations</source>
          <target state="translated">Rasgo base para las operaciones de la Secuencia Lineal</target>
        </trans-unit>
        <trans-unit id="4b883262a13a9c55b836d421494793ba22ba5056" translate="yes" xml:space="preserve">
          <source>Base trait for linearly accessed sequences that have efficient &lt;code&gt;head&lt;/code&gt; and &lt;code&gt;tail&lt;/code&gt; operations. Known subclasses: List, LazyList</source>
          <target state="translated">Rasgo base para secuencias de acceso lineal que tienen operaciones de &lt;code&gt;head&lt;/code&gt; y &lt;code&gt;tail&lt;/code&gt; eficientes . Subclases conocidas: List, LazyList</target>
        </trans-unit>
        <trans-unit id="7b991ac5c56f5774f498b305470ddc466db7dd33" translate="yes" xml:space="preserve">
          <source>Base trait for mutable sets</source>
          <target state="translated">Rasgo base para conjuntos mutables</target>
        </trans-unit>
        <trans-unit id="8639ad30e817adf218662ffd9d2fa88b1241f60d" translate="yes" xml:space="preserve">
          <source>Base trait for sequence collections</source>
          <target state="translated">Rasgo base de las colecciones de secuencias</target>
        </trans-unit>
        <trans-unit id="43980ff1b89f20f2bc95a9d95de7b5307e941951" translate="yes" xml:space="preserve">
          <source>Base trait for set collections.</source>
          <target state="translated">Rasgo básico para colecciones de conjuntos.</target>
        </trans-unit>
        <trans-unit id="024e15d54d41bea1b72cba72113d4060fcca7930" translate="yes" xml:space="preserve">
          <source>Base trait for set operations</source>
          <target state="translated">Rasgo base para las operaciones del conjunto</target>
        </trans-unit>
        <trans-unit id="fcef197bdf0d42947ca16f25aed59aaf90934d36" translate="yes" xml:space="preserve">
          <source>Base trait for sorted collections</source>
          <target state="translated">Rasgo base para las colecciones clasificadas</target>
        </trans-unit>
        <trans-unit id="4a7c78c3b992aff0f41cb853f9fb6c9ea4bd5902" translate="yes" xml:space="preserve">
          <source>Base trait for sorted sets</source>
          <target state="translated">Rasgo base para los conjuntos clasificados</target>
        </trans-unit>
        <trans-unit id="05bbb3140b814c69b8de8db5cc77fd74600afa00" translate="yes" xml:space="preserve">
          <source>Base trait of immutable Maps implementations</source>
          <target state="translated">Rasgo básico de las implementaciones de Mapas inmutables</target>
        </trans-unit>
        <trans-unit id="ed7e15ff91a67c9e3437bf0e0026687bf71ebd41" translate="yes" xml:space="preserve">
          <source>Base type for mutable sorted map collections</source>
          <target state="translated">Tipo de base para colecciones de mapas clasificados mutables</target>
        </trans-unit>
        <trans-unit id="bd0c3e0261f0afeebc31569d79e64577dd5fe42d" translate="yes" xml:space="preserve">
          <source>Base type for mutable sorted set collections</source>
          <target state="translated">Tipo de base para colecciones de conjuntos clasificados mutables</target>
        </trans-unit>
        <trans-unit id="b002b332cc5b673109b5cd6741b93d81d137037d" translate="yes" xml:space="preserve">
          <source>Base type of bitsets.</source>
          <target state="translated">Tipo de base de los bitsets.</target>
        </trans-unit>
        <trans-unit id="637287790c3a8e52c6008b12501502ae464b681b" translate="yes" xml:space="preserve">
          <source>Base type of immutable Maps</source>
          <target state="translated">El tipo de base de los mapas inmutables</target>
        </trans-unit>
        <trans-unit id="b4769a18bfa697b0a6b7287f9c31d4dbb0078575" translate="yes" xml:space="preserve">
          <source>Base type of mutable Maps</source>
          <target state="translated">El tipo de base de los mapas mutables</target>
        </trans-unit>
        <trans-unit id="433ec37f65979f774ca662348771dbd8fd3d2693" translate="yes" xml:space="preserve">
          <source>Base type of sorted sets</source>
          <target state="translated">El tipo de base de los conjuntos ordenados</target>
        </trans-unit>
        <trans-unit id="b20cbc384159fd820ed034fd3615298ec09f5902" translate="yes" xml:space="preserve">
          <source>Basic Usage</source>
          <target state="translated">Uso básico</target>
        </trans-unit>
        <trans-unit id="d9e2a2fa197cca873e0c009c0355c11e3d71769c" translate="yes" xml:space="preserve">
          <source>Basic map operations on single entries, including &lt;code&gt;contains&lt;/code&gt; and &lt;code&gt;get&lt;/code&gt;, are typically significantly faster with &lt;code&gt;AnyRefMap&lt;/code&gt; than &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;. Note that numbers and characters are not handled specially in AnyRefMap; only plain &lt;code&gt;equals&lt;/code&gt; and &lt;code&gt;hashCode&lt;/code&gt; are used in comparisons.</source>
          <target state="translated">Las operaciones de mapa b&amp;aacute;sicas en entradas individuales, incluidos &lt;code&gt;contains&lt;/code&gt; y &lt;code&gt;get&lt;/code&gt; , suelen ser significativamente m&amp;aacute;s r&amp;aacute;pidas con &lt;code&gt;AnyRefMap&lt;/code&gt; que con &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt; . Tenga en cuenta que los n&amp;uacute;meros y caracteres no se manejan especialmente en AnyRefMap; en las comparaciones &lt;code&gt;hashCode&lt;/code&gt; se utilizan simples &lt;code&gt;equals&lt;/code&gt; y hashCode .</target>
        </trans-unit>
        <trans-unit id="84e16f3d06046483b557ddf0a186fa360d82b2dd" translate="yes" xml:space="preserve">
          <source>Basic map operations on single entries, including &lt;code&gt;contains&lt;/code&gt; and &lt;code&gt;get&lt;/code&gt;, are typically substantially faster with &lt;code&gt;LongMap&lt;/code&gt; than &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;. Methods that act on the whole map, including &lt;code&gt;foreach&lt;/code&gt; and &lt;code&gt;map&lt;/code&gt; are not in general expected to be faster than with a generic map, save for those that take particular advantage of the internal structure of the map: &lt;code&gt;foreachKey&lt;/code&gt;, &lt;code&gt;foreachValue&lt;/code&gt;, &lt;code&gt;mapValuesNow&lt;/code&gt;, and &lt;code&gt;transformValues&lt;/code&gt;.</source>
          <target state="translated">Las operaciones b&amp;aacute;sicas de mapas en entradas individuales, incluidos &lt;code&gt;contains&lt;/code&gt; y &lt;code&gt;get&lt;/code&gt; , suelen ser mucho m&amp;aacute;s r&amp;aacute;pidas con &lt;code&gt;LongMap&lt;/code&gt; que con &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt; . En general, no se espera que los m&amp;eacute;todos que act&amp;uacute;an en todo el mapa, incluidos &lt;code&gt;foreach&lt;/code&gt; y &lt;code&gt;map&lt;/code&gt; , sean m&amp;aacute;s r&amp;aacute;pidos que con un mapa gen&amp;eacute;rico, salvo aquellos que aprovechan en particular la estructura interna del mapa: &lt;code&gt;foreachKey&lt;/code&gt; , &lt;code&gt;foreachValue&lt;/code&gt; , &lt;code&gt;mapValuesNow&lt;/code&gt; y &lt;code&gt;transformValues&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f3edfa95e1921e5794b26fb102e2f49e9ef5eba" translate="yes" xml:space="preserve">
          <source>Basic use of futures is easy with the factory method on Future, which executes a provided function asynchronously, handing you back a future result of that function without blocking the current thread. In order to create the Future you will need either an implicit or explicit ExecutionContext to be provided:</source>
          <target state="translated">El uso básico de los futuros es fácil con el método de fábrica sobre el Futuro,que ejecuta una función proporcionada asincrónicamente,devolviéndole un resultado futuro de esa función sin bloquear el hilo actual.Para crear el Futuro necesitará que se proporcione un contexto de ejecución implícito o explícito:</target>
        </trans-unit>
        <trans-unit id="9d88ac259d66cfd90978b92da1f5afb30c372f50" translate="yes" xml:space="preserve">
          <source>BasicIO$</source>
          <target state="translated">BasicIO$</target>
        </trans-unit>
        <trans-unit id="c93a74e4b7d0435a5d3f205e9b8aa7cc6a74f485" translate="yes" xml:space="preserve">
          <source>BasicIO$.BufferSize()</source>
          <target state="translated">BasicIO$.BufferSize()</target>
        </trans-unit>
        <trans-unit id="b370f6c8b5ada6f35d1976880e31e5239bf07227" translate="yes" xml:space="preserve">
          <source>BasicIO$.Newline()</source>
          <target state="translated">BasicIO$.Newline()</target>
        </trans-unit>
        <trans-unit id="b42af02e2c4937c051e9909ff454628de3201c25" translate="yes" xml:space="preserve">
          <source>BasicIO$.apply()</source>
          <target state="translated">BasicIO$.apply()</target>
        </trans-unit>
        <trans-unit id="97a1f1d96a04ae7a1fa25d5813489803f4406a4c" translate="yes" xml:space="preserve">
          <source>BasicIO$.close()</source>
          <target state="translated">BasicIO$.close()</target>
        </trans-unit>
        <trans-unit id="065f322402b4d41d4def2407c9d478f72cd6b38d" translate="yes" xml:space="preserve">
          <source>BasicIO$.connectToIn()</source>
          <target state="translated">BasicIO$.connectToIn()</target>
        </trans-unit>
        <trans-unit id="e91bab1fd33aa8df95536c6240dfab3285900450" translate="yes" xml:space="preserve">
          <source>BasicIO$.getErr()</source>
          <target state="translated">BasicIO$.getErr()</target>
        </trans-unit>
        <trans-unit id="ef6a03bf6b643e3a33df64266232167b2806c7ca" translate="yes" xml:space="preserve">
          <source>BasicIO$.input()</source>
          <target state="translated">BasicIO$.input()</target>
        </trans-unit>
        <trans-unit id="39bbd8eb2c62e73976768d9d39cac043793dc16c" translate="yes" xml:space="preserve">
          <source>BasicIO$.processFully()</source>
          <target state="translated">BasicIO$.processFully()</target>
        </trans-unit>
        <trans-unit id="ac5ada74664ece03c7ea29ed8e537f93df7e2c2a" translate="yes" xml:space="preserve">
          <source>BasicIO$.processLinesFully()</source>
          <target state="translated">BasicIO$.processLinesFully()</target>
        </trans-unit>
        <trans-unit id="d76276c2c0f4b805782bf459bce4fd18e94d28fd" translate="yes" xml:space="preserve">
          <source>BasicIO$.standard()</source>
          <target state="translated">BasicIO$.standard()</target>
        </trans-unit>
        <trans-unit id="9ff05189403fdb1cd783f37c1ba893fe7ce07b20" translate="yes" xml:space="preserve">
          <source>BasicIO$.toStdErr()</source>
          <target state="translated">BasicIO$.toStdErr()</target>
        </trans-unit>
        <trans-unit id="0d4726b9bfdce41e8bd1a86563504fea1e10907d" translate="yes" xml:space="preserve">
          <source>BasicIO$.toStdOut()</source>
          <target state="translated">BasicIO$.toStdOut()</target>
        </trans-unit>
        <trans-unit id="603196ff26821ff64543b8dd753557e1e0b10d01" translate="yes" xml:space="preserve">
          <source>BasicIO$.transferFully()</source>
          <target state="translated">BasicIO$.transferFully()</target>
        </trans-unit>
        <trans-unit id="38ef550ef470041e3253cdadd6d8024f090cd2ec" translate="yes" xml:space="preserve">
          <source>BasicIO.scala</source>
          <target state="translated">BasicIO.scala</target>
        </trans-unit>
        <trans-unit id="fe4f76ef27f7845577d54e153a2e6d6bff8fa7b5" translate="yes" xml:space="preserve">
          <source>Basically, wraps a platform Matcher.</source>
          <target state="translated">Básicamente,envuelve una plataforma Matcher.</target>
        </trans-unit>
        <trans-unit id="1de9c00eb04333c488a50091e13e3ad454db4df3" translate="yes" xml:space="preserve">
          <source>Batchable</source>
          <target state="translated">Batchable</target>
        </trans-unit>
        <trans-unit id="27f43a71460523b81ec8ee7fbd30b387c6931a55" translate="yes" xml:space="preserve">
          <source>BatchingExecutor</source>
          <target state="translated">BatchingExecutor</target>
        </trans-unit>
        <trans-unit id="891a0fb1aa1de2db21cfee4ae5bfa1c02ca471b8" translate="yes" xml:space="preserve">
          <source>BatchingExecutor.scala</source>
          <target state="translated">BatchingExecutor.scala</target>
        </trans-unit>
        <trans-unit id="6e86c39222a525fdf149fbd410b659a2b6ad1676" translate="yes" xml:space="preserve">
          <source>BeanProperty</source>
          <target state="translated">BeanProperty</target>
        </trans-unit>
        <trans-unit id="0017d58e33190c3b1006218339ad2ee5d456bbe7" translate="yes" xml:space="preserve">
          <source>BeanProperty.scala</source>
          <target state="translated">BeanProperty.scala</target>
        </trans-unit>
        <trans-unit id="45f204ddc27765c6031cd585c93cfab935f97c4d" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;Either&lt;/code&gt; is already right-biased, this class is not normally needed. (It is retained in the library for now for easy cross-compilation between Scala 2.11 and 2.12.)</source>
          <target state="translated">Debido a que &lt;code&gt;Either&lt;/code&gt; ya est&amp;aacute; sesgado a la derecha, esta clase normalmente no es necesaria. (Se conserva en la biblioteca por ahora para una f&amp;aacute;cil compilaci&amp;oacute;n cruzada entre Scala 2.11 y 2.12).</target>
        </trans-unit>
        <trans-unit id="c2bb992d7c0230c2892d0da90311781f68db970a" translate="yes" xml:space="preserve">
          <source>Because of how for comprehension works, if &lt;code&gt;None&lt;/code&gt; is returned from &lt;code&gt;request.getParameter&lt;/code&gt;, the entire expression results in &lt;code&gt;None&lt;/code&gt;</source>
          <target state="translated">Debido a c&amp;oacute;mo funciona la comprensi&amp;oacute;n, si se devuelve &lt;code&gt;None&lt;/code&gt; desde &lt;code&gt;request.getParameter&lt;/code&gt; , la expresi&amp;oacute;n completa da como resultado &lt;code&gt;None&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d8fc1cae1236ce23f0052def0c3b34e385bd491" translate="yes" xml:space="preserve">
          <source>Because the behaviour of &lt;code&gt;Double&lt;/code&gt;s specified by IEEE is not consistent with a total ordering when dealing with &lt;code&gt;NaN&lt;/code&gt;, there are two orderings defined for &lt;code&gt;Double&lt;/code&gt;: &lt;code&gt;TotalOrdering&lt;/code&gt;, which is consistent with a total ordering, and &lt;code&gt;IeeeOrdering&lt;/code&gt;, which is consistent as much as possible with IEEE spec and floating point operations defined in &lt;a href=&quot;index&quot; id=&quot;scala.math&quot; name=&quot;scala.math&quot;&gt;scala.math&lt;/a&gt;.</source>
          <target state="translated">Debido a que el comportamiento de &lt;code&gt;Double&lt;/code&gt; s especificado por IEEE no es consistente con un orden total cuando se trata con &lt;code&gt;NaN&lt;/code&gt; , hay dos ordenamientos definidos para &lt;code&gt;Double&lt;/code&gt; : &lt;code&gt;TotalOrdering&lt;/code&gt; , que es consistente con un pedido total, y &lt;code&gt;IeeeOrdering&lt;/code&gt; , que es lo m&amp;aacute;s consistente posible con &lt;a href=&quot;index&quot; id=&quot;scala.math&quot; name=&quot;scala.math&quot;&gt;Especificaciones&lt;/a&gt; IEEE y operaciones de coma flotante definidas en scala.math .</target>
        </trans-unit>
        <trans-unit id="a6e4428346b16029bc2c193134b6777a3fc4677c" translate="yes" xml:space="preserve">
          <source>Because the behaviour of &lt;code&gt;Double&lt;/code&gt;s specified by IEEE is not consistent with behaviors required of an equivalence relation for &lt;code&gt;NaN&lt;/code&gt; (it is not reflexive), there are two equivalences defined for &lt;code&gt;Double&lt;/code&gt;: &lt;code&gt;StrictEquiv&lt;/code&gt;, which is reflexive, and &lt;code&gt;IeeeEquiv&lt;/code&gt;, which is consistent with IEEE spec and doubleing point operations defined in &lt;a href=&quot;index&quot; id=&quot;scala.math&quot; name=&quot;scala.math&quot;&gt;scala.math&lt;/a&gt;.</source>
          <target state="translated">Debido a que el comportamiento de &lt;code&gt;Double&lt;/code&gt; s especificado por IEEE no es consistente con los comportamientos requeridos de una relaci&amp;oacute;n de equivalencia para &lt;code&gt;NaN&lt;/code&gt; (no es reflexivo), hay dos equivalencias definidas para &lt;code&gt;Double&lt;/code&gt; : &lt;code&gt;StrictEquiv&lt;/code&gt; , que es reflexivo, e &lt;code&gt;IeeeEquiv&lt;/code&gt; , que es consistente con IEEE operaciones de especificaci&amp;oacute;n y doble punto definidas en &lt;a href=&quot;index&quot; id=&quot;scala.math&quot; name=&quot;scala.math&quot;&gt;scala.math&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6b8f029816cab191e6e015fcaeabbb2a841e9526" translate="yes" xml:space="preserve">
          <source>Because the behaviour of &lt;code&gt;Float&lt;/code&gt;s specified by IEEE is not consistent with a total ordering when dealing with &lt;code&gt;NaN&lt;/code&gt;, there are two orderings defined for &lt;code&gt;Float&lt;/code&gt;: &lt;code&gt;TotalOrdering&lt;/code&gt;, which is consistent with a total ordering, and &lt;code&gt;IeeeOrdering&lt;/code&gt;, which is consistent as much as possible with IEEE spec and floating point operations defined in &lt;a href=&quot;index&quot; id=&quot;scala.math&quot; name=&quot;scala.math&quot;&gt;scala.math&lt;/a&gt;.</source>
          <target state="translated">Debido a que el comportamiento de &lt;code&gt;Float&lt;/code&gt; s especificado por IEEE no es consistente con un orden total cuando se trata con &lt;code&gt;NaN&lt;/code&gt; , hay dos ordenamientos definidos para &lt;code&gt;Float&lt;/code&gt; : &lt;code&gt;TotalOrdering&lt;/code&gt; , que es consistente con un pedido total, y &lt;code&gt;IeeeOrdering&lt;/code&gt; , que es lo m&amp;aacute;s consistente posible con &lt;a href=&quot;index&quot; id=&quot;scala.math&quot; name=&quot;scala.math&quot;&gt;Especificaciones&lt;/a&gt; IEEE y operaciones de coma flotante definidas en scala.math .</target>
        </trans-unit>
        <trans-unit id="c3811c6d798569cf7d1422e817a9e143162c05f0" translate="yes" xml:space="preserve">
          <source>Because the behaviour of &lt;code&gt;Float&lt;/code&gt;s specified by IEEE is not consistent with behaviors required of an equivalence relation for &lt;code&gt;NaN&lt;/code&gt; (it is not reflexive), there are two equivalences defined for &lt;code&gt;Float&lt;/code&gt;: &lt;code&gt;StrictEquiv&lt;/code&gt;, which is reflexive, and &lt;code&gt;IeeeEquiv&lt;/code&gt;, which is consistent with IEEE spec and floating point operations defined in &lt;a href=&quot;index&quot; id=&quot;scala.math&quot; name=&quot;scala.math&quot;&gt;scala.math&lt;/a&gt;.</source>
          <target state="translated">Debido a que el comportamiento de &lt;code&gt;Float&lt;/code&gt; s especificado por IEEE no es consistente con los comportamientos requeridos de una relaci&amp;oacute;n de equivalencia para &lt;code&gt;NaN&lt;/code&gt; (no es reflexivo), hay dos equivalencias definidas para &lt;code&gt;Float&lt;/code&gt; : &lt;code&gt;StrictEquiv&lt;/code&gt; , que es reflexivo, e &lt;code&gt;IeeeEquiv&lt;/code&gt; , que es consistente con IEEE operaciones de especificaci&amp;oacute;n y coma flotante definidas en &lt;a href=&quot;index&quot; id=&quot;scala.math&quot; name=&quot;scala.math&quot;&gt;scala.math&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="73070de4a858bb9122f371eb66fe496836f23b36" translate="yes" xml:space="preserve">
          <source>Behavior is influenced by passing &lt;code&gt;-Xelide-below &amp;lt;arg&amp;gt;&lt;/code&gt; to &lt;code&gt;scalac&lt;/code&gt;. Calls to methods marked elidable (as well as the method body) will be omitted from generated code if the priority given the annotation is lower than that given on the command line.</source>
          <target state="translated">El comportamiento se ve influenciado al pasar &lt;code&gt;-Xelide-below &amp;lt;arg&amp;gt;&lt;/code&gt; a &lt;code&gt;scalac&lt;/code&gt; . Las llamadas a los m&amp;eacute;todos marcados como elidables (as&amp;iacute; como el cuerpo del m&amp;eacute;todo) se omitir&amp;aacute;n del c&amp;oacute;digo generado si la prioridad dada a la anotaci&amp;oacute;n es menor que la dada en la l&amp;iacute;nea de comando.</target>
        </trans-unit>
        <trans-unit id="8172a578b9a70f1b8847d554241b8b398024fcc2" translate="yes" xml:space="preserve">
          <source>Below is an example of an implementation of the &lt;code&gt;IsIterable&lt;/code&gt; trait where the &lt;code&gt;Repr&lt;/code&gt; type is &lt;code&gt;Range&lt;/code&gt;.</source>
          <target state="translated">A continuaci&amp;oacute;n se muestra un ejemplo de una implementaci&amp;oacute;n del rasgo &lt;code&gt;IsIterable&lt;/code&gt; donde el tipo &lt;code&gt;Repr&lt;/code&gt; es &lt;code&gt;Range&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8021f315ffa568143ed0ff62dfd8cc11714cc26b" translate="yes" xml:space="preserve">
          <source>Better than singly linked lists for random access, but should still be avoided for such a purpose.</source>
          <target state="translated">Es mejor que las listas vinculadas individualmente para el acceso aleatorio,pero aún así debe evitarse para tal fin.</target>
        </trans-unit>
        <trans-unit id="f89dbede66f17a67316785eee66e744a34cbfde8" translate="yes" xml:space="preserve">
          <source>BiConsumer</source>
          <target state="translated">BiConsumer</target>
        </trans-unit>
        <trans-unit id="33e26a54f4d0d5ce1d77e93e3d2288c303fa73e9" translate="yes" xml:space="preserve">
          <source>BiFunction</source>
          <target state="translated">BiFunction</target>
        </trans-unit>
        <trans-unit id="5c077f88957790654f46ad09717dedbe9f6bfb22" translate="yes" xml:space="preserve">
          <source>BiPredicate</source>
          <target state="translated">BiPredicate</target>
        </trans-unit>
        <trans-unit id="3ab0be3f93d8d722278121e74cf7b35c0bf4473f" translate="yes" xml:space="preserve">
          <source>BigDecimal</source>
          <target state="translated">BigDecimal</target>
        </trans-unit>
        <trans-unit id="79f07b10245fe26cdfd9114de63fbd84928d7293" translate="yes" xml:space="preserve">
          <source>BigDecimal$</source>
          <target state="translated">BigDecimal$</target>
        </trans-unit>
        <trans-unit id="113bc301b500dda8dd80bab2030d5c0811e487ae" translate="yes" xml:space="preserve">
          <source>BigDecimal$.RoundingMode$</source>
          <target state="translated">BigDecimal$.RoundingMode$</target>
        </trans-unit>
        <trans-unit id="8de3dd874a8568589973c7e4db0d16a240e3d82e" translate="yes" xml:space="preserve">
          <source>BigDecimal$.RoundingMode$.CEILING()</source>
          <target state="translated">BigDecimal$.RoundingMode$.CEILING()</target>
        </trans-unit>
        <trans-unit id="6f8619ef1a1893c2f1627223e1135910573c8cab" translate="yes" xml:space="preserve">
          <source>BigDecimal$.RoundingMode$.DOWN()</source>
          <target state="translated">BigDecimal$.RoundingMode$.DOWN()</target>
        </trans-unit>
        <trans-unit id="b8e88736eb5fbf142fa717b5e3fb6cd4546aa4e2" translate="yes" xml:space="preserve">
          <source>BigDecimal$.RoundingMode$.FLOOR()</source>
          <target state="translated">BigDecimal$.RoundingMode$.FLOOR()</target>
        </trans-unit>
        <trans-unit id="43ade245aa4ebca038cbac9ecb47aa26fcb58e37" translate="yes" xml:space="preserve">
          <source>BigDecimal$.RoundingMode$.HALF_DOWN()</source>
          <target state="translated">BigDecimal$.RoundingMode$.HALF_DOWN()</target>
        </trans-unit>
        <trans-unit id="f7062bf2411134ade28f6a3e728d5d549f76305f" translate="yes" xml:space="preserve">
          <source>BigDecimal$.RoundingMode$.HALF_EVEN()</source>
          <target state="translated">BigDecimal$.RoundingMode$.HALF_EVEN()</target>
        </trans-unit>
        <trans-unit id="27111883ff53e071bed7f0b9df8bc6c9eac728a5" translate="yes" xml:space="preserve">
          <source>BigDecimal$.RoundingMode$.HALF_UP()</source>
          <target state="translated">BigDecimal$.RoundingMode$.HALF_UP()</target>
        </trans-unit>
        <trans-unit id="6ca1dd821003d38005134a27c8924ba1603a6166" translate="yes" xml:space="preserve">
          <source>BigDecimal$.RoundingMode$.RoundingMode()</source>
          <target state="translated">BigDecimal$.RoundingMode$.RoundingMode()</target>
        </trans-unit>
        <trans-unit id="a5991f87b7456e6a04ad7b62a637c24401490c53" translate="yes" xml:space="preserve">
          <source>BigDecimal$.RoundingMode$.UNNECESSARY()</source>
          <target state="translated">BigDecimal$.RoundingMode$.UNNECESSARY()</target>
        </trans-unit>
        <trans-unit id="612652a54d06f78e9bdd02e1e17d71f0fa3813a6" translate="yes" xml:space="preserve">
          <source>BigDecimal$.RoundingMode$.UP()</source>
          <target state="translated">BigDecimal$.RoundingMode$.UP()</target>
        </trans-unit>
        <trans-unit id="0547c492a4ab73185e1b1f544d541ff126486835" translate="yes" xml:space="preserve">
          <source>BigDecimal$.RoundingMode()</source>
          <target state="translated">BigDecimal$.RoundingMode()</target>
        </trans-unit>
        <trans-unit id="ba2a88d8fb6221b92a6f2b2898a7d81acb36c73f" translate="yes" xml:space="preserve">
          <source>BigDecimal$.apply()</source>
          <target state="translated">BigDecimal$.apply()</target>
        </trans-unit>
        <trans-unit id="0c856b8d14a1eaecace99d88703b628a8ba98587" translate="yes" xml:space="preserve">
          <source>BigDecimal$.binary()</source>
          <target state="translated">BigDecimal$.binary()</target>
        </trans-unit>
        <trans-unit id="3e66cbe5de656e7db2daa59956b6ccba2e05c6d8" translate="yes" xml:space="preserve">
          <source>BigDecimal$.decimal()</source>
          <target state="translated">BigDecimal$.decimal()</target>
        </trans-unit>
        <trans-unit id="079e75614ee6f552567c5c0c3471aeb7b5e903f5" translate="yes" xml:space="preserve">
          <source>BigDecimal$.defaultMathContext()</source>
          <target state="translated">BigDecimal$.defaultMathContext()</target>
        </trans-unit>
        <trans-unit id="f4be304c6deafa69316188f7a06619296e1f346d" translate="yes" xml:space="preserve">
          <source>BigDecimal$.double2bigDecimal()</source>
          <target state="translated">BigDecimal$.double2bigDecimal()</target>
        </trans-unit>
        <trans-unit id="45757d9fb18f0f52a206f59ca595a58ede25d303" translate="yes" xml:space="preserve">
          <source>BigDecimal$.exact()</source>
          <target state="translated">BigDecimal$.exact()</target>
        </trans-unit>
        <trans-unit id="d234e276e635a8901bdbc155431b1f3ed1fcee05" translate="yes" xml:space="preserve">
          <source>BigDecimal$.int2bigDecimal()</source>
          <target state="translated">BigDecimal$.int2bigDecimal()</target>
        </trans-unit>
        <trans-unit id="0d5dc0ad8ae128fc3778350559249b171d38ef40" translate="yes" xml:space="preserve">
          <source>BigDecimal$.javaBigDecimal2bigDecimal()</source>
          <target state="translated">BigDecimal$.javaBigDecimal2bigDecimal()</target>
        </trans-unit>
        <trans-unit id="9763e125a1b59610afd092d72bc4eb6327fea79a" translate="yes" xml:space="preserve">
          <source>BigDecimal$.long2bigDecimal()</source>
          <target state="translated">BigDecimal$.long2bigDecimal()</target>
        </trans-unit>
        <trans-unit id="4241ea07324e0b126b3df094e5e86bb01718d621" translate="yes" xml:space="preserve">
          <source>BigDecimal$.valueOf()</source>
          <target state="translated">BigDecimal$.valueOf()</target>
        </trans-unit>
        <trans-unit id="5d87000de3a23481c7c26ffef01faa997af197b2" translate="yes" xml:space="preserve">
          <source>BigDecimal.%()</source>
          <target state="translated">BigDecimal.%()</target>
        </trans-unit>
        <trans-unit id="a7768620d95a03a8725c806a2265e6b3aae6840a" translate="yes" xml:space="preserve">
          <source>BigDecimal.*()</source>
          <target state="translated">BigDecimal.*()</target>
        </trans-unit>
        <trans-unit id="02e329d0389e46e6f0b09f6667e9dc211bbcae20" translate="yes" xml:space="preserve">
          <source>BigDecimal.+()</source>
          <target state="translated">BigDecimal.+()</target>
        </trans-unit>
        <trans-unit id="cc26e4fb027f524bf6db3b4c6d27911dfeb0028b" translate="yes" xml:space="preserve">
          <source>BigDecimal.-()</source>
          <target state="translated">BigDecimal.-()</target>
        </trans-unit>
        <trans-unit id="fdc98f2d0af0905c319d5c7ac7503ef48c6f7de0" translate="yes" xml:space="preserve">
          <source>BigDecimal./%()</source>
          <target state="translated">BigDecimal./%()</target>
        </trans-unit>
        <trans-unit id="9888c894ea23e5310208601c0c40316625651dfb" translate="yes" xml:space="preserve">
          <source>BigDecimal./()</source>
          <target state="translated">BigDecimal./()</target>
        </trans-unit>
        <trans-unit id="25f722d3fe35dcea63538d961dc3e122eea20e6a" translate="yes" xml:space="preserve">
          <source>BigDecimal.BigDecimal()</source>
          <target state="translated">BigDecimal.BigDecimal()</target>
        </trans-unit>
        <trans-unit id="2767641396beef6edf6cdd69cd773cdaec3d5b6e" translate="yes" xml:space="preserve">
          <source>BigDecimal.abs()</source>
          <target state="translated">BigDecimal.abs()</target>
        </trans-unit>
        <trans-unit id="4323028be9680af0395246a52ecd64aadb4ce9f7" translate="yes" xml:space="preserve">
          <source>BigDecimal.apply()</source>
          <target state="translated">BigDecimal.apply()</target>
        </trans-unit>
        <trans-unit id="2964ec8c65b8cb98a57851ffd55c5bfd46434b0f" translate="yes" xml:space="preserve">
          <source>BigDecimal.bigDecimal()</source>
          <target state="translated">BigDecimal.bigDecimal()</target>
        </trans-unit>
        <trans-unit id="a8df250e925f154e440aad53bc6f71278c4e67d8" translate="yes" xml:space="preserve">
          <source>BigDecimal.byteValue()</source>
          <target state="translated">BigDecimal.byteValue()</target>
        </trans-unit>
        <trans-unit id="efb0dd84687fa68344fde5fde7cbcf4432ab01b3" translate="yes" xml:space="preserve">
          <source>BigDecimal.charValue()</source>
          <target state="translated">BigDecimal.charValue()</target>
        </trans-unit>
        <trans-unit id="38faa73412c2c23123597a7057627f95d6443cab" translate="yes" xml:space="preserve">
          <source>BigDecimal.compare()</source>
          <target state="translated">BigDecimal.compare()</target>
        </trans-unit>
        <trans-unit id="a078d894ee09e8c61c84c6653153cc6bf5ecfbad" translate="yes" xml:space="preserve">
          <source>BigDecimal.doubleValue()</source>
          <target state="translated">BigDecimal.doubleValue()</target>
        </trans-unit>
        <trans-unit id="9da8d2806698d2ebd6d4246ee216897217cf929d" translate="yes" xml:space="preserve">
          <source>BigDecimal.equals()</source>
          <target state="translated">BigDecimal.equals()</target>
        </trans-unit>
        <trans-unit id="964fc0fac8e09a231b61ae24eb52f007bcf51eee" translate="yes" xml:space="preserve">
          <source>BigDecimal.floatValue()</source>
          <target state="translated">BigDecimal.floatValue()</target>
        </trans-unit>
        <trans-unit id="08f93cf87b515560ca4e8ced7821c6340bdd2300" translate="yes" xml:space="preserve">
          <source>BigDecimal.hashCode()</source>
          <target state="translated">BigDecimal.hashCode()</target>
        </trans-unit>
        <trans-unit id="774a417ba71a910d2cfee3343271fee0fd5fec1e" translate="yes" xml:space="preserve">
          <source>BigDecimal.intValue()</source>
          <target state="translated">BigDecimal.intValue()</target>
        </trans-unit>
        <trans-unit id="1ca087a60eb03d5600f300f15564324430d0cca1" translate="yes" xml:space="preserve">
          <source>BigDecimal.isBinaryDouble()</source>
          <target state="translated">BigDecimal.isBinaryDouble()</target>
        </trans-unit>
        <trans-unit id="0877a259ae0b34aaa7a7bdc53fb40d06150bcee1" translate="yes" xml:space="preserve">
          <source>BigDecimal.isBinaryFloat()</source>
          <target state="translated">BigDecimal.isBinaryFloat()</target>
        </trans-unit>
        <trans-unit id="9e728aba05e86204d301f21d1f2448ef8fe081f9" translate="yes" xml:space="preserve">
          <source>BigDecimal.isDecimalDouble()</source>
          <target state="translated">BigDecimal.isDecimalDouble()</target>
        </trans-unit>
        <trans-unit id="01f9ece424366c8b364dc3b1ecdd8e1762862fc4" translate="yes" xml:space="preserve">
          <source>BigDecimal.isDecimalFloat()</source>
          <target state="translated">BigDecimal.isDecimalFloat()</target>
        </trans-unit>
        <trans-unit id="ca8dc55c74e4659a8f9ae7c5bbf5cf6427adeabe" translate="yes" xml:space="preserve">
          <source>BigDecimal.isExactDouble()</source>
          <target state="translated">BigDecimal.isExactDouble()</target>
        </trans-unit>
        <trans-unit id="e52201dc16d30f056c79018527bb774ca59e934c" translate="yes" xml:space="preserve">
          <source>BigDecimal.isExactFloat()</source>
          <target state="translated">BigDecimal.isExactFloat()</target>
        </trans-unit>
        <trans-unit id="8ded15343476d05fff6b4b540305cdc1837f3d39" translate="yes" xml:space="preserve">
          <source>BigDecimal.isValidByte()</source>
          <target state="translated">BigDecimal.isValidByte()</target>
        </trans-unit>
        <trans-unit id="14c240e78141e551b24def5a14e93864acc4f8b3" translate="yes" xml:space="preserve">
          <source>BigDecimal.isValidChar()</source>
          <target state="translated">BigDecimal.isValidChar()</target>
        </trans-unit>
        <trans-unit id="321e09857be5b514ec88aed8a5cb3f919e96aa1f" translate="yes" xml:space="preserve">
          <source>BigDecimal.isValidInt()</source>
          <target state="translated">BigDecimal.isValidInt()</target>
        </trans-unit>
        <trans-unit id="8ec3966cef6906313f8c4a2af590c1fd31a1b90e" translate="yes" xml:space="preserve">
          <source>BigDecimal.isValidLong()</source>
          <target state="translated">BigDecimal.isValidLong()</target>
        </trans-unit>
        <trans-unit id="3b27e9f44b632090797881d2913434499e77a40a" translate="yes" xml:space="preserve">
          <source>BigDecimal.isValidShort()</source>
          <target state="translated">BigDecimal.isValidShort()</target>
        </trans-unit>
        <trans-unit id="654d4911d9ef07845b1240289731a4fc91a03f18" translate="yes" xml:space="preserve">
          <source>BigDecimal.isWhole()</source>
          <target state="translated">BigDecimal.isWhole()</target>
        </trans-unit>
        <trans-unit id="fadb858f71baf1fdd9e8dff73b22b8a450b9d359" translate="yes" xml:space="preserve">
          <source>BigDecimal.longValue()</source>
          <target state="translated">BigDecimal.longValue()</target>
        </trans-unit>
        <trans-unit id="65d06d03a8d3cfc3b4353d13f9ce18c42bc9e09f" translate="yes" xml:space="preserve">
          <source>BigDecimal.max()</source>
          <target state="translated">BigDecimal.max()</target>
        </trans-unit>
        <trans-unit id="50a5228caa351b43195cad61f464363e2cada2c5" translate="yes" xml:space="preserve">
          <source>BigDecimal.mc()</source>
          <target state="translated">BigDecimal.mc()</target>
        </trans-unit>
        <trans-unit id="71763a41677e7852aa3186be51337790db6fa030" translate="yes" xml:space="preserve">
          <source>BigDecimal.min()</source>
          <target state="translated">BigDecimal.min()</target>
        </trans-unit>
        <trans-unit id="1564bae0247aa3feb7e24fe088cc18eb1307bdeb" translate="yes" xml:space="preserve">
          <source>BigDecimal.pow()</source>
          <target state="translated">BigDecimal.pow()</target>
        </trans-unit>
        <trans-unit id="3f5caedb33ddae4cb7982bf1c46e74844c87ad30" translate="yes" xml:space="preserve">
          <source>BigDecimal.precision()</source>
          <target state="translated">BigDecimal.precision()</target>
        </trans-unit>
        <trans-unit id="4cceb8d4a87847f5d86cb52706285a70f004f6a7" translate="yes" xml:space="preserve">
          <source>BigDecimal.quot()</source>
          <target state="translated">BigDecimal.quot()</target>
        </trans-unit>
        <trans-unit id="f87ed605072a6b4687f2d1d58956003be78f45ea" translate="yes" xml:space="preserve">
          <source>BigDecimal.remainder()</source>
          <target state="translated">BigDecimal.remainder()</target>
        </trans-unit>
        <trans-unit id="f21b816cab583435231d54e2622191dd3b7c2d39" translate="yes" xml:space="preserve">
          <source>BigDecimal.round()</source>
          <target state="translated">BigDecimal.round()</target>
        </trans-unit>
        <trans-unit id="eb7b0c6f49aef26f954633d686acc01c2fe153a4" translate="yes" xml:space="preserve">
          <source>BigDecimal.rounded()</source>
          <target state="translated">BigDecimal.rounded()</target>
        </trans-unit>
        <trans-unit id="f1b4932b4118afd5864d02daffd087d242431821" translate="yes" xml:space="preserve">
          <source>BigDecimal.scala</source>
          <target state="translated">BigDecimal.scala</target>
        </trans-unit>
        <trans-unit id="1959545bd6fba4fdeea7a277f7a767a744305541" translate="yes" xml:space="preserve">
          <source>BigDecimal.scale()</source>
          <target state="translated">BigDecimal.scale()</target>
        </trans-unit>
        <trans-unit id="dcc7e68b2250081ca0b47e5a0375fc9654c0eb19" translate="yes" xml:space="preserve">
          <source>BigDecimal.setScale()</source>
          <target state="translated">BigDecimal.setScale()</target>
        </trans-unit>
        <trans-unit id="e0ec6151e9d3478e53bf1aefda2fe6658228386b" translate="yes" xml:space="preserve">
          <source>BigDecimal.shortValue()</source>
          <target state="translated">BigDecimal.shortValue()</target>
        </trans-unit>
        <trans-unit id="740554cc901e591d2a4003a3d33dd275d853ecb1" translate="yes" xml:space="preserve">
          <source>BigDecimal.sign()</source>
          <target state="translated">BigDecimal.sign()</target>
        </trans-unit>
        <trans-unit id="b7561990379d31f2c12df7e668b7df5d020cbc5b" translate="yes" xml:space="preserve">
          <source>BigDecimal.signum()</source>
          <target state="translated">BigDecimal.signum()</target>
        </trans-unit>
        <trans-unit id="bb3574a4f91c1b876f75c81ac53253c36b254fe8" translate="yes" xml:space="preserve">
          <source>BigDecimal.to()</source>
          <target state="translated">BigDecimal.to()</target>
        </trans-unit>
        <trans-unit id="adb9d17d11cfc31cee84c32d42e756eb3bf0798d" translate="yes" xml:space="preserve">
          <source>BigDecimal.toBigInt()</source>
          <target state="translated">BigDecimal.toBigInt()</target>
        </trans-unit>
        <trans-unit id="5db72a92c6f63986a29004ed44b5a4221f1f3234" translate="yes" xml:space="preserve">
          <source>BigDecimal.toBigIntExact()</source>
          <target state="translated">BigDecimal.toBigIntExact()</target>
        </trans-unit>
        <trans-unit id="1276a63f53887af8ff05bdee59b831211dd1e24c" translate="yes" xml:space="preserve">
          <source>BigDecimal.toByteExact()</source>
          <target state="translated">BigDecimal.toByteExact()</target>
        </trans-unit>
        <trans-unit id="0323b91c0ac420a5cfded797dc51be4fbd88c2bf" translate="yes" xml:space="preserve">
          <source>BigDecimal.toIntExact()</source>
          <target state="translated">BigDecimal.toIntExact()</target>
        </trans-unit>
        <trans-unit id="7518aa0b491dea6353dac85f7612ba4bd9172fa5" translate="yes" xml:space="preserve">
          <source>BigDecimal.toLongExact()</source>
          <target state="translated">BigDecimal.toLongExact()</target>
        </trans-unit>
        <trans-unit id="6989ccef1715b7ce1729bec6c9e2443c068bebad" translate="yes" xml:space="preserve">
          <source>BigDecimal.toShortExact()</source>
          <target state="translated">BigDecimal.toShortExact()</target>
        </trans-unit>
        <trans-unit id="69e67dea669abc9252cb6d4318c85de233450e75" translate="yes" xml:space="preserve">
          <source>BigDecimal.toString()</source>
          <target state="translated">BigDecimal.toString()</target>
        </trans-unit>
        <trans-unit id="3bbcc46b252e80118de2b4a56b98854aebf92c63" translate="yes" xml:space="preserve">
          <source>BigDecimal.ulp()</source>
          <target state="translated">BigDecimal.ulp()</target>
        </trans-unit>
        <trans-unit id="0efd6775e981223bb187c231891c22f5efb6cfb0" translate="yes" xml:space="preserve">
          <source>BigDecimal.unary_-()</source>
          <target state="translated">BigDecimal.unary_-()</target>
        </trans-unit>
        <trans-unit id="9f8c2c933c6af342003a21aeec43a447cfd8db8d" translate="yes" xml:space="preserve">
          <source>BigDecimal.underlying()</source>
          <target state="translated">BigDecimal.underlying()</target>
        </trans-unit>
        <trans-unit id="cc7114e6091f4859aff375c325d95bbd82344e76" translate="yes" xml:space="preserve">
          <source>BigDecimal.until()</source>
          <target state="translated">BigDecimal.until()</target>
        </trans-unit>
        <trans-unit id="b78eff8afc9a4f14d82f4386f8854cd041c39684" translate="yes" xml:space="preserve">
          <source>BigDecimalAsIfIntegral</source>
          <target state="translated">BigDecimalAsIfIntegral</target>
        </trans-unit>
        <trans-unit id="cc063afd036af5eecf5b4b1a08d5ea7799e14517" translate="yes" xml:space="preserve">
          <source>BigDecimalIsFractional</source>
          <target state="translated">BigDecimalIsFractional</target>
        </trans-unit>
        <trans-unit id="948f70e8d9053f46439ba57d043632fa6e5a5de4" translate="yes" xml:space="preserve">
          <source>BigInt</source>
          <target state="translated">BigInt</target>
        </trans-unit>
        <trans-unit id="c5117adf73164e243c17bb67abe79959d69f18ec" translate="yes" xml:space="preserve">
          <source>BigInt$</source>
          <target state="translated">BigInt$</target>
        </trans-unit>
        <trans-unit id="d6d30a781862fbcb50e197f8eef8c352e49da06f" translate="yes" xml:space="preserve">
          <source>BigInt$.apply()</source>
          <target state="translated">BigInt$.apply()</target>
        </trans-unit>
        <trans-unit id="daf521ba19dbd76809e113854b8fcf3fe7bb2100" translate="yes" xml:space="preserve">
          <source>BigInt$.int2bigInt()</source>
          <target state="translated">BigInt$.int2bigInt()</target>
        </trans-unit>
        <trans-unit id="4f64e9d49ab70a574ac5a77fb8f136487ba038f7" translate="yes" xml:space="preserve">
          <source>BigInt$.javaBigInteger2bigInt()</source>
          <target state="translated">BigInt$.javaBigInteger2bigInt()</target>
        </trans-unit>
        <trans-unit id="6c2ad5db737538d29a7dee89a9fe4b99d24a81c0" translate="yes" xml:space="preserve">
          <source>BigInt$.long2bigInt()</source>
          <target state="translated">BigInt$.long2bigInt()</target>
        </trans-unit>
        <trans-unit id="2091db393f02d417b7cba054602bb0957bdbad7e" translate="yes" xml:space="preserve">
          <source>BigInt$.probablePrime()</source>
          <target state="translated">BigInt$.probablePrime()</target>
        </trans-unit>
        <trans-unit id="c3fe62a439c11e1be2339e9e20e921a8121e14e5" translate="yes" xml:space="preserve">
          <source>BigInt.%()</source>
          <target state="translated">BigInt.%()</target>
        </trans-unit>
        <trans-unit id="b0251e34c7f423ecaca56faad6a1ac33eb7dd1f1" translate="yes" xml:space="preserve">
          <source>BigInt.&amp;amp;()</source>
          <target state="translated">BigInt.&amp;amp;()</target>
        </trans-unit>
        <trans-unit id="2a4156620e82b5424eceb3facbfdd60151842852" translate="yes" xml:space="preserve">
          <source>BigInt.&amp;amp;~()</source>
          <target state="translated">BigInt.&amp;amp;~()</target>
        </trans-unit>
        <trans-unit id="eed02c28ecb4831620dbce418a4f80db67c2670f" translate="yes" xml:space="preserve">
          <source>BigInt.&amp;gt;&amp;gt;()</source>
          <target state="translated">BigInt.&amp;gt;&amp;gt;()</target>
        </trans-unit>
        <trans-unit id="1cf6f9fc65240227a350957a5f25ddec7ae08d4f" translate="yes" xml:space="preserve">
          <source>BigInt.&amp;lt;&amp;lt;()</source>
          <target state="translated">BigInt.&amp;lt;&amp;lt;()</target>
        </trans-unit>
        <trans-unit id="47ea4623aa5ca9987b374656aa6c5730fc1f5d66" translate="yes" xml:space="preserve">
          <source>BigInt.*()</source>
          <target state="translated">BigInt.*()</target>
        </trans-unit>
        <trans-unit id="3b8bd5b0dfb49b4191746d1f691e58f3a47981ad" translate="yes" xml:space="preserve">
          <source>BigInt.+()</source>
          <target state="translated">BigInt.+()</target>
        </trans-unit>
        <trans-unit id="049c8d0d8b36b5bb5f50f76742cdd521f3bdb10f" translate="yes" xml:space="preserve">
          <source>BigInt.-()</source>
          <target state="translated">BigInt.-()</target>
        </trans-unit>
        <trans-unit id="29056782f54f157fee5ffd80e9527f6ea60d1806" translate="yes" xml:space="preserve">
          <source>BigInt./%()</source>
          <target state="translated">BigInt./%()</target>
        </trans-unit>
        <trans-unit id="36007c050a3e2fbc517a98ad6827a520af4399ef" translate="yes" xml:space="preserve">
          <source>BigInt./()</source>
          <target state="translated">BigInt./()</target>
        </trans-unit>
        <trans-unit id="c96d3bc48c70321f71d6c1e43716ee7cad4c3930" translate="yes" xml:space="preserve">
          <source>BigInt.BigInt()</source>
          <target state="translated">BigInt.BigInt()</target>
        </trans-unit>
        <trans-unit id="410cb600bd1ae6323666d42148bc5cf07731564c" translate="yes" xml:space="preserve">
          <source>BigInt.^()</source>
          <target state="translated">BigInt.^()</target>
        </trans-unit>
        <trans-unit id="ddf14a754c1e52d89999ad6d1f824e1257ed37b0" translate="yes" xml:space="preserve">
          <source>BigInt.abs()</source>
          <target state="translated">BigInt.abs()</target>
        </trans-unit>
        <trans-unit id="4ff69fb1ce7d66c8032908c46deb124ffbb8f952" translate="yes" xml:space="preserve">
          <source>BigInt.bigInteger()</source>
          <target state="translated">BigInt.bigInteger()</target>
        </trans-unit>
        <trans-unit id="352383a13bfe14391dbb0f63fa76eb221db4d615" translate="yes" xml:space="preserve">
          <source>BigInt.bitCount()</source>
          <target state="translated">BigInt.bitCount()</target>
        </trans-unit>
        <trans-unit id="3651d357c629d786a7b77b6b9a2b3fa8d4cc2415" translate="yes" xml:space="preserve">
          <source>BigInt.bitLength()</source>
          <target state="translated">BigInt.bitLength()</target>
        </trans-unit>
        <trans-unit id="d423388a2070b38fd01823b8845d886269dad66e" translate="yes" xml:space="preserve">
          <source>BigInt.byteValue()</source>
          <target state="translated">BigInt.byteValue()</target>
        </trans-unit>
        <trans-unit id="2715cfb7da9485c77e32f6b45d6ad46f312268f7" translate="yes" xml:space="preserve">
          <source>BigInt.charValue()</source>
          <target state="translated">BigInt.charValue()</target>
        </trans-unit>
        <trans-unit id="0035aecf140f69250b4e36a2021866b7d6b399e0" translate="yes" xml:space="preserve">
          <source>BigInt.clearBit()</source>
          <target state="translated">BigInt.clearBit()</target>
        </trans-unit>
        <trans-unit id="3114c8a85277b558d195dda151db9fb01d79d362" translate="yes" xml:space="preserve">
          <source>BigInt.compare()</source>
          <target state="translated">BigInt.compare()</target>
        </trans-unit>
        <trans-unit id="791cbc93e3857116d97c3793d38f400dc027c26e" translate="yes" xml:space="preserve">
          <source>BigInt.doubleValue()</source>
          <target state="translated">BigInt.doubleValue()</target>
        </trans-unit>
        <trans-unit id="68e0b02fd1e60474fd8183b5e9d815bccf2d8720" translate="yes" xml:space="preserve">
          <source>BigInt.equals()</source>
          <target state="translated">BigInt.equals()</target>
        </trans-unit>
        <trans-unit id="338720d44c9426815e1e218d910abd2a21c06751" translate="yes" xml:space="preserve">
          <source>BigInt.flipBit()</source>
          <target state="translated">BigInt.flipBit()</target>
        </trans-unit>
        <trans-unit id="ed892332058c0eb197897b208b3c8ee3544ad829" translate="yes" xml:space="preserve">
          <source>BigInt.floatValue()</source>
          <target state="translated">BigInt.floatValue()</target>
        </trans-unit>
        <trans-unit id="867658eff1eede1edfdf65db22b4de3b3232edac" translate="yes" xml:space="preserve">
          <source>BigInt.gcd()</source>
          <target state="translated">BigInt.gcd()</target>
        </trans-unit>
        <trans-unit id="ec86cf33fc36c97a2584f14ef9e8bd3c2adfbaba" translate="yes" xml:space="preserve">
          <source>BigInt.hashCode()</source>
          <target state="translated">BigInt.hashCode()</target>
        </trans-unit>
        <trans-unit id="53d327bf6e8f974abd41e6e2e9cc6fb23113177d" translate="yes" xml:space="preserve">
          <source>BigInt.intValue()</source>
          <target state="translated">BigInt.intValue()</target>
        </trans-unit>
        <trans-unit id="3e09dcee0b4f74668faafd30c8c4691b296685ed" translate="yes" xml:space="preserve">
          <source>BigInt.isProbablePrime()</source>
          <target state="translated">BigInt.isProbablePrime()</target>
        </trans-unit>
        <trans-unit id="7faa1fe2da9b38fcfb3819a649915af0666f788e" translate="yes" xml:space="preserve">
          <source>BigInt.isValidByte()</source>
          <target state="translated">BigInt.isValidByte()</target>
        </trans-unit>
        <trans-unit id="ff950ff2a843418b743f21af0d6b96cc18eb27ea" translate="yes" xml:space="preserve">
          <source>BigInt.isValidChar()</source>
          <target state="translated">BigInt.isValidChar()</target>
        </trans-unit>
        <trans-unit id="a4ecd61e81e4a589644f9e3f514d0e92363aea0f" translate="yes" xml:space="preserve">
          <source>BigInt.isValidDouble()</source>
          <target state="translated">BigInt.isValidDouble()</target>
        </trans-unit>
        <trans-unit id="459dd878d771a930ba9a35dc8225f8e47865691c" translate="yes" xml:space="preserve">
          <source>BigInt.isValidFloat()</source>
          <target state="translated">BigInt.isValidFloat()</target>
        </trans-unit>
        <trans-unit id="9b4e886c2ad55c7989d8401bc6b0140405bdbdd0" translate="yes" xml:space="preserve">
          <source>BigInt.isValidInt()</source>
          <target state="translated">BigInt.isValidInt()</target>
        </trans-unit>
        <trans-unit id="c7ffeaaf4f66fa3713776948020308c3bf5cfd26" translate="yes" xml:space="preserve">
          <source>BigInt.isValidLong()</source>
          <target state="translated">BigInt.isValidLong()</target>
        </trans-unit>
        <trans-unit id="97906e795ecc6aa1f710adae274db0932e0529e8" translate="yes" xml:space="preserve">
          <source>BigInt.isValidShort()</source>
          <target state="translated">BigInt.isValidShort()</target>
        </trans-unit>
        <trans-unit id="76878ae122322bbb98d8aec20397a59b189046cd" translate="yes" xml:space="preserve">
          <source>BigInt.isWhole()</source>
          <target state="translated">BigInt.isWhole()</target>
        </trans-unit>
        <trans-unit id="c145e846f190daa980f15dfbb553f19e981b6ad7" translate="yes" xml:space="preserve">
          <source>BigInt.longValue()</source>
          <target state="translated">BigInt.longValue()</target>
        </trans-unit>
        <trans-unit id="f38878e937c7b368f2de5320aa92a832039f8407" translate="yes" xml:space="preserve">
          <source>BigInt.lowestSetBit()</source>
          <target state="translated">BigInt.lowestSetBit()</target>
        </trans-unit>
        <trans-unit id="551e088940e84e62b16316793b84ef20bbe87053" translate="yes" xml:space="preserve">
          <source>BigInt.max()</source>
          <target state="translated">BigInt.max()</target>
        </trans-unit>
        <trans-unit id="94c2c7370f54b40c8b8694beb71fc2e2447683da" translate="yes" xml:space="preserve">
          <source>BigInt.min()</source>
          <target state="translated">BigInt.min()</target>
        </trans-unit>
        <trans-unit id="8e6fa7b02f545d5c15fe54ba7178508903d52df0" translate="yes" xml:space="preserve">
          <source>BigInt.mod()</source>
          <target state="translated">BigInt.mod()</target>
        </trans-unit>
        <trans-unit id="57054e8c5b1ede84a3a09f802cef5a7853845383" translate="yes" xml:space="preserve">
          <source>BigInt.modInverse()</source>
          <target state="translated">BigInt.modInverse()</target>
        </trans-unit>
        <trans-unit id="1394f288cbac3423d515189a83e8b1ad5718615f" translate="yes" xml:space="preserve">
          <source>BigInt.modPow()</source>
          <target state="translated">BigInt.modPow()</target>
        </trans-unit>
        <trans-unit id="af25f5cb406317ebec242aa151fc62559b58f427" translate="yes" xml:space="preserve">
          <source>BigInt.pow()</source>
          <target state="translated">BigInt.pow()</target>
        </trans-unit>
        <trans-unit id="07a0eed24773c1107357036e45ca6418449cd912" translate="yes" xml:space="preserve">
          <source>BigInt.scala</source>
          <target state="translated">BigInt.scala</target>
        </trans-unit>
        <trans-unit id="1bbdb9364edc03a012b7ee2a642d320016dcbe17" translate="yes" xml:space="preserve">
          <source>BigInt.setBit()</source>
          <target state="translated">BigInt.setBit()</target>
        </trans-unit>
        <trans-unit id="1ff2c2bb4636203208b6a0a5496d75ba5f3a8e10" translate="yes" xml:space="preserve">
          <source>BigInt.shortValue()</source>
          <target state="translated">BigInt.shortValue()</target>
        </trans-unit>
        <trans-unit id="8e33c762019f8905e856323638e9dd27c5774d27" translate="yes" xml:space="preserve">
          <source>BigInt.sign()</source>
          <target state="translated">BigInt.sign()</target>
        </trans-unit>
        <trans-unit id="8c062e7eb948bf34e3a01255aeeb23d8c89acf5b" translate="yes" xml:space="preserve">
          <source>BigInt.signum()</source>
          <target state="translated">BigInt.signum()</target>
        </trans-unit>
        <trans-unit id="14fb18acb17b65bfddf45416ce408952c90efd9c" translate="yes" xml:space="preserve">
          <source>BigInt.testBit()</source>
          <target state="translated">BigInt.testBit()</target>
        </trans-unit>
        <trans-unit id="4e66f2b10a82319e236ccef7a4f1f29b2602bb5b" translate="yes" xml:space="preserve">
          <source>BigInt.to()</source>
          <target state="translated">BigInt.to()</target>
        </trans-unit>
        <trans-unit id="1d5de6502302d077b3fbbab29841c510530e407a" translate="yes" xml:space="preserve">
          <source>BigInt.toByteArray()</source>
          <target state="translated">BigInt.toByteArray()</target>
        </trans-unit>
        <trans-unit id="4c97ac3ff44936b04d321a995cd0d61537c569f6" translate="yes" xml:space="preserve">
          <source>BigInt.toString()</source>
          <target state="translated">BigInt.toString()</target>
        </trans-unit>
        <trans-unit id="c17e861760c59d1b6ead23a0af0e21bcd334acf2" translate="yes" xml:space="preserve">
          <source>BigInt.unary_-()</source>
          <target state="translated">BigInt.unary_-()</target>
        </trans-unit>
        <trans-unit id="15a2685b1d047ba5a816855897bf820655257a17" translate="yes" xml:space="preserve">
          <source>BigInt.unary_~()</source>
          <target state="translated">BigInt.unary_~()</target>
        </trans-unit>
        <trans-unit id="8e31ca924a565d1cac5a9e2fa606bc7efcdcc08d" translate="yes" xml:space="preserve">
          <source>BigInt.underlying()</source>
          <target state="translated">BigInt.underlying()</target>
        </trans-unit>
        <trans-unit id="78a898413b469305a787892139dc65cccb760129" translate="yes" xml:space="preserve">
          <source>BigInt.until()</source>
          <target state="translated">BigInt.until()</target>
        </trans-unit>
        <trans-unit id="af88d9ce57d1f81d848cd91571d78663008afaef" translate="yes" xml:space="preserve">
          <source>BigInt.|()</source>
          <target state="translated">BigInt.|()</target>
        </trans-unit>
        <trans-unit id="cb27967f1dfec35029b8d017da7a67cc6443522c" translate="yes" xml:space="preserve">
          <source>BigIntIsIntegral</source>
          <target state="translated">BigIntIsIntegral</target>
        </trans-unit>
        <trans-unit id="b5e821ae87f09e53112453d86dcbbd88dc65e994" translate="yes" xml:space="preserve">
          <source>Binds the given function across &lt;code&gt;Left&lt;/code&gt;.</source>
          <target state="translated">Vincula la funci&amp;oacute;n dada a la &lt;code&gt;Left&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="36ed36cc264d0b0599f516056dfc364a7e3f5fc1" translate="yes" xml:space="preserve">
          <source>Binds the given function across &lt;code&gt;Right&lt;/code&gt;.</source>
          <target state="translated">Vincula la funci&amp;oacute;n dada a trav&amp;eacute;s de &lt;code&gt;Right&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f8cd7716f7a5997d4efd153b8de6bda8ac575d3b" translate="yes" xml:space="preserve">
          <source>BitSet</source>
          <target state="translated">BitSet</target>
        </trans-unit>
        <trans-unit id="267aec08807025a4e4df96e36847ff8395c90d4b" translate="yes" xml:space="preserve">
          <source>BitSet$</source>
          <target state="translated">BitSet$</target>
        </trans-unit>
        <trans-unit id="e58a38fa818402fd3077c549d8182c639833b817" translate="yes" xml:space="preserve">
          <source>BitSet$.BitSet1</source>
          <target state="translated">BitSet$.BitSet1</target>
        </trans-unit>
        <trans-unit id="3fbf4c15eaa2c2ce2721e8f712ad555ed98996cf" translate="yes" xml:space="preserve">
          <source>BitSet$.BitSet1()</source>
          <target state="translated">BitSet$.BitSet1()</target>
        </trans-unit>
        <trans-unit id="dc3b67485f1c07384d45924608ec8331b4e22ee3" translate="yes" xml:space="preserve">
          <source>BitSet$.BitSet1.BitSet1()</source>
          <target state="translated">BitSet$.BitSet1.BitSet1()</target>
        </trans-unit>
        <trans-unit id="0c3efe37487740dd013eff032d8742a5667a232a" translate="yes" xml:space="preserve">
          <source>BitSet$.BitSet1.diff()</source>
          <target state="translated">BitSet$.BitSet1.diff()</target>
        </trans-unit>
        <trans-unit id="aef17ae07ee3f96969086bb0fda1ebde8cb1e50a" translate="yes" xml:space="preserve">
          <source>BitSet$.BitSet1.elems()</source>
          <target state="translated">BitSet$.BitSet1.elems()</target>
        </trans-unit>
        <trans-unit id="bd9f00e374289af69fa3b0b9e32d85c2e80f8846" translate="yes" xml:space="preserve">
          <source>BitSet$.BitSet1.filterImpl()</source>
          <target state="translated">BitSet$.BitSet1.filterImpl()</target>
        </trans-unit>
        <trans-unit id="5521a2a1980848c9fa3d145376d46cf00f5d862a" translate="yes" xml:space="preserve">
          <source>BitSet$.BitSet1.nwords()</source>
          <target state="translated">BitSet$.BitSet1.nwords()</target>
        </trans-unit>
        <trans-unit id="5b1eface0c6c1c860fd43b70f53f4fc37b065d86" translate="yes" xml:space="preserve">
          <source>BitSet$.BitSet1.updateWord()</source>
          <target state="translated">BitSet$.BitSet1.updateWord()</target>
        </trans-unit>
        <trans-unit id="be9fa48842ea0a13fcec2fd5ddb5b7d60c6b9a7e" translate="yes" xml:space="preserve">
          <source>BitSet$.BitSet1.word()</source>
          <target state="translated">BitSet$.BitSet1.word()</target>
        </trans-unit>
        <trans-unit id="4e18918b48bb5ac2de51c2c31e5cc61b13f3d094" translate="yes" xml:space="preserve">
          <source>BitSet$.BitSet2</source>
          <target state="translated">BitSet$.BitSet2</target>
        </trans-unit>
        <trans-unit id="3fc3f0df744000e934c90e23896770bb7dd85684" translate="yes" xml:space="preserve">
          <source>BitSet$.BitSet2()</source>
          <target state="translated">BitSet$.BitSet2()</target>
        </trans-unit>
        <trans-unit id="fe9d84c093a369b6dc5173057d666ac22c867eb5" translate="yes" xml:space="preserve">
          <source>BitSet$.BitSet2.BitSet2()</source>
          <target state="translated">BitSet$.BitSet2.BitSet2()</target>
        </trans-unit>
        <trans-unit id="f3148cadd88760765da97e6b75e765354a0c0640" translate="yes" xml:space="preserve">
          <source>BitSet$.BitSet2.diff()</source>
          <target state="translated">BitSet$.BitSet2.diff()</target>
        </trans-unit>
        <trans-unit id="4406ece51698451dfe43401ee8afe33ab5303f9f" translate="yes" xml:space="preserve">
          <source>BitSet$.BitSet2.elems0()</source>
          <target state="translated">BitSet$.BitSet2.elems0()</target>
        </trans-unit>
        <trans-unit id="25074da3fa950c65c2a00bc9c657f52f7d49d2dd" translate="yes" xml:space="preserve">
          <source>BitSet$.BitSet2.elems1()</source>
          <target state="translated">BitSet$.BitSet2.elems1()</target>
        </trans-unit>
        <trans-unit id="8517ba6f022fdd3c6c7594877c0fa719421b80e5" translate="yes" xml:space="preserve">
          <source>BitSet$.BitSet2.filterImpl()</source>
          <target state="translated">BitSet$.BitSet2.filterImpl()</target>
        </trans-unit>
        <trans-unit id="fb3abfd8415c47ed67e06b1c1480bdd25f0292ea" translate="yes" xml:space="preserve">
          <source>BitSet$.BitSet2.nwords()</source>
          <target state="translated">BitSet$.BitSet2.nwords()</target>
        </trans-unit>
        <trans-unit id="8591fd7207c98c4ddfd70539aa0a2987980676fd" translate="yes" xml:space="preserve">
          <source>BitSet$.BitSet2.updateWord()</source>
          <target state="translated">BitSet$.BitSet2.updateWord()</target>
        </trans-unit>
        <trans-unit id="242f3f42c2178ce74f5fc953d6ef1a98e7b6e7c4" translate="yes" xml:space="preserve">
          <source>BitSet$.BitSet2.word()</source>
          <target state="translated">BitSet$.BitSet2.word()</target>
        </trans-unit>
        <trans-unit id="b8538c74483a14f197ff2de8d5d918860251995f" translate="yes" xml:space="preserve">
          <source>BitSet$.BitSetN</source>
          <target state="translated">BitSet$.BitSetN</target>
        </trans-unit>
        <trans-unit id="0b865d3231d9a0b95c9be5d102c2d58811124872" translate="yes" xml:space="preserve">
          <source>BitSet$.BitSetN()</source>
          <target state="translated">BitSet$.BitSetN()</target>
        </trans-unit>
        <trans-unit id="c22b8fead3cf862edf7fc3b3c477fd171686fb2a" translate="yes" xml:space="preserve">
          <source>BitSet$.BitSetN.BitSetN()</source>
          <target state="translated">BitSet$.BitSetN.BitSetN()</target>
        </trans-unit>
        <trans-unit id="97f5fc2e58eb63a354c8590d01e360e28af47088" translate="yes" xml:space="preserve">
          <source>BitSet$.BitSetN.diff()</source>
          <target state="translated">BitSet$.BitSetN.diff()</target>
        </trans-unit>
        <trans-unit id="c661c1c9d1e14c69060e982505e9b8b20f8d35d0" translate="yes" xml:space="preserve">
          <source>BitSet$.BitSetN.elems()</source>
          <target state="translated">BitSet$.BitSetN.elems()</target>
        </trans-unit>
        <trans-unit id="eb6240919814ceb212b8216e1a0b16c78960ad85" translate="yes" xml:space="preserve">
          <source>BitSet$.BitSetN.filterImpl()</source>
          <target state="translated">BitSet$.BitSetN.filterImpl()</target>
        </trans-unit>
        <trans-unit id="34644ee0356ccbbb3542b14982f7800da17145f0" translate="yes" xml:space="preserve">
          <source>BitSet$.BitSetN.nwords()</source>
          <target state="translated">BitSet$.BitSetN.nwords()</target>
        </trans-unit>
        <trans-unit id="b61d1a86d7c3848281ab43aa73930054bccdf6eb" translate="yes" xml:space="preserve">
          <source>BitSet$.BitSetN.updateWord()</source>
          <target state="translated">BitSet$.BitSetN.updateWord()</target>
        </trans-unit>
        <trans-unit id="abd0481c9163776e698457dd9f284c8a648b0183" translate="yes" xml:space="preserve">
          <source>BitSet$.BitSetN.word()</source>
          <target state="translated">BitSet$.BitSetN.word()</target>
        </trans-unit>
        <trans-unit id="669ab1037bbe78827112d09c6a383f0ef1ff144a" translate="yes" xml:space="preserve">
          <source>BitSet$.empty()</source>
          <target state="translated">BitSet$.empty()</target>
        </trans-unit>
        <trans-unit id="d1309f04582374e8c2522be0d168796547963843" translate="yes" xml:space="preserve">
          <source>BitSet$.fromBitMask()</source>
          <target state="translated">BitSet$.fromBitMask()</target>
        </trans-unit>
        <trans-unit id="7409040691b980cbff0c611a6436cb9ed78dea4d" translate="yes" xml:space="preserve">
          <source>BitSet$.fromBitMaskNoCopy()</source>
          <target state="translated">BitSet$.fromBitMaskNoCopy()</target>
        </trans-unit>
        <trans-unit id="055e475ae93532e16f63cce6bbef0d3c251b0d8b" translate="yes" xml:space="preserve">
          <source>BitSet$.fromSpecific()</source>
          <target state="translated">BitSet$.fromSpecific()</target>
        </trans-unit>
        <trans-unit id="64038704045363c8bf5076b58081fcf9c3be4e29" translate="yes" xml:space="preserve">
          <source>BitSet$.newBuilder()</source>
          <target state="translated">BitSet$.newBuilder()</target>
        </trans-unit>
        <trans-unit id="fc96d3420aaa5de245757876d96f7497434a9614" translate="yes" xml:space="preserve">
          <source>BitSet.&amp;amp;=()</source>
          <target state="translated">BitSet.&amp;amp;=()</target>
        </trans-unit>
        <trans-unit id="4bbcc2ef14d9f06af60c1b59901e12ff201d19fc" translate="yes" xml:space="preserve">
          <source>BitSet.&amp;amp;~=()</source>
          <target state="translated">BitSet.&amp;amp;~=()</target>
        </trans-unit>
        <trans-unit id="db8406029a80b60944e12390c201a591d9b63058" translate="yes" xml:space="preserve">
          <source>BitSet.BitSet()</source>
          <target state="translated">BitSet.BitSet()</target>
        </trans-unit>
        <trans-unit id="3ee6c0be6d99d0bd2d9a4049ae1dd10550a24b2a" translate="yes" xml:space="preserve">
          <source>BitSet.^()</source>
          <target state="translated">BitSet.^()</target>
        </trans-unit>
        <trans-unit id="1bcd94bcefda83723c6a458370ef5d9142ca106c" translate="yes" xml:space="preserve">
          <source>BitSet.^=()</source>
          <target state="translated">BitSet.^=()</target>
        </trans-unit>
        <trans-unit id="527cf2cb61f18ebedea8d09f28c8641c9b96dbb1" translate="yes" xml:space="preserve">
          <source>BitSet.addAll()</source>
          <target state="translated">BitSet.addAll()</target>
        </trans-unit>
        <trans-unit id="e1f3e94271ff7151d261b0f5f27f936825e8ffe4" translate="yes" xml:space="preserve">
          <source>BitSet.addOne()</source>
          <target state="translated">BitSet.addOne()</target>
        </trans-unit>
        <trans-unit id="89ede4d5c233c10b89008c7515c041b4f52823b0" translate="yes" xml:space="preserve">
          <source>BitSet.bitSetFactory()</source>
          <target state="translated">BitSet.bitSetFactory()</target>
        </trans-unit>
        <trans-unit id="679ac21a173b71844f1bfddb9122b7de6acfc229" translate="yes" xml:space="preserve">
          <source>BitSet.clear()</source>
          <target state="translated">BitSet.clear()</target>
        </trans-unit>
        <trans-unit id="a86d3f66e5586ed8aa965f3cbff2d1eafcad89b8" translate="yes" xml:space="preserve">
          <source>BitSet.clone()</source>
          <target state="translated">BitSet.clone()</target>
        </trans-unit>
        <trans-unit id="8e58fda1eab0d5fcef99f9e8f4e0752a061e8f43" translate="yes" xml:space="preserve">
          <source>BitSet.collect()</source>
          <target state="translated">BitSet.collect()</target>
        </trans-unit>
        <trans-unit id="4eddc4a06c6aa6d75794b1db335116a5e32c3d21" translate="yes" xml:space="preserve">
          <source>BitSet.concat()</source>
          <target state="translated">BitSet.concat()</target>
        </trans-unit>
        <trans-unit id="6cf44f69f517d5964588d12454ddf4e27bdab27e" translate="yes" xml:space="preserve">
          <source>BitSet.contains()</source>
          <target state="translated">BitSet.contains()</target>
        </trans-unit>
        <trans-unit id="01aee55dbbbc7eeb1eca3561edb3a61ac7d716e6" translate="yes" xml:space="preserve">
          <source>BitSet.diff()</source>
          <target state="translated">BitSet.diff()</target>
        </trans-unit>
        <trans-unit id="12c645f38d36dafa1f023e443b37bb30aadfec66" translate="yes" xml:space="preserve">
          <source>BitSet.elems()</source>
          <target state="translated">BitSet.elems()</target>
        </trans-unit>
        <trans-unit id="04bf60f5039c2e29edb372cb57ceebe745f209fa" translate="yes" xml:space="preserve">
          <source>BitSet.empty()</source>
          <target state="translated">BitSet.empty()</target>
        </trans-unit>
        <trans-unit id="f33e647016879473adf4d443fe5bc8f29a5703f2" translate="yes" xml:space="preserve">
          <source>BitSet.ensureCapacity()</source>
          <target state="translated">BitSet.ensureCapacity()</target>
        </trans-unit>
        <trans-unit id="60ec18939408f9ea7776cd9b836a0c26da9b73a7" translate="yes" xml:space="preserve">
          <source>BitSet.excl()</source>
          <target state="translated">BitSet.excl()</target>
        </trans-unit>
        <trans-unit id="e6baa1c0e9e40f7d1cd6c43b191aa191bef136e7" translate="yes" xml:space="preserve">
          <source>BitSet.filterImpl()</source>
          <target state="translated">BitSet.filterImpl()</target>
        </trans-unit>
        <trans-unit id="06625acbcc4f095395e49c206e878d04e880534a" translate="yes" xml:space="preserve">
          <source>BitSet.filterInPlace()</source>
          <target state="translated">BitSet.filterInPlace()</target>
        </trans-unit>
        <trans-unit id="43e98dc38fd7b3037a335000974811488ce9bc38" translate="yes" xml:space="preserve">
          <source>BitSet.flatMap()</source>
          <target state="translated">BitSet.flatMap()</target>
        </trans-unit>
        <trans-unit id="d6f9c30b859a414ca24a3e9faabc7bf3a6bea9a8" translate="yes" xml:space="preserve">
          <source>BitSet.foreach()</source>
          <target state="translated">BitSet.foreach()</target>
        </trans-unit>
        <trans-unit id="2a2d3976f3beb92f1ffa270126ea776c345b3b23" translate="yes" xml:space="preserve">
          <source>BitSet.fromBitMaskNoCopy()</source>
          <target state="translated">BitSet.fromBitMaskNoCopy()</target>
        </trans-unit>
        <trans-unit id="6785318705abf5a5c2691faeb336d75a0dca70ae" translate="yes" xml:space="preserve">
          <source>BitSet.fromSpecific()</source>
          <target state="translated">BitSet.fromSpecific()</target>
        </trans-unit>
        <trans-unit id="4d29d4f9887ec8fe12880eee3c68dee91096a1ad" translate="yes" xml:space="preserve">
          <source>BitSet.incl()</source>
          <target state="translated">BitSet.incl()</target>
        </trans-unit>
        <trans-unit id="50193d9ed27ee6e4ae96b5d4b6367a26ca561e22" translate="yes" xml:space="preserve">
          <source>BitSet.intersect()</source>
          <target state="translated">BitSet.intersect()</target>
        </trans-unit>
        <trans-unit id="93ed99d0c0620a61a0647883b7efab25e0d91d80" translate="yes" xml:space="preserve">
          <source>BitSet.isEmpty()</source>
          <target state="translated">BitSet.isEmpty()</target>
        </trans-unit>
        <trans-unit id="f2e98d18dde081f8b6786cf164af39ced1d100ca" translate="yes" xml:space="preserve">
          <source>BitSet.iterator()</source>
          <target state="translated">BitSet.iterator()</target>
        </trans-unit>
        <trans-unit id="c19dc1c1198c10548823a8fde988e8d830a80824" translate="yes" xml:space="preserve">
          <source>BitSet.iteratorFrom()</source>
          <target state="translated">BitSet.iteratorFrom()</target>
        </trans-unit>
        <trans-unit id="de05b00ac29a8e4f3a6d80c82a6d140d90c827bb" translate="yes" xml:space="preserve">
          <source>BitSet.map()</source>
          <target state="translated">BitSet.map()</target>
        </trans-unit>
        <trans-unit id="50283200b2814cec29fb38701a01884d5cc2430e" translate="yes" xml:space="preserve">
          <source>BitSet.max()</source>
          <target state="translated">BitSet.max()</target>
        </trans-unit>
        <trans-unit id="53d89ba5cd47eccf00fd55e2c474e68dbd5d625d" translate="yes" xml:space="preserve">
          <source>BitSet.min()</source>
          <target state="translated">BitSet.min()</target>
        </trans-unit>
        <trans-unit id="67d596d4b1713eaf8e13de28e73b248516e759aa" translate="yes" xml:space="preserve">
          <source>BitSet.newSpecificBuilder()</source>
          <target state="translated">BitSet.newSpecificBuilder()</target>
        </trans-unit>
        <trans-unit id="233d0a3bf4fe5589ba209e71c362a01037efbe13" translate="yes" xml:space="preserve">
          <source>BitSet.nwords()</source>
          <target state="translated">BitSet.nwords()</target>
        </trans-unit>
        <trans-unit id="eadf79ed08a258da16078de4793e30a18746d080" translate="yes" xml:space="preserve">
          <source>BitSet.ordering()</source>
          <target state="translated">BitSet.ordering()</target>
        </trans-unit>
        <trans-unit id="438dae4c38bbe4bc68982fba119d5433bd73c404" translate="yes" xml:space="preserve">
          <source>BitSet.partition()</source>
          <target state="translated">BitSet.partition()</target>
        </trans-unit>
        <trans-unit id="1c7c8b7af157121f9f2524a2a2b4aede4d5df88e" translate="yes" xml:space="preserve">
          <source>BitSet.rangeImpl()</source>
          <target state="translated">BitSet.rangeImpl()</target>
        </trans-unit>
        <trans-unit id="7d3ab8bd8b1aa3d9c841c4f2942509a975bb1691" translate="yes" xml:space="preserve">
          <source>BitSet.scala</source>
          <target state="translated">BitSet.scala</target>
        </trans-unit>
        <trans-unit id="df7cace24802d62d3de2eb6ec448bc273b094f32" translate="yes" xml:space="preserve">
          <source>BitSet.size()</source>
          <target state="translated">BitSet.size()</target>
        </trans-unit>
        <trans-unit id="359aae0200b0e28586a3ba42d867d69b86c0cdba" translate="yes" xml:space="preserve">
          <source>BitSet.stepper()</source>
          <target state="translated">BitSet.stepper()</target>
        </trans-unit>
        <trans-unit id="93c232227246eb7a13bfdc615f747fe6eee8b0e7" translate="yes" xml:space="preserve">
          <source>BitSet.stringPrefix()</source>
          <target state="translated">BitSet.stringPrefix()</target>
        </trans-unit>
        <trans-unit id="6403f09b65510d34a83580c9f9224ee99b29f9ba" translate="yes" xml:space="preserve">
          <source>BitSet.subsetOf()</source>
          <target state="translated">BitSet.subsetOf()</target>
        </trans-unit>
        <trans-unit id="9c30076389cea96406cc2a5e68cc214f0dc0f6de" translate="yes" xml:space="preserve">
          <source>BitSet.subtractAll()</source>
          <target state="translated">BitSet.subtractAll()</target>
        </trans-unit>
        <trans-unit id="0665839440c83d04cdfff7d8e533341a472666db" translate="yes" xml:space="preserve">
          <source>BitSet.subtractOne()</source>
          <target state="translated">BitSet.subtractOne()</target>
        </trans-unit>
        <trans-unit id="83d5c627f9a27d016d89dccdb04574714b141d9b" translate="yes" xml:space="preserve">
          <source>BitSet.toBitMask()</source>
          <target state="translated">BitSet.toBitMask()</target>
        </trans-unit>
        <trans-unit id="3cf7ea9d58fd40dc81e9c3967efd2837295b6d64" translate="yes" xml:space="preserve">
          <source>BitSet.toImmutable()</source>
          <target state="translated">BitSet.toImmutable()</target>
        </trans-unit>
        <trans-unit id="ba6e0d14f0345839378244e9b0db932df0021173" translate="yes" xml:space="preserve">
          <source>BitSet.unconstrained()</source>
          <target state="translated">BitSet.unconstrained()</target>
        </trans-unit>
        <trans-unit id="1308fa236e523ec8b4e79308bdeb0f99bd22e8ca" translate="yes" xml:space="preserve">
          <source>BitSet.unsorted()</source>
          <target state="translated">BitSet.unsorted()</target>
        </trans-unit>
        <trans-unit id="c090d6af3289d7d02d7426e5611e064db71b9040" translate="yes" xml:space="preserve">
          <source>BitSet.updateWord()</source>
          <target state="translated">BitSet.updateWord()</target>
        </trans-unit>
        <trans-unit id="f4cfda9bc31e6d63557d26bbe17aeafe59709c33" translate="yes" xml:space="preserve">
          <source>BitSet.word()</source>
          <target state="translated">BitSet.word()</target>
        </trans-unit>
        <trans-unit id="56e22fe19d07277acfde62d74142dde8d95ff6b4" translate="yes" xml:space="preserve">
          <source>BitSet.writeReplace()</source>
          <target state="translated">BitSet.writeReplace()</target>
        </trans-unit>
        <trans-unit id="3ecf11e19835619628bf7f04e8854e8e1fd790cb" translate="yes" xml:space="preserve">
          <source>BitSet.xor()</source>
          <target state="translated">BitSet.xor()</target>
        </trans-unit>
        <trans-unit id="342bfd5416625c3bff69acf747d8b493b833f6b3" translate="yes" xml:space="preserve">
          <source>BitSet.zip()</source>
          <target state="translated">BitSet.zip()</target>
        </trans-unit>
        <trans-unit id="79f3b598c30fc6017bab54900f8270cb0eed308a" translate="yes" xml:space="preserve">
          <source>BitSet.|=()</source>
          <target state="translated">BitSet.|=()</target>
        </trans-unit>
        <trans-unit id="cd9b30381ab0e7ab97b1ce79291dde483a0951e1" translate="yes" xml:space="preserve">
          <source>BitSetOps</source>
          <target state="translated">BitSetOps</target>
        </trans-unit>
        <trans-unit id="4ac6daa6f48e0d0a59e9f903318f4f54103a5f9d" translate="yes" xml:space="preserve">
          <source>BitSetOps$</source>
          <target state="translated">BitSetOps$</target>
        </trans-unit>
        <trans-unit id="a5f618102af147cf011e4a568e81215675e5b18d" translate="yes" xml:space="preserve">
          <source>BitSetOps.^()</source>
          <target state="translated">BitSetOps.^()</target>
        </trans-unit>
        <trans-unit id="60a925f7382ffc575ad29ce134fe2354598c3048" translate="yes" xml:space="preserve">
          <source>BitSetOps.bitSetFactory()</source>
          <target state="translated">BitSetOps.bitSetFactory()</target>
        </trans-unit>
        <trans-unit id="a74f1bbff29c5ee553b03a476cfb93c4a50c60a3" translate="yes" xml:space="preserve">
          <source>BitSetOps.collect()</source>
          <target state="translated">BitSetOps.collect()</target>
        </trans-unit>
        <trans-unit id="457582666a4108de876848252e3a989ccba5d026" translate="yes" xml:space="preserve">
          <source>BitSetOps.concat()</source>
          <target state="translated">BitSetOps.concat()</target>
        </trans-unit>
        <trans-unit id="9dc4919529e8650b083147d8d3284082b65f2f70" translate="yes" xml:space="preserve">
          <source>BitSetOps.contains()</source>
          <target state="translated">BitSetOps.contains()</target>
        </trans-unit>
        <trans-unit id="7ce5861404cde80d9e76cd5450e3288b99f8bff4" translate="yes" xml:space="preserve">
          <source>BitSetOps.diff()</source>
          <target state="translated">BitSetOps.diff()</target>
        </trans-unit>
        <trans-unit id="599b53dff8dd36cd64bbdecab0a589146c76b225" translate="yes" xml:space="preserve">
          <source>BitSetOps.flatMap()</source>
          <target state="translated">BitSetOps.flatMap()</target>
        </trans-unit>
        <trans-unit id="0fd9a87b4351cdd72af3424adec6f09a71c577b9" translate="yes" xml:space="preserve">
          <source>BitSetOps.foreach()</source>
          <target state="translated">BitSetOps.foreach()</target>
        </trans-unit>
        <trans-unit id="e70a9be26ef1d2cc3eb6ff3ab42d417a23a21a9a" translate="yes" xml:space="preserve">
          <source>BitSetOps.fromBitMaskNoCopy()</source>
          <target state="translated">BitSetOps.fromBitMaskNoCopy()</target>
        </trans-unit>
        <trans-unit id="4088475647d4f3a7c17e272aa6e157b145a26c91" translate="yes" xml:space="preserve">
          <source>BitSetOps.intersect()</source>
          <target state="translated">BitSetOps.intersect()</target>
        </trans-unit>
        <trans-unit id="cb2812c577b41dcc8b4e6f58b352e885c0e3dbb0" translate="yes" xml:space="preserve">
          <source>BitSetOps.isEmpty()</source>
          <target state="translated">BitSetOps.isEmpty()</target>
        </trans-unit>
        <trans-unit id="29e835d81086b4cd0c08d5649ef237e76a49d928" translate="yes" xml:space="preserve">
          <source>BitSetOps.iterator()</source>
          <target state="translated">BitSetOps.iterator()</target>
        </trans-unit>
        <trans-unit id="1422c64fbedc135b93fee87c6653c0779868bcb0" translate="yes" xml:space="preserve">
          <source>BitSetOps.iteratorFrom()</source>
          <target state="translated">BitSetOps.iteratorFrom()</target>
        </trans-unit>
        <trans-unit id="f77913a0f102ce6321cf473dbc245fe29a90a1f7" translate="yes" xml:space="preserve">
          <source>BitSetOps.map()</source>
          <target state="translated">BitSetOps.map()</target>
        </trans-unit>
        <trans-unit id="d269e82d98af4b6c2545009e2d5fc7082123f033" translate="yes" xml:space="preserve">
          <source>BitSetOps.max()</source>
          <target state="translated">BitSetOps.max()</target>
        </trans-unit>
        <trans-unit id="d1ac897598a98c79c1c349eab6b135c4085204e5" translate="yes" xml:space="preserve">
          <source>BitSetOps.min()</source>
          <target state="translated">BitSetOps.min()</target>
        </trans-unit>
        <trans-unit id="ae69d4ce73e4ad1ea2159d6be756953ccc9d141a" translate="yes" xml:space="preserve">
          <source>BitSetOps.nwords()</source>
          <target state="translated">BitSetOps.nwords()</target>
        </trans-unit>
        <trans-unit id="7dca2efa6924bee067e70100d3b3dd40ed40b3b0" translate="yes" xml:space="preserve">
          <source>BitSetOps.ordering()</source>
          <target state="translated">BitSetOps.ordering()</target>
        </trans-unit>
        <trans-unit id="5f46f4fb88acd5d4bf8c8a63d89cbe6babe6de96" translate="yes" xml:space="preserve">
          <source>BitSetOps.partition()</source>
          <target state="translated">BitSetOps.partition()</target>
        </trans-unit>
        <trans-unit id="02da11f45a5640872b46ebe7d980dfa993d526b5" translate="yes" xml:space="preserve">
          <source>BitSetOps.rangeImpl()</source>
          <target state="translated">BitSetOps.rangeImpl()</target>
        </trans-unit>
        <trans-unit id="3c4f3b1ecb659532bb1baa93ed88d7b33ce25b21" translate="yes" xml:space="preserve">
          <source>BitSetOps.size()</source>
          <target state="translated">BitSetOps.size()</target>
        </trans-unit>
        <trans-unit id="9e13af984af944f5656e04839d780966fb5df9fb" translate="yes" xml:space="preserve">
          <source>BitSetOps.stepper()</source>
          <target state="translated">BitSetOps.stepper()</target>
        </trans-unit>
        <trans-unit id="6250eead18e1714984c4a9e180c7d7cbb5c10cc7" translate="yes" xml:space="preserve">
          <source>BitSetOps.toBitMask()</source>
          <target state="translated">BitSetOps.toBitMask()</target>
        </trans-unit>
        <trans-unit id="77311c4aea20151db360f7d131fe3c254b5e9a6a" translate="yes" xml:space="preserve">
          <source>BitSetOps.unsorted()</source>
          <target state="translated">BitSetOps.unsorted()</target>
        </trans-unit>
        <trans-unit id="b8b0618ee4c5bd73a94d0888bbb9de3462ffd207" translate="yes" xml:space="preserve">
          <source>BitSetOps.word()</source>
          <target state="translated">BitSetOps.word()</target>
        </trans-unit>
        <trans-unit id="51ee2feafdd34c30dd4f3570dca35c336dedf729" translate="yes" xml:space="preserve">
          <source>BitSetOps.xor()</source>
          <target state="translated">BitSetOps.xor()</target>
        </trans-unit>
        <trans-unit id="390bec0f8b506592776272bb7c1a761287d3ceb1" translate="yes" xml:space="preserve">
          <source>Bitsets are sets of non-negative integers which are represented as variable-size arrays of bits packed into 64-bit words. The memory footprint of a bitset is determined by the largest number stored in it.</source>
          <target state="translated">Los conjuntos de bits son conjuntos de enteros no negativos que se representan como matrices de tamaño variable de bits empaquetados en palabras de 64 bits.La huella de la memoria de un conjunto de bits está determinada por el mayor número almacenado en él.</target>
        </trans-unit>
        <trans-unit id="36e279723f9fff86b574a106bb214a044e35e519" translate="yes" xml:space="preserve">
          <source>Bitwise and-not of BigInts. Returns a BigInt whose value is (this &amp;amp; ~that).</source>
          <target state="translated">Bitwise y no de BigInts. Devuelve un BigInt cuyo valor es (esto y aquello).</target>
        </trans-unit>
        <trans-unit id="77e70495fcccdf129337e291692827b40c849733" translate="yes" xml:space="preserve">
          <source>BlockContext</source>
          <target state="translated">BlockContext</target>
        </trans-unit>
        <trans-unit id="892167e9399d6cd714d7b3da5fb5f0b574483f94" translate="yes" xml:space="preserve">
          <source>BlockContext$</source>
          <target state="translated">BlockContext$</target>
        </trans-unit>
        <trans-unit id="8dc6e1e3c7c2c5e9e51b762e254d8c6e57c5db96" translate="yes" xml:space="preserve">
          <source>BlockContext$.current()</source>
          <target state="translated">BlockContext$.current()</target>
        </trans-unit>
        <trans-unit id="40baf5f5f3bcd897e9e3acd603e08e4d7833230e" translate="yes" xml:space="preserve">
          <source>BlockContext$.defaultBlockContext()</source>
          <target state="translated">BlockContext$.defaultBlockContext()</target>
        </trans-unit>
        <trans-unit id="ea34e1b35603fb84c4af1c68829809e3045899a6" translate="yes" xml:space="preserve">
          <source>BlockContext$.usingBlockContext()</source>
          <target state="translated">BlockContext$.usingBlockContext()</target>
        </trans-unit>
        <trans-unit id="d5d5e3ae914966c8550e296d72f3f39a009dc2bd" translate="yes" xml:space="preserve">
          <source>BlockContext$.withBlockContext()</source>
          <target state="translated">BlockContext$.withBlockContext()</target>
        </trans-unit>
        <trans-unit id="0b1a58ddaddec6ff058b046304c73c1baa33e31c" translate="yes" xml:space="preserve">
          <source>BlockContext.blockOn()</source>
          <target state="translated">BlockContext.blockOn()</target>
        </trans-unit>
        <trans-unit id="5786624338ab851877ca1bcf2acbe750153d3973" translate="yes" xml:space="preserve">
          <source>BlockContext.scala</source>
          <target state="translated">BlockContext.scala</target>
        </trans-unit>
        <trans-unit id="2e735d2de31fa9264b8a9c655af711963c029697" translate="yes" xml:space="preserve">
          <source>Blocking on an &lt;a href=&quot;awaitable&quot; id=&quot;scala.concurrent.Awaitable&quot; name=&quot;scala.concurrent.Awaitable&quot;&gt;Awaitable&lt;/a&gt; should be done using &lt;a href=&quot;await%24#result%5BT%5D(awaitable:scala.concurrent.Awaitable%5BT%5D,atMost:scala.concurrent.duration.Duration):T&quot; id=&quot;scala.concurrent.Await#result&quot; name=&quot;scala.concurrent.Await#result&quot;&gt;Await.result&lt;/a&gt; instead of &lt;code&gt;blocking&lt;/code&gt;.</source>
          <target state="translated">El bloqueo de un &lt;a href=&quot;awaitable&quot; id=&quot;scala.concurrent.Awaitable&quot; name=&quot;scala.concurrent.Awaitable&quot;&gt;Awaitable&lt;/a&gt; debe realizarse mediante &lt;a href=&quot;await%24#result%5BT%5D(awaitable:scala.concurrent.Awaitable%5BT%5D,atMost:scala.concurrent.duration.Duration):T&quot; id=&quot;scala.concurrent.Await#result&quot; name=&quot;scala.concurrent.Await#result&quot;&gt;Await.result en&lt;/a&gt; lugar de &lt;code&gt;blocking&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b76ff4906f33c2dd97ddd929b9662ba8cac6174c" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="translated">Boolean</target>
        </trans-unit>
        <trans-unit id="5118ce94a83055271d6b0466a5ac095c0b8bd139" translate="yes" xml:space="preserve">
          <source>Boolean &amp;rarr; AnyRef &amp;rarr; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;</source>
          <target state="translated">Booleano &amp;rarr; AnyRef &amp;rarr; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Cualquiera&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bc0d439aec99085f13617c9d12e6c65f5e106e0e" translate="yes" xml:space="preserve">
          <source>Boolean &amp;rarr; Comparable</source>
          <target state="translated">Booleano &amp;rarr; Comparable</target>
        </trans-unit>
        <trans-unit id="62cf621c53dc5895cb85ae13e1a1a27d1bee751d" translate="yes" xml:space="preserve">
          <source>Boolean$</source>
          <target state="translated">Boolean$</target>
        </trans-unit>
        <trans-unit id="4e1476c75592bdd3d41b075e763abfc82e55f6e2" translate="yes" xml:space="preserve">
          <source>Boolean$.box()</source>
          <target state="translated">Boolean$.box()</target>
        </trans-unit>
        <trans-unit id="392fc787db0f4ff94033bdbedac7b6eee8ed138b" translate="yes" xml:space="preserve">
          <source>Boolean$.toString()</source>
          <target state="translated">Boolean$.toString()</target>
        </trans-unit>
        <trans-unit id="6c22edee67444bed51110528615f9d8138df894b" translate="yes" xml:space="preserve">
          <source>Boolean$.unbox()</source>
          <target state="translated">Boolean$.unbox()</target>
        </trans-unit>
        <trans-unit id="154a5291da071c7a05393794cd7e190a32799267" translate="yes" xml:space="preserve">
          <source>Boolean.!=()</source>
          <target state="translated">Boolean.!=()</target>
        </trans-unit>
        <trans-unit id="88e7f71094272e9f66613e5c835de8b5ca80fc1c" translate="yes" xml:space="preserve">
          <source>Boolean.&amp;amp;&amp;amp;()</source>
          <target state="translated">Boolean.&amp;amp;&amp;amp;()</target>
        </trans-unit>
        <trans-unit id="d7f23954ec7a5e9d37d1fe67bf2b8ffa3b3df34a" translate="yes" xml:space="preserve">
          <source>Boolean.&amp;amp;()</source>
          <target state="translated">Boolean.&amp;amp;()</target>
        </trans-unit>
        <trans-unit id="b262e35eb320ba331999a160b46ae2ba6d889758" translate="yes" xml:space="preserve">
          <source>Boolean.==()</source>
          <target state="translated">Boolean.==()</target>
        </trans-unit>
        <trans-unit id="68e5ffa9671c539f10a1637d4254edd34ce8d696" translate="yes" xml:space="preserve">
          <source>Boolean.^()</source>
          <target state="translated">Boolean.^()</target>
        </trans-unit>
        <trans-unit id="39004174320dda075848780b893eef2b2a1fb24a" translate="yes" xml:space="preserve">
          <source>Boolean.getClass()</source>
          <target state="translated">Boolean.getClass()</target>
        </trans-unit>
        <trans-unit id="3d531a2bba98ac2f3105201152e3425169116b53" translate="yes" xml:space="preserve">
          <source>Boolean.scala</source>
          <target state="translated">Boolean.scala</target>
        </trans-unit>
        <trans-unit id="d1dc8c492eb90a0dce1f974455fc2947ca13cee2" translate="yes" xml:space="preserve">
          <source>Boolean.unary_!()</source>
          <target state="translated">Boolean.unary_!()</target>
        </trans-unit>
        <trans-unit id="60d696d8cfdee5f5919fff9e603721f33666f0aa" translate="yes" xml:space="preserve">
          <source>Boolean.|()</source>
          <target state="translated">Boolean.|()</target>
        </trans-unit>
        <trans-unit id="3138e87fff876e26c2c815956a7fab49b1f69ed8" translate="yes" xml:space="preserve">
          <source>Boolean.||()</source>
          <target state="translated">Boolean.||()</target>
        </trans-unit>
        <trans-unit id="6e00e64f7c66a08c80819c8a6829091effe2aa87" translate="yes" xml:space="preserve">
          <source>BooleanBeanProperty</source>
          <target state="translated">BooleanBeanProperty</target>
        </trans-unit>
        <trans-unit id="1f3952780a8e3b7e0b780d2d65038d4a0b986b6b" translate="yes" xml:space="preserve">
          <source>BooleanBeanProperty.scala</source>
          <target state="translated">BooleanBeanProperty.scala</target>
        </trans-unit>
        <trans-unit id="b564a700874453b1b1ef9135c99c3ba302b252c5" translate="yes" xml:space="preserve">
          <source>BooleanProp</source>
          <target state="translated">BooleanProp</target>
        </trans-unit>
        <trans-unit id="57cbb7a9401fad7877c67d9ea135c91cdeae6180" translate="yes" xml:space="preserve">
          <source>BooleanProp$</source>
          <target state="translated">BooleanProp$</target>
        </trans-unit>
        <trans-unit id="dd6bf235d5f942eb0a266400a14dbca1569a5ca4" translate="yes" xml:space="preserve">
          <source>BooleanProp$.booleanPropAsBoolean()</source>
          <target state="translated">BooleanProp$.booleanPropAsBoolean()</target>
        </trans-unit>
        <trans-unit id="9d3a51d98de19d491ad6ba9ff72e053e933ee786" translate="yes" xml:space="preserve">
          <source>BooleanProp$.constant()</source>
          <target state="translated">BooleanProp$.constant()</target>
        </trans-unit>
        <trans-unit id="6e49d7c0742ac7e1a8502959e8c76e3b15aa9406" translate="yes" xml:space="preserve">
          <source>BooleanProp$.keyExists()</source>
          <target state="translated">BooleanProp$.keyExists()</target>
        </trans-unit>
        <trans-unit id="5db75d2c082cbac819096e84324d9bbcd0eb549e" translate="yes" xml:space="preserve">
          <source>BooleanProp$.valueIsTrue()</source>
          <target state="translated">BooleanProp$.valueIsTrue()</target>
        </trans-unit>
        <trans-unit id="47185d3e5aeb9585d54f7c301a252e3f51157020" translate="yes" xml:space="preserve">
          <source>BooleanProp.disable()</source>
          <target state="translated">BooleanProp.disable()</target>
        </trans-unit>
        <trans-unit id="e65ed2fa83e6fa31a6b759bc222c9088987a3541" translate="yes" xml:space="preserve">
          <source>BooleanProp.enable()</source>
          <target state="translated">BooleanProp.enable()</target>
        </trans-unit>
        <trans-unit id="cc2e991aff1aa20d9a81960f333acb6329e5925c" translate="yes" xml:space="preserve">
          <source>BooleanProp.scala</source>
          <target state="translated">BooleanProp.scala</target>
        </trans-unit>
        <trans-unit id="dfa9731045c04e983411e38eca48fd1f117b393c" translate="yes" xml:space="preserve">
          <source>BooleanProp.toggle()</source>
          <target state="translated">BooleanProp.toggle()</target>
        </trans-unit>
        <trans-unit id="1face3098a28c939170bdbfccd6f26f48f17b812" translate="yes" xml:space="preserve">
          <source>BooleanProp.value()</source>
          <target state="translated">BooleanProp.value()</target>
        </trans-unit>
        <trans-unit id="90b080c927ac2500984670987bd8ce25f93116cc" translate="yes" xml:space="preserve">
          <source>Both these methods can be called any number of times without having to discard the iterator. Note that even &lt;code&gt;hasNext&lt;/code&gt; may cause mutation -- such as when iterating from an input stream, where it will block until the stream is closed or some input becomes available.</source>
          <target state="translated">Ambos m&amp;eacute;todos pueden invocarse tantas veces como desee sin tener que descartar el iterador. Tenga en cuenta que incluso &lt;code&gt;hasNext&lt;/code&gt; puede causar una mutaci&amp;oacute;n, como cuando se itera desde un flujo de entrada, donde se bloquear&amp;aacute; hasta que el flujo se cierre o alguna entrada est&amp;eacute; disponible.</target>
        </trans-unit>
        <trans-unit id="dbbaca040c565327e8038721063653607e8ee2ad" translate="yes" xml:space="preserve">
          <source>Break from dynamically closest enclosing breakable block using this exact &lt;code&gt;Breaks&lt;/code&gt; instance.</source>
          <target state="translated">Romper desde el bloque rompible envolvente din&amp;aacute;micamente m&amp;aacute;s cercano utilizando esta instancia exacta de &lt;code&gt;Breaks&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="50f88da05c8e174324af021a4ee24bc168eb0c3d" translate="yes" xml:space="preserve">
          <source>Breaks</source>
          <target state="translated">Breaks</target>
        </trans-unit>
        <trans-unit id="37ef4033123e2d6f5b0b603f366641b38613a56f" translate="yes" xml:space="preserve">
          <source>Breaks$</source>
          <target state="translated">Breaks$</target>
        </trans-unit>
        <trans-unit id="c0e156dc9783822f1501ab543ca973cf351cb5d7" translate="yes" xml:space="preserve">
          <source>Breaks$.TryBlock()</source>
          <target state="translated">Breaks$.TryBlock()</target>
        </trans-unit>
        <trans-unit id="38d3c33164e8cb6b99b399e3a696b36adebb9e8d" translate="yes" xml:space="preserve">
          <source>Breaks$.break()</source>
          <target state="translated">Breaks$.break()</target>
        </trans-unit>
        <trans-unit id="ee4cca60f1efccbe87424cfc2cbba7fe84375e24" translate="yes" xml:space="preserve">
          <source>Breaks$.breakable()</source>
          <target state="translated">Breaks$.breakable()</target>
        </trans-unit>
        <trans-unit id="e7201aa931c364f04432dbc9824648790587f92f" translate="yes" xml:space="preserve">
          <source>Breaks$.tryBreakable()</source>
          <target state="translated">Breaks$.tryBreakable()</target>
        </trans-unit>
        <trans-unit id="1848848f1ae6bc62d868570d8d1ff5a4287f0620" translate="yes" xml:space="preserve">
          <source>Breaks.Breaks()</source>
          <target state="translated">Breaks.Breaks()</target>
        </trans-unit>
        <trans-unit id="04774a13facd5ca5d50c84a3b3f31d092aeecd8d" translate="yes" xml:space="preserve">
          <source>Breaks.TryBlock</source>
          <target state="translated">Breaks.TryBlock</target>
        </trans-unit>
        <trans-unit id="588856335151d12efaf5ce91ea9e157c0d3142bd" translate="yes" xml:space="preserve">
          <source>Breaks.TryBlock()</source>
          <target state="translated">Breaks.TryBlock()</target>
        </trans-unit>
        <trans-unit id="a90e656269e1aaed9db966978a27d33610412c0a" translate="yes" xml:space="preserve">
          <source>Breaks.TryBlock.catchBreak()</source>
          <target state="translated">Breaks.TryBlock.catchBreak()</target>
        </trans-unit>
        <trans-unit id="1ea00d9be7c8906292bb1bd774162db80be995d2" translate="yes" xml:space="preserve">
          <source>Breaks.break()</source>
          <target state="translated">Breaks.break()</target>
        </trans-unit>
        <trans-unit id="0f4d40aac502a958bccf81ce890c7d5164251942" translate="yes" xml:space="preserve">
          <source>Breaks.breakable()</source>
          <target state="translated">Breaks.breakable()</target>
        </trans-unit>
        <trans-unit id="fdff20ff73acfc9690acc591d1e1d6c45ae2a09c" translate="yes" xml:space="preserve">
          <source>Breaks.scala</source>
          <target state="translated">Breaks.scala</target>
        </trans-unit>
        <trans-unit id="1d8d9b8410d24b1f400eaaa2f5106211e1823285" translate="yes" xml:space="preserve">
          <source>Breaks.tryBreakable()</source>
          <target state="translated">Breaks.tryBreakable()</target>
        </trans-unit>
        <trans-unit id="2be5f64b36230104ef9c6e230215846a83d18df6" translate="yes" xml:space="preserve">
          <source>Buffer</source>
          <target state="translated">Buffer</target>
        </trans-unit>
        <trans-unit id="46750b7d4e648563d346810b56a16aaef6136e15" translate="yes" xml:space="preserve">
          <source>Buffer$</source>
          <target state="translated">Buffer$</target>
        </trans-unit>
        <trans-unit id="d0592b35b1e6e6dc6501033da561ed0927044b96" translate="yes" xml:space="preserve">
          <source>Buffer.++=:()</source>
          <target state="translated">Buffer.++=:()</target>
        </trans-unit>
        <trans-unit id="b20d96fb1f50ac4159583a7fc6146b83d4dd8bdb" translate="yes" xml:space="preserve">
          <source>Buffer.+=:()</source>
          <target state="translated">Buffer.+=:()</target>
        </trans-unit>
        <trans-unit id="ef76ce760ebe8ba3411318ff5b98ae1def428868" translate="yes" xml:space="preserve">
          <source>Buffer.append()</source>
          <target state="translated">Buffer.append()</target>
        </trans-unit>
        <trans-unit id="af51bfa33d1e59ea200316f4a8420f9c68757792" translate="yes" xml:space="preserve">
          <source>Buffer.appendAll()</source>
          <target state="translated">Buffer.appendAll()</target>
        </trans-unit>
        <trans-unit id="ef29a47398d6d89312aff5683a9ff2ed3b539710" translate="yes" xml:space="preserve">
          <source>Buffer.dropInPlace()</source>
          <target state="translated">Buffer.dropInPlace()</target>
        </trans-unit>
        <trans-unit id="7ce01b892dbcca97911595c16f700a84f3e0e610" translate="yes" xml:space="preserve">
          <source>Buffer.dropRightInPlace()</source>
          <target state="translated">Buffer.dropRightInPlace()</target>
        </trans-unit>
        <trans-unit id="08b12e45a856ea3ca4738ba43308f12a5f563947" translate="yes" xml:space="preserve">
          <source>Buffer.dropWhileInPlace()</source>
          <target state="translated">Buffer.dropWhileInPlace()</target>
        </trans-unit>
        <trans-unit id="4a680a691b456e2db13d38c969e640b770218859" translate="yes" xml:space="preserve">
          <source>Buffer.insert()</source>
          <target state="translated">Buffer.insert()</target>
        </trans-unit>
        <trans-unit id="2f4bbde95bb99b9f4a051aa2b96fdb2335625bff" translate="yes" xml:space="preserve">
          <source>Buffer.insertAll()</source>
          <target state="translated">Buffer.insertAll()</target>
        </trans-unit>
        <trans-unit id="0f4e3cf6dd32fa0aad1b87fba74f79ed4f133246" translate="yes" xml:space="preserve">
          <source>Buffer.iterableFactory()</source>
          <target state="translated">Buffer.iterableFactory()</target>
        </trans-unit>
        <trans-unit id="c78bee5e6c0378f92891c712377cc1fa1d02ac6e" translate="yes" xml:space="preserve">
          <source>Buffer.knownSize()</source>
          <target state="translated">Buffer.knownSize()</target>
        </trans-unit>
        <trans-unit id="8b1658c2f792700191ece4567c7df8500e2bd9fd" translate="yes" xml:space="preserve">
          <source>Buffer.padToInPlace()</source>
          <target state="translated">Buffer.padToInPlace()</target>
        </trans-unit>
        <trans-unit id="693b724400827e73dc6a3c5eac1185d2f368412e" translate="yes" xml:space="preserve">
          <source>Buffer.patchInPlace()</source>
          <target state="translated">Buffer.patchInPlace()</target>
        </trans-unit>
        <trans-unit id="5ce829eeb6ce95ff5c3198dce413562b4faa3830" translate="yes" xml:space="preserve">
          <source>Buffer.prepend()</source>
          <target state="translated">Buffer.prepend()</target>
        </trans-unit>
        <trans-unit id="aa2e3de720e8668ad82777fe77b6ead6ad63e9c8" translate="yes" xml:space="preserve">
          <source>Buffer.prependAll()</source>
          <target state="translated">Buffer.prependAll()</target>
        </trans-unit>
        <trans-unit id="7e733a8dea2fba80f34eb7d13ddc59646d841b40" translate="yes" xml:space="preserve">
          <source>Buffer.remove()</source>
          <target state="translated">Buffer.remove()</target>
        </trans-unit>
        <trans-unit id="9e13ae335c9c56c72b413d54a44d2b1282d49da6" translate="yes" xml:space="preserve">
          <source>Buffer.scala</source>
          <target state="translated">Buffer.scala</target>
        </trans-unit>
        <trans-unit id="803e069df2b0d9a20a194ea3751264648adcf98b" translate="yes" xml:space="preserve">
          <source>Buffer.sliceInPlace()</source>
          <target state="translated">Buffer.sliceInPlace()</target>
        </trans-unit>
        <trans-unit id="1f513d368c506e9975e3f44fde1e690f52785ddc" translate="yes" xml:space="preserve">
          <source>Buffer.stringPrefix()</source>
          <target state="translated">Buffer.stringPrefix()</target>
        </trans-unit>
        <trans-unit id="1dd7ca3d75bf2f62794cbe17b651d9fc52180b6a" translate="yes" xml:space="preserve">
          <source>Buffer.subtractOne()</source>
          <target state="translated">Buffer.subtractOne()</target>
        </trans-unit>
        <trans-unit id="b7a832882462ba128de86fe529c6ded23a4f332b" translate="yes" xml:space="preserve">
          <source>Buffer.takeInPlace()</source>
          <target state="translated">Buffer.takeInPlace()</target>
        </trans-unit>
        <trans-unit id="35a63ca27843ccd8fb4f146364d094573c4f7fe8" translate="yes" xml:space="preserve">
          <source>Buffer.takeRightInPlace()</source>
          <target state="translated">Buffer.takeRightInPlace()</target>
        </trans-unit>
        <trans-unit id="f0be8645f0442d675df85b3e8dd7d51af54e3f61" translate="yes" xml:space="preserve">
          <source>Buffer.takeWhileInPlace()</source>
          <target state="translated">Buffer.takeWhileInPlace()</target>
        </trans-unit>
        <trans-unit id="2efc5c6a62603c567465e71e7ce900a59d490d61" translate="yes" xml:space="preserve">
          <source>Buffer.trimEnd()</source>
          <target state="translated">Buffer.trimEnd()</target>
        </trans-unit>
        <trans-unit id="cb5f00b6ae4a29fd28a0298e9f90a10a47a806b3" translate="yes" xml:space="preserve">
          <source>Buffer.trimStart()</source>
          <target state="translated">Buffer.trimStart()</target>
        </trans-unit>
        <trans-unit id="a9a61d865ff403321d5c5b0a3e12546f666a2b56" translate="yes" xml:space="preserve">
          <source>Buffered iterators are iterators which provide a method &lt;code&gt;head&lt;/code&gt; that inspects the next element without discarding it.</source>
          <target state="translated">Los iteradores almacenados en b&amp;uacute;fer son iteradores que proporcionan un &lt;code&gt;head&lt;/code&gt; m&amp;eacute;todo que inspecciona el siguiente elemento sin descartarlo.</target>
        </trans-unit>
        <trans-unit id="eb61d89ebecf3d54944a4c50c757bf5add335891" translate="yes" xml:space="preserve">
          <source>BufferedIterator</source>
          <target state="translated">BufferedIterator</target>
        </trans-unit>
        <trans-unit id="68085e1d9fa775a67a16f3e7521eaef584afad12" translate="yes" xml:space="preserve">
          <source>BufferedIterator.buffered()</source>
          <target state="translated">BufferedIterator.buffered()</target>
        </trans-unit>
        <trans-unit id="1a650bce9164c437dc9f2a1eb76d629f53d36994" translate="yes" xml:space="preserve">
          <source>BufferedIterator.head()</source>
          <target state="translated">BufferedIterator.head()</target>
        </trans-unit>
        <trans-unit id="9fbe4dcf83a3aa02dc8ceecbfe77ffbc2a158b1b" translate="yes" xml:space="preserve">
          <source>BufferedIterator.headOption()</source>
          <target state="translated">BufferedIterator.headOption()</target>
        </trans-unit>
        <trans-unit id="79b3faec866afe71ef2b9ff38703e91ce77cc819" translate="yes" xml:space="preserve">
          <source>BufferedIterator.scala</source>
          <target state="translated">BufferedIterator.scala</target>
        </trans-unit>
        <trans-unit id="07743f6bb0e4f757ae307d282168cae649f02711" translate="yes" xml:space="preserve">
          <source>BufferedSource</source>
          <target state="translated">BufferedSource</target>
        </trans-unit>
        <trans-unit id="2a3b1d6d3e0aa2a18e1f4c2faeea6c961f9105ac" translate="yes" xml:space="preserve">
          <source>BufferedSource.BufferedLineIterator</source>
          <target state="translated">BufferedSource.BufferedLineIterator</target>
        </trans-unit>
        <trans-unit id="5c67a631bd0f077cae997882977adeb39c600346" translate="yes" xml:space="preserve">
          <source>BufferedSource.BufferedLineIterator()</source>
          <target state="translated">BufferedSource.BufferedLineIterator()</target>
        </trans-unit>
        <trans-unit id="c970aa4e8ed1a6b0a5ddbf6a3413e9c2d8785082" translate="yes" xml:space="preserve">
          <source>BufferedSource.BufferedLineIterator.BufferedLineIterator()</source>
          <target state="translated">BufferedSource.BufferedLineIterator.BufferedLineIterator()</target>
        </trans-unit>
        <trans-unit id="54e97cdb9eee6622d1846b99eaee08af94b511f6" translate="yes" xml:space="preserve">
          <source>BufferedSource.BufferedLineIterator.hasNext()</source>
          <target state="translated">BufferedSource.BufferedLineIterator.hasNext()</target>
        </trans-unit>
        <trans-unit id="ea9c9c23e432e96edcdea9ad866f072cd30935ed" translate="yes" xml:space="preserve">
          <source>BufferedSource.BufferedLineIterator.next()</source>
          <target state="translated">BufferedSource.BufferedLineIterator.next()</target>
        </trans-unit>
        <trans-unit id="26ed6084c235a2b56f13bd43167c13bcca4d8f17" translate="yes" xml:space="preserve">
          <source>BufferedSource.BufferedLineIterator.nextLine()</source>
          <target state="translated">BufferedSource.BufferedLineIterator.nextLine()</target>
        </trans-unit>
        <trans-unit id="44eba012ac23bb635ece75968ca8654f171d2e59" translate="yes" xml:space="preserve">
          <source>BufferedSource.BufferedSource()</source>
          <target state="translated">BufferedSource.BufferedSource()</target>
        </trans-unit>
        <trans-unit id="c567a1879beced04ebdd4db71716623e0bb4ec99" translate="yes" xml:space="preserve">
          <source>BufferedSource.addString()</source>
          <target state="translated">BufferedSource.addString()</target>
        </trans-unit>
        <trans-unit id="a6740ed0639c5a6ef97dfcfff2ae397910a624af" translate="yes" xml:space="preserve">
          <source>BufferedSource.bufferedReader()</source>
          <target state="translated">BufferedSource.bufferedReader()</target>
        </trans-unit>
        <trans-unit id="587365169f728e3b416dd8db299e7a9e9596c0c4" translate="yes" xml:space="preserve">
          <source>BufferedSource.codec()</source>
          <target state="translated">BufferedSource.codec()</target>
        </trans-unit>
        <trans-unit id="7e308cc55b1598f70c5fa60513f10a45ea4c5e21" translate="yes" xml:space="preserve">
          <source>BufferedSource.getLines()</source>
          <target state="translated">BufferedSource.getLines()</target>
        </trans-unit>
        <trans-unit id="d8db9741c7c1a978a91652f11ac23f4c2a9a29ae" translate="yes" xml:space="preserve">
          <source>BufferedSource.iter()</source>
          <target state="translated">BufferedSource.iter()</target>
        </trans-unit>
        <trans-unit id="ccace8c8ee131b7b1cc416934796fdb816ffe8e6" translate="yes" xml:space="preserve">
          <source>BufferedSource.reader()</source>
          <target state="translated">BufferedSource.reader()</target>
        </trans-unit>
        <trans-unit id="a797d5e528d2c47249aeebd728ec35247fb85fa0" translate="yes" xml:space="preserve">
          <source>BufferedSource.scala</source>
          <target state="translated">BufferedSource.scala</target>
        </trans-unit>
        <trans-unit id="8314c9e4b7f7b144692aea18dc677e651b649965" translate="yes" xml:space="preserve">
          <source>Build the source collection type from an Iterable with SortedOps</source>
          <target state="translated">Construye el tipo de colección de fuentes a partir de un Iterable con SortedOps</target>
        </trans-unit>
        <trans-unit id="b3d982a3978143f89393eb0f6014d1a69a0ffafa" translate="yes" xml:space="preserve">
          <source>Build the source collection type from an IterableOps</source>
          <target state="translated">Construye el tipo de colección de fuentes a partir de un IterableOps</target>
        </trans-unit>
        <trans-unit id="8ad830f89642394d3528450896da93860357d762" translate="yes" xml:space="preserve">
          <source>BuildFrom</source>
          <target state="translated">BuildFrom</target>
        </trans-unit>
        <trans-unit id="5057a7b9b1d803aa6bdc81b60a98eb422112b2cc" translate="yes" xml:space="preserve">
          <source>BuildFrom$</source>
          <target state="translated">BuildFrom$</target>
        </trans-unit>
        <trans-unit id="d37336f33d7dfc481d3ee8337e51e476c53b7fe6" translate="yes" xml:space="preserve">
          <source>BuildFrom$.buildFromArray()</source>
          <target state="translated">BuildFrom$.buildFromArray()</target>
        </trans-unit>
        <trans-unit id="44e23eb8ad364590289885e3b08b56deb5c0a40c" translate="yes" xml:space="preserve">
          <source>BuildFrom$.buildFromBitSet()</source>
          <target state="translated">BuildFrom$.buildFromBitSet()</target>
        </trans-unit>
        <trans-unit id="027e7683f7e24dee9e944a5e6d7b17de20ed6bdf" translate="yes" xml:space="preserve">
          <source>BuildFrom$.buildFromIterableOps()</source>
          <target state="translated">BuildFrom$.buildFromIterableOps()</target>
        </trans-unit>
        <trans-unit id="483180870636bd33988a1649939d2929055a372e" translate="yes" xml:space="preserve">
          <source>BuildFrom$.buildFromIterator()</source>
          <target state="translated">BuildFrom$.buildFromIterator()</target>
        </trans-unit>
        <trans-unit id="0991b7fb471c0d550d05fd7717849a06940db6d1" translate="yes" xml:space="preserve">
          <source>BuildFrom$.buildFromMapOps()</source>
          <target state="translated">BuildFrom$.buildFromMapOps()</target>
        </trans-unit>
        <trans-unit id="df17f80412d988cbbbf229f9e2005696ef0c6c3f" translate="yes" xml:space="preserve">
          <source>BuildFrom$.buildFromSortedMapOps()</source>
          <target state="translated">BuildFrom$.buildFromSortedMapOps()</target>
        </trans-unit>
        <trans-unit id="1a21c14e41842d31b91f66f8de13f4032a908880" translate="yes" xml:space="preserve">
          <source>BuildFrom$.buildFromSortedSetOps()</source>
          <target state="translated">BuildFrom$.buildFromSortedSetOps()</target>
        </trans-unit>
        <trans-unit id="988a2f23b73bf7724736e0efdfb398afdcd360fa" translate="yes" xml:space="preserve">
          <source>BuildFrom$.buildFromString()</source>
          <target state="translated">BuildFrom$.buildFromString()</target>
        </trans-unit>
        <trans-unit id="228651234c2f7dc415e38ac5f52e9a8376dc42a4" translate="yes" xml:space="preserve">
          <source>BuildFrom$.buildFromView()</source>
          <target state="translated">BuildFrom$.buildFromView()</target>
        </trans-unit>
        <trans-unit id="a4b4de88e260abb2cc9df29eaca6335e706c7eee" translate="yes" xml:space="preserve">
          <source>BuildFrom$.buildFromWrappedString()</source>
          <target state="translated">BuildFrom$.buildFromWrappedString()</target>
        </trans-unit>
        <trans-unit id="216a210a454155e0f535ec6978b53971705e5e5e" translate="yes" xml:space="preserve">
          <source>BuildFrom$.fallbackStringCanBuildFrom()</source>
          <target state="translated">BuildFrom$.fallbackStringCanBuildFrom()</target>
        </trans-unit>
        <trans-unit id="04973eb6efb30ce32c3480df3e7d9151105b34e4" translate="yes" xml:space="preserve">
          <source>BuildFrom.fromSpecific()</source>
          <target state="translated">BuildFrom.fromSpecific()</target>
        </trans-unit>
        <trans-unit id="b3c4a6fd53991c006635a2e081a3f0bd4241f4bc" translate="yes" xml:space="preserve">
          <source>BuildFrom.newBuilder()</source>
          <target state="translated">BuildFrom.newBuilder()</target>
        </trans-unit>
        <trans-unit id="6dfa7da9a39306f189089b36b1ab93dfe7ecccd0" translate="yes" xml:space="preserve">
          <source>BuildFrom.scala</source>
          <target state="translated">BuildFrom.scala</target>
        </trans-unit>
        <trans-unit id="3001285db8e89ee479d189c003f0dfb4c4e71692" translate="yes" xml:space="preserve">
          <source>BuildFrom.toFactory()</source>
          <target state="translated">BuildFrom.toFactory()</target>
        </trans-unit>
        <trans-unit id="2066f4d01ab15918c44944fdf70b8b7e751132a7" translate="yes" xml:space="preserve">
          <source>BuildFromLowPriority1</source>
          <target state="translated">BuildFromLowPriority1</target>
        </trans-unit>
        <trans-unit id="26b16df8fe192a7f0aa19ca3847d62ef6cf83392" translate="yes" xml:space="preserve">
          <source>BuildFromLowPriority1.buildFromSortedSetOps()</source>
          <target state="translated">BuildFromLowPriority1.buildFromSortedSetOps()</target>
        </trans-unit>
        <trans-unit id="5b57c6461912b385acd8e853b9f8654b86d4d9b1" translate="yes" xml:space="preserve">
          <source>BuildFromLowPriority1.fallbackStringCanBuildFrom()</source>
          <target state="translated">BuildFromLowPriority1.fallbackStringCanBuildFrom()</target>
        </trans-unit>
        <trans-unit id="fc5ceb1aacc303a3c2720454d2bae735dfbc2e28" translate="yes" xml:space="preserve">
          <source>BuildFromLowPriority2</source>
          <target state="translated">BuildFromLowPriority2</target>
        </trans-unit>
        <trans-unit id="6f6121b5a36293de5fc06e4c2c803c6dbdf9f29c" translate="yes" xml:space="preserve">
          <source>BuildFromLowPriority2.buildFromIterableOps()</source>
          <target state="translated">BuildFromLowPriority2.buildFromIterableOps()</target>
        </trans-unit>
        <trans-unit id="cb911e649cbb93eb2dc70039d049184a8faf5d11" translate="yes" xml:space="preserve">
          <source>BuildFromLowPriority2.buildFromIterator()</source>
          <target state="translated">BuildFromLowPriority2.buildFromIterator()</target>
        </trans-unit>
        <trans-unit id="4759bf14d7a511508e86c343c934894b6e8db533" translate="yes" xml:space="preserve">
          <source>Builder</source>
          <target state="translated">Builder</target>
        </trans-unit>
        <trans-unit id="d7613ead6913a03201e66ca637fee219521328dd" translate="yes" xml:space="preserve">
          <source>Builder to use to build the resulting collection</source>
          <target state="translated">Constructor que se utilizará para construir la colección resultante</target>
        </trans-unit>
        <trans-unit id="167061a3988c47ce2cd12b7a9c702178685ae0d5" translate="yes" xml:space="preserve">
          <source>Builder.clear()</source>
          <target state="translated">Builder.clear()</target>
        </trans-unit>
        <trans-unit id="e02b61f36f5312414a7bb9f5cb0849f1f96eaedd" translate="yes" xml:space="preserve">
          <source>Builder.mapResult()</source>
          <target state="translated">Builder.mapResult()</target>
        </trans-unit>
        <trans-unit id="4c2b4855f8e1b1ae0d538fffe5463d62e25706a8" translate="yes" xml:space="preserve">
          <source>Builder.result()</source>
          <target state="translated">Builder.result()</target>
        </trans-unit>
        <trans-unit id="627566160935b38bf3422061581163eda7a1f610" translate="yes" xml:space="preserve">
          <source>Builder.scala</source>
          <target state="translated">Builder.scala</target>
        </trans-unit>
        <trans-unit id="341c0a8b8ddff792b54c10afd7990e742d37869b" translate="yes" xml:space="preserve">
          <source>Builder.sizeHint()</source>
          <target state="translated">Builder.sizeHint()</target>
        </trans-unit>
        <trans-unit id="0b07cb77d7d30bc860223da7d26d95099601481d" translate="yes" xml:space="preserve">
          <source>Builder.sizeHintBounded()</source>
          <target state="translated">Builder.sizeHintBounded()</target>
        </trans-unit>
        <trans-unit id="1cc850894c5fab40a1db8b6ecac8f3efdb101d95" translate="yes" xml:space="preserve">
          <source>Building specialized Accumulators is handled transparently. As a user, using the &lt;a href=&quot;accumulator&quot; id=&quot;scala.jdk.Accumulator&quot; name=&quot;scala.jdk.Accumulator&quot;&gt;Accumulator&lt;/a&gt; object as a factory automatically creates an &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;, &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;, &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt; or &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; depending on the element type.</source>
          <target state="translated">La construcci&amp;oacute;n de Acumuladores especializados se gestiona de forma transparente. Como usuario, el uso del objeto &lt;a href=&quot;accumulator&quot; id=&quot;scala.jdk.Accumulator&quot; name=&quot;scala.jdk.Accumulator&quot;&gt;Accumulator&lt;/a&gt; como f&amp;aacute;brica crea autom&amp;aacute;ticamente un &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt; , &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt; , &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt; o &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; dependiendo del tipo de elemento.</target>
        </trans-unit>
        <trans-unit id="1f01096bee0a13a9b0c1a39022e86facbf9f44fd" translate="yes" xml:space="preserve">
          <source>Builds a collection of type &lt;code&gt;C&lt;/code&gt; from elements of type &lt;code&gt;A&lt;/code&gt; when a source collection of type &lt;code&gt;From&lt;/code&gt; is available. Implicit instances of &lt;code&gt;BuildFrom&lt;/code&gt; are available for all collection types.</source>
          <target state="translated">Crea una colecci&amp;oacute;n de tipo &lt;code&gt;C&lt;/code&gt; a partir de elementos de tipo &lt;code&gt;A&lt;/code&gt; cuando est&amp;aacute; disponible una colecci&amp;oacute;n de origen de tipo &lt;code&gt;From&lt;/code&gt; . Las instancias impl&amp;iacute;citas de &lt;code&gt;BuildFrom&lt;/code&gt; est&amp;aacute;n disponibles para todos los tipos de colecciones.</target>
        </trans-unit>
        <trans-unit id="3efb6ca8a1e817efa7eb3d69e9cc2b758822a458" translate="yes" xml:space="preserve">
          <source>Builds a new &lt;code&gt;CollisionProofHashMap&lt;/code&gt; by applying a function to all elements of this mutable collision-proof hash map and using the elements of the resulting collections.</source>
          <target state="translated">Crea un nuevo &lt;code&gt;CollisionProofHashMap&lt;/code&gt; aplicando una funci&amp;oacute;n a todos los elementos de este mapa hash mutable a prueba de colisiones y utilizando los elementos de las colecciones resultantes.</target>
        </trans-unit>
        <trans-unit id="23d89b489dc031e26639cab5ac20ca28e73d4812" translate="yes" xml:space="preserve">
          <source>Builds a new &lt;code&gt;CollisionProofHashMap&lt;/code&gt; by applying a function to all elements of this mutable collision-proof hash map.</source>
          <target state="translated">Crea un nuevo &lt;code&gt;CollisionProofHashMap&lt;/code&gt; aplicando una funci&amp;oacute;n a todos los elementos de este mapa hash mutable a prueba de colisiones.</target>
        </trans-unit>
        <trans-unit id="9bfd3e42cada94a5991456591aa317d4b4a6a0e2" translate="yes" xml:space="preserve">
          <source>Builds a new String by applying a partial function to all chars of this String on which the function is defined.</source>
          <target state="translated">Construye una nueva Cuerda aplicando una función parcial a todos los caracteres de esta Cuerda en la que se define la función.</target>
        </trans-unit>
        <trans-unit id="47dde8570f6cfa5ac977b5356301d5c81520d7bb" translate="yes" xml:space="preserve">
          <source>Builds a new array by applying a function to all elements of this array and using the elements of the resulting collections.</source>
          <target state="translated">Construye una nueva matriz aplicando una función a todos los elementos de esta matriz y utilizando los elementos de las colecciones resultantes.</target>
        </trans-unit>
        <trans-unit id="7e40fe0d137aa6b21083e5f391129a9366999d99" translate="yes" xml:space="preserve">
          <source>Builds a new array by applying a function to all elements of this array.</source>
          <target state="translated">Construye una nueva matriz aplicando una función a todos los elementos de esta matriz.</target>
        </trans-unit>
        <trans-unit id="e7a3e69b767240b4fe843ce437214e7b58c375a1" translate="yes" xml:space="preserve">
          <source>Builds a new array by applying a partial function to all elements of this array on which the function is defined.</source>
          <target state="translated">Construye una nueva matriz aplicando una función parcial a todos los elementos de esta matriz en la que se define la función.</target>
        </trans-unit>
        <trans-unit id="05fdfdf2e370f908c7ebe92accc5a33d72223156" translate="yes" xml:space="preserve">
          <source>Builds a new bitset by applying a function to all elements of this bitset</source>
          <target state="translated">Construye un nuevo conjunto de bits aplicando una función a todos los elementos de este conjunto de bits</target>
        </trans-unit>
        <trans-unit id="6be4f89ce159943e904fd95c3941b4129ff593ad" translate="yes" xml:space="preserve">
          <source>Builds a new collection by applying a function to all chars of this filtered string and using the elements of the resulting collections.</source>
          <target state="translated">Construye una nueva colección aplicando una función a todos los caracteres de esta cadena filtrada y utilizando los elementos de las colecciones resultantes.</target>
        </trans-unit>
        <trans-unit id="c99afdb84b18d17b7348c4f1237ffb74a4e51fcc" translate="yes" xml:space="preserve">
          <source>Builds a new collection by applying a function to all chars of this filtered string.</source>
          <target state="translated">Construye una nueva colección aplicando una función a todos los caracteres de esta cadena filtrada.</target>
        </trans-unit>
        <trans-unit id="917351736ce74049363294fd9e6dfb6f07c9452f" translate="yes" xml:space="preserve">
          <source>Builds a new collection by applying a function to all chars of this string and using the elements of the resulting collections.</source>
          <target state="translated">Construye una nueva colección aplicando una función a todos los caracteres de esta cadena y utilizando los elementos de las colecciones resultantes.</target>
        </trans-unit>
        <trans-unit id="0fc09bbb2e07104cf117c0c1799ff3d12b45697b" translate="yes" xml:space="preserve">
          <source>Builds a new collection by applying a function to all chars of this string.</source>
          <target state="translated">Construye una nueva colección aplicando una función a todos los caracteres de esta cadena.</target>
        </trans-unit>
        <trans-unit id="2f0186cd18c38e951a4d68825168d7da79ffbd0b" translate="yes" xml:space="preserve">
          <source>Builds a new collection by applying a function to all elements of the &lt;code&gt;filtered&lt;/code&gt; outer collection containing this &lt;code&gt;WithFilter&lt;/code&gt; instance that satisfy</source>
          <target state="translated">Crea una nueva colecci&amp;oacute;n aplicando una funci&amp;oacute;n a todos los elementos de la colecci&amp;oacute;n externa &lt;code&gt;filtered&lt;/code&gt; contiene esta instancia de &lt;code&gt;WithFilter&lt;/code&gt; que cumple</target>
        </trans-unit>
        <trans-unit id="bc68532711acef7be0056dd6df5820d6a654ddb5" translate="yes" xml:space="preserve">
          <source>Builds a new collection by applying a function to all elements of the &lt;code&gt;filtered&lt;/code&gt; outer collection.</source>
          <target state="translated">Crea una nueva colecci&amp;oacute;n aplicando una funci&amp;oacute;n a todos los elementos de la colecci&amp;oacute;n externa &lt;code&gt;filtered&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="add7cdd5ea79710691e4069cb2a26910285ef082" translate="yes" xml:space="preserve">
          <source>Builds a new collection by applying a function to all elements of this collection and using the elements of the resulting collections.</source>
          <target state="translated">Construye una nueva colección aplicando una función a todos los elementos de esta colección y utilizando los elementos de las colecciones resultantes.</target>
        </trans-unit>
        <trans-unit id="7d047e9fa6fa3adbcbbf8d7d11d9a7487bca4d4e" translate="yes" xml:space="preserve">
          <source>Builds a new collection by applying a function to all elements of this collection.</source>
          <target state="translated">Construye una nueva colección aplicando una función a todos los elementos de esta colección.</target>
        </trans-unit>
        <trans-unit id="4b333b97c2db21f397c373f70f6c4731e4ae59cb" translate="yes" xml:space="preserve">
          <source>Builds a new collection by applying a partial function to all chars of this String on which the function is defined.</source>
          <target state="translated">Construye una nueva colección aplicando una función parcial a todos los caracteres de esta Cadena en la que se define la función.</target>
        </trans-unit>
        <trans-unit id="8e223ef004be38722e856ce63677ad61d8dc7154" translate="yes" xml:space="preserve">
          <source>Builds a new collection by applying a partial function to all elements of this collection on which the function is defined.</source>
          <target state="translated">Construye una nueva colección aplicando una función parcial a todos los elementos de esta colección sobre los que se define la función.</target>
        </trans-unit>
        <trans-unit id="33db60cebc8a49bd5d02571922665b1d1d62c47b" translate="yes" xml:space="preserve">
          <source>Builds a new collection by applying a partial function to all elements of this immutable tree seq map on which the function is defined.</source>
          <target state="translated">Construye una nueva colección aplicando una función parcial a todos los elementos de este inmutable mapa de secuencias de árboles en el que se define la función.</target>
        </trans-unit>
        <trans-unit id="f68688dcff226110c502b62dfae5f362b0825447" translate="yes" xml:space="preserve">
          <source>Builds a new collection by applying a partial function to all elements of this map on which the function is defined.</source>
          <target state="translated">Construye una nueva colección aplicando una función parcial a todos los elementos de este mapa en los que se define la función.</target>
        </trans-unit>
        <trans-unit id="4c296d78efd9c98cd990a34cd1735c27947c0a79" translate="yes" xml:space="preserve">
          <source>Builds a new immutable array by applying a function to all elements of this immutable array.</source>
          <target state="translated">Construye una nueva matriz inmutable aplicando una función a todos los elementos de esta matriz inmutable.</target>
        </trans-unit>
        <trans-unit id="67d7b512a92d3a157c6eea2822bfb9171982dc58" translate="yes" xml:space="preserve">
          <source>Builds a new immutable sequence by applying a function to all elements of this immutable sequence and using the elements of the resulting collections.</source>
          <target state="translated">Construye una nueva secuencia inmutable aplicando una función a todos los elementos de esta secuencia inmutable y utilizando los elementos de las colecciones resultantes.</target>
        </trans-unit>
        <trans-unit id="6c376f868b6a736410473ceb77d98efa9c7641c7" translate="yes" xml:space="preserve">
          <source>Builds a new immutable sequence by applying a function to all elements of this immutable sequence.</source>
          <target state="translated">Construye una nueva secuencia inmutable aplicando una función a todos los elementos de esta secuencia inmutable.</target>
        </trans-unit>
        <trans-unit id="1b7dff07b96bce2d1912d01a64026246a1d8cc60" translate="yes" xml:space="preserve">
          <source>Builds a new immutable sequence by applying a partial function to all elements of this immutable sequence on which the function is defined.</source>
          <target state="translated">Construye una nueva secuencia inmutable aplicando una función parcial a todos los elementos de esta secuencia inmutable sobre la que se define la función.</target>
        </trans-unit>
        <trans-unit id="e90c5d169fbba53328a5b1cc21878a11a0fc2ab1" translate="yes" xml:space="preserve">
          <source>Builds a new iterable collection by applying a function to all elements of this iterable collection and using the elements of the resulting collections.</source>
          <target state="translated">Construye una nueva colección iterable aplicando una función a todos los elementos de esta colección iterable y utilizando los elementos de las colecciones resultantes.</target>
        </trans-unit>
        <trans-unit id="59314ddf72854b59d431ce0518af15f6086aed39" translate="yes" xml:space="preserve">
          <source>Builds a new iterable collection by applying a function to all elements of this iterable collection.</source>
          <target state="translated">Construye una nueva colección iterable aplicando una función a todos los elementos de esta colección iterable.</target>
        </trans-unit>
        <trans-unit id="97f5c77167d1997b91af9f8fecacb6c2d5e5ac0f" translate="yes" xml:space="preserve">
          <source>Builds a new iterable collection by applying a partial function to all elements of this iterable collection on which the function is defined.</source>
          <target state="translated">Construye una nueva colección iterable aplicando una función parcial a todos los elementos de esta colección iterable sobre la que se define la función.</target>
        </trans-unit>
        <trans-unit id="11ed02f135deb4ac52b31687179925df56ff8427" translate="yes" xml:space="preserve">
          <source>Builds a new iterator by applying a function to all elements of this iterator and using the elements of the resulting collections.</source>
          <target state="translated">Construye un nuevo iterador aplicando una función a todos los elementos de este iterador y utilizando los elementos de las colecciones resultantes.</target>
        </trans-unit>
        <trans-unit id="32c900fcdb08b5c574321c80da072b05963d6bf5" translate="yes" xml:space="preserve">
          <source>Builds a new iterator by applying a function to all elements of this iterator.</source>
          <target state="translated">Construye un nuevo iterador aplicando una función a todos los elementos de este iterador.</target>
        </trans-unit>
        <trans-unit id="d21643db07f58fdd240b4617ff5a1977080b41d5" translate="yes" xml:space="preserve">
          <source>Builds a new iterator by applying a partial function to all elements of this iterator on which the function is defined.</source>
          <target state="translated">Construye un nuevo iterador aplicando una función parcial a todos los elementos de este iterador en los que se define la función.</target>
        </trans-unit>
        <trans-unit id="47c13814fafddf2b6350bcb03e3b1136fe210ae6" translate="yes" xml:space="preserve">
          <source>Builds a new iterator from this one without any duplicated elements as determined by &lt;code&gt;==&lt;/code&gt; after applying the transforming function &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">Construye un nuevo iterador a partir de este sin ning&amp;uacute;n elemento duplicado seg&amp;uacute;n lo determinado por &lt;code&gt;==&lt;/code&gt; despu&amp;eacute;s de aplicar la funci&amp;oacute;n de transformaci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ee5bccd7a15f2b01d94b06508c570861ccef451" translate="yes" xml:space="preserve">
          <source>Builds a new iterator from this one without any duplicated elements on it.</source>
          <target state="translated">Construye un nuevo iterador a partir de este sin elementos duplicados en él.</target>
        </trans-unit>
        <trans-unit id="801bbf02d4dd6b7d3153bf2e4c746bbada2b790f" translate="yes" xml:space="preserve">
          <source>Builds a new lazy list by applying a function to all elements of this lazy list and using the elements of the resulting collections.</source>
          <target state="translated">Construye una nueva lista de perezosos aplicando una función a todos los elementos de esta lista de perezosos y utilizando los elementos de las colecciones resultantes.</target>
        </trans-unit>
        <trans-unit id="1855fc6269b26e28e05c719ea421fd194074be07" translate="yes" xml:space="preserve">
          <source>Builds a new lazy list by applying a function to all elements of this lazy list.</source>
          <target state="translated">Construye una nueva lista de perezosos aplicando una función a todos los elementos de esta lista de perezosos.</target>
        </trans-unit>
        <trans-unit id="17d134a92d2cd107e974cf0a6e7c6e393c247f8a" translate="yes" xml:space="preserve">
          <source>Builds a new lazy list by applying a partial function to all elements of this lazy list on which the function is defined.</source>
          <target state="translated">Construye una nueva lista de perezosos aplicando una función parcial a todos los elementos de esta lista de perezosos en la que se define la función.</target>
        </trans-unit>
        <trans-unit id="b4a53baebf8f85c7bdd47d0c261c057af4e9e224" translate="yes" xml:space="preserve">
          <source>Builds a new list by applying a function to all elements of this list and using the elements of the resulting collections.</source>
          <target state="translated">Construye una nueva lista aplicando una función a todos los elementos de esta lista y utilizando los elementos de las colecciones resultantes.</target>
        </trans-unit>
        <trans-unit id="a27c9e34bbe8a1acd368e5e0852cc30b62544976" translate="yes" xml:space="preserve">
          <source>Builds a new list by applying a function to all elements of this list.</source>
          <target state="translated">Construye una nueva lista aplicando una función a todos los elementos de esta lista.</target>
        </trans-unit>
        <trans-unit id="3bd7b6c335c625e25ce7d925bd12526f5dd3c475" translate="yes" xml:space="preserve">
          <source>Builds a new list by applying a function to all elements of this list. Like &lt;code&gt;xs map f&lt;/code&gt;, but returns &lt;code&gt;xs&lt;/code&gt; unchanged if function &lt;code&gt;f&lt;/code&gt; maps all elements to themselves (as determined by &lt;code&gt;eq&lt;/code&gt;).</source>
          <target state="translated">Crea una nueva lista aplicando una funci&amp;oacute;n a todos los elementos de esta lista. Como &lt;code&gt;xs map f&lt;/code&gt; mapea f , pero devuelve &lt;code&gt;xs&lt;/code&gt; sin cambios si la funci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; mapea todos los elementos a s&amp;iacute; mismos (seg&amp;uacute;n lo determinado por la &lt;code&gt;eq&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="79126105ed261d897f168b006a85f8f18df764cf" translate="yes" xml:space="preserve">
          <source>Builds a new list by applying a partial function to all elements of this list on which the function is defined.</source>
          <target state="translated">Construye una nueva lista aplicando una función parcial a todos los elementos de esta lista en los que se define la función.</target>
        </trans-unit>
        <trans-unit id="1fa05034741a17226846da2bc26ba13453b3979a" translate="yes" xml:space="preserve">
          <source>Builds a new map by applying a function to all elements of this immutable tree seq map and using the elements of the resulting collections.</source>
          <target state="translated">Construye un nuevo mapa aplicando una función a todos los elementos de este inmutable mapa de secuencias de árboles y utilizando los elementos de las colecciones resultantes.</target>
        </trans-unit>
        <trans-unit id="39004624498a35efdbe3f301341ac8ae2a748b33" translate="yes" xml:space="preserve">
          <source>Builds a new map by applying a function to all elements of this immutable tree seq map.</source>
          <target state="translated">Construye un nuevo mapa aplicando una función a todos los elementos de este inmutable mapa de secuencias de árboles.</target>
        </trans-unit>
        <trans-unit id="0577d8c1a50883aebabe4f8fdc2c79fcb88ba2de" translate="yes" xml:space="preserve">
          <source>Builds a new map by applying a function to all elements of this map and using the elements of the resulting collections.</source>
          <target state="translated">Construye un nuevo mapa aplicando una función a todos los elementos de este mapa y utilizando los elementos de las colecciones resultantes.</target>
        </trans-unit>
        <trans-unit id="2091ff4a6869c859ed833dc2adb1519a6ea184b6" translate="yes" xml:space="preserve">
          <source>Builds a new map by applying a function to all elements of this map.</source>
          <target state="translated">Construye un nuevo mapa aplicando una función a todos los elementos de este mapa.</target>
        </trans-unit>
        <trans-unit id="c2ea161694b6d946cf9d3e6bdb53bc1656994eb0" translate="yes" xml:space="preserve">
          <source>Builds a new range by applying a function to all elements of this range.</source>
          <target state="translated">Construye una nueva gama aplicando una función a todos los elementos de esta gama.</target>
        </trans-unit>
        <trans-unit id="61a26dea9cc6d442f28de2daaab6dd79644e4436" translate="yes" xml:space="preserve">
          <source>Builds a new sequence by applying a function to all elements of this sequence.</source>
          <target state="translated">Construye una nueva secuencia aplicando una función a todos los elementos de esta secuencia.</target>
        </trans-unit>
        <trans-unit id="c23d6819c2570316ba218df0e11f39a2dcf29535" translate="yes" xml:space="preserve">
          <source>Builds a new sorted collection by applying a function to all elements of this bitset and using the elements of the resulting collections.</source>
          <target state="translated">Construye una nueva colección ordenada aplicando una función a todos los elementos de este conjunto de bits y utilizando los elementos de las colecciones resultantes.</target>
        </trans-unit>
        <trans-unit id="4d6b9b5a2f71b8bbbc613d8444d864473014b1fb" translate="yes" xml:space="preserve">
          <source>Builds a new sorted collection by applying a function to all elements of this bitset.</source>
          <target state="translated">Construye una nueva colección ordenada aplicando una función a todos los elementos de este conjunto de bits.</target>
        </trans-unit>
        <trans-unit id="e663a359ef24d779617af51b68f91acba1a9fd3a" translate="yes" xml:space="preserve">
          <source>Builds a new sorted collection by applying a function to all elements of this immutable bitset and using the elements of the resulting collections.</source>
          <target state="translated">Construye una nueva colección clasificada aplicando una función a todos los elementos de este conjunto de bits inmutables y utilizando los elementos de las colecciones resultantes.</target>
        </trans-unit>
        <trans-unit id="1165ec494655b7d1e3dff7c5abd5f9bdb742729d" translate="yes" xml:space="preserve">
          <source>Builds a new sorted collection by applying a function to all elements of this immutable bitset.</source>
          <target state="translated">Construye una nueva colección ordenada aplicando una función a todos los elementos de este conjunto de bits inmutables.</target>
        </trans-unit>
        <trans-unit id="c039686d7f1b7fc56edb1f46dcd62349766af8ea" translate="yes" xml:space="preserve">
          <source>Builds a new sorted collection by applying a function to all elements of this immutable sorted set and using the elements of the resulting collections.</source>
          <target state="translated">Construye una nueva colección clasificada aplicando una función a todos los elementos de este conjunto clasificado inmutable y utilizando los elementos de las colecciones resultantes.</target>
        </trans-unit>
        <trans-unit id="dd4199fa8832ec3d6c6e436293a84d73b53c5ae1" translate="yes" xml:space="preserve">
          <source>Builds a new sorted collection by applying a function to all elements of this immutable sorted set.</source>
          <target state="translated">Construye una nueva colección clasificada aplicando una función a todos los elementos de este conjunto clasificado inmutable.</target>
        </trans-unit>
        <trans-unit id="f617233007e37312852c658549ee16732e24bd1f" translate="yes" xml:space="preserve">
          <source>Builds a new sorted collection by applying a function to all elements of this set and using the elements of the resulting collections.</source>
          <target state="translated">Construye una nueva colección clasificada aplicando una función a todos los elementos de este conjunto y utilizando los elementos de las colecciones resultantes.</target>
        </trans-unit>
        <trans-unit id="407e75b1fcb18f5378df1a4c8334cacef4ea6960" translate="yes" xml:space="preserve">
          <source>Builds a new sorted collection by applying a function to all elements of this set.</source>
          <target state="translated">Construye una nueva colección ordenada aplicando una función a todos los elementos de este conjunto.</target>
        </trans-unit>
        <trans-unit id="ab161ab91fac5a17fe810b73d4f1cabec81ea9c8" translate="yes" xml:space="preserve">
          <source>Builds a new sorted collection by applying a partial function to all elements of this bitset on which the function is defined.</source>
          <target state="translated">Construye una nueva colección ordenada aplicando una función parcial a todos los elementos de este conjunto de bits en los que se define la función.</target>
        </trans-unit>
        <trans-unit id="3c55495fe0b5271d533a4f00546d4678bcb3369c" translate="yes" xml:space="preserve">
          <source>Builds a new sorted collection by applying a partial function to all elements of this immutable bitset on which the function is defined.</source>
          <target state="translated">Construye una nueva colección ordenada aplicando una función parcial a todos los elementos de este conjunto de bits inmutables sobre los que se define la función.</target>
        </trans-unit>
        <trans-unit id="cb4944780ef3bee617c4942933e1ed7493085230" translate="yes" xml:space="preserve">
          <source>Builds a new sorted collection by applying a partial function to all elements of this immutable sorted set on which the function is defined.</source>
          <target state="translated">Construye una nueva colección clasificada aplicando una función parcial a todos los elementos de este conjunto clasificado inmutable sobre el que se define la función.</target>
        </trans-unit>
        <trans-unit id="2bdbf9c7e735ee351e6790744e769abe61949272" translate="yes" xml:space="preserve">
          <source>Builds a new sorted collection by applying a partial function to all elements of this set on which the function is defined.</source>
          <target state="translated">Construye una nueva colección ordenada aplicando una función parcial a todos los elementos de este conjunto sobre los que se define la función.</target>
        </trans-unit>
        <trans-unit id="dff9b6222d6ef4c981e32f1b676db982865a6390" translate="yes" xml:space="preserve">
          <source>Builds a new sorted map by applying a function to all elements of this map and using the elements of the resulting collections.</source>
          <target state="translated">Construye un nuevo mapa clasificado aplicando una función a todos los elementos de este mapa y utilizando los elementos de las colecciones resultantes.</target>
        </trans-unit>
        <trans-unit id="b943ccd2e6eb771d591dad0ed6516eaf0d714323" translate="yes" xml:space="preserve">
          <source>Builds a new sorted map by applying a function to all elements of this map.</source>
          <target state="translated">Construye un nuevo mapa ordenado aplicando una función a todos los elementos de este mapa.</target>
        </trans-unit>
        <trans-unit id="f180b6c23c901127f8371769755bdaef1ec2bdcc" translate="yes" xml:space="preserve">
          <source>Builds a new sorted map by applying a partial function to all elements of this map on which the function is defined.</source>
          <target state="translated">Construye un nuevo mapa ordenado aplicando una función parcial a todos los elementos de este mapa en los que se define la función.</target>
        </trans-unit>
        <trans-unit id="f39de6c7281c5db279c9edad95940b2e1ef79657" translate="yes" xml:space="preserve">
          <source>Builds a new sorted map by applying a partial function to all elements of this mutable collision-proof hash map on which the function is defined.</source>
          <target state="translated">Construye un nuevo mapa clasificado aplicando una función parcial a todos los elementos de este mutable mapa hash a prueba de colisiones en el que se define la función.</target>
        </trans-unit>
        <trans-unit id="45a5ca1b7b6ba2ae7dd03e365409acb414a22a07" translate="yes" xml:space="preserve">
          <source>Builds a new string by applying a function to all chars of this filtered string and using the elements of the resulting Strings.</source>
          <target state="translated">Construye una nueva cadena aplicando una función a todos los caracteres de esta cadena filtrada y utilizando los elementos de las cadenas resultantes.</target>
        </trans-unit>
        <trans-unit id="c61b129ca59700b0faa927cf23bfbfcf24a520a9" translate="yes" xml:space="preserve">
          <source>Builds a new string by applying a function to all chars of this filtered string.</source>
          <target state="translated">Construye una nueva cadena aplicando una función a todos los caracteres de esta cadena filtrada.</target>
        </trans-unit>
        <trans-unit id="f7925c579aa2e32bd20469d1e562e91d4f4cab75" translate="yes" xml:space="preserve">
          <source>Builds a new string by applying a function to all chars of this string and using the elements of the resulting strings.</source>
          <target state="translated">Construye una nueva cadena aplicando una función a todos los caracteres de esta cadena y utilizando los elementos de las cadenas resultantes.</target>
        </trans-unit>
        <trans-unit id="5fc5ebd25eb30631e728d2a1935f1581a0e754ff" translate="yes" xml:space="preserve">
          <source>Builds a new string by applying a function to all chars of this string.</source>
          <target state="translated">Construye una nueva cadena aplicando una función a todos los caracteres de esta cadena.</target>
        </trans-unit>
        <trans-unit id="b96b25af053283fff81e74f7d0a19c2f02c6c12e" translate="yes" xml:space="preserve">
          <source>Builds a new view by applying a function to all elements of this view and using the elements of the resulting collections.</source>
          <target state="translated">Construye una nueva vista aplicando una función a todos los elementos de esta vista y utilizando los elementos de las colecciones resultantes.</target>
        </trans-unit>
        <trans-unit id="36b343f9d59cb2967f9b03983ee88db32979240f" translate="yes" xml:space="preserve">
          <source>Builds a new view by applying a function to all elements of this view.</source>
          <target state="translated">Construye una nueva vista aplicando una función a todos los elementos de esta vista.</target>
        </trans-unit>
        <trans-unit id="0fe2ccd76bc69c11c504a25124031e8ed0e7cdb0" translate="yes" xml:space="preserve">
          <source>Builds a new view by applying a partial function to all elements of this view on which the function is defined.</source>
          <target state="translated">Construye una nueva vista aplicando una función parcial a todos los elementos de esta vista en los que se define la función.</target>
        </trans-unit>
        <trans-unit id="46bd427e8b7687f2cb2233cc4d0331e203f3c8e5" translate="yes" xml:space="preserve">
          <source>By default insertion order (&lt;code&gt;TreeSeqMap.OrderBy.Insertion&lt;/code&gt;) is used, but modification order (&lt;code&gt;TreeSeqMap.OrderBy.Modification&lt;/code&gt;) can be used instead if so specified at creation.</source>
          <target state="translated">Por defecto, se usa el orden de inserci&amp;oacute;n ( &lt;code&gt;TreeSeqMap.OrderBy.Insertion&lt;/code&gt; ), pero el orden de modificaci&amp;oacute;n ( &lt;code&gt;TreeSeqMap.OrderBy.Modification&lt;/code&gt; ) se puede usar en su lugar si as&amp;iacute; se especifica en la creaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="a266a3e0757e60ebfc3ba5cb8ff744c463cbaf0d" translate="yes" xml:space="preserve">
          <source>By default, annotations on (&lt;code&gt;val&lt;/code&gt;-, &lt;code&gt;var&lt;/code&gt;- or plain) constructor parameters end up on the parameter, not on any other entity. Annotations on fields by default only end up on the field.</source>
          <target state="translated">De forma predeterminada, las anotaciones en los par&amp;aacute;metros del constructor ( &lt;code&gt;val&lt;/code&gt; -, &lt;code&gt;var&lt;/code&gt; - o plain) terminan en el par&amp;aacute;metro, no en ninguna otra entidad. Las anotaciones en los campos de forma predeterminada solo terminan en el campo.</target>
        </trans-unit>
        <trans-unit id="5b1b3b2979cb2f1736ed89e280e71beca43f23f3" translate="yes" xml:space="preserve">
          <source>By default, this class provides the &lt;code&gt;raw&lt;/code&gt;, &lt;code&gt;s&lt;/code&gt; and &lt;code&gt;f&lt;/code&gt; methods as available interpolators.</source>
          <target state="translated">Por defecto, esta clase proporciona las &lt;code&gt;raw&lt;/code&gt; , &lt;code&gt;s&lt;/code&gt; y &lt;code&gt;f&lt;/code&gt; m&amp;eacute;todos como interpoladores disponibles.</target>
        </trans-unit>
        <trans-unit id="186a80b8a142ef164df01b1198a7e8162d8c4c97" translate="yes" xml:space="preserve">
          <source>By default, types with symbolic names are printed infix; while types without them are printed using the regular generic type syntax.</source>
          <target state="translated">Por defecto,los tipos con nombres simbólicos se imprimen como infijo;mientras que los tipos sin ellos se imprimen utilizando la sintaxis normal de los tipos genéricos.</target>
        </trans-unit>
        <trans-unit id="7803ee252527503b67d1eeb0deb252622746cebd" translate="yes" xml:space="preserve">
          <source>Byte</source>
          <target state="translated">Byte</target>
        </trans-unit>
        <trans-unit id="e63d278c083a04064e9c33ec6d08ec66aff51204" translate="yes" xml:space="preserve">
          <source>Byte &amp;rarr; AnyRef &amp;rarr; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;</source>
          <target state="translated">Byte &amp;rarr; AnyRef &amp;rarr; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt; Any&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6d9a1bff4402802da80b52f4915d1ac58982995" translate="yes" xml:space="preserve">
          <source>Byte &amp;rarr; Comparable</source>
          <target state="translated">Byte &amp;rarr; Comparable</target>
        </trans-unit>
        <trans-unit id="510f3614edbebecbcaca72e094c7a33c4a897b38" translate="yes" xml:space="preserve">
          <source>Byte &amp;rarr; Number</source>
          <target state="translated">Byte &amp;rarr; N&amp;uacute;mero</target>
        </trans-unit>
        <trans-unit id="0a8b0253c0e0da18f48152c4deb0b7648252422a" translate="yes" xml:space="preserve">
          <source>Byte$</source>
          <target state="translated">Byte$</target>
        </trans-unit>
        <trans-unit id="6026570f439bc51464c3362580a97e537c806c68" translate="yes" xml:space="preserve">
          <source>Byte$.MaxValue()</source>
          <target state="translated">Byte$.MaxValue()</target>
        </trans-unit>
        <trans-unit id="9a9955f8fd81b8fc823a2f48b8b5aa90a6116b89" translate="yes" xml:space="preserve">
          <source>Byte$.MinValue()</source>
          <target state="translated">Byte$.MinValue()</target>
        </trans-unit>
        <trans-unit id="473602a51befa4f0d92aee999f2eb7855ec38efd" translate="yes" xml:space="preserve">
          <source>Byte$.box()</source>
          <target state="translated">Byte$.box()</target>
        </trans-unit>
        <trans-unit id="6e09939c95cda1728efd5a6a1f014d4ec6827127" translate="yes" xml:space="preserve">
          <source>Byte$.byte2double()</source>
          <target state="translated">Byte$.byte2double()</target>
        </trans-unit>
        <trans-unit id="fc15f0ed6b050fbe44738e5139546ce593e8d669" translate="yes" xml:space="preserve">
          <source>Byte$.byte2float()</source>
          <target state="translated">Byte$.byte2float()</target>
        </trans-unit>
        <trans-unit id="1240ca31fea68a7e6681b1f64439cf835b99638e" translate="yes" xml:space="preserve">
          <source>Byte$.byte2int()</source>
          <target state="translated">Byte$.byte2int()</target>
        </trans-unit>
        <trans-unit id="25d69220ac1f52edeeca78179db1bd2fa376f23e" translate="yes" xml:space="preserve">
          <source>Byte$.byte2long()</source>
          <target state="translated">Byte$.byte2long()</target>
        </trans-unit>
        <trans-unit id="1ee8e83101dd3c0f85b73978365030791889575b" translate="yes" xml:space="preserve">
          <source>Byte$.byte2short()</source>
          <target state="translated">Byte$.byte2short()</target>
        </trans-unit>
        <trans-unit id="650fb717cb731dae898bad078c3f0a4083ad4894" translate="yes" xml:space="preserve">
          <source>Byte$.toString()</source>
          <target state="translated">Byte$.toString()</target>
        </trans-unit>
        <trans-unit id="9476663ddd59221efc5fc54340e4f31cb937f9e9" translate="yes" xml:space="preserve">
          <source>Byte$.unbox()</source>
          <target state="translated">Byte$.unbox()</target>
        </trans-unit>
        <trans-unit id="8f67a4006a23e96db833361a7fac2d195c4ef654" translate="yes" xml:space="preserve">
          <source>Byte.!=()</source>
          <target state="translated">Byte.!=()</target>
        </trans-unit>
        <trans-unit id="33c28b252fd978c34f7bf56f33c4c2bc40360f88" translate="yes" xml:space="preserve">
          <source>Byte.%()</source>
          <target state="translated">Byte.%()</target>
        </trans-unit>
        <trans-unit id="1a24a007d0c5f88210bc2dc9b1b95d67cb0e190d" translate="yes" xml:space="preserve">
          <source>Byte.&amp;amp;()</source>
          <target state="translated">Byte.&amp;amp;()</target>
        </trans-unit>
        <trans-unit id="9a6f82d5d568e29e4e5ee077d88b6632341b0a7c" translate="yes" xml:space="preserve">
          <source>Byte.&amp;gt;()</source>
          <target state="translated">Byte.&amp;gt;()</target>
        </trans-unit>
        <trans-unit id="5879541dd4905ee2e7066a98167d93eca3d5a97d" translate="yes" xml:space="preserve">
          <source>Byte.&amp;gt;=()</source>
          <target state="translated">Byte.&amp;gt;=()</target>
        </trans-unit>
        <trans-unit id="e3e878da876a24040a0f754b4493daed247981b1" translate="yes" xml:space="preserve">
          <source>Byte.&amp;lt;()</source>
          <target state="translated">Byte.&amp;lt;()</target>
        </trans-unit>
        <trans-unit id="3e5fca871ec150e7236176df52cb3b91693bacce" translate="yes" xml:space="preserve">
          <source>Byte.&amp;lt;=()</source>
          <target state="translated">Byte.&amp;lt;=()</target>
        </trans-unit>
        <trans-unit id="9e01bd5c8d7d546b9d01ce62c19e16681655c2d8" translate="yes" xml:space="preserve">
          <source>Byte.*()</source>
          <target state="translated">Byte.*()</target>
        </trans-unit>
        <trans-unit id="76c0404b039f93a2b0e050b44d8df41c614c6271" translate="yes" xml:space="preserve">
          <source>Byte.-()</source>
          <target state="translated">Byte.-()</target>
        </trans-unit>
        <trans-unit id="f3d230471a12a399868c76a850a678e2f604e7ea" translate="yes" xml:space="preserve">
          <source>Byte./()</source>
          <target state="translated">Byte./()</target>
        </trans-unit>
        <trans-unit id="8932e3c11bca706420707d76e18c0d05cb3a4be9" translate="yes" xml:space="preserve">
          <source>Byte.==()</source>
          <target state="translated">Byte.==()</target>
        </trans-unit>
        <trans-unit id="f49bbdb0671d3aad3e9488167c2f4d9eabe8f9b8" translate="yes" xml:space="preserve">
          <source>Byte.@deprecated()</source>
          <target state="translated">Byte.@deprecated()</target>
        </trans-unit>
        <trans-unit id="7f968491d7e80d71db3ffaa678b1c385c6e09bb0" translate="yes" xml:space="preserve">
          <source>Byte.^()</source>
          <target state="translated">Byte.^()</target>
        </trans-unit>
        <trans-unit id="c173edd39383df4c7bfe26b8690fcfaa3da2aa72" translate="yes" xml:space="preserve">
          <source>Byte.getClass()</source>
          <target state="translated">Byte.getClass()</target>
        </trans-unit>
        <trans-unit id="0ed974cffb9761afbe5d4700d4e70957acf3e9d7" translate="yes" xml:space="preserve">
          <source>Byte.scala</source>
          <target state="translated">Byte.scala</target>
        </trans-unit>
        <trans-unit id="12539f95a0a97fef312c3e34e8817fa5d7e4410f" translate="yes" xml:space="preserve">
          <source>Byte.toByte()</source>
          <target state="translated">Byte.toByte()</target>
        </trans-unit>
        <trans-unit id="5a8dd8b66d0e59a7bdc828f1430bb81a5d80da33" translate="yes" xml:space="preserve">
          <source>Byte.toChar()</source>
          <target state="translated">Byte.toChar()</target>
        </trans-unit>
        <trans-unit id="bced037c5ca2cbae18de45140b3d839237bca38d" translate="yes" xml:space="preserve">
          <source>Byte.toDouble()</source>
          <target state="translated">Byte.toDouble()</target>
        </trans-unit>
        <trans-unit id="c1bcab68dff925d8a4171abc88f8775553007432" translate="yes" xml:space="preserve">
          <source>Byte.toFloat()</source>
          <target state="translated">Byte.toFloat()</target>
        </trans-unit>
        <trans-unit id="764a98b502d95864d2879d1cf473664825dbd2f6" translate="yes" xml:space="preserve">
          <source>Byte.toInt()</source>
          <target state="translated">Byte.toInt()</target>
        </trans-unit>
        <trans-unit id="e1a43fe9c08b71de6eaf8cc667f0d9c80594a41a" translate="yes" xml:space="preserve">
          <source>Byte.toLong()</source>
          <target state="translated">Byte.toLong()</target>
        </trans-unit>
        <trans-unit id="85bb7d05d2724896c29ab65c216e8feff6a5672e" translate="yes" xml:space="preserve">
          <source>Byte.toShort()</source>
          <target state="translated">Byte.toShort()</target>
        </trans-unit>
        <trans-unit id="4873ddbfca28913713cd7174eb94d6348f8eba70" translate="yes" xml:space="preserve">
          <source>Byte.unary_+()</source>
          <target state="translated">Byte.unary_+()</target>
        </trans-unit>
        <trans-unit id="1a333804bcb9919a0c006257e312b1b1bad0167f" translate="yes" xml:space="preserve">
          <source>Byte.unary_-()</source>
          <target state="translated">Byte.unary_-()</target>
        </trans-unit>
        <trans-unit id="891e4c8cefc5f524df92bb950b9c8cc784cbbc53" translate="yes" xml:space="preserve">
          <source>Byte.unary_~()</source>
          <target state="translated">Byte.unary_~()</target>
        </trans-unit>
        <trans-unit id="32f45fde33bd8d9eb61df9514c1a9e8c88232a4a" translate="yes" xml:space="preserve">
          <source>Byte.|()</source>
          <target state="translated">Byte.|()</target>
        </trans-unit>
        <trans-unit id="b8ce236e0cbaba1a348e5cf6ebe212c38a1a2b62" translate="yes" xml:space="preserve">
          <source>ByteIsIntegral</source>
          <target state="translated">ByteIsIntegral</target>
        </trans-unit>
        <trans-unit id="0eda15565b1487b85b7362c9f56eac22fe35d26e" translate="yes" xml:space="preserve">
          <source>ByteswapHashing</source>
          <target state="translated">ByteswapHashing</target>
        </trans-unit>
        <trans-unit id="eee07ea1ce6e068ed461194ac3500232282f1de6" translate="yes" xml:space="preserve">
          <source>ByteswapHashing$</source>
          <target state="translated">ByteswapHashing$</target>
        </trans-unit>
        <trans-unit id="cfda17fcc0a058d480e544b34e4f71c8719ae639" translate="yes" xml:space="preserve">
          <source>ByteswapHashing$.chain()</source>
          <target state="translated">ByteswapHashing$.chain()</target>
        </trans-unit>
        <trans-unit id="61c0ba07bd00f35764fdee3ffcaf245ee615b322" translate="yes" xml:space="preserve">
          <source>ByteswapHashing.ByteswapHashing()</source>
          <target state="translated">ByteswapHashing.ByteswapHashing()</target>
        </trans-unit>
        <trans-unit id="9b062df447ee54467733ecc6d5b05ef225a9d0fc" translate="yes" xml:space="preserve">
          <source>ByteswapHashing.hash()</source>
          <target state="translated">ByteswapHashing.hash()</target>
        </trans-unit>
        <trans-unit id="02021110634bb3d140c4b4cf367a0b7ee923d769" translate="yes" xml:space="preserve">
          <source>ByteswapHashing.scala</source>
          <target state="translated">ByteswapHashing.scala</target>
        </trans-unit>
        <trans-unit id="32096c2e0eff33d844ee6d675407ace18289357d" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">C</target>
        </trans-unit>
        <trans-unit id="cb7d29f43f4a81ff1f3a1202c80293337faa7a0a" translate="yes" xml:space="preserve">
          <source>C2</source>
          <target state="translated">C2</target>
        </trans-unit>
        <trans-unit id="c5a976de7b5231fa616fbeac8a2d2805c1e84ee2" translate="yes" xml:space="preserve">
          <source>CC</source>
          <target state="translated">CC</target>
        </trans-unit>
        <trans-unit id="500c0eea71096dca5a0df60433171c4b004efda8" translate="yes" xml:space="preserve">
          <source>CYAN</source>
          <target state="translated">CYAN</target>
        </trans-unit>
        <trans-unit id="b15d36b36b6e632827c0f2ce7426cd3a287978f2" translate="yes" xml:space="preserve">
          <source>CYAN_B</source>
          <target state="translated">CYAN_B</target>
        </trans-unit>
        <trans-unit id="d1e8104678c1cc2cb2ff807d06fe1c618dd9aeac" translate="yes" xml:space="preserve">
          <source>Calculate a hash code value for the object.</source>
          <target state="translated">Calcula un valor de código hash para el objeto.</target>
        </trans-unit>
        <trans-unit id="1415eaf2a3df9a1c473307be09d19448db206426" translate="yes" xml:space="preserve">
          <source>Calculate time difference between this duration and now; the result is negative if the deadline has passed.</source>
          <target state="translated">Calcule la diferencia de tiempo entre esta duración y la actual;el resultado es negativo si el plazo ha pasado.</target>
        </trans-unit>
        <trans-unit id="cf6ed5a8af07646053da6f676f18e3a690eb17c6" translate="yes" xml:space="preserve">
          <source>Calculates the number of elements in a range given start, end, step, and whether or not it is inclusive. Throws an exception if step == 0 or the number of elements exceeds the maximum Int.</source>
          <target state="translated">Calcula el número de elementos en un rango dado de comienzo,final,paso y si es inclusivo o no.Lanza una excepción si el paso ==0 o el número de elementos excede el máximo de Int.</target>
        </trans-unit>
        <trans-unit id="ba780f780e3435233c55f917ec9874e5c33397df" translate="yes" xml:space="preserve">
          <source>Calculations performed on finite durations always retain the more precise unit of either operand, no matter whether a coarser unit would be able to exactly express the same duration. This means that Duration can be used as a lossless container for a (length, unit) pair if it is constructed using the corresponding methods and no arithmetic is performed on it; adding/subtracting durations should in that case be done with care.</source>
          <target state="translated">Los cálculos realizados sobre duraciones finitas siempre retienen la unidad más precisa de cualquiera de los operandos,sin importar si una unidad más gruesa sería capaz de expresar exactamente la misma duración.Esto significa que la duración puede utilizarse como un contenedor sin pérdidas para un par (longitud,unidad)si se construye utilizando los métodos correspondientes y no se realiza ninguna aritmética sobre ella;la suma/resta de las duraciones debe hacerse en ese caso con cuidado.</target>
        </trans-unit>
        <trans-unit id="3418abf55085f6055cd809a6262b2833c5471bf9" translate="yes" xml:space="preserve">
          <source>Called by the garbage collector on the receiver object when there are no more references to the object.</source>
          <target state="translated">Llamado por el recolector de basura del objeto receptor cuando no hay más referencias al objeto.</target>
        </trans-unit>
        <trans-unit id="a2dd70cbd2f232cc3dafb0c0b4477232438f198e" translate="yes" xml:space="preserve">
          <source>Called in a pattern match like &lt;code&gt;{ case Array(x,y,z) =&amp;gt; println('3 elements')}&lt;/code&gt;.</source>
          <target state="translated">Llamado en una coincidencia de patr&amp;oacute;n como &lt;code&gt;{ case Array(x,y,z) =&amp;gt; println('3 elements')}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc0b58813ac9b62798be76e5d123587818894a7a" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;anchored&lt;/code&gt; returns the original &lt;code&gt;Regex&lt;/code&gt;.</source>
          <target state="translated">Llamar &lt;code&gt;anchored&lt;/code&gt; devuelve la &lt;code&gt;Regex&lt;/code&gt; original .</target>
        </trans-unit>
        <trans-unit id="ffb54a09686be7b51500bb2971f58fd570301987" translate="yes" xml:space="preserve">
          <source>Calls String.valueOf on the given primitive value, and inserts the String at the given index.</source>
          <target state="translated">Llama a String.valueOf en el valor primitivo dado,e inserta el String en el índice dado.</target>
        </trans-unit>
        <trans-unit id="e2a01fd3d1d923df76e09363461eaed8439cddde" translate="yes" xml:space="preserve">
          <source>Calls to &lt;code&gt;lazyZip&lt;/code&gt; can be chained to support higher arities (up to 4) without incurring the expense of constructing and deconstructing intermediary tuples.</source>
          <target state="translated">Llamadas a &lt;code&gt;lazyZip&lt;/code&gt; se pueden encadenar para admitir aridades superiores (hasta 4) sin incurrir en el gasto de construir y deconstruir tuplas intermedias.</target>
        </trans-unit>
        <trans-unit id="c4b1eeead51a4aa5814125d2ef07be8c6d2f54e8" translate="yes" xml:space="preserve">
          <source>Calls to break from one instantiation of &lt;code&gt;Breaks&lt;/code&gt; will never target breakable objects of some other instantiation.</source>
          <target state="translated">Las llamadas para romper de una instanciaci&amp;oacute;n de &lt;code&gt;Breaks&lt;/code&gt; nunca apuntar&amp;aacute;n a objetos fr&amp;aacute;giles de alguna otra instanciaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="a3d9a34ceb4915bcc6c2bcb69b9fa0b68e9c510e" translate="yes" xml:space="preserve">
          <source>CanAwait</source>
          <target state="translated">CanAwait</target>
        </trans-unit>
        <trans-unit id="09d1fc63d5c9a795e27a9209b45b96d6080755ed" translate="yes" xml:space="preserve">
          <source>Cast the receiver object to be of type &lt;code&gt;T0&lt;/code&gt;.</source>
          <target state="translated">Convierte el objeto receptor para que sea del tipo &lt;code&gt;T0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bcaa33a7ae44bd5042c37a9cdbea7f843b1cf7c8" translate="yes" xml:space="preserve">
          <source>Caveats</source>
          <target state="translated">Caveats</target>
        </trans-unit>
        <trans-unit id="70ae82d797adf8951a7a534f0bdd24b691896db4" translate="yes" xml:space="preserve">
          <source>ChainingOps</source>
          <target state="translated">ChainingOps</target>
        </trans-unit>
        <trans-unit id="e2ee35d92468e4acc2071810f344f45e3906ee44" translate="yes" xml:space="preserve">
          <source>ChainingOps.ChainingOps()</source>
          <target state="translated">ChainingOps.ChainingOps()</target>
        </trans-unit>
        <trans-unit id="21f4ae2d848b5b61b878ea0b24de0f63936fdfef" translate="yes" xml:space="preserve">
          <source>ChainingOps.pipe()</source>
          <target state="translated">ChainingOps.pipe()</target>
        </trans-unit>
        <trans-unit id="21e50d4d42e5056f7d9617712e302d1e6c6ef127" translate="yes" xml:space="preserve">
          <source>ChainingOps.scala</source>
          <target state="translated">ChainingOps.scala</target>
        </trans-unit>
        <trans-unit id="ff8d6e50c05f1f1522493aa6b595b0d69790f86a" translate="yes" xml:space="preserve">
          <source>ChainingOps.tap()</source>
          <target state="translated">ChainingOps.tap()</target>
        </trans-unit>
        <trans-unit id="e49845ba9ded76ea6cfddff58659c0afb32d8590" translate="yes" xml:space="preserve">
          <source>ChainingSyntax</source>
          <target state="translated">ChainingSyntax</target>
        </trans-unit>
        <trans-unit id="e9032f694472b2763703e18c37c3296d2442380e" translate="yes" xml:space="preserve">
          <source>ChainingSyntax.scalaUtilChainingOps()</source>
          <target state="translated">ChainingSyntax.scalaUtilChainingOps()</target>
        </trans-unit>
        <trans-unit id="bdbf3ae2050637e5f4510a16d9298e516f4d6e57" translate="yes" xml:space="preserve">
          <source>Change or disable the positioner.</source>
          <target state="translated">Cambie o deshabilite el posicionador.</target>
        </trans-unit>
        <trans-unit id="3fb7ce8dfb1782f24e3d8c0ae3790bca4c2dc610" translate="yes" xml:space="preserve">
          <source>Change the currently bound value, discarding the old value. Usually withValue() gives better semantics.</source>
          <target state="translated">Cambie el valor actual,descartando el valor antiguo.Usualmente conValue()da una mejor semántica.</target>
        </trans-unit>
        <trans-unit id="879f0b1bef59eeebf78cfd3a22f6f8077810cecf" translate="yes" xml:space="preserve">
          <source>Channel</source>
          <target state="translated">Channel</target>
        </trans-unit>
        <trans-unit id="f7d4a66afd2026d2b77d0670b704226e4e9d2f3b" translate="yes" xml:space="preserve">
          <source>Channel.Channel()</source>
          <target state="translated">Channel.Channel()</target>
        </trans-unit>
        <trans-unit id="8326d4fd4605dbb86dcca5b8620299ae088d4b30" translate="yes" xml:space="preserve">
          <source>Channel.read()</source>
          <target state="translated">Channel.read()</target>
        </trans-unit>
        <trans-unit id="983263df5caa37e07818c42d9638b23f86abb11f" translate="yes" xml:space="preserve">
          <source>Channel.scala</source>
          <target state="translated">Channel.scala</target>
        </trans-unit>
        <trans-unit id="af667aacaff3cf6827148ab0e69882ffbf8eef52" translate="yes" xml:space="preserve">
          <source>Channel.write()</source>
          <target state="translated">Channel.write()</target>
        </trans-unit>
        <trans-unit id="0f9ba953e35135a3f8ec268817cc92f2557202a9" translate="yes" xml:space="preserve">
          <source>Char</source>
          <target state="translated">Char</target>
        </trans-unit>
        <trans-unit id="ffed363b7f675ec67667f8b6b7bcf647a6239363" translate="yes" xml:space="preserve">
          <source>Char$</source>
          <target state="translated">Char$</target>
        </trans-unit>
        <trans-unit id="fe9a7a86040e584cfe863cab875786fb22c1a1ad" translate="yes" xml:space="preserve">
          <source>Char$.MaxValue()</source>
          <target state="translated">Char$.MaxValue()</target>
        </trans-unit>
        <trans-unit id="af872abab06dc405a9a8966858eb41c9cc00f62d" translate="yes" xml:space="preserve">
          <source>Char$.MinValue()</source>
          <target state="translated">Char$.MinValue()</target>
        </trans-unit>
        <trans-unit id="d2ff8013190ade67d46848b5bd328da0e190a292" translate="yes" xml:space="preserve">
          <source>Char$.box()</source>
          <target state="translated">Char$.box()</target>
        </trans-unit>
        <trans-unit id="89d51ccbd7053a7869ced39292b4f2eb88bdb335" translate="yes" xml:space="preserve">
          <source>Char$.char2double()</source>
          <target state="translated">Char$.char2double()</target>
        </trans-unit>
        <trans-unit id="3d9e2c126fd83810f27f39ad723acdf81d09b458" translate="yes" xml:space="preserve">
          <source>Char$.char2float()</source>
          <target state="translated">Char$.char2float()</target>
        </trans-unit>
        <trans-unit id="ba7fe099f9395178fe9d25250b32bc7292329e6d" translate="yes" xml:space="preserve">
          <source>Char$.char2int()</source>
          <target state="translated">Char$.char2int()</target>
        </trans-unit>
        <trans-unit id="6bc2d315f8e6215f8d0b5fdd461bd08d167a0fcf" translate="yes" xml:space="preserve">
          <source>Char$.char2long()</source>
          <target state="translated">Char$.char2long()</target>
        </trans-unit>
        <trans-unit id="4fe43cddd547483e3ee14559d91d0bc8b108c6fc" translate="yes" xml:space="preserve">
          <source>Char$.toString()</source>
          <target state="translated">Char$.toString()</target>
        </trans-unit>
        <trans-unit id="811ea6ad6a6f488ea7621089774b6d4b2a9b9927" translate="yes" xml:space="preserve">
          <source>Char$.unbox()</source>
          <target state="translated">Char$.unbox()</target>
        </trans-unit>
        <trans-unit id="1f4e1fc31e4ebf44da2f147909e6b1564d552e48" translate="yes" xml:space="preserve">
          <source>Char.!=()</source>
          <target state="translated">Char.!=()</target>
        </trans-unit>
        <trans-unit id="bba7d99e4e9c849a163f5b0a1b075c754d53eeb1" translate="yes" xml:space="preserve">
          <source>Char.%()</source>
          <target state="translated">Char.%()</target>
        </trans-unit>
        <trans-unit id="6931e1876519f38fd539ed542ba78697b9144c94" translate="yes" xml:space="preserve">
          <source>Char.&amp;amp;()</source>
          <target state="translated">Char.&amp;amp;()</target>
        </trans-unit>
        <trans-unit id="1a6affc4cd7e37647058c86401d17bbff860c8ec" translate="yes" xml:space="preserve">
          <source>Char.&amp;gt;()</source>
          <target state="translated">Char.&amp;gt;()</target>
        </trans-unit>
        <trans-unit id="e2c978a3c425c91ef4d29a05aa44711fbf8e6ba6" translate="yes" xml:space="preserve">
          <source>Char.&amp;gt;=()</source>
          <target state="translated">Char.&amp;gt;=()</target>
        </trans-unit>
        <trans-unit id="a42a3a4592cd96a406330b004c7e6d43429bfc6e" translate="yes" xml:space="preserve">
          <source>Char.&amp;lt;()</source>
          <target state="translated">Char.&amp;lt;()</target>
        </trans-unit>
        <trans-unit id="21306fe4830fca690888df4e536fda900f19abdd" translate="yes" xml:space="preserve">
          <source>Char.&amp;lt;=()</source>
          <target state="translated">Char.&amp;lt;=()</target>
        </trans-unit>
        <trans-unit id="cada52cec452806639994a6a9206b83d96f5500b" translate="yes" xml:space="preserve">
          <source>Char.*()</source>
          <target state="translated">Char.*()</target>
        </trans-unit>
        <trans-unit id="9c72310e466c575e3e53c7fff85cfc1e119a2343" translate="yes" xml:space="preserve">
          <source>Char.-()</source>
          <target state="translated">Char.-()</target>
        </trans-unit>
        <trans-unit id="6fd18db0495ab851562870eac1d5a758486ea7e9" translate="yes" xml:space="preserve">
          <source>Char./()</source>
          <target state="translated">Char./()</target>
        </trans-unit>
        <trans-unit id="32511ef9ed5700542059632f95d2af2ea632416b" translate="yes" xml:space="preserve">
          <source>Char.==()</source>
          <target state="translated">Char.==()</target>
        </trans-unit>
        <trans-unit id="ff35e4972df9af110aa524b03678c59b0ea5e5f5" translate="yes" xml:space="preserve">
          <source>Char.@deprecated()</source>
          <target state="translated">Char.@deprecated()</target>
        </trans-unit>
        <trans-unit id="5abaecae77fcfa3e006c3c83764d5af6e0ef66bf" translate="yes" xml:space="preserve">
          <source>Char.^()</source>
          <target state="translated">Char.^()</target>
        </trans-unit>
        <trans-unit id="d37ca264345d314fcd573a56f937129de0b808c1" translate="yes" xml:space="preserve">
          <source>Char.getClass()</source>
          <target state="translated">Char.getClass()</target>
        </trans-unit>
        <trans-unit id="5e3f7e04d26d7fb0f27db186aa205b53f57b4711" translate="yes" xml:space="preserve">
          <source>Char.scala</source>
          <target state="translated">Char.scala</target>
        </trans-unit>
        <trans-unit id="acc4282fad55b7c5aa0988d6d77e5bda76c4b4da" translate="yes" xml:space="preserve">
          <source>Char.toByte()</source>
          <target state="translated">Char.toByte()</target>
        </trans-unit>
        <trans-unit id="549d639526fd23f6ba97761e5eea53fc98d8683b" translate="yes" xml:space="preserve">
          <source>Char.toChar()</source>
          <target state="translated">Char.toChar()</target>
        </trans-unit>
        <trans-unit id="d9a2d6a4675644cdae05c9308b874a92bd81dba5" translate="yes" xml:space="preserve">
          <source>Char.toDouble()</source>
          <target state="translated">Char.toDouble()</target>
        </trans-unit>
        <trans-unit id="0e7fdbd7c619af47f80a5c358f5005a315438106" translate="yes" xml:space="preserve">
          <source>Char.toFloat()</source>
          <target state="translated">Char.toFloat()</target>
        </trans-unit>
        <trans-unit id="9d89ab58e78b559a1f2c33ce015fe104e04ace71" translate="yes" xml:space="preserve">
          <source>Char.toInt()</source>
          <target state="translated">Char.toInt()</target>
        </trans-unit>
        <trans-unit id="039a28548450b30632c9960d1a05061e59463433" translate="yes" xml:space="preserve">
          <source>Char.toLong()</source>
          <target state="translated">Char.toLong()</target>
        </trans-unit>
        <trans-unit id="35ff7cbfacd2be8d71337a986601778713b399ca" translate="yes" xml:space="preserve">
          <source>Char.toShort()</source>
          <target state="translated">Char.toShort()</target>
        </trans-unit>
        <trans-unit id="6a6b6ca5204ab8d7a3484b2efafde39ac94c59d1" translate="yes" xml:space="preserve">
          <source>Char.unary_+()</source>
          <target state="translated">Char.unary_+()</target>
        </trans-unit>
        <trans-unit id="aaebe8b2123e1c52d238e5c603092812a61f7cc5" translate="yes" xml:space="preserve">
          <source>Char.unary_-()</source>
          <target state="translated">Char.unary_-()</target>
        </trans-unit>
        <trans-unit id="d236b3c83108511443f64e4dc989ab8554654d8b" translate="yes" xml:space="preserve">
          <source>Char.unary_~()</source>
          <target state="translated">Char.unary_~()</target>
        </trans-unit>
        <trans-unit id="14451b86bde7ee53dbbcbc59e5fbd99bd35f5fb2" translate="yes" xml:space="preserve">
          <source>Char.|()</source>
          <target state="translated">Char.|()</target>
        </trans-unit>
        <trans-unit id="fa50383693617bf0aa6a763a66552ea4be9118f9" translate="yes" xml:space="preserve">
          <source>CharIsIntegral</source>
          <target state="translated">CharIsIntegral</target>
        </trans-unit>
        <trans-unit id="ee352e16ffeb4d6a086bccab16f296b15acb8cc9" translate="yes" xml:space="preserve">
          <source>CharSequence</source>
          <target state="translated">CharSequence</target>
        </trans-unit>
        <trans-unit id="ee9946c82d4a077c5be79e3015a3d2479d9fcaf2" translate="yes" xml:space="preserve">
          <source>Character</source>
          <target state="translated">Character</target>
        </trans-unit>
        <trans-unit id="8752f84c16f07b390e6774ec88bcbbd998019e79" translate="yes" xml:space="preserve">
          <source>Character &amp;rarr; AnyRef &amp;rarr; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;</source>
          <target state="translated">Car&amp;aacute;cter &amp;rarr; AnyRef &amp;rarr; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Cualquiera&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a8929e7873f411fdbc5ee458e77b917cb74ed277" translate="yes" xml:space="preserve">
          <source>Character &amp;rarr; Comparable</source>
          <target state="translated">Car&amp;aacute;cter &amp;rarr; Comparable</target>
        </trans-unit>
        <trans-unit id="41bceaeaf76de892a0f8f8baf8ad2f17dc6083c4" translate="yes" xml:space="preserve">
          <source>Check if there is a next element available.</source>
          <target state="translated">Comprueba si hay un siguiente elemento disponible.</target>
        </trans-unit>
        <trans-unit id="3550be8091712274e2c23907dad9b8ab1634cb02" translate="yes" xml:space="preserve">
          <source>Check if there's an element available.</source>
          <target state="translated">Comprueba si hay algún elemento disponible.</target>
        </trans-unit>
        <trans-unit id="dc1b9019c776837c8f35b0d3d31bff67bb451967" translate="yes" xml:space="preserve">
          <source>Checks if a value is contained in the function's domain.</source>
          <target state="translated">Comprueba si un valor está contenido en el dominio de la función.</target>
        </trans-unit>
        <trans-unit id="901136a54167eb66724dd8a2a45be31677ece9b0" translate="yes" xml:space="preserve">
          <source>Checks if the queue is empty.</source>
          <target state="translated">Comprueba si la cola está vacía.</target>
        </trans-unit>
        <trans-unit id="811c6f57069d359b391b3393387da52d8ce322dd" translate="yes" xml:space="preserve">
          <source>Checks if there exists a binding to &lt;code&gt;key&lt;/code&gt; such that it satisfies the predicate &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">Comprueba si existe una vinculaci&amp;oacute;n a la &lt;code&gt;key&lt;/code&gt; que satisfaga el predicado &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c0dde18ed559ce79e749f333cb5125f57e02e7f" translate="yes" xml:space="preserve">
          <source>Checks if this set contains element &lt;code&gt;elem&lt;/code&gt;.</source>
          <target state="translated">Comprueba si este conjunto contiene elementos &lt;code&gt;elem&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="26205e723b4a05d1c1138e90c2cd337dc611f0e1" translate="yes" xml:space="preserve">
          <source>Checks that the length of the given argument &lt;code&gt;args&lt;/code&gt; is one less than the number of &lt;code&gt;parts&lt;/code&gt; supplied to the &lt;code&gt;StringContext&lt;/code&gt;.</source>
          <target state="translated">Comprueba que la longitud de los argumentos dados &lt;code&gt;args&lt;/code&gt; es uno menos que el n&amp;uacute;mero de &lt;code&gt;parts&lt;/code&gt; suministradas a la &lt;code&gt;StringContext&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1a275ba4959d0932c194e4af1b4e9ef0b6f8d1a7" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Any&lt;/code&gt; is the root of the Scala class hierarchy. Every class in a Scala execution environment inherits directly or indirectly from this class.</source>
          <target state="translated">Class &lt;code&gt;Any&lt;/code&gt; es la ra&amp;iacute;z de la jerarqu&amp;iacute;a de clases de Scala. Cada clase en un entorno de ejecuci&amp;oacute;n de Scala hereda directa o indirectamente de esta clase.</target>
        </trans-unit>
        <trans-unit id="8a51e3d4d6f8932d44d3577d7ca83324c02fe95a" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;AnyRef&lt;/code&gt; is the root class of all</source>
          <target state="translated">Class &lt;code&gt;AnyRef&lt;/code&gt; es la clase ra&amp;iacute;z de todas</target>
        </trans-unit>
        <trans-unit id="01a7707c681480a794128fe83615572a333e6b9c" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Some[A]&lt;/code&gt; represents existing values of type &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">Clase &lt;code&gt;Some[A]&lt;/code&gt; representa los valores existentes de tipo &lt;code&gt;A&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="802fe5aa1f76b6fb114fe7b26b8b5d8a74aedb0f" translate="yes" xml:space="preserve">
          <source>Class scala.&amp;lt;:&amp;lt;</source>
          <target state="translated">Clase scala. &amp;lt;: &amp;lt;</target>
        </trans-unit>
        <trans-unit id="09abc9457dff1e358b40f75861223faf039504f7" translate="yes" xml:space="preserve">
          <source>Class scala.=:=</source>
          <target state="translated">Escala de clase.</target>
        </trans-unit>
        <trans-unit id="024e0a9e32ce553af64fdad59c367c472b10c5be" translate="yes" xml:space="preserve">
          <source>Class scala.Any</source>
          <target state="translated">Escala de clase.Cualquiera</target>
        </trans-unit>
        <trans-unit id="d115a8799a227a987b24193d3f5dac629da27d8c" translate="yes" xml:space="preserve">
          <source>Class scala.AnyRef</source>
          <target state="translated">Clase Scala.AnyRef</target>
        </trans-unit>
        <trans-unit id="db8a99fd56b235c7a37bdc12f283c95597f61cd1" translate="yes" xml:space="preserve">
          <source>Class scala.AnyVal</source>
          <target state="translated">Clase Scala.AnyVal</target>
        </trans-unit>
        <trans-unit id="915f119d75a2fb382bf6a902cb41148a1a7ecf88" translate="yes" xml:space="preserve">
          <source>Class scala.Array</source>
          <target state="translated">Clase Scala.Array.</target>
        </trans-unit>
        <trans-unit id="00e446454add63fa391b6d2a0f3ed575244f4be3" translate="yes" xml:space="preserve">
          <source>Class scala.Array.UnapplySeqWrapper</source>
          <target state="translated">Clase scala.Array.UnapplySeqWrapper</target>
        </trans-unit>
        <trans-unit id="65024f79f588af7695fad03738cc848f85c7fcd7" translate="yes" xml:space="preserve">
          <source>Class scala.Boolean</source>
          <target state="translated">Clase Scala.Booleana.</target>
        </trans-unit>
        <trans-unit id="3d7e87bb61fd183644627719419e9b30ebcd7473" translate="yes" xml:space="preserve">
          <source>Class scala.Byte</source>
          <target state="translated">Clase Scala.Byte</target>
        </trans-unit>
        <trans-unit id="d0c3962ef77bc92e2292fb9cdca495c1a9d2bad0" translate="yes" xml:space="preserve">
          <source>Class scala.Char</source>
          <target state="translated">Clase scala.Char</target>
        </trans-unit>
        <trans-unit id="b2ceb39798ce6d7ac774a4b8b7d6c3db7fec7384" translate="yes" xml:space="preserve">
          <source>Class scala.Double</source>
          <target state="translated">Clase Scala.Doble</target>
        </trans-unit>
        <trans-unit id="b523d5d456b6872a73404da3fbfd158377c64362" translate="yes" xml:space="preserve">
          <source>Class scala.DummyImplicit</source>
          <target state="translated">Clase Scala.Tonto.Implícito.</target>
        </trans-unit>
        <trans-unit id="9e0159e4598f1b2f4cbaa51716d4f4c47d59097b" translate="yes" xml:space="preserve">
          <source>Class scala.Enumeration</source>
          <target state="translated">Escala de la clase.Enumeración</target>
        </trans-unit>
        <trans-unit id="152df69e477b66a426412b3659a6716da78f7aab" translate="yes" xml:space="preserve">
          <source>Class scala.Enumeration.Val</source>
          <target state="translated">Clase scala.Enumeración.Val</target>
        </trans-unit>
        <trans-unit id="ec701ff536ae8cfda88dc251133df2e2ae9c5231" translate="yes" xml:space="preserve">
          <source>Class scala.Enumeration.Value</source>
          <target state="translated">Clase scala.Enumeración.Valor</target>
        </trans-unit>
        <trans-unit id="51f4dbd7102b2bbcf309d2c4b69c1d0a58749669" translate="yes" xml:space="preserve">
          <source>Class scala.Enumeration.ValueSet</source>
          <target state="translated">Clase scala.Enumeración.Valor.de.la.clase</target>
        </trans-unit>
        <trans-unit id="80e2f3d157adbb87789d6ac54804a58ecbed2771" translate="yes" xml:space="preserve">
          <source>Class scala.Float</source>
          <target state="translated">Clase Scala.Flotador</target>
        </trans-unit>
        <trans-unit id="2429fe26b51326655d82d3065aad6031e26e471e" translate="yes" xml:space="preserve">
          <source>Class scala.Function1.UnliftOps</source>
          <target state="translated">Clase Scala.Función 1.Deshacerse de las elevaciones.</target>
        </trans-unit>
        <trans-unit id="856f4f7e6da4f0f664cb510b84ff27c1b29a0648" translate="yes" xml:space="preserve">
          <source>Class scala.Int</source>
          <target state="translated">Clase scala.Int</target>
        </trans-unit>
        <trans-unit id="b7126a0ed7dc1c7b4b8ccd597fccc0ab3e12ae4f" translate="yes" xml:space="preserve">
          <source>Class scala.Long</source>
          <target state="translated">Clase Scala.Largo</target>
        </trans-unit>
        <trans-unit id="6839a8783cae67f3a3a16b66c2fc06dff1e1aed6" translate="yes" xml:space="preserve">
          <source>Class scala.MatchError</source>
          <target state="translated">Clase scala.MatchError</target>
        </trans-unit>
        <trans-unit id="5b34bede472f9be419ddee31d101320df347f5ad" translate="yes" xml:space="preserve">
          <source>Class scala.NotImplementedError</source>
          <target state="translated">Escala de clase.No implementado.Error.</target>
        </trans-unit>
        <trans-unit id="bf02d7357e7cc3b02c7748a036d56e1a756510ab" translate="yes" xml:space="preserve">
          <source>Class scala.Nothing</source>
          <target state="translated">Escala de la clase.Nada</target>
        </trans-unit>
        <trans-unit id="af56b0815f08fec3379468bf427cffe86a1a3401" translate="yes" xml:space="preserve">
          <source>Class scala.Null</source>
          <target state="translated">Clase Scala.Nulo</target>
        </trans-unit>
        <trans-unit id="b704cd204bb1159ffe480ff8ce16595ad814dea6" translate="yes" xml:space="preserve">
          <source>Class scala.Option</source>
          <target state="translated">Escala de clase.Opción</target>
        </trans-unit>
        <trans-unit id="d74a2732b572a8ebce4be75c0e00e2f12dfd4136" translate="yes" xml:space="preserve">
          <source>Class scala.Option.WithFilter</source>
          <target state="translated">Opción de escala de clase con filtro.</target>
        </trans-unit>
        <trans-unit id="0a965560196445f08aedf7173ae8debacecf00c5" translate="yes" xml:space="preserve">
          <source>Class scala.PartialFunction.ElementWiseExtractor</source>
          <target state="translated">Clase Scala.Función parcial.Extractor Elemental.</target>
        </trans-unit>
        <trans-unit id="24ff9e05ebd849a5dcbe6e26f4ed3ac4aa5d16db" translate="yes" xml:space="preserve">
          <source>Class scala.Predef.ArrayCharSequence</source>
          <target state="translated">Clase scala.Predef.ArrayCharSequence</target>
        </trans-unit>
        <trans-unit id="0a15dcebf47eb8ca6cf5d25357e737d9a155458a" translate="yes" xml:space="preserve">
          <source>Class scala.Predef.ArrowAssoc</source>
          <target state="translated">Clase scala.Predef.ArrowAssoc</target>
        </trans-unit>
        <trans-unit id="0bcbdae3fc283686847bc061aa035aa02dfad23f" translate="yes" xml:space="preserve">
          <source>Class scala.Predef.Ensuring</source>
          <target state="translated">Clase scala.Predef.Asegurando</target>
        </trans-unit>
        <trans-unit id="aa63ba34890360200593f73a23504973ace12b6e" translate="yes" xml:space="preserve">
          <source>Class scala.Predef.SeqCharSequence</source>
          <target state="translated">Clase scala.Predef.SeqCharSequence</target>
        </trans-unit>
        <trans-unit id="1dd2287b95a26fe1def1abcbe4c2449d3f648aea" translate="yes" xml:space="preserve">
          <source>Class scala.Predef.StringFormat</source>
          <target state="translated">Clase scala.Predef.StringFormat</target>
        </trans-unit>
        <trans-unit id="44bf03750c5c68a2d3d24736d286fd2ba38ab1b3" translate="yes" xml:space="preserve">
          <source>Class scala.Predef.any2stringadd</source>
          <target state="translated">Clase scala.Predef.any2stringadd</target>
        </trans-unit>
        <trans-unit id="e01347020bb035632dd4c7121397bcb60569ed66" translate="yes" xml:space="preserve">
          <source>Class scala.ScalaReflectionException</source>
          <target state="translated">Clase Scala.ScalaReflexiónExcepción</target>
        </trans-unit>
        <trans-unit id="47861d17cbe43f1bbd451bfc5fa8a06ec7fcab04" translate="yes" xml:space="preserve">
          <source>Class scala.Short</source>
          <target state="translated">Clase Scala.Corto</target>
        </trans-unit>
        <trans-unit id="07d8a53e6b049f6da10559a5f51ffcdadfff91ab" translate="yes" xml:space="preserve">
          <source>Class scala.Some</source>
          <target state="translated">Escala de la clase.Algunos</target>
        </trans-unit>
        <trans-unit id="ad5fd1458fd9c68b805fd07cc097f2715c945712" translate="yes" xml:space="preserve">
          <source>Class scala.Specializable.Group</source>
          <target state="translated">Clase Scala.Grupo Especializado.</target>
        </trans-unit>
        <trans-unit id="63621cea70fc4863117e881f107c14b284d0028a" translate="yes" xml:space="preserve">
          <source>Class scala.StringContext</source>
          <target state="translated">Clase Scala.Contexto de las cuerdas</target>
        </trans-unit>
        <trans-unit id="6d54990a8ff7b316c0c3b98e59b8237f658fed2b" translate="yes" xml:space="preserve">
          <source>Class scala.StringContext.InvalidEscapeException</source>
          <target state="translated">Clase Scala.Cuerda.Contexto.Escapada inválida.Excepción.</target>
        </trans-unit>
        <trans-unit id="83d0561e9aa831175105dc642d4aa8fb89874e53" translate="yes" xml:space="preserve">
          <source>Class scala.Symbol</source>
          <target state="translated">Escala de la clase.Símbolo</target>
        </trans-unit>
        <trans-unit id="881a449b030b608489a9cfc1085d53449c7fb8bb" translate="yes" xml:space="preserve">
          <source>Class scala.Tuple1</source>
          <target state="translated">Clase scala.Tupla1</target>
        </trans-unit>
        <trans-unit id="e62c30de0b9aac17ca7235ff6423c8345ada8a7e" translate="yes" xml:space="preserve">
          <source>Class scala.Tuple10</source>
          <target state="translated">Clase scala.Tupla10</target>
        </trans-unit>
        <trans-unit id="c927a1c0adaafe061c233569e6a4704a754c00c4" translate="yes" xml:space="preserve">
          <source>Class scala.Tuple11</source>
          <target state="translated">Clase scala.Tupla11</target>
        </trans-unit>
        <trans-unit id="7a997c200a2086ccfe1d22c765bba41eb1848d5e" translate="yes" xml:space="preserve">
          <source>Class scala.Tuple12</source>
          <target state="translated">Clase scala.Tupla12</target>
        </trans-unit>
        <trans-unit id="6be91f8d818122681ed524a40283067360b87966" translate="yes" xml:space="preserve">
          <source>Class scala.Tuple13</source>
          <target state="translated">Clase scala.Tupla13</target>
        </trans-unit>
        <trans-unit id="fd9404816312a4b3a29a1495851d761b503ed6f4" translate="yes" xml:space="preserve">
          <source>Class scala.Tuple14</source>
          <target state="translated">Clase scala.Tupla14</target>
        </trans-unit>
        <trans-unit id="c369f3df2536b4ef26052bf4d944484dcb7d2f3c" translate="yes" xml:space="preserve">
          <source>Class scala.Tuple15</source>
          <target state="translated">Clase scala.Tupla15</target>
        </trans-unit>
        <trans-unit id="f6a505ed255591333c5412d86fc8baebef7a4b2c" translate="yes" xml:space="preserve">
          <source>Class scala.Tuple16</source>
          <target state="translated">Clase scala.Tupla16</target>
        </trans-unit>
        <trans-unit id="cc96720a6c19c4fd43d43c63109decdd93f129ca" translate="yes" xml:space="preserve">
          <source>Class scala.Tuple17</source>
          <target state="translated">Clase scala.Tupla17</target>
        </trans-unit>
        <trans-unit id="a2d17e2fac197e0b0d036d0b125700b6f868f0f5" translate="yes" xml:space="preserve">
          <source>Class scala.Tuple18</source>
          <target state="translated">Clase scala.Tupla18</target>
        </trans-unit>
        <trans-unit id="2bd57d07fd220a5b3bc65e3b4b246bbd602ce7e5" translate="yes" xml:space="preserve">
          <source>Class scala.Tuple19</source>
          <target state="translated">Clase scala.Tupla19</target>
        </trans-unit>
        <trans-unit id="8101d2b09f732bda9520c69876eebb622e2cac0a" translate="yes" xml:space="preserve">
          <source>Class scala.Tuple2</source>
          <target state="translated">Clase scala.Tupla2</target>
        </trans-unit>
        <trans-unit id="262d20ec1c067b1a69d1bf5dcb5d1d8e6c24c80c" translate="yes" xml:space="preserve">
          <source>Class scala.Tuple20</source>
          <target state="translated">Clase scala.Tupla20</target>
        </trans-unit>
        <trans-unit id="dafd820eb2cc80bb53925ae8ad5b2079b5b41ab1" translate="yes" xml:space="preserve">
          <source>Class scala.Tuple21</source>
          <target state="translated">Clase scala.Tupla21</target>
        </trans-unit>
        <trans-unit id="a1c8b3a46b9fd9304caf1dc1ecdb1b473a2d9c68" translate="yes" xml:space="preserve">
          <source>Class scala.Tuple22</source>
          <target state="translated">Clase scala.Tupla22</target>
        </trans-unit>
        <trans-unit id="31049fad69c30cd77a9ee7ba9e5c08628e32a82d" translate="yes" xml:space="preserve">
          <source>Class scala.Tuple3</source>
          <target state="translated">Clase scala.Tuple3</target>
        </trans-unit>
        <trans-unit id="30f85cb65b704ba2e7400d03a1d88521b6f5d0b6" translate="yes" xml:space="preserve">
          <source>Class scala.Tuple4</source>
          <target state="translated">Clase scala.Tuple4</target>
        </trans-unit>
        <trans-unit id="f69b00ade964653ab3d636bfb53bbc5b018e4829" translate="yes" xml:space="preserve">
          <source>Class scala.Tuple5</source>
          <target state="translated">Clase scala.Tupla5</target>
        </trans-unit>
        <trans-unit id="e64606768f454782d35b5824d810b24e0c0e1012" translate="yes" xml:space="preserve">
          <source>Class scala.Tuple6</source>
          <target state="translated">Clase scala.Tupla6</target>
        </trans-unit>
        <trans-unit id="4e043b5081ecb41275e7e4483df50474782213d6" translate="yes" xml:space="preserve">
          <source>Class scala.Tuple7</source>
          <target state="translated">Clase scala.Tupla7</target>
        </trans-unit>
        <trans-unit id="fa1d46d40e9a6953adb855eecf3d3fcb21949fbb" translate="yes" xml:space="preserve">
          <source>Class scala.Tuple8</source>
          <target state="translated">Clase scala.Tupla8</target>
        </trans-unit>
        <trans-unit id="43ae4cc2d64f7d046e73742fd3990c6a941b2bd3" translate="yes" xml:space="preserve">
          <source>Class scala.Tuple9</source>
          <target state="translated">Clase scala.Tupla9</target>
        </trans-unit>
        <trans-unit id="cb4217f3d4c78ddf9d438c79aa8864236082f76b" translate="yes" xml:space="preserve">
          <source>Class scala.UninitializedError</source>
          <target state="translated">Escala de clase.No iniciadaError</target>
        </trans-unit>
        <trans-unit id="754dd62107742a4bff8c9cd1d3942c11e7b64126" translate="yes" xml:space="preserve">
          <source>Class scala.UninitializedFieldError</source>
          <target state="translated">Clase scala.UninitializedFieldError</target>
        </trans-unit>
        <trans-unit id="1155d5a5ac07f508cc2f7dfa5af793fd908c651f" translate="yes" xml:space="preserve">
          <source>Class scala.Unit</source>
          <target state="translated">Clase Scala.Unidad</target>
        </trans-unit>
        <trans-unit id="a741cb9fdf02b5075a098bd09228a8ef1898b368" translate="yes" xml:space="preserve">
          <source>Class scala.ValueOf</source>
          <target state="translated">Clase Scala.Valor de</target>
        </trans-unit>
        <trans-unit id="5a8ab1232896451cf9bfe53432363c11fe8ba384" translate="yes" xml:space="preserve">
          <source>Class scala.collection.AbstractIndexedSeqView</source>
          <target state="translated">Colección.de.clases.de.scala.AbstractIndexedSeqView</target>
        </trans-unit>
        <trans-unit id="640ac314f1149c125a9c8f1e3774253099fbe5a6" translate="yes" xml:space="preserve">
          <source>Class scala.collection.AbstractIterable</source>
          <target state="translated">Colección.de.escenas.de.la.clase.Abstraíble.</target>
        </trans-unit>
        <trans-unit id="aa4e6b3e57565f53a99fc97cdef61007b648c82c" translate="yes" xml:space="preserve">
          <source>Class scala.collection.AbstractIterator</source>
          <target state="translated">Colección de escenas de la clase.Abstractadora.</target>
        </trans-unit>
        <trans-unit id="0a95f136e15ac53275bebb922b3d1627ab0bd9db" translate="yes" xml:space="preserve">
          <source>Class scala.collection.AbstractMap</source>
          <target state="translated">Colección de clases de Scala.Mapa de resúmenes.</target>
        </trans-unit>
        <trans-unit id="cc4951bcb30f21e4f9ab7c27150cfeee8edaf015" translate="yes" xml:space="preserve">
          <source>Class scala.collection.AbstractMapView</source>
          <target state="translated">Colección de escenas de clase.AbstractMapView</target>
        </trans-unit>
        <trans-unit id="09e1b32bfad400426d079ae396e009b34c0ed2af" translate="yes" xml:space="preserve">
          <source>Class scala.collection.AbstractSeq</source>
          <target state="translated">Colección.de.escenas.de.la.clase.AbstractSeq</target>
        </trans-unit>
        <trans-unit id="c5eb4f18e1ad5fdce35dd87eef4b046737832dd7" translate="yes" xml:space="preserve">
          <source>Class scala.collection.AbstractSeqView</source>
          <target state="translated">Colección de escenas de clase.AbstractSeqView</target>
        </trans-unit>
        <trans-unit id="057a48fa30552eff78e316c2e3de0afc153e549e" translate="yes" xml:space="preserve">
          <source>Class scala.collection.AbstractSet</source>
          <target state="translated">Colección.de.escenas.de.la.clase.de.la.escuela.de.la.escuela.de.la.escuela.de.la.escuela.</target>
        </trans-unit>
        <trans-unit id="98345817fe1680a42b9def665cc39de579063cab" translate="yes" xml:space="preserve">
          <source>Class scala.collection.AbstractView</source>
          <target state="translated">Colección de escenas de clase.AbstractView</target>
        </trans-unit>
        <trans-unit id="2626d43246d2519efaceb1e884deefde8ef95ebe" translate="yes" xml:space="preserve">
          <source>Class scala.collection.AnyStepper.AnyStepperSpliterator</source>
          <target state="translated">Colección.de.la.clase.Scala.AnyStepper.AnyStepperSpliterator</target>
        </trans-unit>
        <trans-unit id="a6ba6772274fef0c22f1f486fe3c56bcd3b96459" translate="yes" xml:space="preserve">
          <source>Class scala.collection.ArrayOps</source>
          <target state="translated">Colección de escenas de clase.ArrayOps</target>
        </trans-unit>
        <trans-unit id="b1a2f65537e7bbc0875b48d5cb8b19ceba014481" translate="yes" xml:space="preserve">
          <source>Class scala.collection.ArrayOps.WithFilter</source>
          <target state="translated">Colección.de.clases.de.scala.con.filtro.</target>
        </trans-unit>
        <trans-unit id="aa83a52305fe26d2ba7ca144fc8dd02db1e712fa" translate="yes" xml:space="preserve">
          <source>Class scala.collection.ClassTagIterableFactory.AnyIterableDelegate</source>
          <target state="translated">Colección.de.la.clase.de.scala.de.la.fábrica.de.la.clase.de.la.fábrica.de.cualquier.delegado.de.la.clase.de.la.escuela.</target>
        </trans-unit>
        <trans-unit id="fc6d8e6132b5bf16577d9bf9c9bbef3f940e78e2" translate="yes" xml:space="preserve">
          <source>Class scala.collection.ClassTagIterableFactory.Delegate</source>
          <target state="translated">Colección de la escala de clases.Delegado de la fábrica de etiquetas.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
