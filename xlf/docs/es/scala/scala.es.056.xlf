<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="scala">
    <body>
      <group id="scala">
        <trans-unit id="afff0dd891232aa1f83cab7305c2fe4b1f0dac97" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1fffaccdfe7906ff71d52c86a45096b1f5a691aa" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fcf2fc8b512efaea965a5cb0eed8e8dd101d9fb1" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8864cb12d49951b7b70c69f3f853586f6d4550b7" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1d15c4a2c6706eb653f6996c930112dccd673dfe" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6c3bb76f6d6e500c5c9c51c0eb87295af811555c" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Lista&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9cc1e286822ec4a0bed002c7910c5b1919ed232d" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d297965105a39d8db09359989a276665a7cd066c" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c6e99c07015362f5acc01de9bf5cef86abcedc04" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0360c6c5985d5287353fc59dd2f6cfd2402d18c2" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4a49c9de3b7eb7aedef3c6e98e2874a2fd8ec297" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3b7f5705115da3a0ef09f503eb59c7a97b365be0" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3840be6797c55dcb1faa2f0e310da77d57c56383" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="51fd6cc6961f977fda85946544e7eb0723e78d98" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0ffc6e38f5aeb3a003792edd401e78a4317280cb" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="baa0872a5f5d95d6489df3b5c0968520210b220e" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dc37ef2a278ed3c5b1aa879421ee1f9c520653e6" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b943e96b12248af7123f585ba359d0e024525277" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;collection/immutable/set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;collection/immutable/set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b468552ff90b51351524137dffa113cc9c672540" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="276b0f8abd0999bc19d8aff39f85311df53ff794" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;colecci&amp;oacute;n.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1125232a1610ba75e14140e2fc374d94450f6214" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;colecci&amp;oacute;n.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="08a2380e446aadbb28bdeac7aeb615d827e718f8" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3509958c5353b88000f67b35c837a05067c704b9" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="afa0d22cf7f6fa18ed7afd7d1a61cc96bfe7f5da" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9025bf49bc4f17bc9a2c085a56cb8e60ec09f7fb" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c771cd74732bcf54c9139959c27454c9a8875913" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fff6e4e8996aafd2f8c569408c11267e5fcb246b" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9043a1feb999a8af59cccfde27234d29fdf47dd5" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8d07c538ee8df94fd8755cfba3a9fe3b18c8b27b" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dc38dcb7acb31bfcc4791aab394058705e3dcae9" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="51b21703c35948aa084bc0f0776418203fe97d0b" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="587a22aa59b2999fefe1a5a8c532e72c354ae077" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7217d079725d72e524fb8d38220a70edecb7cbde" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a64dff69c8e8e0439c19053d068ab405d917d2cf" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ded33b48962c3e1a24325604f7217289ae8b925a" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="325cd70a524e225f522336c99cec1f514bab2ab0" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fd925674ef5f2f1083f72ee31fe7c91eac8eb3dd" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="10226e845529a78e9a75755fa1b35286bd4e3c1c" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2658d36060e417cec4483c6e39d787aa35b07d5b" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="223014a54d6b8758e8d835fc80dde1caca483cc7" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="93209bd60509d43f441bae75dc9aa96a71d6c759" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8fc0c52ec342d72abe75f459082dee52f6f89d16" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="37d9772eec13900a46e0292c8434e0b9ecf7b931" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e78f3070f14128a2793a1f6e10f5076380c2c4ec" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="70930140631b2ed038a8e64e8d8f0f3396ef19a3" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="59d59d4f587acc4a8a597018e45f6d6c77efa89c" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7c4380482bbbf9ccce2b5497327ff46daf983cf7" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c72df6140380f9895956c8e9f182d78ed175bb10" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9a26b8a9a414caef5b0f1792ad966365d2bbff9b" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="973cf7c6118cf29a2c847180fa8fde0fda0badc4" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="55165883207a5409efe692070b7720290a560127" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dc191517cfb4b13e6b7fdb3a5bbc5c0121a6e51e" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="abe37b3270395c33d0a27ac0283aaf17afdbd3ec" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3402aa9cb0ae12b517ef2bac6f7ec6ebe51e84d5" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1096c82d7d1729dc0ca00d7ebbfe6281fd35a78b" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c025e7a14ce49a7063aab0416cb59cfc247a8834" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fe2c8f9f424816c3ba68ce113700676fb5f15a16" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="299db7afb87a7db2f9393655061f910de1dbf76d" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9902f496fcbb9d793ebf170ff59fec86f528ac1e" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2932f370195b370caf0856fb4d4a055d2e01a22f" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e7e05c0828446bed932c886b4b1de468090acdce" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="675d8bdf79bcab755dd138df3b89bbd4038ae606" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0f03a120a3f9291c8fe089ab4daca121341d89d8" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="46d5b601172ed4f7219ed4cbf59e60fec63ba4ad" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SetOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b9af5a778ad93391bc90c0bae0b15a286c94e917" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fc40ae979234031e5577ef87ca7788851a06ded9" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="10f707db5a2dd5c6f3c67eedc3f01f05030970b3" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9480d24aafc178571aaee2107d826e5938efc0cd" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cf533da54e51e33999c495f6eb5792a795deb990" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="65035032eea82c3df1dbb9983b9d6595c8a48158" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c8c795fc2283856010cf548860e027cf4c1cd5e1" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="05091507e6b2856367913b7a052fabaca7f32c33" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="443c6d702a7009e4eb266e094417debe9125bd53" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="eedc3e885927d0b521fd9091a3d45402e8492a82" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="59da639419f80c61aec4df3a81f7c214ffb9e33d" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5abf55f3896ab8bb2850be97b73a75f670bceb0e" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1e4fa476a31892efa25c6cfe76c7734f02823e40" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0d00212ab0f7ef1f1ac827f5f29bbd4d8db19ad1" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b7c6609d0df7d8568ffd4dbb92cf0584a859f493" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0b3c4536255ecdf41dbff263d19374fa175e5e00" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d816d90bb2e17d38d0918266cf18ea2babfd16da" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="86a08ef64f355ee38f33c58744894286396e79ec" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bdd635dbe64c0138b67d228d173e8f96e006cf2c" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b59bd8562ac57a188b13165cbf12f7a0557bab39" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="46dd73135ebf80a889f967850bd52fd21ebfd965" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="280aa7fb03a87c579247112fe37257732dfa32b2" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="eb0da55a52aabf3b882e125cb0c41b9ba9c2be66" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5273f937b06833623956aa02cba48fd2b1706243" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a1099b4fca224c60d4b7f229b21c53a78d804951" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="73c9753316c9e0f3d3a7726743e0186515784599" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b2512e8e9a1308ed98b0d9f9f014a7222717893b" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f0a3b31edade89b726937e8664497ddc8983ddd2" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e9ca105c1b7900d3a4cbbdb5cfd2df46afa762af" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="548486fd9e74ff3f8d7cb9ae0eae5e610eccbb26" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a0a0a33a7113bf567d09fde5c6c66818d2edb331" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="081f22c93ea181378eb85567b0701181d63a0330" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="240ae070abc8fbcce259fe64ad3f42f72e3158d5" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="75c6b0ce862f01f2f8280f9237ef78a751d201f3" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9227376ab098c5167b7c8f1901df8636990d244d" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1a0eb89537ed572d9154cfce15b1b263c04d8a69" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Lista&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b51b2bad4514c783b75679d2306003ee135344f8" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6f3530c38c746838042e4f3ea7a627e0407658ab" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5d6798d443f060c437f9f7c90a973b8642fadd11" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f5da9801b90aab5fa5775a529381e3fc21f96ec8" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e03a74069d5899ac55929c59a47c0f789cb7cb16" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c8d77c26abec8fadc37b7e2ec0b0b00d1966c39c" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b957af61ddd15b74ec6f3d088005caea93db30d8" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b0503b72a7fd14ff24f067a72a1c580936b16ae5" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d47fddc0c44ef7e4977980564b9213f22b7759cf" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7bdf57fabccdf18aba71ef8084fac0d69a7fe08e" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="55d15dab35636d6d44efe23e14832a9a4926d10a" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="42f0376ebf554e7562450034aaba1a6c52dd1188" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Lista&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="15ca2e6002dc221b518f43f7b8c042783d6551e9" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="47e9bed4e3dde81b5f82d6750443be1b922ced4d" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a9934b432efb77846fc235cfb810f71d3edad754" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b38232b10f5a784f19a0b50b09bfdc958ad61a64" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="820ff23ae1508166a7046fd42b9046503c2d9395" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="631b827c2f1200f64be6950d63c43360fd9ff72e" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Cola&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c7d1bf8e131914c0978175d5bc3e1732424deca7" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="66b8e610f74d2ed42e7cfb4d8fbe03355365150f" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1b90dd743dd0a107909618ed6da74578030734d1" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bb3835cdd463f7d3bfd71f41186815c04d67c194" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="33e41f41fd86269d314f634220cc7c1c7aedd003" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9bb5466bc4f78bda763adc236e274253eb1ac9cd" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="10cb3803468fb5701d9496358d14beb901a80060" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9399d312ed225433276816fa69e2cb7ca34f3789" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SetOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3ddd8a57d44989c74caa5ad4d125f4863c2bdcab" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ee5682c160c36141bc2e72b09c54e8f5bce58bc4" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9ae77d036c6eb05c77a7c41b70094ae83abd2d65" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="61262a4e9e2f2699ed5fda7e30c077d6733db925" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5b2ab35fc2c65ab0632260264562346c5f3bf4cc" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c88916c27ef35f47c8b6cbc97d2991fb1401f0e9" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="94363a8b6f81f803138d2078474a76e2c033dfc1" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bb290e2032032968dc975fccfc706248f4a8cbe4" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9b7c5072e64053861f472b702d81362f0e593ba6" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0c48257d42ed8cc1c99270da983fced884e94093" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="23ea6484e87c916418f06170ff64fdb9b92df65a" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="71620ca7c29264e772f52c40445ea33928da9bd4" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="651ad050cbd6358bb433e93159f0a0f963bcadb5" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="653af065ce56887ccfedc251fc0821e5ce7b5dc0" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="eab8adb2d6bdbc82e255eae8cc66ddfbc938f946" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ca768d80abe73a9d7a02dd8e43461e69d515416b" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="eef2b953d06ba2be23283ca4c37e990f36420869" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="42a690380b52844752db849b2ea2a4ebd3a303f3" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="91065ec1a4fa7fd0a154d2740964db2aff6821a3" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e3416ab833dcae4c4dec15a9992f409782aa4630" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="709d8956caade07d01ababbb691ca07efdfe22d0" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4a36ee9777c6dab122b37fb100c4be10e4777044" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0944e31c706ab73b0720c9124e05716653c87765" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fd7ad09182312481091b75661abd46942b40cebc" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fc49a54ad80c8e8f15fa488a773e7b46df476c39" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="06ff819e254421ce5d602772988a6ad555fc889d" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="861e50d21bc965bb70ecfb0ceb570bcd694a554a" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;colecci&amp;oacute;n.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6f5f76d0f512f1474122303b3a5faa1135025ed6" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="61afae377bda4eb75e0e4978c8ec5b464c86a894" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bfb4aece12bfd7e5223d7ebef0a99e915ae6ac74" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1b0a654a1761a36fd719060a51aff0a5527a186d" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Cola&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="906d630b0c06e86841a11a518690bae678f8ea56" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c90b25894b7249704c9785aefc23dd70f64fea00" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ebba4ff8d1fcb0093b1e0baeb61dc502b429809a" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4d1c806207c5ea331b224e25505a1c4865da730b" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SetOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cab3d6755f55636c9e191c3e8f3e026c1cf1742f" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c87092e310dfcc1872b144560f8519102c0d0505" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2687020fabef8967103aea3c46e39ae259fbe030" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="42f372a2898763ec3f97f4b97babfaeeb49609cc" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b67fd658a8146a177b5b458011f7619c6ad4cf90" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7348372e1c0257e2aa72ca374b276ad503e99ff7" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;colecci&amp;oacute;n.mutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a6ad3d83da0474d3fa598f1d5bea9dbcd52fe766" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scanRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9a4cc136b5f50239113cfbb3287a2e4112a33f9d" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="99d72ea036445484b94c161f5e0640715e35ed65" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;collection.mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../collection/mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;collection.mutable.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="254605a6bce9bebf5acfccc659b405b602ef9ab0" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8092e9c29dbacf53d94bba9a874b0062434d2b6d" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="303193e104fd7b748198ba5f57e1306e4fda98b0" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c2231ce80d73e1655b17ca36a22897dd4938a469" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e7b03c4eea202c69eb9c55bc76e8ada24d0adabc" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="13eec2341d530c25376ab615fa5aed5c19eb80f9" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="adc3ef5c8497ddc93430527e66f84d75b575f0c0" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6eea0d26607c015348ad3167c1d0883de49da095" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="77f0fb67770fa29b2238c4f42e8630e0e44f9e19" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b475dc89e84d539545a4c3ab1817ae9c88424326" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cd78e8b60a931be46b10b053cd86b5bc353fa692" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="354469c9180e1c630fa09186294a254cf243c654" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f0c545ac1b848af361f0498ac026a5c145ed8260" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="974540f74b2042630ffba2f6946b6b7c99afb906" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e6b6a3d9b13cddb344e25affe96a674db3480510" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6871877f18e724578ff1284711eb0d0634a31f4f" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f078112c6f1367d0a4f2010c4a3047c2e3dd4dd2" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fa8f3e15dbc36a0eec77f4b03c83b9a8b1e98512" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="44320d81a40ef4f12a16809ee710988e99e414eb" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="17b2afea9e0947438157e0a4d51845c0a1c02eb3" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2771aafded19b888ef7e2ee7dae95954452a6580" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b769e3074024929d9e525a873774f88d2349f523" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="805c1b77c0d625fd20568aa3212748fe233ea4db" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0cfddf8a11f8fda24f9d2a8e2888836f74e857a2" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0410fe17954e8b0336f93ee8b295c778ceef1776" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8703cd5c248cc73137fd0d50a2c4768e8c1fd0a2" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="35eeae91b67a49c8ae74ce555373bc052eb720bd" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="be0b677c5740d234606c4d4ec9da48eaa476f9ac" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6e2b7bb8fa511c61b94b97417c7ff915fde17ee2" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bf31d5addd5e67e028ed3ea03a3777f3c48134bd" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b56c13f4a68b572588c42a3d28030fd746afb788" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1b43263ba445486dc00d33c413f0e01cf0e98a74" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f7e4882b329d2102d683753e0075a008c584c319" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dfdf374e5792031def30e020d4be937628b1ec84" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="03f6af972d00e744caf962f353f185ba59f878c5" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a51711916cf2a6b71f63ca30f6a673d9bfaec8d7" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ca5a29cadbfe58f629359f44fd9e438b27ee97d5" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cbd05a19817ffeb4f09f9dd0bf21b7f46f410094" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3e4be81f3f44e694440db4ee3dab327fb30b21ea" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="eec0abf0187ab7abf8a47ebcd09459ca6c313a45" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="18c174bc4863ffde83de3b84cab61ca939becf7d" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="784b3d32e3945c46f02932f3307b76494d9907db" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b1188aff99715c9dc74e44c14de91793af860630" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="405b0ea55c18bc23dbf615d30c22a868126b2cf9" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="704bcda27e80318ea054772fd3b7ef3233319919" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="db0fb06df33afd28e058e3b4460738d0b9b2efa1" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f2efeb6de0f9387931ee8b4eaf9013191ed5c8da" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="42bceed1d341d84b42ec9f228d19dbe1834bb7ba" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5cefb7da781adb24cbda108be24b6f916f373c8d" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="373c496d4d761f1af841230b652ea616cb8a13eb" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7b5a6f2d6335ef766bc9370a258b1e5a3c3caf3a" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dd6514074a1393940876779159b4f62ef9754505" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b66c60f92741dbc3a05e12f97a75c8ef099b2b64" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8e137d845c272bf7d5849ca81d43d6cf7b51f2cf" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;])&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt; ])&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="270f1600ab37b6fc6900245250f7ffe5e26bbfd9" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d77a843479ee893ca96d29bebebd2dba0ac38ac1" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="63e533e8f6a3a7ea02c4c4e1da96aae9da90da5d" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6740ed190e75b523da3a7b271b929f0c5d6dbfbf" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cbfe97de0091995e8530c96bd38b2b799f6711c8" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="65e9150964ddf644e8d47fbc505e4aa13a8e4781" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3f7c760ca5aa15bce4501910737cca3671bdfaa6" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fe27e934072c388e77cdcf763a4364f523024342" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cf19efbf255fa2120bffe4bb83b17f7fd0d638fd" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6f04a0e8df939828e7b5daf317af5789cae21c98" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9e15189c15f6047e49427c5ee613814fa25179d0" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4ec4e5e60d1cd42b86eb16d05b380dcd6483bbc2" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d8a164945d6f15e96b7a089cf0d139443e7c79dd" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b259b0cc0c768eb77b69a74666c61d3fe170892f" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2ed3e72f638453c2d1403f512d115bbf11903efc" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="239c613b09fed0b148d7ba9aa19968b3a15326f7" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b3e773616b46df610edc94a2270565d7160e5436" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bca8dfaf409bb32edc6e8dd0fd586e7b2795ab8d" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4ef1555934dc628c27d98704c39036b5a3610645" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6882121cd4962e8a0a40a0dc3d91bb8eb918c2fc" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0db176d769a398dfbc505d230fa8f60a65867917" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7a4c3f4d83f6c958ad4b57dd6c0248c6d46d7d53" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fab9048fa819868854d8b3bad5afcb238b30e270" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3baae5bfb29a7834883f56fbeebf8ae5ff3e7835" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d6dec1089191b553a1917cdd1089f8d349ca20b9" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="877ad05c4d40a3e19be9eabc452116a186dcf54a" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c186878817e0981b500b87fdde1e1f18c4fc49e1" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nada&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Lista&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="19365c56c6d2c90c9d2d6f2a8871d647c2e14f03" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nada&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8625bfe3b84cf4e972dfff683fd3c4fdb917ba58" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7b9362734d04afb106c73d3860cca7e1c7835385" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ceceab0385318221ce71b86ccded0854a1d59f22" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="940b0832a7537dfdca5d87a95e01e101f326ae91" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="273abb1943f845d406f746e60d985f0218b77297" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="110e5d0156d027a1f0da8f4a0241e4086c08e1e6" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d8ba686808999a36f4a1463a603c6a17f13724bb" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f76bb6344bae86696ff53b77cb40f2b49033b364" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="58784b33c63eb84994474930a9183f5ce19e2b92" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a5f402c3173927e0745e8b0f02030986cd47707d" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nada&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="35999666ab7bcaf6e8bca2d3cfc3be95dbc78e13" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;collection/immutable/set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;collection/immutable/set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="66bdd87872fce8100f9c246d71ddba5698d89403" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e41894e2b9067bb771e55956fb7a947b3d7b853b" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c252245950547508ca49f9900636dbf26b261a89" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="742709d7b400522c69906653b059ff24e095042c" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9f13aba63d7bce8c8f86dc8b0dc6fa50a912adb5" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="45a3f9d9104de97cdd740eac33abab16970ab8ec" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a89c90e93ca7004ae2630da7e5f21d960a3ed9db" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.ArrayOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.ArrayOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.ArrayOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.scan.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.ArrayOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.ArrayOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.ArrayOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;arg0&quot;&gt;arg0&lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.ArrayOps.scan.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;arg0&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;ClassTag&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;&lt;span name=&quot;scala.collection.ArrayOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ff238cba3d8d6eb7ef72114d3ad4c87f5161a0a6" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.ArrayOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.ArrayOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.ArrayOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.scan.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.ArrayOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.ArrayOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.ArrayOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;arg0&quot;&gt;arg0&lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.ArrayOps.scan.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;arg0&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;ClassTag&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;&lt;span name=&quot;scala.collection.ArrayOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2f01a298e6a9a27aadeb300bf176b8d0bfaeeacc" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="69bf415b78d5ff25fc9e779fb8f65642bce21c1b" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="413738b7f5964adc732c1d2738858eac8f7d7b9b" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f468f9c89b3c6e3e66beec9dd853b9083e0627ea" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f2b475eadf3c32f70ab1d9ca45bd7d519986e017" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ef6904c6ca0368539c62e238abe4e86eae6c18d5" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f1266298abbf0c95ce3ed51a344bf53acf569b90" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1a7c250938d8c9a5874de8b9f04d4480f8268f9d" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="33eb6622c9466a676502092f9fd7af8c0eadb4c9" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="04ede4ca175db0bf8b4d1d2b27b295f5d69df2e1" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bbb73784a0841daa9abe64251f79f1c860ee68d6" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="425faae55ec6cee1c6f84bae3775bfb4f691e42d" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0a8f446698c2a67d8ec9250389640c09da45090f" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1585ce011c67b9ee4618b3dc4fb878e087ccbab1" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="964dab3fe23af594d308cdca95f75b262c1f2fe6" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="49bc1df9b0c43d8f1a256fab05617d172840b425" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4ca42393ed7c57ec394ebfd9b46d3fc0e103288e" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="33b5e2f94557e6bfc28116213cface8d8e162a71" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2032e904803733094ee4fd2b294738986142cf30" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;colecci&amp;oacute;n.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3561c920517b2644f54d7f0123992cb298adae9c" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2d5d95a479e772ea196e795627f7cb07fd5e6525" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f490d41043d6f42a889430adc340ba557567f0eb" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6a78e63fed92263a17dc63ddeb588ad062c6e49d" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="855bca126e190c9638fde8f53e2e8a061f757067" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b62dca2790e2d9896a4fac95176f3f5af932952e" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="74fafefa88ab57ca07e7192c9b4b9636608ee7b1" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7c8b9b1f502f9a5746e6237dfc73203567cdf77d" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2072f29f324466604de4218067bc35d520caa0a3" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e8b3368ff78c718b277680c4979fb2098cf8786d" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="47fbe2c1f010b149d73acc4dc1ea5367b23859ba" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9d11a7d663820c65ae4b4fe6a1fb07b8af4d7eef" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4ec26ea016992dfd1c39f5113de50a12e4d8f161" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="76d6005e02875ec00647d798c80f29d150a967dc" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a77881ce782ddc02da49674e282e12eded574e76" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a5cf00f5bf6c13329a4e426347e46fcf3d6ad9a4" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9e8b01669f8ff2100bbc41bc35ff5a4b155195b7" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d726a055abe75041c67631ef1898263d9aeb4969" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="60ab530b2b7c7e3b243c8c8e0c109f4f94fddfb6" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="65c693e561f8e7892d2fdfcbe52af01362191fce" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8cfdf8df75be6efd6eab94498ed99342bbdcfdd5" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SetOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ed8accbd770f0ea06a1a7fca36795037401bd2b2" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="afebc0e9b28dde8ba7dcafe36129c79418a8302a" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6b2b018c02672968f29e27c8143b9b12fc444c2c" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1945ff98a2a35e6da8e23bc46173373e8f24ed55" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="99dfeab0649e17f891a2a2a083350296787f972e" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ac59c753c5852660e9d8270bb4b572fa8bb18438" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="053312fdc6f8b43446c7dedcb055b0c0a7288c86" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a5dd056c3779d6234908f9df14eadef1f5aeae24" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b84ba24d40b40a01cae1c0bb6bdb97e05760bd62" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2b6141ae0d44d32205cda695c77ead4dda7fbf9b" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="64eb1757a31853aa7ab84e15616b6fa582c72fc6" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="276583643e06ea4fa607acd0237c0566faf3ad6f" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6f691154f4daac1e1a2c3127ecaaf088d174c4ef" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d371edbce8c505c9454c587b37aaaff31c9f3978" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a95664b6519df815bc8a08fae3b102567deca356" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="54c8766353ad115bd9b99fabbc1d8329e84f0c69" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f9cec25ece74bbfec04fb36ee75a49ee04708ac3" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="84f56bd83a2597b830ee4dcfe26107e63d4d2d09" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="51e7be4e8039dd1a9d36f43f6129d94e5e6b3882" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="13a9082a4b7b870b4bfea8ab10030b2b3cf01fe5" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="940001eb41bc11a40f61597258e5cfdb50628932" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="51ef72cd6d0f1069fe30a129fe8bccbbefda41bb" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4b33021f54ca382319c8933df85dc96ba77d873e" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="64a31dce2b7090210df4960c610de080f4ad894e" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ef27c3a8c1e162ece5526b6ac0a2bf0ba1193d01" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="57a0b12a16877ede85d1c407c5d6a90103f262b9" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5686ad3b910b43963087d8cb0a709a03e10f934f" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8b3206fb4d26448b83695a6f0de5ab718560b108" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e893c47411324f64ca534e77bb14b20dff122028" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ddcace8f166f0e8985ef244de5be4286fb499499" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d6b63569e524d708a87b42ca651ee2e5ce547abd" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7e5f77b2ce1e173308fb294e3b4f59d86bf2a382" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="109afac2f9f6744aab749c71863903e56b7bb550" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dc6c0b3c00b7eeeaa646eaa936e49a07ffbebac8" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="94cbe0f41afcb96530cfbd0bde01e61bc5d0ccfe" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="eca1ab34c5a462d3aeef193b63b63fe324f28d25" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Lista&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="739cfeb6a3d6f8460ec7dede44bb670b67a397dc" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5b6a3baad9c18d28a4d22c62a73c50212159af07" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2bdc96f9ad107a1c8ca75654fecb0a1f2a4ec3c4" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1e61a7aa463f0e5a9f88967cc2b200c70b544643" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="175954d9aaf88ed2dad677fab3282c8ccd7bda28" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7752205d521bf26a541d0927cbcf80a13418d9f7" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="00735a39223a4caa2b3d9420468df94741d94a65" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6a03ae2aa513c45699f1b3e58d9bbe9fd633cda5" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="001cee9dbc6a516b2c95c812088e098d9620095c" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="61c043fa39fdfdd7d41ac02ba2fab2b33dabde28" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d7e41e8a530032ea19a3cb00cf738ba4f6996672" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0e2e0e43beab15e7db48eaed55570b8ceff762e9" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Lista&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="782c87ac5ac0f883eba0062a0a81bb91150d81a2" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bd5f3719b31899709610ad85accd355922de4f09" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8c2cd9fbbe3fa88e1aba1c93ee84b2dcebd74735" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a72de6af78e6f6c0264de271f6f6b8e72934131c" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7fc9218bb8e6524b9de1d0aa429d9e1f67378d57" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3bf5081ef287ac4f5f1082004e3dced227d8d067" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Cola&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="299800c74ff270e3f8d078940879816f0fe59e88" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4e3d2ddc74a1fdedece09e4a2585e56e624457d9" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c593e96405feb753bdd9ec4b68cdc3c5a8d66239" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="65b24c0ebf51708e56251f584e5305267adffc16" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="be09087b49211073876873cdf9bb2ac07dcc7bcc" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fc841c7f2f6f4a9dd525cc9d6009cf76a3c6cea7" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0ee09bcfd0aa6df51f82e9e0f6a6bffbb8040fb0" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b4750634562052588bea528b1e1f9748de9289a4" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SetOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="baefb250440e836c7511cd74d9af260117293968" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bed85ed24a3d19bca6a4ed7308f5ad275025731b" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3aeaae98d960eec6ea98057ab52c0446efc64289" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e15be8154837a936e9ab9b878525ed03dd7c1964" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2083fe8b6a2038c6a33068fb1ea14ba4b98b8bbb" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c8a68e64c6c868b64814da65e044da2b1cd40c99" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d83dea35f6f60013f063f06c4eeaff134eab63cf" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="767895c1879a11b4f5ff8c84fec982185d45540f" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="735a182e06108667420d5ef05e9e6f18312fce53" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f1cac00d9e6a6bb20ceaa1a9311da1667b0bbd66" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3c11932e392353a1ead24f563c423f002788f46c" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a0019c13cd646ada968bc62c8704b16508f5b17a" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5043709f4ebf616e44c3278f1b93dd8179290a6f" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f2819410b5ab3994b1c04dadcbbf292249a5b593" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="29af3de82e611db7db8f829ff28f79330df62261" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="48b176ac19e52b390a4a8c4e21ebd3953a63390f" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5381aa63aa5db6a30bbeed3e53bcc55573b2a609" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3871625c43b9be1a46808203728021d4411cdaf0" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f77755c77022918e672570f6496e902ab7775734" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d16e0cde2e04bb20f28c0f599a628868e086748f" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="11899681f3f7189afb328199df7377f4e09108f9" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cfc4cc8e923b0a75f298bd1c5c9b1fc3b515e767" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="13bd3cf5876094c52ce04c46000c6c2212ba4141" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7a91d79e4bf9f9fbf2aaba949d71e089c4295953" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="adb67e3bc48430d24a2c9c7e0d115baff5e278db" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4c48547c1e2766c75e8974623da9e7f357e0bd09" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6e47ee4363bae913734983e568f35726ccba3add" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;colecci&amp;oacute;n&lt;/a&gt; . Establecer [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fd405b3a1ea06f849b3a215ae395156f2cc0a75a" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3876ba8184e3923b24f08ebc507e36803c32b2ac" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ecc314a3bcefe5b48a070a78217bc510584ed264" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="08bd8ab6b649400229a424f6d7715fe15494cadc" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Cola&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="71623223ed0529f82b0d47f18e6b030515a7b997" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0a9fc08aa38e351e6a0b64ea45a2b3ec89538e40" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5846c3f7cd98c4fc1f7fdf25fb390f21728c7eac" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e5f580c6d657c28637592e1bb1f1e3f8d3dfac30" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SetOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7649449a8ea592e18161414fe56dfdcb097967a8" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3c3c7fae69ab3e34c1a2891c8bf3dd9ac1d8bd94" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a0faef6b378f8c7cd7f03da2da1fa1bef8a0bc1e" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c8aba143333819d4fd2d9c7b9858d43f2dbab476" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="07ee500d57278213e5411a849e7a7a0058c12c01" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ac35ab1882eb167ac27f57ec64620f2df9fce6d9" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;colecci&amp;oacute;n.mutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="34d6e392887c7d970e5a3d54c7695d553e292302" translate="yes" xml:space="preserve">
          <source>def scan[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def scan [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;op&quot;&gt;op: ( &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.scan.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2a3c1246b83418d2af54c7fad5ce3f73600acf4a" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3d986ed6ff92aafae4225a1db26dcce9fb2fa32c" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="97b3620e4105549270570b93602a0400b51c62bd" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e8099bac85c18c32214d05a78c9c5ad845d48ad7" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="95538dce6167cc786352e0026e58bfcae106d62e" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="22d21f9576aa64f4ef85bd7c97100c49c8c71852" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ba0cf64f1686c060f46c7bb54ef15b59bc72271" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ed1956050e1fa2c7af540164c0006252340be98b" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c298038c83ec16e1076848ac535229343831321" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="648612355a0a940ee4cb3d7fb8f44c4b36a6aa35" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f7096e0251b46b1ceb7e3671a99d69f15f6f70c1" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4820213b4a9670247906d67f5a908da73757c1d9" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9a51973c09f2b245e4499eeeb4f667dc3750b0ca" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7034d6cd8d2690980255e7ad416211f78b9aac31" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9885a54d6098bc5ff9217eb3425b3e8519bdd54e" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nada&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="88bef03ce5b13a57e1540155743b701e6e53394e" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def buscar [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nada&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7dd4b2329737cf4cb3c4c77640f86cd1916066f4" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def search [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a4b4b7f1e8416733ad3615142a06821a7f00d39e" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def search [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="079703e0fdafaae7f977de5b581be1b028009a0c" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">buscar def [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (impl&amp;iacute;cita &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="63dabc37b9103e8b4980815b4a32f1b55e1fcfe2" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ef7e8e1c6e8d7b7ac5254b950d7e99a03f20bf7" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb011b16fd2ff0ef7906605b9b612b8637ebf290" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="28c10f46157c7cd5e2e9269924b1c90fc365292c" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../collection/searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../collection/searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="200528ed380f41d658e0ac152fac23f8a1a7d34b" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../collection/searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../collection/searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3b5b4e43356999ec48948ee00851af355f2de8f7" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../collection/searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../collection/searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="caecf14866b633401d2b31f49e6e4b20714227bb" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../collection/searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../collection/searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f64f8124208d64c313c3a1ba5b78bd82c1108be" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../collection/searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../collection/searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c57a0428d4c82f0c04b26a0d68d5a391bb9f978" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../collection/searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../collection/searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4e94e62b7da51e1236bb44baaa6160396f5c509b" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="00878c166e9133b61f7f487355ea7c5efc8893d9" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5436904ca0ec202ffcadce381e87d2f06a19164e" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a42e0b28d92165bc0bdb4c7e0be022f733c30b56" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1db4cb0b5ad1f4a67ea7799b3d721ffc0db35628" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ecf32359f6fd5bfae7c0c5349f23d1dcb9133420" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8178d01ed1a3a6282ea10e860053e767c8260dbf" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0463eabd1863dddda4bba6d542104e11154c2a87" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5ec8a95ce4f47bdb1e7ea2ddd8ae2b0082ae1d4d" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="58a6ff6495290bd3511bb579a82f57fb0336681e" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;collection/searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f7bdb3edecbe9bd18a04e69faf4fa42f279c0df7" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e4104ab68971ab9761c34a2f4ea12c8beed6bcdc" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;collection/searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="395628fbbe2701396809e76ff1dbc0ae29940b1b" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e9a53f0bf2e3baa6b8a96dd47646303e448d03d7" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="57c8f0838f5e708b9e6ecea0c343df68c18be5cf" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="03a84576c38873851ef2a5c41d5532cd6f17d979" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cee4d3609854aaeb34c02cb25b25f0fea5e78de7" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8401fd33e989717090615a5ad3fa2134b0f829e9" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4615a0bff3db7d02d8a232d4f4be407ca846ed08" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c48a860b3b2bedf87374d57529717d0e17a6bb48" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b22f70d117bd725ee1739e95bf18d5120cda2ab2" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="29f91a3c171b8186d4f09f6d3e2143e378d442d0" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="32f476c8259c3384b786e91dce99df6cd73d04f5" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0f3a6b99451e41d4a1cd06a43170c434d9fd7f59" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bc8d2425b8fc798be4ba712afea59e63b5da2a3b" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d2174e42e9a107a8c7db00ee793428b0a5044638" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6836c1d771fc6ecdfb9a682c91eeaa20ff26f81d" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c3ac9033987fe2beeb0e4da4985f00d3e2675e90" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a7d206153f5f4443ccfe80df1e70d7216509ccdb" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="31ddc0565cc2ca4c0f8f580331b4e9d3174a4621" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bebaa08f7fb13f48f28b7f5f64f0f90def660f55" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e459fff621d81010a0f0b189577ade972f294b09" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b8efd641cd447a28aa98434bf8d8846eaaa76977" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0f38e3a570037852a8e9a4a8895f36cc6386025b" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99df332fa29b63febca47070cafff534b3f0e4d5" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="35f2dfa4b80ff38ee11723518537465a60ab8548" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f31c09f9d612bfba1bfa7e4fd9627203d1873c59" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="24df14a91c3acab9283350369dd254bae938e93d" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2e880a53756cfd23fd80a60dd954fbb850e3ecda" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21cdd492c2831d881d54b30cc40db53051b8bb1f" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6225c95c27f0560fad38199702a0af85baab6967" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cefc83bad2a96fab186910016b44cd77673e2be5" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c41d87bd70544fae6307ce62b60d74223b95415" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2071ddd2f2f89c65227c87b1a8e6afd4f1998d5a" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3dacb95bb8a2d8d7c09c1206295b11a722402d61" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf1e2d9d6af8c8f0383e075e7d9019042306489c" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c51aaa6f5d98ef2e3033ad2e866d4653db52040" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="06de629873ca5b33dc0693ae2a1e4a83c5e32539" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be058e6bb5e810abd24f6d6525945f100c659ed5" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d7b998be7a340799e7c5e53aff24f64458a96aad" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="25dc88ed50ec4631c1611c9185ab652ea4c5842b" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="25292a42e32ed95bc830a958e6b4f8011691e859" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c7091b44658c3f11daf7b7417f5c2f56855ccdc4" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1d508225b0f20e1d1fc763f92751b2cf82e29775" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e39e2790510d48e912d9fefefcbf14a8111450a9" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3661a5856f0850ded098024260f61a2fec094e56" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fc02279aaaeb5220ac898ab94f41d4e003599d6f" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="80de87e0cb1426e444fc9e6a92be8754f521059c" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4d12dec6956e5ec6979320cc70617e3f057da774" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="055c7400ca1c453b222441728223c2c77689345f" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6bb29361cae56724bdd4fb641ca7633cc828e52b" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a983ee09e3124aa96b96056d6f0fdf4c777c845f" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0794ba06cd633b8aa07463a7f2468227b7ce22ba" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0f03e2c346df00c63f1cf8ef82f0855d0440a687" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3361cbd5ad40f950bd4c4a803c187e6009e44c70" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa9cc5a32d324eb6d8beff6a9a374956e4a65356" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9328b329d5ea97f879cea58fb7223527837c0473" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8598caaecbdfd6fd37eadf804e85e9c5648ff5f4" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="25f92386be4827d8e9e467f720627a4e7f15c1a2" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e2d8247c23a2a95de7353a724eb1cb9687d695fa" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="280c2198f9004b644c77ba6a7435f206d79db4c4" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="da67ae4cef7677a41414b589313a0733de4f26db" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4e56a40b94036f8310ec5c82ae9828629d5290e9" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c88b1fee13fb682c42b36e0db66c44813f3eba81" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c71d0ca5354e45950adc3a85c9496c894dd0b7b9" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9276e5b9fa613c85f3a9acde4f59afc6352c7050" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="140e4b8cd0b746859a5bd6a47a6a214480726368" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a0b27c045f21c4d0492362ecd34bdb0afa828d58" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ff0137816add379940088e8be2596c9d997cd31a" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def buscar [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (impl&amp;iacute;cita &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="57198e5795f728d43093b12b3b77268e069d20b9" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1b2261b1191ba54f61294978bdb5d578e94f7f0b" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="24a6f90e32caeac2b5e31089f36f3a0e86c0bcc2" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="935bd6a89b8f0fd9a9f1874d59c7c8d130c43d8e" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7bc48ccaf53dd4e836f5e78c5f656c501de8d23f" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ef7c80a0daca7ec8e332c0ed82d207136152a10" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0207734ffe18eaa5d4c44c0e2decc46140c0950f" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="16075463eda906a465fda89ca5b2bfe759f4f01a" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4528f0d11872fd2e23e69fb885d423f3cfe0269c" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3eec12e7db19241068ba7c371e0e2f06061ad763" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="273c24cb649e455c7433290d74c036ad3cb2d5b7" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4374a0b59aa06157663fee929ae6cd12e3ed4476" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="16c4584e132da384c917b7e557a91ac972425e19" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2e1481c064bdea36b52fb8885827516c4d383a3c" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def buscar [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (impl&amp;iacute;cita &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="96b4258906f30ec0f65ddab0b6986627a7057af9" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="445a79ca7a3e537624b91fcaeb97e6e7966fa3fb" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def buscar [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (impl&amp;iacute;cita &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="79583dcf6fd1701752eec192b5a9b93606602bcc" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b3b78a065f75703e04a6bc3581bc67d3cd0df88b" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def buscar [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (impl&amp;iacute;cita &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0c525682a16b3fe1f911fdc0f867978724e380eb" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="493bc75a81a50fdf0a67c0d01bfe95e0dda443d6" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb083df4875722e2b3e27753a30bdb9919dfac57" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="06d7dd01d82e10893761179e7e4b04e1b877babd" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="54e80bfac1c02315bbae630681c624abc2ee2a24" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="96e11c52bfdfbe8c7cae8ea5b686d2e4df3b1c3b" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e8c8a94a3e263809fd9782135cee2cf61b851f25" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b95f744a66d1007f3bdf0f246204795ce8d4df95" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f79595ece4a39ca22fb32caff6abc74bb9fc3aab" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="55b42fed2b0755885f7c9e4d4f30c4e556f5bfcf" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db1a3d68e57dfe2f6bac1c84cf5cf36783909371" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f8e31e5ddab388d51b54327188f88c8573b19894" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa58971932f81dab90e34e3ac2b0ff0c05c5e67f" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa690fde34298973a16f6e672c7c32fdf0d9cae1" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7453a8a3761667145e6765fd6991b7272ee5ff90" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="02138c840d8060dcd3ff1c767cd8f093f0e15d48" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="758b3d7a662ca77d14d267c66fa9ed55d016084a" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a7f29d9d5b0ca8569b4e047233293e2cabe2057e" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0114c1e8bd5e0f9224380f99b6873521f392c296" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2fa76cf93771f8cda1775954502b8af3b2006a03" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1be04bef0eab3be2890efedf5a8d3f5f079266ef" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a9a443332194d83f1a41929caebcce70afa9e78c" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d54a91ccc35bdd5e505d4c382cd4942b36409fa4" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb5712a3b4f44e2273cb68ccf91bf31682f1e012" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de8171940433c1236537cb1034634cab01f0b11b" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="020f412f79a2a4a928cd63ab3350e699d6453404" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b540236eaa747c1057f2054ba03c8a7abc518b7" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c60f53e2678b8539b61c55b88e8d242fd850f298" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def buscar [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (impl&amp;iacute;cita &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a4e8da5d096649ff28bad17f7c78b9bda32fe7c9" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2dd661273b465b0ed26a7a468fa04c36ec22a714" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def buscar [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (impl&amp;iacute;cita &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a93aa2796a0422601c3037aef1c7de00e8e37fd2" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a8a834d6567041d555e21386d67304b57693c009" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="06bcc3f45acf06d2abd57303ef79c2ae618fda96" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d40a7e49de1783fe19a65fd1b6f8b4caa1b39c2e" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="436ba8bb94800314493aee13e86689208eade8c2" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7dfc6f3a4cd8726060c3c2ea6a7f1e0b0213fa6f" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def buscar [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (impl&amp;iacute;cita &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e02ff9053178b257d7b251b0433c36555ac02538" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="89d1947a6590045eeafbe68ae347f52ad9109f50" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="89c6cdb73e4df2cec4a869b55e59ddb9ec204581" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="945c52a0a162c0ad2e04f1e45f45e41db83443b8" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="71e1dd16d02b38cf3fb0a4bed78c35125034af29" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="958b1f1176b1bd56e37096002ab975ec90d9965c" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="611d4244d1a82a6cfa69d33a2d4b8d3a394133d1" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c84304b7b77a143c59723128bc5a00aab0849086" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="90822ecb3eb2191b4bf560b946205f54ab1e595e" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2e301cdce748a177c7cc446ed41ee7e7a5d51de7" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="958b9e3ae6c5fa55c9de691ce33f3b7ed44fc1b9" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="259513d11fd5438d33febf63da889255a9a60d2a" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9e5d18a5119bd0b3903caed1b685e884e71c407a" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;math.Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.IndexedSeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="638e2b7e57c4f8863d23f8ac0f9d24ae4d49af23" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="74c1aabb7e286190b81a66829f77213330b39706" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb8582a9c1cec6615c0231c8612114d5c2060c94" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../collection/searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../collection/searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d5e832a7d515b001bdb1592b994ee9f8cc2cf725" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../collection/searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../collection/searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2af6ff2f5e90588e94c960713138a58634c6d99c" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../collection/searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../collection/searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b465efed879d1d7898e8dfcc3ade149cfb0cacd" translate="yes" xml:space="preserve">
          <source>def search[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;to&quot;&gt;to: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../collection/searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</source>
          <target state="translated">def b&amp;uacute;squeda [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;to&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ord&quot;&gt;ord&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ord&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;Ordering&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ord&quot;&gt;&lt;span name=&quot;scala.collection.SeqOps.search.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ord&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../collection/searching%24%24searchresult&quot; id=&quot;scala.collection.Searching.SearchResult&quot; name=&quot;scala.collection.Searching.SearchResult&quot;&gt;SearchResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6cd086f3bfc8b68a9fb9545e7c3ede4b337ec7a9" translate="yes" xml:space="preserve">
          <source>def second: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</source>
          <target state="translated">def second: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c8754bebfca357577b505c4b5b3de8be3de967d3" translate="yes" xml:space="preserve">
          <source>def second[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;scala.concurrent.duration.DurationConversions.second.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;Classifier&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.duration.DurationConversions.second.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;durationconversions%24%24classifier#R&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot;&gt;R&lt;/a&gt;</source>
          <target state="translated">def segundo [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;scala.concurrent.duration.DurationConversions.second.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ev&quot;&gt;ev&lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.concurrent.duration.DurationConversions.second.C&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;Clasificador&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.concurrent.duration.DurationConversions.second.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;durationconversions%24%24classifier#R&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot;&gt;R&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="41e55e297f929d1ba68c765d41df19f760d27ded" translate="yes" xml:space="preserve">
          <source>def seconds: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</source>
          <target state="translated">def segundos: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="36f1f13ca0534cdde5046c36334fb84acdeb1ba7" translate="yes" xml:space="preserve">
          <source>def seconds[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;scala.concurrent.duration.DurationConversions.seconds.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;Classifier&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.duration.DurationConversions.seconds.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;durationconversions%24%24classifier#R&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot;&gt;R&lt;/a&gt;</source>
          <target state="translated">def segundos [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;scala.concurrent.duration.DurationConversions.seconds.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;ev&quot;&gt;ev&lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.concurrent.duration.DurationConversions.seconds.C&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;ev&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;Clasificador&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;ev&quot;&gt;&lt;span name=&quot;scala.concurrent.duration.DurationConversions.seconds.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;ev&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;durationconversions%24%24classifier#R&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot;&gt;R&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="da912b26423c2303c6a1f54337b075b8436f644c" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLength ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="54c1d83822ba99a3654dfec55c52e9d0f008c444" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0df02aae765654b6ad04d52ff22d47597eff2eb5" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d3d55edef63744747701335457c259b2853bf56" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5027615d70629ceee4009bb01237fa4c89f9674e" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLength ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="102c525bcdf5dbdde76dfbfe757565d3a6905e47" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="98ceea252e199de4fdc1505c16a338b86a013f38" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5bed103a6e5fceaf7104b0ca3e18579dc9f46b4b" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nada&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="23cec22404aeb640451e43aac47753fbfd2c724b" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Corto&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b5f44b01cd9674d32fd632796d3c803b8ff8582e" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="710d9659661ab1b0b8239474eae8d8b435d58974" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1069d2483277ca8f28c788126ed6edc33ed3dbdf" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="475e70d698d643ad928ed7d25d7a6dcba1e07bcc" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e18a2b48f6c03b838b03e02879c98e06a7a48cdd" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="adc990c27d990e14d3993cc37ba1af187df9030e" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d864b3240ecdea97a9ae4a77e1d24b5e7a3aac16" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ed1c2966f634a75671e704dcd946589d33e2442e" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ccdb5956e407ee8cfec1bf128ae291dfa6ae43a" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5220a71b973e6644fa5c4be8225f1956cef404bc" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="59de8985abadba4081d190e5294b57ce921441fc" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c057a3b4bfb8befdf522d23014dc80bcc44d781a" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="14074ca980ec59d8135a5ccbc15ab5bc47117a51" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0aedeab5207a6ef945d14c7ea6e9d091e6356bd6" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2d54ecaf8da8bb0c90a82647c482e9f5ce524462" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d81786a062238942304600d176f25b7c38ef2b78" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="41186f80a62b9e8371546e0d0448fb5c244d1f35" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="26ef9ebfad46e325d97e44e8ff129771b7f8c304" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a48c7c14770bc33fb980a6d578f4df7f1c21508c" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7c1516bc3634649fc5a81cc3afff3425cba8ed61" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="731e6c76f791aeae360d7e9d1bba362f67bebb10" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f0d5dfe47ee47a6c8fcf451b69ea00c9b38abb55" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53c7551ca601af348069eff11a70d23a98d061a0" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21f102c92e68bd321fc1d43075bfa004a33e63e6" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a08e12a43365b0b4268796a6e99d3b08720328e0" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ffd92629d8923c24bd12161c9c776deff246be4c" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0c5db9e4f39e2c1ec45bf759c6cc12540e5268c3" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db14ef72a6c8c03c1903b5d73320b170d5527f48" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a87c786204af024c22ee4407637d1a10a4c40e48" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8c0abf5105e87ab77680f74efba2ad4522a5326a" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="891deb8d1005874c318fc5c16db5826aee3cf097" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1211e5492566b738f130bddbaa23610232217871" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c61e5c08a95199734cc0999354a2bb075faf9b22" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="62be6fa2642a0d20be32fdf9c192311835d89814" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dfdb3cf8ab76a95326b017537bbe61e3b1b591ac" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b51f77079bcfd3d3bc741d4b7ee337b2f5221739" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2c56f704707a0fa82ad81bc568bd43f4b34bfae3" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ed5d88ab2942036d19a435f3c76ba5acfd57c9f9" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf56783887217c2ae60bfc0836b3ab3c17cc6b98" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9afc9f60763c1b88af86955db7655df96307ef40" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="852d8d95fb508409bf0a0ecafa0f6d926c2fb53c" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="060c8873b06940144c50b2fd5a0a51c91a41742d" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa6285c76a27c30d0612f758a82ab362ea162993" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="78f3ecd1b0098e1e26ccb1dab7ffb1b5c5a655b2" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4457c5eb1755d3e275f0ef7aeb41395d5d4ac832" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37c95cec7093105e2ee581883410843420c984ce" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b5f01c980828f09716e639f44b45740b01b7835e" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0bade24e272eb3e10353ff6261d3c4dc2c5041f0" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e278ed9f9f2bf967587e3c39d1d326e9bd59838a" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="290d07a0e834c4e8cb45454d219148a302de662e" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a00f2d236da13a982000a6dbcde6fd434af7d758" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="768b1f2ccc8051a8c41d7aabb06115db42987418" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0e64dfd5dc55791ead86b450a56891f8569afcce" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bb2fc75838fba0621f0924cf59a51d8b1a85b9ca" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b773c2f83c51454c4534242894b1d0d84008b6a6" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e739c712b4097dcc4ca9cb68cc90980e396cb180" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1583f28296665a9d03084b818e3908bb65c7ff96" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="85d636148c70266a7ffa0f7f415604d27bc4987c" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9bc5fc8436c785c3c6ce2e792ee90cd5c4e1dd80" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4f4e41cd389fdf93c21897d5e048db01b4357592" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7039b10c049a9ab5a7f473efc06569d1345d70b3" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="77502f86068c8ec45ab5c43eaa7a294310602d30" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="719df88dd0edf6f11f6e4d37eec7295bb49011c6" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9412a79eb3c1c1af18293c55fed34ca86e984094" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9167ba122ebd48dde4c17cbd3c4f14c7b08bc8c4" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be6ef2ae8cf4a4d7bad9c51bb9c39cd2b147261c" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6fb0c3003dda65afc4bd79fab4e58e0c1b42825e" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e06e72a3f588f34a28d852fd3d801db5009ba4c" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f943ee0f29e2b6e6bb35bb73f9250aad1ba7abce" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9de41aa426d0449e3933e9ac29a65aad50d6adbd" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0a24fbd1e92350dd94a95d8fbee6f0512915d621" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8b5f389d65fced2831caf6950b7fe8669230de66" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a4ecfd3d12c1074bd432fa3a0d06c923caa0031f" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f97c63cf997de3be1b47da1a4017900ae0b3b0d4" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bd90b676d895def26b76170bfa28c05f10b02580" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b7ac1d2e08b97415e74c3682473092befc9e708f" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e1a588b9fde1e7f9d7275edd028ef499d207d68e" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1cb6c91e7df572d0bb042249eb524c244d7ac753" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3baf82bd3457720c44f15ec4a131f0f0a9ed9e42" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="770adbfad9874da9ccf6d15f29e58f154cacf3de" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a00228c033b6b023273826ec71105f311c88130e" translate="yes" xml:space="preserve">
          <source>def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def segmentoLongitud ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;from&quot;&gt;de: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f28b7bf8f4da8f9965f64059a0f13f0dd02d59d9" translate="yes" xml:space="preserve">
          <source>def self: &lt;span name=&quot;java.lang.ref.Reference&quot;&gt;java.lang.ref.Reference&lt;/span&gt;[_ &amp;lt;: &lt;span name=&quot;scala.ref.PhantomReference.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def self: &lt;span name=&quot;java.lang.ref.Reference&quot;&gt;java.lang.ref.Reference&lt;/span&gt; [_ &amp;lt;: &lt;span name=&quot;scala.ref.PhantomReference.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9825953140156bc88f67dca13ab4d02cf510e99e" translate="yes" xml:space="preserve">
          <source>def self: &lt;span name=&quot;java.lang.ref.Reference&quot;&gt;java.lang.ref.Reference&lt;/span&gt;[_ &amp;lt;: &lt;span name=&quot;scala.ref.ReferenceWrapper.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def self: &lt;span name=&quot;java.lang.ref.Reference&quot;&gt;java.lang.ref.Reference&lt;/span&gt; [_ &amp;lt;: &lt;span name=&quot;scala.ref.ReferenceWrapper.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f8db47fa581c8c3ecbdf4736dcef72003f669d8c" translate="yes" xml:space="preserve">
          <source>def self: &lt;span name=&quot;java.lang.ref.Reference&quot;&gt;java.lang.ref.Reference&lt;/span&gt;[_ &amp;lt;: &lt;span name=&quot;scala.ref.SoftReference.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def self: &lt;span name=&quot;java.lang.ref.Reference&quot;&gt;java.lang.ref.Reference&lt;/span&gt; [_ &amp;lt;: &lt;span name=&quot;scala.ref.SoftReference.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6bc0955f1ecb73c76cfc3a0ec8c217824b8b34e4" translate="yes" xml:space="preserve">
          <source>def self: &lt;span name=&quot;java.lang.ref.Reference&quot;&gt;java.lang.ref.Reference&lt;/span&gt;[_ &amp;lt;: &lt;span name=&quot;scala.ref.WeakReference.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def self: &lt;span name=&quot;java.lang.ref.Reference&quot;&gt;java.lang.ref.Reference&lt;/span&gt; [_ &amp;lt;: &lt;span name=&quot;scala.ref.WeakReference.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="941f453464a59d96acd6c5de26617fe2b1735791" translate="yes" xml:space="preserve">
          <source>def seqHash(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[_]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def seqHash ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [_]&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2e2b632a2ab3929a53ba0df216641b6274cb1879" translate="yes" xml:space="preserve">
          <source>def setBit(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</source>
          <target state="translated">def setBit ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c411bde9420034adef5a725e5bd4f8815b6849b" translate="yes" xml:space="preserve">
          <source>def setCharAt(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;ch&quot;&gt;ch: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;.this.type</source>
          <target state="translated">def setCharAt ( &lt;span name=&quot;index&quot;&gt;&amp;iacute;ndice: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;ch&quot;&gt;ch: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="15d64e5cc2e4609ab27df68ad26248aab441ce26" translate="yes" xml:space="preserve">
          <source>def setContextClassLoader(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.lang.ClassLoader&quot;&gt;ClassLoader&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def setContextClassLoader ( &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.lang.ClassLoader&quot;&gt;ClassLoader&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="571a2326ed4186e8430b24a28c8bf78d4ace8d79" translate="yes" xml:space="preserve">
          <source>def setErrDirect(&lt;span name=&quot;err&quot;&gt;err: &lt;span name=&quot;java.io.PrintStream&quot;&gt;PrintStream&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def setErrDirect ( &lt;span name=&quot;err&quot;&gt;err: &lt;span name=&quot;java.io.PrintStream&quot;&gt;PrintStream&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0dd2a32a736ac6d66dab205bfbca8c29f43ea5c8" translate="yes" xml:space="preserve">
          <source>def setHash(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../collection/set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[_]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def setHash ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../collection/set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [_]&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a1c7fc3ee22de2011f3601751dec83c0de686cab" translate="yes" xml:space="preserve">
          <source>def setInDirect(&lt;span name=&quot;in&quot;&gt;in: &lt;span name=&quot;java.io.BufferedReader&quot;&gt;BufferedReader&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def setInDirect ( &lt;span name=&quot;in&quot;&gt;en: &lt;span name=&quot;java.io.BufferedReader&quot;&gt;BufferedReader&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d555c98ffe290bd32457c995fe98ae3ba1b48c5" translate="yes" xml:space="preserve">
          <source>def setLength(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def setLength ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf69ac2832821637c952121d37209fba358da748" translate="yes" xml:space="preserve">
          <source>def setOutDirect(&lt;span name=&quot;out&quot;&gt;out: &lt;span name=&quot;java.io.PrintStream&quot;&gt;PrintStream&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def setOutDirect ( &lt;span name=&quot;out&quot;&gt;salida: &lt;span name=&quot;java.io.PrintStream&quot;&gt;PrintStream&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b49bfec9ba41ee713f86509b305ec9c79eb1821f" translate="yes" xml:space="preserve">
          <source>def setProp(&lt;span name=&quot;name&quot;&gt;name: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</source>
          <target state="translated">def setProp ( &lt;span name=&quot;name&quot;&gt;nombre: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;value&quot;&gt;valor: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="99843a0b8594e4e49553b44adf899a40cb73871d" translate="yes" xml:space="preserve">
          <source>def setScale(&lt;span name=&quot;scale&quot;&gt;scale: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def setScale ( &lt;span name=&quot;scale&quot;&gt;escala: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="788b98ed01810aae9fda1c854fb2666facea07d0" translate="yes" xml:space="preserve">
          <source>def setScale(&lt;span name=&quot;scale&quot;&gt;scale: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;mode&quot;&gt;mode: &lt;a href=&quot;bigdecimal%24%24roundingmode%24#RoundingMode=scala.math.BigDecimal.RoundingMode.Value&quot; id=&quot;scala.math.BigDecimal.RoundingMode.RoundingMode&quot; name=&quot;scala.math.BigDecimal.RoundingMode.RoundingMode&quot;&gt;RoundingMode&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def setScale ( &lt;span name=&quot;scale&quot;&gt;escala: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;mode&quot;&gt;modo: &lt;a href=&quot;bigdecimal%24%24roundingmode%24#RoundingMode=scala.math.BigDecimal.RoundingMode.Value&quot; id=&quot;scala.math.BigDecimal.RoundingMode.RoundingMode&quot; name=&quot;scala.math.BigDecimal.RoundingMode.RoundingMode&quot;&gt;RoundingMode&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="13417d12136005b35cb4c08215195590e738ab9a" translate="yes" xml:space="preserve">
          <source>def setSeed(&lt;span name=&quot;seed&quot;&gt;seed: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def setSeed ( &lt;span name=&quot;seed&quot;&gt;semilla: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6440bbb9893e81d9400daaa588b727cf06e46389" translate="yes" xml:space="preserve">
          <source>def setStackTrace(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;java.lang.StackTraceElement&quot;&gt;StackTraceElement&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def setStackTrace ( &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;java.lang.StackTraceElement&quot;&gt;StackTraceElement&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="66d6d1e2b5340ea4ec932ac784b71c2318cd5780" translate="yes" xml:space="preserve">
          <source>def setStackTrace(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;java.lang.StackTraceElement&quot;&gt;StackTraceElement&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def setStackTrace ( &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;java.lang.StackTraceElement&quot;&gt;StackTraceElement&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f0c223a836782425311687a85d849696d483294" translate="yes" xml:space="preserve">
          <source>def setUncaughtExceptionHandler(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.lang.Thread.UncaughtExceptionHandler&quot;&gt;UncaughtExceptionHandler&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def setUncaughtExceptionHandler ( &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.lang.Thread.UncaughtExceptionHandler&quot;&gt;UncaughtExceptionHandler&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a025a5f5460d41c1cd0e4bceac3e768e6f331c67" translate="yes" xml:space="preserve">
          <source>def shortValue(): &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;</source>
          <target state="translated">def shortValue (): &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Corto&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d2cab36a8cbe0532a25fe9fd59be4e85d06c55ab" translate="yes" xml:space="preserve">
          <source>def shortValue(): &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;</source>
          <target state="translated">def shortValue (): &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Corto&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a6bff3ef0c4be14d6c930c10967c9530de73f16c" translate="yes" xml:space="preserve">
          <source>def shortValue: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;</source>
          <target state="translated">def shortValue: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Corto&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d83d2aed5410d0dedb2973baead81be4c08f7056" translate="yes" xml:space="preserve">
          <source>def shortValue: &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;</source>
          <target state="translated">def shortValue: &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Corto&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7bdcae6bfef1984c77ac954168287a5a678ccf47" translate="yes" xml:space="preserve">
          <source>def shouldRethrow(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def shouldRethrow ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f68844094e98471a163579dc90403a7fcceb4200" translate="yes" xml:space="preserve">
          <source>def shuffle[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../index#IterableOnce%5B+A%5D=scala.collection.IterableOnce%5BA%5D&quot; id=&quot;scala.IterableOnce&quot; name=&quot;scala.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.util.Random.shuffle.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;bf&quot;&gt;bf: &lt;a href=&quot;../collection/buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;span name=&quot;scala.util.Random.shuffle.xs&quot;&gt;xs&lt;/span&gt;.type, &lt;span name=&quot;scala.util.Random.shuffle.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.util.Random.shuffle.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.util.Random.shuffle.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def shuffle [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../index#IterableOnce%5B+A%5D=scala.collection.IterableOnce%5BA%5D&quot; id=&quot;scala.IterableOnce&quot; name=&quot;scala.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.util.Random.shuffle.T&quot;&gt;T&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;bf&quot;&gt;bf&lt;a href=&quot;../collection/buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.util.Random.shuffle.xs&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.util.Random.shuffle.T&quot;&gt;&lt;/span&gt;&lt;span name=&quot;scala.util.Random.shuffle.C&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;bf&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;bf&quot;&gt;BuildFrom&lt;/span&gt;&lt;span name=&quot;bf&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;bf&quot;&gt;&lt;span name=&quot;scala.util.Random.shuffle.xs&quot;&gt;xs &lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;bf&quot;&gt;.type&lt;/span&gt;&lt;span name=&quot;bf&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;bf&quot;&gt;&lt;span name=&quot;scala.util.Random.shuffle.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;bf&quot;&gt; , &lt;/span&gt;&lt;span name=&quot;bf&quot;&gt;&lt;span name=&quot;scala.util.Random.shuffle.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;bf&quot;&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.util.Random.shuffle.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="35acfa31efc390a6d9f5691cf884fa855ee1a9fc" translate="yes" xml:space="preserve">
          <source>def sign(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</source>
          <target state="translated">signo def ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c04411eede039a7542a3c00c263a79ae80ecfebd" translate="yes" xml:space="preserve">
          <source>def sign(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="translated">signo def ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="48fbd8aca7176220a282b6c7f5c34856ee86b82a" translate="yes" xml:space="preserve">
          <source>def sign(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">signo def ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="02e1d822e2c1300d3555ef30bb53909db68e55c2" translate="yes" xml:space="preserve">
          <source>def sign(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="translated">signo def ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dae696549ae620ef221786b1997475ca77261f7c" translate="yes" xml:space="preserve">
          <source>def sign(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">signo def ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="38d763dad045c410a6a9b8a9016353343a8539c7" translate="yes" xml:space="preserve">
          <source>def sign(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">signo def ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;largo&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;largo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec709fe50981d437ad45b25956fbcf3a0a51c8c6" translate="yes" xml:space="preserve">
          <source>def sign(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;</source>
          <target state="translated">signo def ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;corto&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;corto&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fd975f7120e8877748bfe8013be7cbd794b535d9" translate="yes" xml:space="preserve">
          <source>def sign(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">signo def ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5462551a942e48758400c148e85e222b5ba96452" translate="yes" xml:space="preserve">
          <source>def sign(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</source>
          <target state="translated">signo def ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="edae56d189bd09effb1f90827218ac93cdadc020" translate="yes" xml:space="preserve">
          <source>def sign(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">signo def ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b7a627da3d3053210230a580f521e7557326e090" translate="yes" xml:space="preserve">
          <source>def sign(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">signo def ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="78b837310355566012acf8df54b98d7f3474aceb" translate="yes" xml:space="preserve">
          <source>def sign(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">signo def ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f34fa088a8404fab06c93ef93d4041758fe210f3" translate="yes" xml:space="preserve">
          <source>def sign: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">signo def: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="feec5967d16682ff88eae602c464508ee80c52dc" translate="yes" xml:space="preserve">
          <source>def sign: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</source>
          <target state="translated">signo def: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="388381c22afdacd842a4594aba18a96d232c7b24" translate="yes" xml:space="preserve">
          <source>def sign: &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</source>
          <target state="translated">signo def: &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="86f7d28181762ec6a5ac5782f686a150d8c0d55f" translate="yes" xml:space="preserve">
          <source>def sign: &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="translated">signo def: &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a28b33d11c179d8ba5b2b760cea6dba2c41735d" translate="yes" xml:space="preserve">
          <source>def sign: &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">signo def: &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9cf022cde8e7fdd6efcce5a60dd38baa8767ec25" translate="yes" xml:space="preserve">
          <source>def sign: &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="translated">signo def: &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;flotar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ed5dcbdbf680b001edebb6548014663e9c35fcf8" translate="yes" xml:space="preserve">
          <source>def sign: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">signo def: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="75039af839275790fa37842a676460a44ed4f58b" translate="yes" xml:space="preserve">
          <source>def sign: &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">signo def: &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;largo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eeda2f2f40920e8cff4ac7deacce925b9eb9285e" translate="yes" xml:space="preserve">
          <source>def sign: &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;</source>
          <target state="translated">signo def: &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Corto&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="55432bc65235f7713c7c79991b9ed38dd77b4539" translate="yes" xml:space="preserve">
          <source>def sign: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">signo def: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8498a70bb06935e92a75c21f70500036e8c8ba9e" translate="yes" xml:space="preserve">
          <source>def sign: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">signo def: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c88f6f8a9e480d91f2f42c99d36f45d7943d9509" translate="yes" xml:space="preserve">
          <source>def sign: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">signo def: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d0452cdd4f49ecabb3e2ca380ffe6623c0e8776d" translate="yes" xml:space="preserve">
          <source>def signum(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def signum ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ed05a56fc7910c0774c16b2b9f25aee260a1815c" translate="yes" xml:space="preserve">
          <source>def signum(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def signum ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="752b1182eade98ce67d7758a23a7f02ca744b8ea" translate="yes" xml:space="preserve">
          <source>def signum(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def signum ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c362072ec1a127dc65921ef32457bb688219892d" translate="yes" xml:space="preserve">
          <source>def signum(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="translated">def signum ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="40cc7897e94c5f0fb145f737e59ddcd588d745e1" translate="yes" xml:space="preserve">
          <source>def signum(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def signum ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ae20a72782bdbaa97332e3383f37f8456f8c175" translate="yes" xml:space="preserve">
          <source>def signum(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def signum ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="72340a62843b340186bf28dac3151ad1ed28f6a1" translate="yes" xml:space="preserve">
          <source>def signum(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def signum ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="631b2e7d248fb0ba7a9060aae46193cf7336a11b" translate="yes" xml:space="preserve">
          <source>def signum(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def signum ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c5c21f0c0b793dae8c93a7af72fff0487addd64" translate="yes" xml:space="preserve">
          <source>def signum: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def signum: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="edc76ab09aeda2880c995e4db98ae949a2a86de3" translate="yes" xml:space="preserve">
          <source>def sin(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def sin ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4722537110339e8b1df7cf1e67b6c0fa8d07259c" translate="yes" xml:space="preserve">
          <source>def singleType[&lt;span name=&quot;T&quot;&gt;T &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;value&quot;&gt;value: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[&lt;span name=&quot;scala.reflect.ClassManifestFactory.singleType.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def singleType [ &lt;span name=&quot;T&quot;&gt;T &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;value&quot;&gt;valor: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifiesto&lt;/a&gt; [ &lt;span name=&quot;scala.reflect.ClassManifestFactory.singleType.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7d3d894327738d37dadc018bafb1412a08f31071" translate="yes" xml:space="preserve">
          <source>def singleType[&lt;span name=&quot;T&quot;&gt;T &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;value&quot;&gt;value: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[&lt;span name=&quot;scala.reflect.Manifest.singleType.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def singleType [ &lt;span name=&quot;T&quot;&gt;T &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;value&quot;&gt;valor: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifiesto&lt;/a&gt; [ &lt;span name=&quot;scala.reflect.Manifest.singleType.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0c88dffccb4d61204042ed9f60df2de5a8f5e144" translate="yes" xml:space="preserve">
          <source>def singleType[&lt;span name=&quot;T&quot;&gt;T &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;value&quot;&gt;value: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[&lt;span name=&quot;scala.reflect.ManifestFactory.singleType.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def singleType [ &lt;span name=&quot;T&quot;&gt;T &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;value&quot;&gt;valor: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifiesto&lt;/a&gt; [ &lt;span name=&quot;scala.reflect.ManifestFactory.singleType.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fe0c328374481b273c069c81866e7dce352bf475" translate="yes" xml:space="preserve">
          <source>def single[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.Iterable.single.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.single.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def single [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.Iterable.single.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterable.single.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fdb5b37886c1f2b462a18b21ec04ae6bb72f6293" translate="yes" xml:space="preserve">
          <source>def single[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.Iterator.single.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.single.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def single [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.Iterator.single.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.single.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1c3bb3c2478b78a4bbff1b52a0b7474d0a7aa6e5" translate="yes" xml:space="preserve">
          <source>def singleton[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.immutable.IntMap.singleton.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.singleton.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def singleton [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;value&quot;&gt;valor: &lt;span name=&quot;scala.collection.immutable.IntMap.singleton.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IntMap.singleton.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dd876b3d67a47e9b8ba875c9b52f999c602d7d06" translate="yes" xml:space="preserve">
          <source>def singleton[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.immutable.LongMap.singleton.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.singleton.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def singleton [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;value&quot;&gt;valor: &lt;span name=&quot;scala.collection.immutable.LongMap.singleton.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LongMap.singleton.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bac7b1d34f0b277d594df505f560f6c73d64b0e9" translate="yes" xml:space="preserve">
          <source>def sinh(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def sinh ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b63358fc8e3175e7dea90471476d23925f5f135" translate="yes" xml:space="preserve">
          <source>def size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eaaf50d5e6bd5a00c8844a70b4521f018788b136" translate="yes" xml:space="preserve">
          <source>def size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c5a248ba957e0572adc3721303a10e4183c85d63" translate="yes" xml:space="preserve">
          <source>def size: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def tama&amp;ntilde;o: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21d602110011ca5e4c9c005ad83142bfd2152b9c" translate="yes" xml:space="preserve">
          <source>def sizeCompare(&lt;span name=&quot;otherSize&quot;&gt;otherSize: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def sizeCompare ( &lt;span name=&quot;otherSize&quot;&gt;otherSize: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7db88679ba8325b718fd1eab4c2af41404412340" translate="yes" xml:space="preserve">
          <source>def sizeCompare(&lt;span name=&quot;otherSize&quot;&gt;otherSize: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def sizeCompare ( &lt;span name=&quot;otherSize&quot;&gt;otherSize: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="503fdceef44d124da42d0030a2c6ca7dddd424fc" translate="yes" xml:space="preserve">
          <source>def sizeCompare(&lt;span name=&quot;otherSize&quot;&gt;otherSize: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def sizeCompare ( &lt;span name=&quot;otherSize&quot;&gt;otherSize: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="07bc4e50d7d0b62ff50f35028fd0bb6374470f99" translate="yes" xml:space="preserve">
          <source>def sizeCompare(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[_]&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def sizeCompare ( &lt;span name=&quot;that&quot;&gt;que: &lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;colecci&amp;oacute;n.Iterable&lt;/a&gt; [_]&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0f89a000bfdc625e014c2a7358795b5efc15a402" translate="yes" xml:space="preserve">
          <source>def sizeCompare(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[_]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def sizeCompare ( &lt;span name=&quot;that&quot;&gt;que: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [_]&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d35f61087936d40b18f7b5b86a4d381024b7a1ff" translate="yes" xml:space="preserve">
          <source>def sizeCompare(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[_]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def sizeCompare ( &lt;span name=&quot;that&quot;&gt;que: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;colecci&amp;oacute;n.Iterable&lt;/a&gt; [_]&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="718699e431df3e23c3c8fe9a63f5bb846487aa27" translate="yes" xml:space="preserve">
          <source>def sizeCompare(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[_]&lt;/span&gt;): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def sizeCompare ( &lt;span name=&quot;that&quot;&gt;que: &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;colecci&amp;oacute;n.Iterable&lt;/a&gt; [_]&lt;/span&gt; ): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="90ff6187b415278e9c319a7684adc430264df66f" translate="yes" xml:space="preserve">
          <source>def sizeCompare(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[_]&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def sizeCompare ( &lt;span name=&quot;that&quot;&gt;que: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [_]&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0a331721dbc438556527ad15a5905fa454953308" translate="yes" xml:space="preserve">
          <source>def sizeHint(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def sizeHint ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0c0445af13ba5b3643154821f44c520803e6b08e" translate="yes" xml:space="preserve">
          <source>def sizeHint(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def sizeHint ( &lt;span name=&quot;size&quot;&gt;tama&amp;ntilde;o: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea18a43245454b84fee240023b7a0868e3bfa16c" translate="yes" xml:space="preserve">
          <source>def sizeIs: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def sizeIs: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3a7f2c909d8ccf515ea9449ef6c678fd9d23d306" translate="yes" xml:space="preserve">
          <source>def sizeIs: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def sizeIs: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="49f3bc61a0901d78c2e0e3c095e68b28f060f232" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="translated">def slice ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="12299d5231d9235b6bc6684bad6fd5ca7e213b3a" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b6cae5d7bf316986b3f74e1f6c71c0eaaf7a30dc" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="43fa8143457a31b100302371937c2837ac0d3723" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def slice ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3430c95f2e39f6b0c6c72dee00fd298926cbdcb4" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;colecci&amp;oacute;n.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="53382e00e2c2b7a02d511d5c867bb23a3d06fff4" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8eb2efc6359aa91cb39a5504c2a7b676d565e69c" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="24d617bf23cb492c9fe6f2e3e8f445b02c357a9e" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="846a8f848f75c888625a24929ec2a1fa16ef04d8" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="ab67bcb70591477c957ae5ce3418a99a7f1aaf5c" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="7a70f9653e32962f270c388c5ac385a02144cc8c" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="76f0e281cc745dde43395d7fe10de06f05fe67a4" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="c6e9a13c7e2e2700ebd28cef8c13e71cf25ab9a8" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="da7ad26ca0332fe3a126b42eef43f40b319ec334" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="1dbdde2c3d40e0ea7a944b7a80981bb172c6d36c" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="01656c82e6faec97bc96edf0a7aac1671d03bad1" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="e61d63a44ae0269af8d7ea3ad871ffcb9f932645" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="9f1d8dca72098eba9a1c7ebbc9ab1f02128573a6" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="afe38a0a5a162e3117cd4f5765d353386de60e47" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3d6f7e20511481b2236c8d37439df935665b5485" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="9917320f53934c30ce264c793e7ca8173e476df3" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="6ca987c9bded4a394ce7d8173c20707de6d36bc8" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="36de9e04fcb544cede631cc74f7021cd8ad42795" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="f93cb3f788ef62a0f3eb55eb32929ddf8c09e6ad" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="8a7ce89ef9031bd4331644c296dca1e3c80f85ee" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="0443cfa53d1866adc2bd1cbb3ca14c520b59821e" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="56dc9ee9ea64b6991d65327e1a6e5ccdfc5db1cd" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="94c5b59ced48a173103f005980e61b8f952be32b" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="00cfe536d5ce5ab7d5d001a6fbc1a177956c7bf5" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c18998531d7ee8b03b8d49cd08ac0252ff57609d" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1cea9c7525ac365d2abf7c65c0058e8a70293f5f" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7178e11e907765c4a7224354984a8c664f5b56ee" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a2cc98fda415e35bfa815d76f4770e3970e1f07d" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3eae92e8467dc8394723e9c84cc87fca0bc9b584" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e910fc802082487347bbdfd44097b00670404f3b" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8899abfa93379f165900185da7b32dd5ef1b1bcf" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="50212d48b1fb8a564c6471fdafd70cc32caabc97" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="436f31b79f4388af30c8e0832151e3ae6f6167be" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3164e08e49c2e46822ae22a5bd84bf2dee5b1bc7" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6348d8652c7573968bdd1f9d82bb3bdcccc997b6" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="073974c51153919f4653bec017191b7d9c1eeaf0" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6f58150d2201cb3b55b5f12c693aefc28a770f72" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f0f405822fdd44df6a1533c89d892a7200687c53" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0cccf2558a7636a83fb8abc583773b38cd9b61c1" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b260c62f11cfa10284c0ca77c3fe9d7339f47c70" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9db2c7e6e93ab13cb0db9982731e8ec8d04bf2cc" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c54a256a51ed0ee1da0573f336c1491c3ccdf590" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="86e1a60a089b6c46de884aa9d0119c8a772a829b" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="23101ee9961d30dfc2a69678d2d4540514aee389" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bb530ab4529d9d5fe9009edb86f3f85972ad4711" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5a7ffa28559a9dec4f7818c3dca8066265a0210c" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ecbd458434e8f1b3cad25f310476e8b9f0f7728b" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4d85a94aaa7855dcc74d553efe45b35faafb5e2f" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="382f12be38ea513823453e77584562bc0f98afa5" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Lista&lt;/a&gt; [ &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nada&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="f5d2405d9cbd219a9303c3d63387069373b2236f" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Lista&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="09bfc7daa33fb369ad85005da83e343f2198207d" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Lista&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ce12358e1a63c2c0e6188edc42b598ae73034a9e" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8c15573e15406a1a7b569c4ac94f4e3cd362d581" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f90b2750f0703582439fe648cead269d4401c85a" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6bfec815f16a75efb9ef2ad1c840aa869f9b0973" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8fe47d3da99e03b92941dd1dbb2bc5f7be4c42fa" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="93c4f9d15943462b879616110e4f474eeb93e1aa" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="35c120250d1931fb58e25bc45e87d23c13d73473" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1b6213ffadd4e1f8ba545265e643ea5a0ee2785d" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cc74e787d79fadca72eddf5db98683b5ea0c6b60" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c7065cc4bf8fe4905a96fa7fb0513089d1596029" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8d157a842540402f2e6ef8b8fd8f246e8658fbbc" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c04f6968c544f2daa52fbeddd63c793d57cf201b" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8573c009148e5095e37c5e3ffd9ddf9d37b7f809" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="73dfa1e17e78f676676680b2e382a3cc7607f36b" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d205f0eb1ab223b18c84ed3385005c097e2bb017" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def slice ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="2ff02133cfb767a2295b3aa773c30b4a3d9be764" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.immutable.Map.WithDefault&quot; name=&quot;scala.collection.immutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.immutable.Map.WithDefault&quot; name=&quot;scala.collection.immutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="99d4dcdd0fddad876f6698be61d372196fb947a1" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.mutable.Map.WithDefault&quot; name=&quot;scala.collection.mutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.mutable.Map.WithDefault&quot; name=&quot;scala.collection.mutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="896ccf0119feffc47d73beb98d6b933a26132488" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="616d4554d4f483f898db1f2dc937b237d4c2f654" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f531d1413f789c30838b7720ecd6a04a741ceefa" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Cola&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="49dba4dd468793b782dfa0bfd910a71db1c51f47" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Cola&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ae8c759c4b323b690bafb282db7fd2b553759684" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3953ec8d69ddcdbd5225839bffbc297bf6c5d2e8" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="17a10b9f99b1e842bef7ee02faa2542a5ded43fe" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="37ff3a92a5e8460bb720d63ea8cde4578dbd584e" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c87458529cdbd02e89e8cefd73ccae57fddcad53" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e7a56c6779cc7ca1e903b6262619bfb2b56795fe" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f9c4391a4b16fc52ec64c8820e487eeb6cc63222" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d659b35dedfb6de7e7c0dff18fa4fc2b7cbdedf0" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="de40385afe8ee2ad930a463f973045135648ff4b" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d8175a0ad4cd84794753bcdec35647e33af4a10e" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a98b56c6ed1210f3de6f1d8c6757cdae66ce132b" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="49f9ab9027731b0c88edd5ad2268d1e12d6c9b88" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a5f9b598b9d80fd5acfd7b2f521589d2bd68591f" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d5e580dd132c1f99b648412d2689d1a85a0fad66" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0e6ad46228c37e597044070638e70951de1fa83e" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b6d5a620fbb51594d63b4aaf9eb70b8fcc3733b9" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5c978e2d4b21c6eb86f205c2b2448af5e68f1c3b" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ff19c948799509175aa14afc3480bca99102c732" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.immutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.immutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.immutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.immutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d423d4f4ec79aacfb68451bf96a643bd78b7a52a" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.mutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.mutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.mutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.mutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6c06b542bc81535d006c0ae24cfcc56638adb0f2" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bbd37ac7191e040ec3f47e49444524d809d7e252" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="91c1686bb01b7409ac5754879a7cfbb4dc9eb3f6" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7dc90f209c5049a3f6bf2dd0a7a86507648b3365" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Pila&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e3e67a48107ac9b2c557389b6a34ea6bfb6bb140" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Transmitir&lt;/a&gt; [ &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nada&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="71f901e2dfb67d68a7c116909c055e32abe12543" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="834537f822c7b6a5259471d45f057db2caef60d5" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2299ff7fcaa712590356d22c43b45300b29d0a55" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="332b2a728dca6483f5447d256e270dff797902e3" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6aa16ff698c3a8c51234bcbc588970ee6cf57a24" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dce3f44e0aa397e13cbea677d007d0a647adbe88" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="56c820b798fac5c4897e4d40c7df38e881ca1489" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def slice ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="575dd39c89e926fa404eef17355d64d91216eaca" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def slice ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="51de2314120df78d1e9e9732eea6be6815793581" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d6cca2a8a80c029aac6213a2a5203e09ab213498" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="176259a6e780a1d0b47df2dc65272ac648b8b09a" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="637c74c0c5a7c9432dc0fda4b953a45767c258c3" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bbe725f6f8699547ffb6fbf1749a119b30445ab6" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9fc2d7095b31943fcc00b079db8f97a0868e1f3f" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;</source>
          <target state="translated">def slice ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a14de2dd017b6c072f911338ea07690c0afe9022" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def slice ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7aee31e744e5eaf7a4c0e7a33bbae5beebc50086" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def slice ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a294583f6ad61a0f987f590b8e94b84923916647" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.MapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def slice ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.MapOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="53a572d99e4f20256fa3ef34535e3cd586793eed" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def slice ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SeqOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d0bc17b7d2977b7b780ac4220383a46bb30deff9" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def slice ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SetOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d862d56212189abcf303b4efe9302ee278c11cd2" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def slice ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3e234a98ddd9c92570feeb9b37eec3cb9d052ddc" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def slice ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="835296cd67582ce67f67abc5204010a455014181" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def slice ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f80221a0f1e0ded1edf099a710edbabdfb6d371b" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def slice ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8be1472a7bddd667cd04e49ebf82a8b3fb0e8987" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def slice ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="58d8f4e7bb664f845687247d51dd87b973eb7570" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def slice ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cfed28782ec46f67920f8a88eff6128183e4148c" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def slice ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="df2accdaac0979364e4b2e1aa8755b22888654ce" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def slice ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b2b6bd6a092b1a91b1f375a47feae3c76dd3b02f" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def slice ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="56e3f1d98a4077a6544d0d87ba561a1e72755615" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.MapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def slice ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.MapOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="61efab2ccd5faf7caf0f33925f9f8ba2a185eebc" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def slice ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SeqOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8f73d9de43210fab0707789b88b3b22d100ca016" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def slice ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="84ac11390ae2f5e93d7b3ec2d67df16cc2d88b8c" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def slice ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e375e79752145b754d029d537314739bd5633ab8" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def slice ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="242c7e518a2fb7df1e36b1e60316975252bf77e5" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="12f7eb53e42cf4107e6a046918ef07622d3e7098" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;colecci&amp;oacute;n.Iterador&lt;/a&gt; [ &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="8bb636e13c6ab0abefe2e19980e884b2dc68132f" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="translated">def slice ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="62198e31c78c0b414bbd70097017bd01dbfb7c52" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../collection/mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="c657ec0d4e859b677e8d6dd792518ffd591b070d" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;colecci&amp;oacute;n.mutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3ba71b4dfa465e76a95249bff492882d6a952dcd" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="259fbd9351b462bb85f17a3e432f5628e9781b29" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e2dfe7a8a8b32c3aa2a0cc15a42b22ece1d5be3f" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de7500019c7cca3fd79e880bb5f3159e5f8ab751" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;</source>
          <target state="translated">def slice ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f7c8681083a426e1751a0ee236a9fd8cc610a414" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a6a4109c70f00858ae0c7e525f649fb552ca72cc" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="245762904e5ebdec9e9381eba6b5448bd6e24d92" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2cfb45be8f87f7fba880e6e5e81351a2e569fe42" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="29a6470e4d0d95cbbe94be29ed9c2c8ec5e59674" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7f4cd6f1aa576395600425f242fc9b4b690c9d5d" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1d1fde241b179287cc131ff791d6b997562e5039" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="337b40f4aed7bd79f4afbb5ed421dadc17a4748c" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="92734a014da77346152167a6bc6ee16f002e0db4" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fa42c9bac9f18ea173bbad2575fb82009df68eff" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4519d548269d19ce3093e4938e22201b16462eee" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="83495c1801aba99e08404799f2a79a261cb9465d" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e643424ab1d587b79e63c049a5b22ba473c0e535" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="33377b013c17d41ed11f43d2619dac466bf165e6" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5d42e20d2e3d3454649c956253021e107d5b421f" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d46b14f3ded6ab8057792858297db346838677c9" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;</source>
          <target state="translated">def slice ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c42d636f989367e1a291260092913ba76304ea28" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5b1030b5cb3bd13602da16b6539520e91b779116" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d96ed3a16640af417358e113f46f885c93ecc985" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;inmutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="49f10b0a464b597623d6e1fb6bfccf967a5717df" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4ed9439789d96374a096d67741b162fd3ef501cc" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="12c2c7b18addaf90b4f60353dd5dc6efa0457e49" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d659a7f08884019853d55b12527ceb6c00a24a9f" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d7623668eac27064fc7b832b63b6085aeabe3864" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;</source>
          <target state="translated">def slice ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="358f1733ba287d440a9032afade1d3781f8b2848" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3ab289183de411ac099bbd28f5f1c11eff8bfd27" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f13fa13b92047427d999e10c502528bbeb7d54fb" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Mapa&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b91ecad65b88a9e07accfef67015475c34f05647" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e7b77fc30b54a1a361e334911af18b254444dd7f" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4d9e0ae87e5602599450de838c13cbaba17890f0" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.SeqMap&quot; name=&quot;scala.collection.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.SeqMap&quot; name=&quot;scala.collection.SeqMap&quot;&gt;SeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ba95e7bb40f0132ac348c3992af4be87a0001688" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e26bf806ee43e3b8fd15853c0de8e818baf26454" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c915ad08780b20fcd4d7de88cf873d16c75605cc" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b3cbd1d2f5bf6a1aae66019e0433d854faef8ecf" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.SortedMap&quot; name=&quot;scala.collection.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.SortedMap&quot; name=&quot;scala.collection.SortedMap&quot;&gt;SortedMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8fe1bc6221dc65523c38b6ef29d2299d06c39311" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f47fcada407139d0556b2d769591ea3f9bbba301" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="337f28e0a891b6058e611b3c9ccc6ae016f65569" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="1ec458e130cf827d384723b95b5495af49cb3e55" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="da603801e90ffdc78a899b3df329e5035f5ab404" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="49e378efbe97662a082b54b07509d822135b8d3c" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="2584bfa67bbb8d2e65a481108dcb8889119dc7c5" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="8af6fa995700136f4a1ba8e308b102ce02e8c58f" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="3d8425f91b2698952d5a16ea7de54799b8cb22ee" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="9b49ddab84b7acbb31ea53cf8c93b629c1a1e629" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="b2401a8d7f13927f8d3fb673355b579e532d36de" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="e152d47bcdb7135a3f6fd0776939c6bc00cd763f" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="cd300bcfdd22f8397b32706168134eafa065ed24" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="6f6d412cc59d543458d9ebadc4dbc9add7674864" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="01d2cafa892b3e09ac8d86fd2ff5bffbbfeae61e" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [( &lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; )]</target>
        </trans-unit>
        <trans-unit id="300f66331c7e82461094f13e68f0bf2028d6b8b7" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nada&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="c88d92f94e14ade53f8db4792aeb1eda714cfb5d" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="17311008973b8ae30a7affc517cdcc6f8056804f" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2ca6a51e66a4a0ce5ebdc6bb751aa9a9de916c34" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ed1f1714b27358252c2fc06076ba033ac3ffb15b" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5da6b9524f305795468dbd6c4b630e15f3ccc608" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="47e36c215fe578f1e9fec1828107a9e65e6b8ab1" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="65d305ad1b5e686a3fa868d20d1fde04d1471e1a" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="83fa26a07e65c21719b2728c645566650ba59237" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="036bab180f3dbf93df64a3196d8966b1f544ace6" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="06973ff05b8538c7fe283728227d0bededa4736b" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6321ab7834f8fb664528071d8b470f4fb87032b4" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3be7a6258c4b31ef93608fa90f8da3e1bddb09dd" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d742e100c23246fce9b4f4cd4d3796b0e66d73bd" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="96184dc989035482af90818a0ce23d02d119eb9a" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d7f55772818537dde4e5bdfbc67cc077a1998b3a" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1d9819fd2ecb2696b20fadc50683816dab4fb568" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1a3168a043e6a5533fbb3c693b6bfbb11e8b5162" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f0cf10b40514bed8934774406feb7afcb8ddd47b" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f282fd33c439286f5eb2e8860dc0659ef9fcc707" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="036d0aa3ebb090b05a931ea4a0fd71d2440f402a" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1c6c993ba4499c8c05c09b574fd996e83a0be279" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="98510f5a51844a31e5483d28e98d848b7ae1c8c6" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a453bbb623550e281077f61c9c1786fab7dda854" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5780e29f668565603c0e1913ec7fd1e3412c9a16" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9bc2f997b2a5ca286a40ead6e99351f0e7dfc95c" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5d47d9e6d372ef0e082188f579ee4aa3c3577182" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="48fa185244c4e0fdf081665753630eba0c42fcd7" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2f90290511e47af4667f6764a2c9d9f98dc26eac" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ea71fa8306c4a8417a8a11d9fe0aba22876337c8" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="22b62550ddc6982b83ced256b339b15960d89ac0" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9873300dd41ec8e2c5c67a0ef51f9918093aed2d" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2c46d3711ab0e8cc02fd1ed009b6cc387460473c" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d9a1e86116f9e968168e2a44d884f39b398b38bb" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d5afccbe568bdce7ff73a12dc716451c1896d34e" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="55557b63779c9523fd706c338267f623108b208c" translate="yes" xml:space="preserve">
          <source>def slice(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def segmento ( &lt;span name=&quot;from&quot;&gt;desde: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;until&quot;&gt;hasta: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
