<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="scala">
    <body>
      <group id="scala">
        <trans-unit id="717bb2a0a5543d60ad282d5685bdda43c8aacf78" translate="yes" xml:space="preserve">
          <source>def addOne(&lt;span name=&quot;elem&quot;&gt;elem: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofunit&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofUnit&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofUnit&quot;&gt;ofUnit&lt;/a&gt;.this.type</source>
          <target state="translated">def addOne ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arraybuilder%24%24ofunit&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofUnit&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofUnit&quot;&gt;ofUnit&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="eb4c582f9d625aaa6c3d8e2467deca381580abca" translate="yes" xml:space="preserve">
          <source>def addOne(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.VectorBuilder.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;vectorbuilder&quot; id=&quot;scala.collection.immutable.VectorBuilder&quot; name=&quot;scala.collection.immutable.VectorBuilder&quot;&gt;VectorBuilder&lt;/a&gt;.this.type</source>
          <target state="translated">def addOne ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.VectorBuilder.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;vectorbuilder&quot; id=&quot;scala.collection.immutable.VectorBuilder&quot; name=&quot;scala.collection.immutable.VectorBuilder&quot;&gt;VectorBuilder&lt;/a&gt; .este.tipo</target>
        </trans-unit>
        <trans-unit id="6045f1d864b87c8ffddc8fc77f45d784cc51d579" translate="yes" xml:space="preserve">
          <source>def addOne(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;.this.type</source>
          <target state="translated">def addOne ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; .este.tipo</target>
        </trans-unit>
        <trans-unit id="9e5976e9a5bf0357ac9d2589d11ab378aa8aeb30" translate="yes" xml:space="preserve">
          <source>def addOne(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.ArrayBuilder.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofref&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofRef&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofRef&quot;&gt;ofRef&lt;/a&gt;.this.type</source>
          <target state="translated">def addOne ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.ArrayBuilder.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arraybuilder%24%24ofref&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofRef&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofRef&quot;&gt;ofRef&lt;/a&gt; .este.tipo</target>
        </trans-unit>
        <trans-unit id="8c58d57750873592418276797d379647cd81056a" translate="yes" xml:space="preserve">
          <source>def addOne(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;.this.type</source>
          <target state="translated">def addOne ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; .este.tipo</target>
        </trans-unit>
        <trans-unit id="4fe383f9e3839c72c0e13a31de2178874f043cd1" translate="yes" xml:space="preserve">
          <source>def addOne(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.GrowableBuilder.Elem&quot;&gt;Elem&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;growablebuilder&quot; id=&quot;scala.collection.mutable.GrowableBuilder&quot; name=&quot;scala.collection.mutable.GrowableBuilder&quot;&gt;GrowableBuilder&lt;/a&gt;.this.type</source>
          <target state="translated">def addOne ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.GrowableBuilder.Elem&quot;&gt;Elem&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;growablebuilder&quot; id=&quot;scala.collection.mutable.GrowableBuilder&quot; name=&quot;scala.collection.mutable.GrowableBuilder&quot;&gt;GrowableBuilder&lt;/a&gt; .este.tipo</target>
        </trans-unit>
        <trans-unit id="2ef46bf05fe334dda29db511a1c9ff2d9d3b4733" translate="yes" xml:space="preserve">
          <source>def addOne(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;.this.type</source>
          <target state="translated">def addOne ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; .este.tipo</target>
        </trans-unit>
        <trans-unit id="d4aaa6683584cd8f7d4d37f10abf39beb3140eb7" translate="yes" xml:space="preserve">
          <source>def addOne(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;.this.type</source>
          <target state="translated">def addOne ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="07ff01f061000c2da35104abff833ac45bd2eb23" translate="yes" xml:space="preserve">
          <source>def addOne(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt;.this.type</source>
          <target state="translated">def addOne ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt; .este.tipo</target>
        </trans-unit>
        <trans-unit id="65e2f2faa24e1b67aeccc3fcecd7868c1429f8cc" translate="yes" xml:space="preserve">
          <source>def addOne(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;.this.type</source>
          <target state="translated">def addOne ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Cola&lt;/a&gt; .este.tipo</target>
        </trans-unit>
        <trans-unit id="46ed317974ddc99b741fd4d832f03f5eeac52caa" translate="yes" xml:space="preserve">
          <source>def addOne(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;.this.type</source>
          <target state="translated">def addOne ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Pila&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="95c42e8bc16c9c289af542a4751967a7ec27e69b" translate="yes" xml:space="preserve">
          <source>def addOne(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;.this.type</source>
          <target state="translated">def addOne ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="f89cee4cc74f2e298e18ec00ce649bc2708a7264" translate="yes" xml:space="preserve">
          <source>def addOne(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;.this.type</source>
          <target state="translated">def addOne ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; .este.tipo</target>
        </trans-unit>
        <trans-unit id="2636d43aa0ed9b8a05117bf4b571bbb18e312c25" translate="yes" xml:space="preserve">
          <source>def addOne(&lt;span name=&quot;entry&quot;&gt;entry: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.LongMapBuilder.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;longmap%24%24longmapbuilder&quot; id=&quot;scala.collection.mutable.LongMap.LongMapBuilder&quot; name=&quot;scala.collection.mutable.LongMap.LongMapBuilder&quot;&gt;LongMapBuilder&lt;/a&gt;.this.type</source>
          <target state="translated">def addOne ( &lt;span name=&quot;entry&quot;&gt;entrada: ( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.collection.mutable.LongMap.LongMapBuilder.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ): &lt;a href=&quot;longmap%24%24longmapbuilder&quot; id=&quot;scala.collection.mutable.LongMap.LongMapBuilder&quot; name=&quot;scala.collection.mutable.LongMap.LongMapBuilder&quot;&gt;LongMapBuilder&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="01bf51a2dfdb287f15b2a1c624aae08ad9d47c49" translate="yes" xml:space="preserve">
          <source>def addOne(&lt;span name=&quot;entry&quot;&gt;entry: (&lt;span name=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;anyrefmap%24%24anyrefmapbuilder&quot; id=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder&quot; name=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder&quot;&gt;AnyRefMapBuilder&lt;/a&gt;.this.type</source>
          <target state="translated">def addOne ( &lt;span name=&quot;entry&quot;&gt;entrada: ( &lt;span name=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ): &lt;a href=&quot;anyrefmap%24%24anyrefmapbuilder&quot; id=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder&quot; name=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder&quot;&gt;AnyRefMapBuilder&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="7d8d9ca125ccc47551f1f1aa557892d65222e781" translate="yes" xml:space="preserve">
          <source>def addOne(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Builder.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Builder.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;treeseqmap%24%24builder&quot; id=&quot;scala.collection.immutable.TreeSeqMap.Builder&quot; name=&quot;scala.collection.immutable.TreeSeqMap.Builder&quot;&gt;Builder&lt;/a&gt;.this.type</source>
          <target state="translated">def addOne ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Builder.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;value&quot;&gt;valor: &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Builder.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;treeseqmap%24%24builder&quot; id=&quot;scala.collection.immutable.TreeSeqMap.Builder&quot; name=&quot;scala.collection.immutable.TreeSeqMap.Builder&quot;&gt;Constructor&lt;/a&gt; .este.tipo</target>
        </trans-unit>
        <trans-unit id="baa179806f6c1f3b03d090098a4623d31a510d4f" translate="yes" xml:space="preserve">
          <source>def addOne(&lt;span name=&quot;kv&quot;&gt;kv: (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)&lt;/span&gt;): &lt;a href=&quot;systemproperties&quot; id=&quot;scala.sys.SystemProperties&quot; name=&quot;scala.sys.SystemProperties&quot;&gt;SystemProperties&lt;/a&gt;.this.type</source>
          <target state="translated">def addOne ( &lt;span name=&quot;kv&quot;&gt;kv: ( &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; )&lt;/span&gt; ): &lt;a href=&quot;systemproperties&quot; id=&quot;scala.sys.SystemProperties&quot; name=&quot;scala.sys.SystemProperties&quot;&gt;SystemProperties&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="25419963c0e738ac61461e5f3b706638277a54b2" translate="yes" xml:space="preserve">
          <source>def addOne(&lt;span name=&quot;kv&quot;&gt;kv: (&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt;.this.type</source>
          <target state="translated">def addOne ( &lt;span name=&quot;kv&quot;&gt;kv: ( &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ): &lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt; .este.tipo</target>
        </trans-unit>
        <trans-unit id="442689d183ad5e8087f3908849ac366adb656c35" translate="yes" xml:space="preserve">
          <source>def addOne(&lt;span name=&quot;kv&quot;&gt;kv: (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;.this.type</source>
          <target state="translated">def addOne ( &lt;span name=&quot;kv&quot;&gt;kv: ( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ): &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt; .este.tipo</target>
        </trans-unit>
        <trans-unit id="475f6523640d2f176f92143dedc845f47aced61c" translate="yes" xml:space="preserve">
          <source>def addOne(&lt;span name=&quot;kv&quot;&gt;kv: (&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt;.this.type</source>
          <target state="translated">def addOne ( &lt;span name=&quot;kv&quot;&gt;kv: ( &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt; )&lt;/span&gt; ): &lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt; .este.tipo</target>
        </trans-unit>
        <trans-unit id="9ac7fb30eda312fe8a64071bea95211be1ed3eff" translate="yes" xml:space="preserve">
          <source>def addOne(&lt;span name=&quot;kv&quot;&gt;kv: (&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt;.this.type</source>
          <target state="translated">def addOne ( &lt;span name=&quot;kv&quot;&gt;kv: ( &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ): &lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt; .este.tipo</target>
        </trans-unit>
        <trans-unit id="1c711e1b4d22b167549cec4e1100b47e1cacf291" translate="yes" xml:space="preserve">
          <source>def addOne(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;.this.type</source>
          <target state="translated">def addOne ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="c8cda0705601cf6a791a89938b503cbc83ecc812" translate="yes" xml:space="preserve">
          <source>def addShutdownHook(&lt;span name=&quot;body&quot;&gt;body: =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;shutdownhookthread&quot; id=&quot;scala.sys.ShutdownHookThread&quot; name=&quot;scala.sys.ShutdownHookThread&quot;&gt;ShutdownHookThread&lt;/a&gt;</source>
          <target state="translated">def addShutdownHook ( &lt;span name=&quot;body&quot;&gt;cuerpo: =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;shutdownhookthread&quot; id=&quot;scala.sys.ShutdownHookThread&quot; name=&quot;scala.sys.ShutdownHookThread&quot;&gt;ShutdownHookThread&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f21e40faeb2d470fb733ac3c53b5f0987e750d0" translate="yes" xml:space="preserve">
          <source>def addString(&lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;../../collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;</source>
          <target state="translated">def addString ( &lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;../../collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;colecci&amp;oacute;n.mutable.StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e5a6dd8c113fb4baa45ec7e377a24c06c201db2c" translate="yes" xml:space="preserve">
          <source>def addString(&lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;../collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;</source>
          <target state="translated">def addString ( &lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;../collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;colecci&amp;oacute;n.mutable.StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c343db540f823eb1471ad778e6f03e6fdb071890" translate="yes" xml:space="preserve">
          <source>def addString(&lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;../mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;</source>
          <target state="translated">def addString ( &lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;../mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d8d562aa087427f35c7e5776ce3110fccbf013b6" translate="yes" xml:space="preserve">
          <source>def addString(&lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;</source>
          <target state="translated">def addString ( &lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;colecci&amp;oacute;n.mutable.StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9918aaab9b6f2f5535a248a6cf08828cb7fc619e" translate="yes" xml:space="preserve">
          <source>def addString(&lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;</source>
          <target state="translated">def addString ( &lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d68ccfe2372bc6992fabb6d2c8843b06ad277fd2" translate="yes" xml:space="preserve">
          <source>def addString(&lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def addString ( &lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f81d40e8e873fe03d8ecc34467fbf569e340bbf9" translate="yes" xml:space="preserve">
          <source>def addString(&lt;span name=&quot;sb&quot;&gt;sb: &lt;a href=&quot;../../index#StringBuilder=StringBuilder&quot; id=&quot;scala.StringBuilder&quot; name=&quot;scala.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../index#StringBuilder=StringBuilder&quot; id=&quot;scala.StringBuilder&quot; name=&quot;scala.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def addString ( &lt;span name=&quot;sb&quot;&gt;sb: &lt;a href=&quot;../../index#StringBuilder=StringBuilder&quot; id=&quot;scala.StringBuilder&quot; name=&quot;scala.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../index#StringBuilder=StringBuilder&quot; id=&quot;scala.StringBuilder&quot; name=&quot;scala.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e7ee6c2435eb5a84276d9d6bbb9d62efcb39d930" translate="yes" xml:space="preserve">
          <source>def addString(&lt;span name=&quot;sb&quot;&gt;sb: &lt;a href=&quot;../collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;</source>
          <target state="translated">def addString ( &lt;span name=&quot;sb&quot;&gt;sb: &lt;a href=&quot;../collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;colecci&amp;oacute;n.mutable.StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c89458d835aea3fa74bf421506fe0fcab2c48cb6" translate="yes" xml:space="preserve">
          <source>def addString(&lt;span name=&quot;sb&quot;&gt;sb: &lt;a href=&quot;../mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;</source>
          <target state="translated">def addString ( &lt;span name=&quot;sb&quot;&gt;sb: &lt;a href=&quot;../mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb9a9226c96e4517f28c420b9ed15894098e265f" translate="yes" xml:space="preserve">
          <source>def addString(&lt;span name=&quot;sb&quot;&gt;sb: &lt;a href=&quot;mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;</source>
          <target state="translated">def addString ( &lt;span name=&quot;sb&quot;&gt;sb: &lt;a href=&quot;mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="435d1dbb5e5cd200fbe235681f2f4de0429f2c2d" translate="yes" xml:space="preserve">
          <source>def addString(&lt;span name=&quot;sb&quot;&gt;sb: &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def addString ( &lt;span name=&quot;sb&quot;&gt;sb: &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e823dfece62b535d7d730c043204983f667e2fa1" translate="yes" xml:space="preserve">
          <source>def adder: &lt;span name=&quot;java.util.function.ObjDoubleConsumer&quot;&gt;ObjDoubleConsumer&lt;/span&gt;[&lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;]</source>
          <target state="translated">def sumador: &lt;span name=&quot;java.util.function.ObjDoubleConsumer&quot;&gt;ObjDoubleConsumer&lt;/span&gt; [ &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="c236dbbbb77794179c79e2f49884a9c0acb113f5" translate="yes" xml:space="preserve">
          <source>def adder: &lt;span name=&quot;java.util.function.ObjIntConsumer&quot;&gt;ObjIntConsumer&lt;/span&gt;[&lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;]</source>
          <target state="translated">def sumador: &lt;span name=&quot;java.util.function.ObjIntConsumer&quot;&gt;ObjIntConsumer&lt;/span&gt; [ &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="97e4918f3bb74374f38eed64df47e471eb7f7968" translate="yes" xml:space="preserve">
          <source>def adder: &lt;span name=&quot;java.util.function.ObjLongConsumer&quot;&gt;ObjLongConsumer&lt;/span&gt;[&lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;]</source>
          <target state="translated">def sumador: &lt;span name=&quot;java.util.function.ObjLongConsumer&quot;&gt;ObjLongConsumer&lt;/span&gt; [ &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="ab7a3aadab3bd7d47cf182e7daa21f1b011f1e80" translate="yes" xml:space="preserve">
          <source>def adder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;span name=&quot;java.util.function.BiConsumer&quot;&gt;BiConsumer&lt;/span&gt;[&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.adder.A&quot;&gt;A&lt;/span&gt;], &lt;span name=&quot;scala.jdk.AnyAccumulator.adder.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def sumador [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ]: &lt;span name=&quot;java.util.function.BiConsumer&quot;&gt;BiConsumer&lt;/span&gt; [ &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.AnyAccumulator.adder.A&quot;&gt;A&lt;/span&gt; ], &lt;span name=&quot;scala.jdk.AnyAccumulator.adder.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="464d833edbcc829994913729db51bfb0de20bb1c" translate="yes" xml:space="preserve">
          <source>def after(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;java.lang.CharSequence&quot;&gt;CharSequence&lt;/span&gt;</source>
          <target state="translated">def despu&amp;eacute;s de ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;java.lang.CharSequence&quot;&gt;CharSequence&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c1deaf09a92e1a53fd4bb290281a0aee9d6301e8" translate="yes" xml:space="preserve">
          <source>def after: &lt;span name=&quot;java.lang.CharSequence&quot;&gt;CharSequence&lt;/span&gt;</source>
          <target state="translated">def despu&amp;eacute;s de: &lt;span name=&quot;java.lang.CharSequence&quot;&gt;CharSequence&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e03b13e7281007106abfaf69b3003c8985a13d32" translate="yes" xml:space="preserve">
          <source>def allThreads(): &lt;a href=&quot;../index#IndexedSeq%5B+A%5D=IndexedSeq%5BA%5D&quot; id=&quot;scala.IndexedSeq&quot; name=&quot;scala.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;java.lang.Thread&quot;&gt;Thread&lt;/span&gt;]</source>
          <target state="translated">def allThreads (): &lt;a href=&quot;../index#IndexedSeq%5B+A%5D=IndexedSeq%5BA%5D&quot; id=&quot;scala.IndexedSeq&quot; name=&quot;scala.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;java.lang.Thread&quot;&gt;Thread&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6201affdd9c757ba7742404abd2751c0ddd5287e" translate="yes" xml:space="preserve">
          <source>def alphanumeric: &lt;a href=&quot;../collection/immutable/lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;collection.immutable.LazyList&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="translated">def alfanum&amp;eacute;rico: &lt;a href=&quot;../collection/immutable/lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;colecci&amp;oacute;n.immutable.LazyList&lt;/a&gt; [ &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="0749b615372b81a3c318b9e138f07d3e7d9c0b9c" translate="yes" xml:space="preserve">
          <source>def anchored: &lt;a href=&quot;regex&quot; id=&quot;scala.util.matching.Regex&quot; name=&quot;scala.util.matching.Regex&quot;&gt;Regex&lt;/a&gt;</source>
          <target state="translated">def anclado: &lt;a href=&quot;regex&quot; id=&quot;scala.util.matching.Regex&quot; name=&quot;scala.util.matching.Regex&quot;&gt;Regex&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ad9b51bdb7aba1b17cadb8097bbafaa2b1bbca3a" translate="yes" xml:space="preserve">
          <source>def and(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.BiPredicate&quot;&gt;BiPredicate&lt;/span&gt;[_ &amp;gt;: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.T&quot;&gt;T&lt;/span&gt; &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;, _ &amp;gt;: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.U&quot;&gt;U&lt;/span&gt; &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.function.BiPredicate&quot;&gt;BiPredicate&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="translated">def y ( &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.BiPredicate&quot;&gt;BiPredicate&lt;/span&gt; [_&amp;gt;: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.T&quot;&gt;T&lt;/span&gt; &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt; , _&amp;gt;: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.U&quot;&gt;U&lt;/span&gt; &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt; ]&lt;/span&gt; ): &lt;span name=&quot;java.util.function.BiPredicate&quot;&gt;BiPredicate&lt;/span&gt; [ &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.U&quot;&gt;U&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c7922c14ae8278c90b9982cfed940f655978ca43" translate="yes" xml:space="preserve">
          <source>def and(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.DoublePredicate&quot;&gt;DoublePredicate&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.DoublePredicate&quot;&gt;DoublePredicate&lt;/span&gt;</source>
          <target state="translated">def y ( &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.DoublePredicate&quot;&gt;DoublePredicate&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;java.util.function.DoublePredicate&quot;&gt;DoublePredicate&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1e5cb0e5a74c53f9321370d6efb64c76bf34c44d" translate="yes" xml:space="preserve">
          <source>def and(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.IntPredicate&quot;&gt;IntPredicate&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.IntPredicate&quot;&gt;IntPredicate&lt;/span&gt;</source>
          <target state="translated">def y ( &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.IntPredicate&quot;&gt;IntPredicate&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;java.util.function.IntPredicate&quot;&gt;IntPredicate&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4981dfc37906eb84a7c5245cc7aba2348d5272bc" translate="yes" xml:space="preserve">
          <source>def and(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.LongPredicate&quot;&gt;LongPredicate&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.LongPredicate&quot;&gt;LongPredicate&lt;/span&gt;</source>
          <target state="translated">def y ( &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.LongPredicate&quot;&gt;LongPredicate&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;java.util.function.LongPredicate&quot;&gt;LongPredicate&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="204bfce3e8037390c1c69277f8ca4f3cc4769205" translate="yes" xml:space="preserve">
          <source>def and(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.Predicate&quot;&gt;Predicate&lt;/span&gt;[_ &amp;gt;: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaPredicate.T&quot;&gt;T&lt;/span&gt; &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.function.Predicate&quot;&gt;Predicate&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaPredicate.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def y ( &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.Predicate&quot;&gt;Predicado&lt;/span&gt; [_&amp;gt;: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaPredicate.T&quot;&gt;T&lt;/span&gt; &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt; ]&lt;/span&gt; ): &lt;span name=&quot;java.util.function.Predicate&quot;&gt;Predicado&lt;/span&gt; [ &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaPredicate.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="947a3ccb3a968b214830be51ecc45d45e9d7c276" translate="yes" xml:space="preserve">
          <source>def and(&lt;span name=&quot;other&quot;&gt;other: =&amp;gt; &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;exception%24%24finally&quot; id=&quot;scala.util.control.Exception.Finally&quot; name=&quot;scala.util.control.Exception.Finally&quot;&gt;Finally&lt;/a&gt;</source>
          <target state="translated">def y ( &lt;span name=&quot;other&quot;&gt;otro: =&amp;gt; &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;exception%24%24finally&quot; id=&quot;scala.util.control.Exception.Finally&quot; name=&quot;scala.util.control.Exception.Finally&quot;&gt;Finalmente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6af85ab73f783704ae08fc16f7644e0987e8720" translate="yes" xml:space="preserve">
          <source>def andFinally(&lt;span name=&quot;body&quot;&gt;body: =&amp;gt; &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;Catch&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.Catch.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def y Finalmente ( &lt;span name=&quot;body&quot;&gt;cuerpo: =&amp;gt; &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;Atrapa&lt;/a&gt; [ &lt;span name=&quot;scala.util.control.Exception.Catch.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b9bdc8b9c90c03c6dd378e0e8c9273652b371bca" translate="yes" xml:space="preserve">
          <source>def andThen(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.BiConsumer&quot;&gt;BiConsumer&lt;/span&gt;[_ &amp;gt;: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer.T&quot;&gt;T&lt;/span&gt; &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;, _ &amp;gt;: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer.U&quot;&gt;U&lt;/span&gt; &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.function.BiConsumer&quot;&gt;BiConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="translated">def yThen ( &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.BiConsumer&quot;&gt;BiConsumer&lt;/span&gt; [_&amp;gt;: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer.T&quot;&gt;T&lt;/span&gt; &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt; , _&amp;gt;: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer.U&quot;&gt;U&lt;/span&gt; &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt; ]&lt;/span&gt; ): &lt;span name=&quot;java.util.function.BiConsumer&quot;&gt;BiConsumer&lt;/span&gt; [ &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer.U&quot;&gt;U&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="13a5d89517685063ac8b387133c6c15cc88b11d1" translate="yes" xml:space="preserve">
          <source>def andThen(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.Consumer&quot;&gt;Consumer&lt;/span&gt;[_ &amp;gt;: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaConsumer.T&quot;&gt;T&lt;/span&gt; &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.function.Consumer&quot;&gt;Consumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def y Luego ( &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.Consumer&quot;&gt;Consumidor&lt;/span&gt; [_&amp;gt;: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaConsumer.T&quot;&gt;T&lt;/span&gt; &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt; ]&lt;/span&gt; ): &lt;span name=&quot;java.util.function.Consumer&quot;&gt;Consumidor&lt;/span&gt; [ &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaConsumer.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="81f2cdaf5d999d47455f2a5d701a3b21fc8731c5" translate="yes" xml:space="preserve">
          <source>def andThen(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.DoubleConsumer&quot;&gt;DoubleConsumer&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.DoubleConsumer&quot;&gt;DoubleConsumer&lt;/span&gt;</source>
          <target state="translated">def y Luego ( &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.DoubleConsumer&quot;&gt;DoubleConsumer&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;java.util.function.DoubleConsumer&quot;&gt;DoubleConsumer&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="03d36e90c7340c8d702e37a4ca27134092f06f35" translate="yes" xml:space="preserve">
          <source>def andThen(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.DoubleUnaryOperator&quot;&gt;DoubleUnaryOperator&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.DoubleUnaryOperator&quot;&gt;DoubleUnaryOperator&lt;/span&gt;</source>
          <target state="translated">def y Luego ( &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.DoubleUnaryOperator&quot;&gt;DoubleUnaryOperator&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;java.util.function.DoubleUnaryOperator&quot;&gt;DoubleUnaryOperator&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cb3bb5347efa6a742f39fdd65f9155a408fdd91c" translate="yes" xml:space="preserve">
          <source>def andThen(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.IntConsumer&quot;&gt;IntConsumer&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.IntConsumer&quot;&gt;IntConsumer&lt;/span&gt;</source>
          <target state="translated">def yThen ( &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.IntConsumer&quot;&gt;IntConsumer&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;java.util.function.IntConsumer&quot;&gt;IntConsumer&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4e2f636ce61ece5f91461ff448bd2cdb72c9cb4c" translate="yes" xml:space="preserve">
          <source>def andThen(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.IntUnaryOperator&quot;&gt;IntUnaryOperator&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.IntUnaryOperator&quot;&gt;IntUnaryOperator&lt;/span&gt;</source>
          <target state="translated">def y Luego ( &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.IntUnaryOperator&quot;&gt;IntUnaryOperator&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;java.util.function.IntUnaryOperator&quot;&gt;IntUnaryOperator&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b4ea2931dfeccacb4c6027cc36f6b8cb94bfac16" translate="yes" xml:space="preserve">
          <source>def andThen(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.LongConsumer&quot;&gt;LongConsumer&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.LongConsumer&quot;&gt;LongConsumer&lt;/span&gt;</source>
          <target state="translated">def y Luego ( &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.LongConsumer&quot;&gt;LongConsumer&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;java.util.function.LongConsumer&quot;&gt;LongConsumer&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="410f9d0cc8213b451100c631e5269e9f28064272" translate="yes" xml:space="preserve">
          <source>def andThen(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.LongUnaryOperator&quot;&gt;LongUnaryOperator&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.LongUnaryOperator&quot;&gt;LongUnaryOperator&lt;/span&gt;</source>
          <target state="translated">def y Luego ( &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.LongUnaryOperator&quot;&gt;LongUnaryOperator&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;java.util.function.LongUnaryOperator&quot;&gt;LongUnaryOperator&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2d13efb98916097df2de8b286934f59a23090c19" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="06c2ed2642b3954477876b7c5e6e19f9b362b9c2" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3d1d76af89a9301601162805c6f3511f7930ffcc" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8fc4e45d5691478ade2111b1e57d1a635ac87127" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e0b8199b38411db71eb366049d60a7ffc4cdc169" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ad9e305ddd708ce2a448a592e36981c63f355b61" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cf2d89cfa4cea3c47146ad05576e3ae1af28f5ea" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fa85c8b8199fb943c100c51e8192ec0e4a427ed9" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e199fd67410311d17792a5d8c5ade699b6712a74" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bf408c2a1eac4f091b9a721b943659db04a2cd07" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e5fae8a2a4e2262dd4c36a0b52c4a6abfc2cddbf" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0ab9e6096b3417e9558c1cf5bbc808c5869600fb" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5be451c55e24df80dd15471bea9bacb6c028add2" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="aed6a26204e91ff008389984b80746ae8442ed63" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b59580ffcfe6dc790be24941b5cf474c1747d617" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="50886b3ff29d06a6e4fe46ff8de1683bc5ee3980" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="da4555810dc3d5af65cda0d470be48c065e0631a" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6c94e11290c8014013ff295f49fd979761f05570" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d9e184ae68b399d7c123bb5b46b89f776017b4f6" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dee7c242929b5c53d0b6f2dc15fdeaec3dd04c39" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d790a22ed2e7d5d047d4ac23cc03454d21df9a95" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ed96e5f60aeefc5f9d37b6a3ecf037880322f22a" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="91d8a0ee0cc44c7d55beb68ad36ca783effa825a" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="93ab6a448e035521bca638b789898ee666f792ca" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2215678cb38ab6cf181cb7a3451e63d3d822b6e3" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6b115db1686770a882ea3a4e353bafd3ca1cb11d" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cc8d237e171aa2f7eebe9ca5260e34dab49845dc" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="991d43658dbfd50d33d3d30d41b2c66a597ee0e6" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f3a3283309251e9c7c2c2babf3915582158a2d3f" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="745cf3d2a5da74af24ad3493a4608d4c015c011b" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="35af0fade8b6f1c0383e2dfc7f9c550e11ec17a0" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7a2f4e4c029be43e283e636b8bb51c4a2b1d0913" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bcd46f4990b63139ee16c9b44187d6ea6bbe352a" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="704f0e17a8a58df3623a5394cac0650617cb4b6a" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c6e3e1586c57cfc47256a346b879d8a0b583e748" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="24d5d159d05831666cb782681005c18ec42ea94c" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="84048855333dd5e1668e36a4df219697dc1f0f53" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="02d07c2b5671cff7d887ead61190efa94cdd2041" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="06f6c41b68e1d1ed1b30f1de3852e4b3e434a88d" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaPredicate.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaPredicate.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b63d94cd9a8cfc5bcb7ba86b4962e0b1ec3f6637" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (A @scala.annotation.unchecked.uncheckedVariance) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): (A @ scala.annotation.unchecked.uncheckedVariance) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f8a5cbf28033ae7bd7386b266abc42b6e6e90ff2" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="91aea312777d6fc68985cb76b0402c9d209f7196" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5699e8f6b8734f7035b5354ca12ac3f4e9b7a9a5" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Largo&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="914647a390f1d38f9f3ed5663b57c55863f3c6be" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleFunction.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f907f066e04b59c732c6c8ea1a32f26a10e01b8a" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3c4c193b31b2965c43aab5bccc6b1982ceacc8ca" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2542cac47ce74671ee1bae7733834c38f2d29206" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4f10f69777c74f434f9c4948c75053aad427af01" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntFunction.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6d673395cfc8cb09739e8e38e0aaba424e08e6e4" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5c28a11e7ca0706c6a491d100b03e71e357be547" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="523d197be142b56011b55601c6cd92aad979eecf" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="af1658aee4749421a98c3ffd76a7808578785706" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongFunction.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="035182faff8f518ea9c76c23b49962cc18d93d51" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2f7ff64852d42aca79dc090296e82fe29d2d00bf" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6577516c620ecd25b630ef74d0a86bd387a4d18d" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Largo&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c4a45b9e901eedb3b2acdd85ac8062021a90ed86" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaConsumer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaConsumer.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="335132991d0e0ec674229ed2b83177a2f437457c" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Valor&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5f7aac0671503c5b9b5ff8e0cdf784a266320908" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;span name=&quot;scala.Function1.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function1.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;span name=&quot;scala.Function1.R&quot;&gt;R&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Function1.T1&quot;&gt;T1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7b20be095afde4551d766fc8f5203e68d94e00f6" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleFunction.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleFunction.R&quot;&gt;R&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8bd817fdd02b16c3d7d5c951950dba81be053815" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaFunction.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaFunction.R&quot;&gt;R&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaFunction.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="be17c32af6ecc8093c879383d9274680859b85b4" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaIntFunction.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaIntFunction.R&quot;&gt;R&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f7ec4845742cc21eb2b6ed959c1c07e6bf051402" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaLongFunction.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaLongFunction.R&quot;&gt;R&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9fe3f5606b9987007caf83abf79bbd7dc40bce2c" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;g&quot;&gt;g: (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;g&quot;&gt;g: ( &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.andThen.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f38af429eae2e1fb4cd3fb6c555600f776c4e1c0" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="541d54cda8e0f6c26df376a0fcd930b331e98d29" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7231c2dc4403bcb880d9650e0642e9486b12165a" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="077337c4465ae1ede246ec32c199a1b6e84ab75e" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c1661f06daca9cab1681903c3583257668d2db06" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4e446816c95ff2056b689de956d37aec9854bb9a" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3d9467687cbf0bf9b0b0c1b66e8d60b7df300861" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="36dd3c6793766ad242cfaa3a92b5017a6c3b81dc" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nada&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c42106385f13a26e6ec9639bb006465e645311f6" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Corto&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bfdc7e556c76e0dea60af63dda0a2d6ccb03ff53" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a4b28cf784def9c04aada77a306a55b206247882" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b110b7643a9688979e5443be0e5ab78743592736" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="627604b87702d92d7a1fae998f69f352bab81fc3" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="027876b176b3a54c9f8c8c9cbfe435d403529469" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4ecf2eb705a6e0942a6fc02a9c1c8eac41edafc5" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt; ]) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="92626f1c08b3bf57ab6031c00bcc57c12d5c01a6" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ef5cce63e5e6e9379e03d9f33bed7767162074fb" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.PartialFunction.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.PartialFunction.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.PartialFunction.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f22339876775a3b5d8e63d6accee0a7579f41514" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f049f583f56dc863b87805661c9d80a7b1425689" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="61e2a9f28f4a26182c99923c2efd85e0bacff304" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b1dd32265385ebce788f02a213ad271038b7d99f" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="01413b76c9e023a8afef299bcf45844be01b6e59" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="713903deca4626923fcfae25c1c27630d7c2c620" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bf4f066027d509d284cbbd4f44e90d881c242e7a" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fa008b4c254b2aa0eebdcd429e442b0547263f17" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="72c0daa58a49202cb83e277ec7533aa923c87190" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0127dcf7e7fa986f6c4e602f2056b8c465bd63e9" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9bb10a677886ce930f1dd1c242c36fe6b328ffa5" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3e5d4ed6bf8d14e9e700f886abb93b6f336b3834" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0e4ce5e19f36d9f173e4fb41e7eaac29825dcf12" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a3b8d46ad975d943841a0e78252d09c4cd51a2d0" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="be3e9291041db53e9fa8b853e2e5c6e1d4198ca9" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5e87fc8ed5ac4de48ad5f8dc5cc5718369104feb" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2209306ab7d716fc24545aaf4be422aa100f8d66" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2487f03607902f68c07201374861dc14e48636ff" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="214ef27891bcb20398abcdee511ffb63d4687f7f" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6e786f843409d630cd4ab8c0efe44dd378bc295a" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1354271ddbefcdfb959aad6c408991ffd8b089d5" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5b16d76bedc935ba9acc719f7d55f3d7a2fd3623" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9d04cf8b7276d598147fa50f3cad2d8462b18411" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e1d103c11107025a504503dc50afec8515104944" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ad105b74cdf870906d879fe9358eba67c528fb63" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="590051b457144c21235c4843c812e208e3a09471" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="217178fb10999f84d5b514167bb4d09fbcea0eaf" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="01c6cdcd35f8026082144be587e8f02debe36a5d" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bf72f02e30c1f53f242da7ae8bb0ee26da7cafa0" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8598e8dd85cffd07704174248e6473560af72baf" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="06d868d7fc2d772ae9d46c07180074ca24b6e796" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="17549e8989c493dd91d3481bf18d196b4ff5a2ea" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7de8e360da2a2f77e3a0d05ac0ec37bbd7f9a406" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="05ebc6ac3f3cf96974ffaee50b2565bea583f401" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="632e547c89c0f122a552e07da88627d6babd3ed5" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6762f370235965c18a0ce736707cb20b9b4faeb2" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c29e18b2da5aa727d851d253568362495a5f22e3" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fba8039feeaefd6717e145a76f1759672b16f1c1" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="aaa1b671ff44640ee0a50d2c8afe9cec27efecb4" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ed18b1044b8bd9c06621fad0708ed104929b3a42" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="adab00cd09e2183436c8f9a43358ffd264c122ee" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c82b2de7f4e689aca412ee780fdb4519461623a7" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="808b268bcf330c265dc69c596bb98cebb25ef529" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0473d09d454498de776f78fd778b73ff4aee9bf5" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a73fa028738f2783c028b12cad8fe7c419689534" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cce285abd795ca415086a3d720b601dd176b7d90" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ebb3b4d1449d2d59b840ac0e03888234f82c1880" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e773dac87760b75bc359d58d4ed110326716436c" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="57ebfcee5080756447b31f83aa339b76cfb5483c" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b4480c3ded4d4551a12bf97301f30cf9a74cb7c9" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2c11c62d911796d9a2e67480b204a62afa2d2914" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1dfda3f4ef92f17264d5ddf3c5be6e4b184c38b7" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b47c5f7e91487a12675b025c89c7d476b13ad7e2" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e18a4701cd080a0c66b28da97f40e97f63153418" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9b65bc6e3dc33782ff3713379090856776fda599" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7b40ecd037ca7c6d746852de089c9ece6b74eaaa" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8bb516966a242e8cfb0ae55c2c58f088f2875ca8" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bd274d3280bd15f0d8f0964736674f9ee341505d" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3c1e3f88cd58006a95a6ce5a8a90ff69345a454d" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e08cc2b1b74ac56a98a5ba446af3697b056f28b4" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5559e8dfeca7b0eb8c68a37494acdc5018933c0c" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="161bbcb30d50aae351cc14be8462f759324c67d9" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="099ddf94b6f439d1d0b64c03f9ddede825dfd05b" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="22caaa807259923b32263969ee694f607156eed0" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4617fd7e3bac2f53455b6ebe20578f69e7011a2e" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9569beff04f16f01ec9495a9358b338f36c5fe23" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="83f9d496e4464297b1687f824cca9224a638fb93" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="959099fe23b7ce9484a14af42c70b66d25741377" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d2d14ed5bacaea347be9e06e299be7ca893b65b9" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="95f35cd63a2f38679bd2beaf96ceedb708233634" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0b61b0edd940ce807b981ff8a219e70aca277b3f" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="29af66afe147b03602c2044b375fa8f670a4f4b6" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b7b6757df919b44889605ef7a507fe7aaaa43682" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e689c4711531f6da51071678a18af2c6d40f1d9c" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7c13571cc245fa35d5e746e88338faffde9d6f16" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c7b5a85402c123b71de721624bf91fd8afb0e580" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="91e1f74d7a4dbb97f5f12c4cf96ecfbb4200c68c" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e6f0f808e48bda88a3dd64f795e3ed097410ed11" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ca516703d4b9bfdc510b0803b7003b3bb68d3ec1" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d0258da0775c524a340d3a149795918beba86e33" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cbbaab9648bf0cbcf17ddaf83af5fbe57dbf744f" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7f68759518381ab6a8ceb2dcecbe3eddb0dfea05" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Valor&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e6840808b9f14c2bf9c4e44138755c26f4cbf073" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1fed976a906ec1bad2353ecf010cad86f6aebac7" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a5b64e512e10ab1d6882241cbbfc842a5ea9f44b" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="605f8f5c976cae3e9763f106623a5b7aba353809" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bb48f053060d2ff5e1837a1b512889242dca8663" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="649c24bb43195602bf16cff5645e8762cc7dec35" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6c3b7a15cec406ad8632e94a8ef8e6ae70b3887b" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b77ad0e29d2e2173c75d8db9dab1e30bb1a2cd7b" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9f758eb5661ed6563bdfbb9c8de9930b16953d11" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7814123b6f1da6060b203567b3a30fdaf748a94f" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;Funci&amp;oacute;n Parcial&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1d5198dc55b31823948766a0d622a8b969a4316c" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="28b33799e70f52ab59327e1c2da0d8dec58e6b8b" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: (&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: ( &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d7e73e0d26a24cb2e6926259c4e8a47ce462b43c" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1ca46c1af53e6cb459a6930ec851be212029f287" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e95a56852b1f9e5a71e6d6d988c6361f4a8f4956" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="af70023e76de7cbe819b602d5739ef0499395260" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="99728844d011995b04bac703bb96dd54d94e4fcd" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b4e39bdecbe6d52d37f26cd3b8e8d6ad5a9b9f06" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6660aae25e165ef030b7634889b5b4df8100a169" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fa9b8109c6a8c215b211d8c132b30a3d01d2b28c" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ff82512a934c2e228766e161748e332612ba0e0c" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e2a4e602a3d53c9513436af4ab11a596f9bcdbb3" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2b8a07030f383f124e94f737d0e96228f245f78e" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;], &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt; ], &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ce44ded699092d2c77a87a350411d0eda16eab93" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cef6e501c16daa433f97dddc5b682451ad7ab46d" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="69ea1aa002ebbe640e6e82792e8abd3176d0c49b" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="79cc1795c11901976540d5f5d9db2dce2acc80d3" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f9dc27dfc8587ee2a5499924abce4fc43445ba1d" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9a5312a67c0ac329b22cb5956cad6f8956a0c2f9" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="90ac1c90b92cf3b15d9bf928f1e177dd4f3a7320" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a5efa8564e8a302dfe564d34b08e7d7599c30062" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="761e0c5f8703fa5dacd9af66404587c2caada4b6" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6212196aba8e1a050e29ec52ab177afe66319ca8" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="769ddc14f57f17481d190685e7442f5174fd9692" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="429c1773193d9552fb36ae0eeea8ad38fa3916b3" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="313deaebcee311d086ad5b22f4e0b9cf68e19e4e" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f8cc4b226f77fb7fc9b9b33f99407bac198bcd38" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="115e786fad4529709fdd3ca0b42fbdfc4cc76222" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a4a2ec7b0fa0be5a38af2672ff84b21ee4e25d28" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="680a1e49fa2d62d1576d834359f96b96dd6215a9" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1a0db989237db6fa173aeb85feef8da08d00824b" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e2a25809f1d0ed96668b714ea4935713ffd96393" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ea8f524a80262f2e4a68e318a2348e54116fdab2" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e305c2f2cbd02067bd0be7dd887e45fd4d320708" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="afdef3f041deb9f806b32623294b372b98740954" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4bb6daba0c3cc38ce91a1851a3ec4b5dea9ce366" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4f248b007e00756cf6b7edb1aa7e62688298939c" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3cd69328b8b62cdbf71de3380e00bb8742c6d2e6" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7697a38b010d9b06a6faa30e508861d581889deb" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="348be6d91c93e7985c80950d4fc49400f484fc23" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7fde1fe856f51dc5d2aed43af727284b5498ce0d" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4646a1b8c2b303e1f60e204879a1c749a01f09db" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b4ba462f9ce44a8a3bd69c32a5a211fcd85fdcdc" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9215c28e9cc8dcf88c0361f77c9b04fb633e4b6b" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0fd62b1297e7bf7df4694e5d633904d101bc2ad3" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f164aafe80be562c3d9f8e1817d8bb52750631f3" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7c6dae5bbeccd62c27716bd2f65eac1b21b83599" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d2628fff74f8a53d325153bc2c25c84705d26cf4" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5a5ad12b31e52ead41ab8b5002d03c37acdd2eba" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b7cedb166ad094933670511ecaec49a690ad092e" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1ebf5f651e23616d61d8bb7cd02686243d2b8640" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ce9a52803f8c9fc0c608b43f9d3c5369bfb58bbe" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="324286699aabc1c41da9328933461411f212767f" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cb5fac94346cec99aaea972910684fbddf496ce5" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2d7f5dbfaa2a18b0bd37c822eb824a8d1cb71ced" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6bf747907a6dca3366d02f0f654a239d537ff410" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="89322497ca0ebdf4770c02314c967c49405cb9e0" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b2ef5774f83144d753a067e1de5d7bc4334f4ced" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="33d8472373a70b62eb43ff6ef5795bc7779544da" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f8f6edb81a7deca3f7ce642f76004a888c7a7432" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ebd3ab0c145470c31690c5c493b2fd122cb398b0" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="daa77e7b2b59c164595f41af800f3372ef4c66ab" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ab960c3e27b4c9dcc249bc08c3d47e277ec13050" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="760f530b255195501732a0b76caa130c94097ebf" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4fb0465ca5d7ea6f765f386d938be22f81832a41" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="72c9f7900390acf2c3dadc05f61d846e0d78b004" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6e91eb2fc16864963587f8682e7276095bfaec7f" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3bfa7a72359a5293ef466d7e85b5a3a416a8042e" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0713a8dbc91e6185f968102cb0511b0b48761c4a" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1a5c8723c87f04ded1c43b2b2c7f3f9e4840fb5e" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c69b7da05786fc9dcda88bef28b09e85bb6ca938" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8e9ff74e09d7f8746d27ae37bea3e1966feaf6f3" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="52cc96775fd5d6646d779ce4b8ea61e90f52b2a2" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="07c20223011f2ec32e2f87babfd1232342c94c9f" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="680dda19bfcdce528741d1f114bca4c389e86cf6" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="425c419731c2bb645b025b2eab9d8eac65c4977c" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="17628c88239e8b959ea012b175224002f35774c4" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="44d73c5ef4cffcda622a2a51813f15667de77bb1" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d8404f4c01ca372e26496917e73bb6a010326058" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="da46faeaea34a06a6ee4aa0dd0ed6bc69bfb14c1" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="073f8359ec82e364a0a688380809745cdc397e81" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3116f03c2df2a297de3fa7d51835d0b73b02e4f6" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8d561f53aa0cd020d6f133a6a1bf5c16c1baa82e" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="71fc4934ed3bedecb26fa6d4d46e727e67681c90" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2d3f49a22b35ac1aa37d66c3299081572a7d3fbd" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fc891ef62fd136da038db78ff3acaa6ed16b0814" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="32daae345c11f4fb308b422c5c47dd0029f5118f" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="030dfca12a93c1792b60c5a1684122783a803043" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c4fa74fdf78da19faf3d66c8a913b78f55f55a5a" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4ecc61cf33a31ac4bde184be1468486313558994" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="529f3e2e75291fb9f3792f0bc7680d000f38cc38" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="86f5b3acda1a3e516e21e6de7f49b043b3fbec81" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f871623173e9955261066eeb53e39f568b778d68" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b6c964b9c7e58de625999afad8b7617ebb91fec0" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7885fa7185ce36d1ea01468e4e97b03b20992325" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="477f6d289197f678da8f7c77c9e1736e8197ee49" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="51e2fcfe3bd21886c68c6c32c83c4c766c75e01f" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6cdf14d4ef8fc17fa6f2d3ec1e5daba0dcbfd2ad" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bebdcdd3386f66fdee069af63d78ef63bc5b5ba7" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="825774ed4de5bcb7c03e0ab53d1d339780013d2e" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cb3467bffe5a3a2312f76b704510d309f3408773" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b844d7664d35ea6877af3d0007f2b85da267cab1" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="91ab8b486b5dd44d08899b5726f623456fd6ceb1" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e352f3cdf200c1b37b10bfc035aab702125c0727" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bf9339ba1a04de1dd0e00a13ed35e738cecc473e" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2eb3f9f33cc09e61606cb4b11f5a0e523ccaf5a0" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4110eef2188daac981d1abcd5d3da662c6a53238" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="16e8d130e9d0d4d3e5c971ec5a6fa502bb81b78d" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="669a8027f9a26c597cca960e2777a22159a946a3" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cd73719d1fd487c2008f4a78afa64c70c3f29c1b" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="494b55566df86eb9b82a52263d730ffe319ebae0" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2669504154c684b8a05469a80d8e8df525c3ca54" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e6b125f547cf7af083fe3da0a873ce9356b2f4a8" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;k&quot;&gt;k: &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.PartialFunction.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.PartialFunction.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="df8fef16db79aae6ba634a868ad0fc013f387111" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;r&quot;&gt;r: (&lt;span name=&quot;scala.&amp;lt;:&amp;lt;.To&quot;&gt;To&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.&amp;lt;:&amp;lt;.From&quot;&gt;From&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.andThen.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;r&quot;&gt;r: ( &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.To&quot;&gt;Hasta&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.From&quot;&gt;Desde&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.andThen.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="98cbb0c23f860ab1650f9da688500482169f105b" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;r&quot;&gt;r: (&lt;span name=&quot;scala.=:=.To&quot;&gt;To&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.=:=.From&quot;&gt;From&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.andThen.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;r&quot;&gt;r: ( &lt;span name=&quot;scala.=:=.To&quot;&gt;Hasta&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.andThen.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.=:=.From&quot;&gt;Desde&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.andThen.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="54afa58f6dca5eba8f15c0a36bebea2df52ac394" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;r&quot;&gt;r: &lt;a href=&quot;%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.=:=.To&quot;&gt;To&lt;/span&gt;, &lt;span name=&quot;scala.=:=.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.=:=.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.=:=.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;r&quot;&gt;r: &lt;a href=&quot;%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=: =&lt;/a&gt; [ &lt;span name=&quot;scala.=:=.To&quot;&gt;Hasta&lt;/span&gt; , &lt;span name=&quot;scala.=:=.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=: =&lt;/a&gt; [ &lt;span name=&quot;scala.=:=.From&quot;&gt;Desde&lt;/span&gt; , &lt;span name=&quot;scala.=:=.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2bd8dfbaf6652e040dec2b74ace5ef5fa1c4558e" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;r&quot;&gt;r: &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.&amp;lt;:&amp;lt;.To&quot;&gt;To&lt;/span&gt;, &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.&amp;lt;:&amp;lt;.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;r&quot;&gt;r: &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;: &amp;lt;&lt;/a&gt; [ &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.To&quot;&gt;Hasta&lt;/span&gt; , &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;: &amp;lt;&lt;/a&gt; [ &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.From&quot;&gt;Desde&lt;/span&gt; , &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="949eb5f1812d670cd00fd7dd97fd0d7458d70eac" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;r&quot;&gt;r: &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.=:=.To&quot;&gt;To&lt;/span&gt;, &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.andThen.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.=:=.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.andThen.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;r&quot;&gt;r: &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;: &amp;lt;&lt;/a&gt; [ &lt;span name=&quot;scala.=:=.To&quot;&gt;Hasta&lt;/span&gt; , &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.andThen.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;: &amp;lt;&lt;/a&gt; [ &lt;span name=&quot;scala.=:=.From&quot;&gt;Desde&lt;/span&gt; , &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.andThen.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dbc5f753bcccca8b06d9b41e6d8c799850a7828a" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../util/try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.T&quot;&gt;T&lt;/span&gt;], &lt;span name=&quot;scala.concurrent.Future.andThen.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;executor&quot;&gt;executor: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def y luego [ &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt; ] ( &lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../util/try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.T&quot;&gt;T&lt;/span&gt; ], &lt;span name=&quot;scala.concurrent.Future.andThen.U&quot;&gt;U&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;executor&quot;&gt;ejecutor&lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;&lt;/a&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;executor&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;executor&quot;&gt;ExecutionContext&lt;/span&gt; ): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c325faedecd49608f1f879b414a8ceefae69d826" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;V&quot;&gt;V &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.Function&quot;&gt;java.util.function.Function&lt;/span&gt;[_ &amp;gt;: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.R&quot;&gt;R&lt;/span&gt; &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;, _ &amp;lt;: &lt;span name=&quot;java.util.function.BiFunction.andThen.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.function.BiFunction&quot;&gt;BiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;java.util.function.BiFunction.andThen.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;V&quot;&gt;V &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.Function&quot;&gt;java.util.function.Function&lt;/span&gt; [_&amp;gt;: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.R&quot;&gt;R&lt;/span&gt; &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt; , _ &amp;lt;: &lt;span name=&quot;java.util.function.BiFunction.andThen.V&quot;&gt;V&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;java.util.function.BiFunction&quot;&gt;BiFunction&lt;/span&gt; [ &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.U&quot;&gt;U&lt;/span&gt; , &lt;span name=&quot;java.util.function.BiFunction.andThen.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d3b86488fa9384230639d41af844ff74f7173c33" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;V&quot;&gt;V &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.Function&quot;&gt;java.util.function.Function&lt;/span&gt;[_ &amp;gt;: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt; &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;, _ &amp;lt;: &lt;span name=&quot;java.util.function.BiFunction.andThen.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.function.BiFunction&quot;&gt;BiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;java.util.function.BiFunction.andThen.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;V&quot;&gt;V &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.Function&quot;&gt;java.util.function.Function&lt;/span&gt; [_&amp;gt;: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt; &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt; , _ &amp;lt;: &lt;span name=&quot;java.util.function.BiFunction.andThen.V&quot;&gt;V&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;java.util.function.BiFunction&quot;&gt;BiFunction&lt;/span&gt; [ &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;java.util.function.BiFunction.andThen.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="688dd307a03ef2254e324215a93261a5f25c38af" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;V&quot;&gt;V &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.Function&quot;&gt;java.util.function.Function&lt;/span&gt;[_ &amp;gt;: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaFunction.R&quot;&gt;R&lt;/span&gt; &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;, _ &amp;lt;: &lt;span name=&quot;java.util.function.Function.andThen.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.function.Function&quot;&gt;java.util.function.Function&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;java.util.function.Function.andThen.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;V&quot;&gt;V &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.Function&quot;&gt;java.util.function.Function&lt;/span&gt; [_&amp;gt;: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaFunction.R&quot;&gt;R&lt;/span&gt; &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt; , _ &amp;lt;: &lt;span name=&quot;java.util.function.Function.andThen.V&quot;&gt;V&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;java.util.function.Function&quot;&gt;java.util.function.Function&lt;/span&gt; [ &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaFunction.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;java.util.function.Function.andThen.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="03c9c830c8b4fe331bfa4165723c5a3a7cf4c993" translate="yes" xml:space="preserve">
          <source>def andThen[&lt;span name=&quot;V&quot;&gt;V &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.Function&quot;&gt;java.util.function.Function&lt;/span&gt;[_ &amp;gt;: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt; &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;, _ &amp;lt;: &lt;span name=&quot;java.util.function.Function.andThen.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.function.Function&quot;&gt;java.util.function.Function&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;java.util.function.Function.andThen.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def y Luego [ &lt;span name=&quot;V&quot;&gt;V &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.Function&quot;&gt;java.util.function.Function&lt;/span&gt; [_&amp;gt;: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt; &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt; , _ &amp;lt;: &lt;span name=&quot;java.util.function.Function.andThen.V&quot;&gt;V&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;java.util.function.Function&quot;&gt;java.util.function.Function&lt;/span&gt; [ &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;java.util.function.Function.andThen.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7c4013ffc60ba7f9a0300668dca4e61c410b3038" translate="yes" xml:space="preserve">
          <source>def antisymm[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;l&quot;&gt;l: &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.&amp;lt;:&amp;lt;.antisymm.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.antisymm.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;r&quot;&gt;r: &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.&amp;lt;:&amp;lt;.antisymm.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.antisymm.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.&amp;lt;:&amp;lt;.antisymm.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.antisymm.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def antisymm [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] (impl&amp;iacute;cito &lt;span name=&quot;l&quot;&gt;l: &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;: &amp;lt;&lt;/a&gt; [ &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.antisymm.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.antisymm.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;r&quot;&gt;r: &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;: &amp;lt;&lt;/a&gt; [ &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.antisymm.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.antisymm.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=: =&lt;/a&gt; [ &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.antisymm.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.antisymm.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9254fd9d312217e7e5f64acce3c1f68e7e9796ff" translate="yes" xml:space="preserve">
          <source>def append(&lt;span name=&quot;cs&quot;&gt;cs: &lt;span name=&quot;java.lang.CharSequence&quot;&gt;CharSequence&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def append ( &lt;span name=&quot;cs&quot;&gt;cs: &lt;span name=&quot;java.lang.CharSequence&quot;&gt;CharSequence&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6638dee69b08b27073216e890bdc20f01794cce6" translate="yes" xml:space="preserve">
          <source>def append(&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def append ( &lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d75414bbf320e6fcacb0f13eafd383f8e7a4e2b0" translate="yes" xml:space="preserve">
          <source>def append(&lt;span name=&quot;s&quot;&gt;s: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def append ( &lt;span name=&quot;s&quot;&gt;s: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="03df9a25d289e4a2f37c9b0d70cc8882635de110" translate="yes" xml:space="preserve">
          <source>def append(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def append ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Cualquiera&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e2dd7bf867951dac72ee7bb428b90eaffa1c03fa" translate="yes" xml:space="preserve">
          <source>def append(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def append ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e5d89772ac01e7331d2177905848011878c50695" translate="yes" xml:space="preserve">
          <source>def append(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def append ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6cf4968f46bc282fda70477574830057ed4df129" translate="yes" xml:space="preserve">
          <source>def append(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def append ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="88ff8aa14989f5e4cdadf63c8d6acc505e645931" translate="yes" xml:space="preserve">
          <source>def append(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def append ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="16496010237826adcbac67f1ded25eb90e84a430" translate="yes" xml:space="preserve">
          <source>def append(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def append ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="251e9e183db7d1fbf8e57ca4cbe75340e844f233" translate="yes" xml:space="preserve">
          <source>def append(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def append ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4701b07057bba84b94caee5c8807e31f90bab8ca" translate="yes" xml:space="preserve">
          <source>def append(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def append ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="deebe89b9e22206a33f8a7a44586bfc702c016be" translate="yes" xml:space="preserve">
          <source>def append(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def append ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f2e44d7a52d8c9a47a4387d6049c3683da1c4bc9" translate="yes" xml:space="preserve">
          <source>def appendAll(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def appendAll ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f2bc5faf2faae65555414da319c460f5d095e6c6" translate="yes" xml:space="preserve">
          <source>def appendAll(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def appendAll ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="80f21349a596df3c18f9ddf5e326557531e98fb8" translate="yes" xml:space="preserve">
          <source>def appendAll(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def appendAll ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="056fe49b57959816a09d4ae196eee7d967499c5b" translate="yes" xml:space="preserve">
          <source>def appendAll(&lt;span name=&quot;xs&quot;&gt;xs: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def appendAll ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db9c37c6ffce64331886339d7fcfc79fceea6ea0" translate="yes" xml:space="preserve">
          <source>def appended(&lt;span name=&quot;c&quot;&gt;c: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">def anexado ( &lt;span name=&quot;c&quot;&gt;c: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9548416b16b4567db70251e89e3ada6414517186" translate="yes" xml:space="preserve">
          <source>def appendedAll(&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">def appendedAll ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c103733811569d50d02074dee3d27e2737e4b189" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="60c7c4e49f1b5e067f32f07392c27c8c19ae0eb7" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2b9cec296ebb501a0372c99fca2a476a30040e8d" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="68b771337199a63d6f2f3d27aa30b2df348645be" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="058017653e2bb5208738f0203a885d55445e064a" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5e0d912d99ced92acad550ba50dbdecb182ee208" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e912ea37eaba787ea8bc951d2cc504d38fc738e2" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5d87e950f4f5ecaa0a2c4d59ea18461b49f6f4c1" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.WrappedString.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.WrappedString.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.WrappedString.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.WrappedString.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a5f8594dfe6fbd111eae42aaee9069f120615e1f" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8ea3aa2a7ca7b9fc835c8e142e2ca23e93daa4b6" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ce40ad9d6c5c59b675f88dee1a8648c8f0065c16" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d24260904560944a86348064d1369e152dd9d054" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ef2cf288e2f86edfa4f1b83cb4d8408c82d5bd1e" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="061a7760368aa0febd6038f953624eb95718a79b" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3bc9cbf16048bd774581af1187ce2b3ef0098360" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e660e76eb4a3e16d0d204fcf0dd73cb0cc21872a" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6165a9256c14aacae504135950ce4fb3eba62c5e" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9c6adcbf82f3387c86ecd87b201e651d642c3e73" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="eb2d4437b443e0895960913cb67d1429816b9ce2" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fe50a392b849a187c6d4a92a41de0db883e80d27" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="50f0cbca130fced42f961a36284dbb32efcdd2e7" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1145d4080932b9cc3131128212fd1fc3db7fc8af" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bc1271e993b9a862121ab114dd1d4a6d0224783e" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2aa87c5db4acb6bd02034e7cd8b459cda624bf10" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5d40fb0635118c1c6a45b548e64cf7839e9c7536" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a68d166e7c70fa52a0661a7d91757c71811a50d0" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StringOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StringOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StringOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;inmutable.IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StringOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b571de581f154f1f42036c3cc4378494ffa351e5" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="239c19473e924d18381598654fcf20497c0af09d" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ea2c7bb496ec9b4545ce0b00608d2e8d33864d7d" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6c11462a74bb1e5e3d1f3e783329aa06ce1049b0" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="76bb298f9ce319fd36e55597a8a01e6662a4d3ed" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="18477814e6887cd0622750743e32d62e4bba2825" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e2cfd9781abe687e9267fdeddfd1ec58a17fc516" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8da06576b2b5eb9d909327bd0823303da4fcccf8" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c0caaa42478bed5d7b53a886dec6d8f35fd200fd" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="009e194fc584d2ebb23e8789a515b39805bb5e24" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5ef96160eb38dc8b1cc9949e28cac52152c66124" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[_ &amp;lt;: &lt;span name=&quot;scala.collection.ArrayOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [_ &amp;lt;: &lt;span name=&quot;scala.collection.ArrayOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;arg0&quot;&gt;arg0&lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.ArrayOps.appendedAll.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;arg0&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;ClassTag&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;&lt;span name=&quot;scala.collection.ArrayOps.appendedAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="34e0cced82a66d539cb3ff204617331ee349fab2" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[_ &amp;lt;: &lt;span name=&quot;scala.collection.ArrayOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [_ &amp;lt;: &lt;span name=&quot;scala.collection.ArrayOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;arg0&quot;&gt;arg0&lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.ArrayOps.appendedAll.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;arg0&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;ClassTag&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;&lt;span name=&quot;scala.collection.ArrayOps.appendedAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0198b722fb9b1f02a343a5e64298ea7562a3fd9d" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;arg0&quot;&gt;arg0&lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.ArrayOps.appendedAll.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;arg0&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;ClassTag&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;&lt;span name=&quot;scala.collection.ArrayOps.appendedAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="007c234d071c2fb87d63bda88cf7549494657f6f" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;arg0&quot;&gt;arg0&lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;&lt;/a&gt;&lt;span name=&quot;scala.collection.ArrayOps.appendedAll.B&quot;&gt;&lt;/span&gt;&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;arg0&quot;&gt;: &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;ClassTag&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; [ &lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt;&lt;span name=&quot;scala.collection.ArrayOps.appendedAll.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span name=&quot;arg0&quot;&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c67c68e0ac649cb42b26ee510dafc30392175d06" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="85db32a6295a7fd7f714fa6e16f054a2e4b97bef" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e75b2073fd688e1f70183ca4fff664607e6fa172" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8ce63a1147d51e6d23adfcbb8d230a0c09463c27" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1f50341f9069a24ef550213db56291374306c161" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="28adb00bccd5b3f4d079e00b53254c3e03747bee" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d387960dca7d35200f4100a825c73862ae9dbafe" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="21eace9802776fd073d61a2a14b91ecc8e451da5" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="001b1b27bdc1146eed8a57cdc446598209319e3e" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f2f3544513ae6af802bf39558100a173b29ee274" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="aae0b9af69ae193849a83464eef824edae06630f" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="07d0909d18b9c9f3028d0956e350176e79178e9e" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1b25ac269751c35475b109f09d9e01c351b71b5f" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7d9972d6b9d0c4113e1d714847d201c584a4f558" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="deef1b0cc5447355fa8020bd5f8d2ac0babce7e7" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="41207bf122a523c63e5acc06edf8c1ce8b8e8719" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b2e406961401a6440094c7ef9c10163a9d71f861" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0218f977c2cb34509d446cc839b212ce8eca933f" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="58b1ca66da6bddd56b163055db5f086f8cc1f3ee" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="52e1f530684590c65c72ba34540f43205c8f9d0c" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9a4773dc97909906640a56be3b4fb4ba29ea35a0" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bc9df0780ae833b946ac479a5f6eed3278244af4" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="890e5451e5e5a40e122f8e3d12a7d801d04f3ebc" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e3dd83b1bcf18844e3c5a7f0a05fe18acc25814a" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="888ee714cf0a78923659c6c21497c0fb15a1f064" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c01f5228ed2f06102463d8e091aad0c7950127fd" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4cc0c60b0728271344b1265c12e1fd2cc829c53b" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d63c480b3e279148ac006b3191ba1f2ae43af74b" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="91f7da8a91ac8e0826d6a5d275590676188564f6" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="525ed33a41b4430546faaf88bf351c1488abf5b8" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6959119b796e05b7656a381a54473093518d74f4" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="926c3dea5e80f50045868aaa90d27509f55c62b0" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="17688ff25460abff4cacfac628d24236239bbaed" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="02b768febd61c945aecdbd72e48541cf10258b8f" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ba7333f31049c4b458870fdc1432831eb32c95c6" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="15f5b12ec5ecf9bf01f1449294181f1a30c93454" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="eb635c92cd7e087b43f119f41038ca3b39d07ce7" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d99ecabcda45359382e6d6414addfe30fce7c71e" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4e558ac91d612f61343781329b708b0b78522837" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a8bab47219ef0c2b3c664e0b06d82d737ab17eda" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="125e2f8c52748e10f19e261568e70b1ba094fbcc" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="07fe9a0e4f3d1c38a1fe09408a0d2b380f34acce" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8f1467b802f7a7bf5a4a12ecb497080722fcd78b" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="01b2fd08f479f75d8a938fac8cb2917bae9524e0" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c64192d24c218f0df65d49f0b3919fcb5acc21e4" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0aaf897758c6f0bcd1baedebcf091fdbcbcbf313" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="09ddfc081c4e7be66d65624962b0c75dd83e050c" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0c9879e9f4543e0c5fc9b73a307a53ea062caa92" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e9ee285ad935df1460c3b0224a07cab13a2897ba" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="882eadb05990a08b978bac3e0d3b98ac51052727" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a91e5ecd72bdd2ef857fe7c98d06a2706fad9093" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5375526220948d4340d9be59e81974af8e02cc84" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2900dbd227caf49cb44ead29d4a92718ad855151" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2194678bd2f7fc71c6adb2fd07a0bb086991c571" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="93d917bd89d41dbda324c00da9ab48b382bd3289" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e516a9fde76b684bd6a6e816a10652c198ba030a" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a98b882549857ebb0c26e6d73808b7daadba17ea" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0cc70c81816fdd890cfd74af97f2dd578d1ccc47" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="640feff9ecfc8a86a09392e9ab1da059203ac9b0" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c41ea04826e5191a99c47d72773dd87b5dc4545a" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8da5774d9d2a27a83b1f5d7d419053f4eac7bb6e" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9a819a4601165982928de46d9066f9f14a0e0bb3" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0a95bcc781862aac42181a642786b915d29e19fd" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="67932f46ce381cdd578f0914551bcbf8077dc93a" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3f32ef58a652802cd0acdc654f7296098d51c044" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="76a7f29a5846e320d8da2d78c25135899d44e2fa" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bd12643766b6aabddedd5335e16e3fb102ea1057" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c228bd1633061ac40ec78a420404869e725f2f4c" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6aa19b164f165dcf83f45219daa1498338387de6" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d953ec9a048b223486353a8716cf6c4ae0a3756a" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Lista&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2c80b4ce10e894dbc4e70c9add90c8a29345b0e6" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0f6fa30a911c3d3b9907a7e35c581d09ec5eaa72" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="29f2cbf1465d86a1a7480173a012f0dfade1f9fc" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="58c5ddae46d6d2b71eb6d2fac1d9b579ca4bdb6e" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1a277f7acf36e99bc6e29ab51be61399e693171e" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="15dc9403beece10c848b6699b85d2f6894f81984" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LazyList.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LazyList.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bd060e0736c225296e7e5dbd02b2a87319aaf781" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="771ccb9ff4ad46252a4453fae9d78cb72e1aeffc" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="77cd9e0da2fa1ff0ebe10d4e0443a539e9b1ebc8" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Lista&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="77512d0c544e9f8af4c6e4df4d0cba6fa327abec" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9ced5c72293bd7ad52bd2a62e2452da601cbf019" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8b2d9ff625e3004f4fe661cc4d8556f9f89277bf" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="37ec8ad7a9207006a96728a8e44a3ad845697493" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;que: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Queue.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Cola&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Queue.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="06d3e92f7f0a4035f16daeb537238a105f484b0a" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9c20cfe5ec4b61da26236b1f6d3b92cd5d9f8893" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="94f0914f5ba7623bd4106a43843e10e4444210c4" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b59febeebca9a7fd4b73cb0b195ae4e094b18dd1" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="aa3f6db1113eb361b2714aa98922133307a9c1ec" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0bdb155269e3c9c2be9ce97f65017055b67e4294" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Vector.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Vector.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a11bd2bd905bc8dcc9e5484253f67f243cc4fb90" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="02c1a905dceb92780393c26d7747832507a1ed1d" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="02345c3dbc6f341fce52d93f1d158b0f8b8abafa" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f58bec5ae22ed57da2bd7f2dbcb0e2cf676bc85e" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="da748696603513fc56a6669793af3beb7e4fd549" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Ver&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="01e1684db2dd91bac9bb97f452b45720b6e1f320" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="205d93920c78b0efb14b3e9c4add93479d8f41d0" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1c67413e73c5f29fe983574fa513e8e820b71eed" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b6c1bdca5f3856ed4869cb887da88cbd2f360986" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d80d1e5783a7ed9fe266b68752f5ab89fad59e4a" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="794b2585b7c173a02ce0048f029067ab2c7387d6" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5e71f4547d84b897f2ae865030aae9611e46b42c" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="38007cf9b8fb614ad7318c8e0b9de4dd5ae74188" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0bd8818c393cc1b6bbb090a1da456ef90bc1a1b2" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cc59f300dbd74d3db88832beb8078c092a8295ec" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="382cf5e88414682db5a1c4cb4303e39aa140b50c" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Cola&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="83aaa30a539a10998d19864b7e717cd5e5e53e99" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1cdd4bd60b5c23b5b3f310aa30a30f294d771df3" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="097b6f5a69763ff5232e1faa01dd925da982868f" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Pila&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="94e2ca63cf9d2ef4503c7cc4bd8f8e9cd0dc5520" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="831698f6a329be6fee9483189572bf5840099618" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="403b530f67519874484892668c7d1911a99592f9" translate="yes" xml:space="preserve">
          <source>def appendedAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def appendedAll [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;suffix&quot;&gt;sufijo: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appendedAll.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="318ffc9c8fee24a1557a4a5eaf1b599c8977f02a" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def agregado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="44c0747e2ca760877f60ce56e9f76016ce0dae1a" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def agregado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="25ba3ce7e9ab419f518c115e39df3ad3563e1c81" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def agregado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d40fdfb2cb236b4b1ca1fa1ac87c60c561616cd2" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def agregado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2be7fc4721fa1af03b511597f7c32272badc8662" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjuntado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="05340c3a950445f309842addf786b248f48ebfe9" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjuntado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bdd9305251b1e95fd88d98f426106868db462234" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def agregado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fcf02c747d545b2d4a7e630697ac21a5bb0fe5c0" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def agregado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="eeb672b84445e46c703cf6f151bc8c71c25f40a9" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjuntado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6f0f7b96085e875c961bf26a54f6bd776156f258" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjuntado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1cdb24cb310b11ceebd3715639703967096c563b" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunto [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="eea78e22e6c51473d4a9b66ef0f089335b8ca0da" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunto [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4e61547c4f0a1995508c7cb035cf786aabe3736f" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjuntado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cc592a2d03bf9baa33f8b93368f6ba883f44b892" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunto [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="26838ad4837f34719ee43a2d489437e5fda7e49d" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjuntado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e16bf45b5e650db3cb55ebc62d557fc412511247" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunto [&lt;span name=&quot;B&quot;&gt; B&amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b312a4430ac6eb3deccb7ceca4737c97cf1398a1" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def a&amp;ntilde;adi&amp;oacute; [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;:&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f0d0f3974b2c31eae1d8d28fd36fcb4374dd3fb9" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def a&amp;ntilde;adi&amp;oacute; [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;:&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt; Nada&lt;/a&gt;&lt;/span&gt; ] (&lt;span name=&quot;elem&quot;&gt; elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ):&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt; Transmisi&amp;oacute;n&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="36f16be7b9903fa25fcfd80db898b7d0739cb4c3" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def a&amp;ntilde;adi&amp;oacute; [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;:&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt; Nada&lt;/a&gt;&lt;/span&gt; ] (&lt;span name=&quot;elem&quot;&gt; elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ):&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt; Lista&lt;/a&gt; [&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="34973d2cde6bb0b53dbeed1b71d651eb14ff4d4e" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def a&amp;ntilde;adi&amp;oacute; [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;:&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt; corto&lt;/a&gt;&lt;/span&gt; ] (&lt;span name=&quot;elem&quot;&gt; elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ):&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt; ArraySeq&lt;/a&gt; [&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b7148707282611737a9a16bcc8805e080ead201a" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def a&amp;ntilde;adi&amp;oacute; [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;:&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt; corto&lt;/a&gt;&lt;/span&gt; ] (&lt;span name=&quot;elem&quot;&gt; elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ):&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt; ArraySeq&lt;/a&gt; [&lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="af0898730e80fc25e2b47f512d7953d8bffb6eca" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def a&amp;ntilde;adi&amp;oacute; [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;:&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt; Unidad&lt;/a&gt;&lt;/span&gt; ] (&lt;span name=&quot;elem&quot;&gt; elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ):&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt; ArraySeq&lt;/a&gt; [&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6157f530c4293e9f60b12a60bd6b92dd2b05dfdb" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def a&amp;ntilde;adi&amp;oacute; [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;:&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt; Unidad&lt;/a&gt;&lt;/span&gt; ] (&lt;span name=&quot;elem&quot;&gt; elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ):&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt; ArraySeq&lt;/a&gt; [&lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="68cdac12aa30aefda3ea465d885955a273fa7bef" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def a&amp;ntilde;adi&amp;oacute; [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;:&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt; Char&lt;/a&gt;&lt;/span&gt; ] (&lt;span name=&quot;elem&quot;&gt; elem: &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ):&lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt; IndexedSeqView&lt;/a&gt; [&lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5875b524fa7e8d512859d66a424d8f78f8889e64" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StringOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StringOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def a&amp;ntilde;adido [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StringOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;inmutable.IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StringOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cb93a453ef6b6a5f78df012589708f3be0684e84" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def agregado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;Cualquiera Acumulador&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b95974509ba6966d4127feda8ec1ab522a016f83" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def a&amp;ntilde;adido [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5b9fb351c546273005917fc484110577791578da" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def agregado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;largo&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="615c8f7d40122932bb5d445f989fc31c4079033d" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def a&amp;ntilde;adido [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (&lt;span name=&quot;elem&quot;&gt; elem: &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0849f0146e449f9a8c7f676255967306394ca921" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def a&amp;ntilde;adido [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (&lt;span name=&quot;elem&quot;&gt; elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b49f3a4cb1b5cdaada33522758de5a3f09675045" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def a&amp;ntilde;adido [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (&lt;span name=&quot;elem&quot;&gt; elem: &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dfd2a1387455a3b4682a16d6e44cc41cb245f35b" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.ArrayOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.appended.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjuntado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.ArrayOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;arg0&quot;&gt;arg0&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;arg0&quot;&gt;: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.appended.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2f0702225e9958a07048be9d0c3f20f19880d081" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.ArrayOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.appended.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def anexado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.ArrayOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;arg0&quot;&gt;arg0&lt;/span&gt; impl&amp;iacute;cito &lt;span name=&quot;arg0&quot;&gt;: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [&lt;span name=&quot;scala.collection.ArrayOps.appended.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f9db92e5ee411a7d976236271eb2224070553f52" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunt&amp;oacute; [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem:&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt; B&lt;/span&gt;&lt;/span&gt; ):&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt; IndexedSeq&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7a940270e5bfcb0a98ff5d3f8f22c46bdb348e75" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunt&amp;oacute; [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem:&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt; B&lt;/span&gt;&lt;/span&gt; ):&lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt; CC&lt;/span&gt; [&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8ca9664e366d541ba04aea31e8be7e1ea57ce591" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunt&amp;oacute; [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem:&lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d40015dda3079166a794c26b893260af5559f25b" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunt&amp;oacute; [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem:&lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2d4c2bade32a7ac4a4a7c0f91f31ebf9a7e1238d" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunt&amp;oacute; [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem:&lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="07a83a2c33e0877fd68a2b580fa0b8a43ab2801a" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunt&amp;oacute; [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem:&lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f2403c73c314842312c716af539bdf7683a43718" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunt&amp;oacute; [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem:&lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ba8bf6bc850986bc8cdd936f9aebad5616c27686" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunt&amp;oacute; [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem:&lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="57488160977b317b5c8d5601d31e42218888d4ee" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunt&amp;oacute; [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem:&lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt; B&lt;/span&gt;&lt;/span&gt; ):&lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt; IndexedSeqView&lt;/a&gt; [&lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="55c863fceffd85a8e52efcec9d34999bb992c818" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunto [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (&lt;span name=&quot;elem&quot;&gt; elem: &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="de1fa1b33de69d37b8a6a8189054cab88f83e27a" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunto [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (&lt;span name=&quot;elem&quot;&gt; elem: &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4707bfdbce35dd539a64837e2a9ba064ca5c16e9" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunto [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (&lt;span name=&quot;elem&quot;&gt; elem: &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0cc0e575018dd855f2f4aa6a8bfe9a6ae24f5603" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunto [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (&lt;span name=&quot;elem&quot;&gt; elem: &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2e76e5e16b17351168119647b5578eec6101a363" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunto [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (&lt;span name=&quot;elem&quot;&gt; elem: &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a5f2767ab64fa97e8b33289f1e26c4ed281a2611" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def agregado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e6512cd818170dad258bb75aebde58fc7cac5d89" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunto [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem:&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt; B&lt;/span&gt;&lt;/span&gt; ):&lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt; CC&lt;/span&gt; [&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fc1d2957735946f621559a25d9e8266881113f22" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def agregado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (&lt;span name=&quot;elem&quot;&gt; elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="87b2f1a17f292fde4ba600fcd442ba332e7893b5" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunt&amp;oacute; [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem:&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt; B&lt;/span&gt;&lt;/span&gt; ):&lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt; colecci&amp;oacute;n.immutable.IndexedSeq&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="24b359d537e1e54c42bc9bc07106d7692d668957" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def a&amp;ntilde;adido [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ):&lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt; CC&lt;/span&gt; [&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1e54d5b15793163805c05639bfc54fb31cf20cf8" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def a&amp;ntilde;adido [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="59b0b860566b8c126422fc7b61cc4bb18ebdc7ce" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def a&amp;ntilde;adido [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bf79947e978dee99496feec7b4e446360b73981c" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def a&amp;ntilde;adido [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9c1a53a3d1229f2c584927093f4093ceb3fa1a0d" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def a&amp;ntilde;adido [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7e440ce2c73637c1c29bebb11d546b9929eef5bf" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def a&amp;ntilde;adido [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="368f587a0b370a3be71411cc50c1956b5b7bca6a" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def a&amp;ntilde;adido [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7718b2084c83213ef42221dd0c35099b9a8d53a2" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def agregado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4a6db151af6f88aa73159f13b0b22423bac12cbd" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def a&amp;ntilde;adido [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1589a2b6840faa960705d4da45c0c041d40cbe34" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def a&amp;ntilde;adido [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="19eabeb923f81443decc37842003750f5e56e311" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def a&amp;ntilde;adido [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="34985ac73416a9fc56bc5a1a4a1b5ab3a15cfc4c" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def a&amp;ntilde;adido [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b3695653f16e247df5e5771e06481d812e5ac618" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def a&amp;ntilde;adido [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fd326cdeb6fdb3a085a694adbca14651f2a2eaa7" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def a&amp;ntilde;adido [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ):&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt; CC&lt;/span&gt; [&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="73ffbc0c312a8931cec245200d898500bf1908af" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def a&amp;ntilde;adido [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ):&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt; CC&lt;/span&gt; [&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="186dded88a031be75b2ad619e12b38302d69d405" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def agregado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Lista&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="463af5e370c55442261eca5a7a22c5c6cbb84c2c" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjuntado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cf03f8c640878c761bb4798867bc4db949f06b4b" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunto [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a5a82ccb5b7908c3c137772db0521d19c08f10da" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjuntado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="56079534d950c0ca7dce99a805b5494ce5ac7b0f" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunto [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e4960214758aee40d694938c08bef30451a7c283" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunto [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d5cfde75eaaa840f1755d9bac4942acdd974306a" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.LazyList.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjuntado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.LazyList.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LazyList.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7085ae126b81ac61416be5a3e678d49566374e5d" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def agregado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fcd78219a72474e47833196a3362898980213785" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunto [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9e384263396cbca6572bb9bd8021759b99f77328" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def agregado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Lista&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d8d79b23ec059093b8ed2b8a6caf4f2f82a534f5" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunto [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d0e68cf08256ae621af96227eecbd957353d2d22" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunto [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9e971600ea808734b35a39a987d78a178728505a" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunto [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f461998a99075b9f13d4ddaffbc0b23b4aa34bf5" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.Queue.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def agregado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.Queue.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Cola&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Queue.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="19a91c74b8e5b4c549e4bd1af28869d3b6b84571" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjuntado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0d6d34f717ccf0d211ec7ed7599aaaf55ab75923" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunto [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4152206cb7cfa695014cccb3393691728e2a44ea" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjuntado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Transmisi&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9738f83756ce44febf4104e2b4b560ace0c0c60e" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjuntado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Transmisi&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a825439ad850ca6c1a493db72222e072a1c6b9bc" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunto [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5f4ff089840a4350a1d5bf8e8f6d21f46236fa99" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.immutable.Vector.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def agregado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;value&quot;&gt;valor: &lt;span name=&quot;scala.collection.immutable.Vector.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Vector.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="de7aa9374d75b4fea8569e480e5f115124c02157" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunto [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="52dfa1ee59a7a1cbf16c2bf72710bbc7d5269eab" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjuntado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e8613f7a4f08e06b81ace4b5c32b85fa712a7048" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjuntado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a6360d04346e31ce70fd673cbb29514611b65ba2" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunto [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b708ec85a9ac66e37cd0e799985318f130799073" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunto [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="44b399c5374f121c5a3c34342ca447d3b5d4a109" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunto [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b91a4cb163b173b4ac6abac35d5d096623f71a7c" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjuntado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="97cfeedca377c2b9db3e4b7670485773e3999c7b" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjuntado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5b7eed9b181446218439e6c43f7018f68ed91f25" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunto [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c9ea70e8661fbc8137b44ac2abc92f7cf2642d8e" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjuntado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="367be9beef1ed9772bf99293e3510cdbb6952c81" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunto [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9174cf5bc71773c4f75e87c1c72d6762f9102cd0" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunto [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a2efdfcc2ffeed6137675c844d2a14c4e31fdb52" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def agregado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="21840e0d0e62ea334a008e7079fda418da40707c" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def agregado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Cola&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b91d9a268129cbec5871efeee72a9f1ff5997641" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjuntado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4d33f25ca72a5df4de04a5ed163893987df47ba6" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunto [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7e8366d6bb6715fe6ef0aa40752d378e680d3fe5" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def agregado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Pila&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e3035efc1327aca1e8d59039f353383243e87bac" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def agregado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="93658798e589002a74c6a5a30b686343a687f873" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def agregado [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;colecci&amp;oacute;n.mutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8fa7a5f0be11f254bfb4e159a86d1f29558400ec" translate="yes" xml:space="preserve">
          <source>def appended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def adjunto [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.appended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ce295fdc8edc013e026ca66019396e3413358eeb" translate="yes" xml:space="preserve">
          <source>def apply(): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def aplicar (): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d0d524510a0cf4f1cf02d3509ba89d353e5da4e8" translate="yes" xml:space="preserve">
          <source>def apply(): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def aplicar (): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ee9b083c0081562459b0aa22ba5db59436579e4" translate="yes" xml:space="preserve">
          <source>def apply(): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def aplicar (): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5610ea827c2c52d0d5d3befda36d19c363d77ce4" translate="yes" xml:space="preserve">
          <source>def apply(): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def aplicar (): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;largo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="07fe1e4b7c2e55773da0323e69d3f674db3c60b3" translate="yes" xml:space="preserve">
          <source>def apply(): &lt;span name=&quot;scala.concurrent.DelayedLazyVal.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def aplicar (): &lt;span name=&quot;scala.concurrent.DelayedLazyVal.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1e3ad29f238337dd8b31aaa494fe4541f07f3a45" translate="yes" xml:space="preserve">
          <source>def apply(): &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaSupplier.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def aplicar (): &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaSupplier.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4054866946884f5df6adc14fee155623996f4f2e" translate="yes" xml:space="preserve">
          <source>def apply(): &lt;span name=&quot;scala.ref.PhantomReference.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def aplicar (): &lt;span name=&quot;scala.ref.PhantomReference.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="16b6c4288fa88498ca5a8b9e35635c1065ce93cf" translate="yes" xml:space="preserve">
          <source>def apply(): &lt;span name=&quot;scala.ref.ReferenceWrapper.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def aplicar (): &lt;span name=&quot;scala.ref.ReferenceWrapper.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="57dff5fe41d0584c3b2de38ae7a49b827d02889c" translate="yes" xml:space="preserve">
          <source>def apply(): &lt;span name=&quot;scala.ref.SoftReference.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def aplicar (): &lt;span name=&quot;scala.ref.SoftReference.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4073a6a725f13fcdb6987e89ccc0629a7967e71a" translate="yes" xml:space="preserve">
          <source>def apply(): &lt;span name=&quot;scala.ref.WeakReference.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def aplicar (): &lt;span name=&quot;scala.ref.WeakReference.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="25671d8355db8cddddb197fdb8567b3af45e6114" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;bd&quot;&gt;bd: &lt;span name=&quot;java.math.BigDecimal&quot;&gt;java.math.BigDecimal&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;bd&quot;&gt;bd: &lt;span name=&quot;java.math.BigDecimal&quot;&gt;java.math.BigDecimal&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b03e94121433984284f4476f69e866d8a3295f54" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;bitlength&quot;&gt;bitlength: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;certainty&quot;&gt;certainty: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;rnd&quot;&gt;rnd: &lt;a href=&quot;../util/random&quot; id=&quot;scala.util.Random&quot; name=&quot;scala.util.Random&quot;&gt;Random&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;bitlength&quot;&gt;longitud de bits: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;certainty&quot;&gt;certeza: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;rnd&quot;&gt;rnd: &lt;a href=&quot;../util/random&quot; id=&quot;scala.util.Random&quot; name=&quot;scala.util.Random&quot;&gt;Random&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="44724a55f6ad3faab91e1a83b6bf7dc76c9c8445" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;body&quot;&gt;body: =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;shutdownhookthread&quot; id=&quot;scala.sys.ShutdownHookThread&quot; name=&quot;scala.sys.ShutdownHookThread&quot;&gt;ShutdownHookThread&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;body&quot;&gt;cuerpo: =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;shutdownhookthread&quot; id=&quot;scala.sys.ShutdownHookThread&quot; name=&quot;scala.sys.ShutdownHookThread&quot;&gt;ShutdownHookThread&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb6f8a680a4fbe7e5da508adb385d31b2558209f" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;builder&quot;&gt;builder: &lt;span name=&quot;scala.sys.process.processInternal.JProcessBuilder&quot;&gt;JProcessBuilder&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;builder&quot;&gt;constructor: &lt;span name=&quot;scala.sys.process.processInternal.JProcessBuilder&quot;&gt;JProcessBuilder&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9d4d211057b2ab46500a99c5b143301985dc9061" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;charSet&quot;&gt;charSet: &lt;span name=&quot;java.nio.charset.Charset&quot;&gt;Charset&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Codec&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;charSet&quot;&gt;charSet: &lt;span name=&quot;java.nio.charset.Charset&quot;&gt;Charset&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Codec&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6c46be156648bb2d6f43f9345850383a3907e413" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;command&quot;&gt;command: &lt;a href=&quot;../../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;command&quot;&gt;comando: &lt;a href=&quot;../../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;colecci&amp;oacute;n.Seq&lt;/a&gt; [ &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt; ]&lt;/span&gt; ): &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e033b87f100626c0b344713b1931c27c536d89d5" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;command&quot;&gt;command: &lt;a href=&quot;../../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]&lt;/span&gt;, &lt;span name=&quot;cwd&quot;&gt;cwd: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.sys.process.processInternal.File&quot;&gt;File&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;extraEnv&quot;&gt;extraEnv: (&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)*&lt;/span&gt;): &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;command&quot;&gt;comando: &lt;a href=&quot;../../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;colecci&amp;oacute;n.Seq&lt;/a&gt; [ &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt; ]&lt;/span&gt; , &lt;span name=&quot;cwd&quot;&gt;cwd: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.sys.process.processInternal.File&quot;&gt;Archivo&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;extraEnv&quot;&gt;extraEnv: ( &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt; , &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt; ) *&lt;/span&gt; ): &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8bb411c61c39069dafa044a6288834f8e68fd0fe" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;command&quot;&gt;command: &lt;a href=&quot;../../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]&lt;/span&gt;, &lt;span name=&quot;cwd&quot;&gt;cwd: &lt;span name=&quot;scala.sys.process.processInternal.File&quot;&gt;File&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;extraEnv&quot;&gt;extraEnv: (&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)*&lt;/span&gt;): &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;command&quot;&gt;comando: &lt;a href=&quot;../../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;colecci&amp;oacute;n.Seq&lt;/a&gt; [ &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt; ]&lt;/span&gt; , &lt;span name=&quot;cwd&quot;&gt;cwd: &lt;span name=&quot;scala.sys.process.processInternal.File&quot;&gt;Archivo&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;extraEnv&quot;&gt;extraEnv: ( &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt; , &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt; ) *&lt;/span&gt; ): &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5622c1bd1fad4a01b6e4b82a19f0e1497b037b7a" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;command&quot;&gt;command: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;command&quot;&gt;comando: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d2e524302121c1cbd88c6998559d0476686413b0" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;command&quot;&gt;command: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;arguments&quot;&gt;arguments: &lt;a href=&quot;../../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;command&quot;&gt;comando: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;arguments&quot;&gt;argumentos: &lt;a href=&quot;../../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;colecci&amp;oacute;n.Seq&lt;/a&gt; [ &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt; ]&lt;/span&gt; ): &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b42ab28f1ef40b3152d9687cacd71f039c51d223" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;command&quot;&gt;command: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;cwd&quot;&gt;cwd: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.sys.process.processInternal.File&quot;&gt;File&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;extraEnv&quot;&gt;extraEnv: (&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)*&lt;/span&gt;): &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;command&quot;&gt;comando: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;cwd&quot;&gt;cwd: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Opci&amp;oacute;n&lt;/a&gt; [ &lt;span name=&quot;scala.sys.process.processInternal.File&quot;&gt;Archivo&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;extraEnv&quot;&gt;extraEnv: ( &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt; , &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt; ) *&lt;/span&gt; ): &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="63aca0e1e6047430de9454c8d438f34f2bde0a0d" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;command&quot;&gt;command: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;cwd&quot;&gt;cwd: &lt;span name=&quot;scala.sys.process.processInternal.File&quot;&gt;File&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;extraEnv&quot;&gt;extraEnv: (&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)*&lt;/span&gt;): &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;command&quot;&gt;comando: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;cwd&quot;&gt;cwd: &lt;span name=&quot;scala.sys.process.processInternal.File&quot;&gt;File&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;extraEnv&quot;&gt;extraEnv: ( &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ) *&lt;/span&gt; ): &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2b53405414d69dfda601cb1ba7fe5823e755670e" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;d&quot;&gt;d: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;d&quot;&gt;d: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a55b85ff7b01bc22930a77c8c20b3dd9faa49a8d" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;d&quot;&gt;d: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;mc&quot;&gt;mc: &lt;span name=&quot;java.math.MathContext&quot;&gt;MathContext&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;d&quot;&gt;d: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;mc&quot;&gt;mc: &lt;span name=&quot;java.math.MathContext&quot;&gt;MathContext&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4e0e61670e2561918f42ac7b4b82071ff3810fec" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;decoder&quot;&gt;decoder: &lt;span name=&quot;java.nio.charset.CharsetDecoder&quot;&gt;CharsetDecoder&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Codec&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;decoder&quot;&gt;decodificador: &lt;span name=&quot;java.nio.charset.CharsetDecoder&quot;&gt;CharsetDecoder&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Codec&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c61b0ac2c75eb2ea4b0730769b9b52115af4770b" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;encoding&quot;&gt;encoding: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Codec&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;encoding&quot;&gt;codificaci&amp;oacute;n: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Codec&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5100448c39ecf923a2b4d010ab11eb34baa4a6a7" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;f&quot;&gt;f: &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.From&quot;&gt;From&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.To&quot;&gt;To&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;f&quot;&gt;f: &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.From&quot;&gt;Desde&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.To&quot;&gt;Hasta&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="47dfbb85426de755b17823afb57c3fb58c6477a2" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;f&quot;&gt;f: &lt;span name=&quot;scala.=:=.From&quot;&gt;From&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.=:=.To&quot;&gt;To&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;f&quot;&gt;f: &lt;span name=&quot;scala.=:=.From&quot;&gt;Desde&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.=:=.To&quot;&gt;Hasta&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9394c2aa3ba208419f15058040455d231f56ddeb" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;file&quot;&gt;file: &lt;span name=&quot;java.io.File&quot;&gt;File&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;fileprocesslogger&quot; id=&quot;scala.sys.process.FileProcessLogger&quot; name=&quot;scala.sys.process.FileProcessLogger&quot;&gt;FileProcessLogger&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;file&quot;&gt;archivo: &lt;span name=&quot;java.io.File&quot;&gt;Archivo&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;fileprocesslogger&quot; id=&quot;scala.sys.process.FileProcessLogger&quot; name=&quot;scala.sys.process.FileProcessLogger&quot;&gt;FileProcessLogger&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f0957884fb50f8e67aff832b615847a7d1835091" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;file&quot;&gt;file: &lt;span name=&quot;scala.sys.process.processInternal.File&quot;&gt;File&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;processbuilder%24%24filebuilder&quot; id=&quot;scala.sys.process.ProcessBuilder.FileBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder.FileBuilder&quot;&gt;FileBuilder&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;file&quot;&gt;archivo: &lt;span name=&quot;scala.sys.process.processInternal.File&quot;&gt;Archivo&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;processbuilder%24%24filebuilder&quot; id=&quot;scala.sys.process.ProcessBuilder.FileBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder.FileBuilder&quot;&gt;FileBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="593af75369bb8ee0a6f65574c022a399fd7596f9" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;fn&quot;&gt;fn: (&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processlogger&quot; id=&quot;scala.sys.process.ProcessLogger&quot; name=&quot;scala.sys.process.ProcessLogger&quot;&gt;ProcessLogger&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;fn&quot;&gt;fn: ( &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;processlogger&quot; id=&quot;scala.sys.process.ProcessLogger&quot; name=&quot;scala.sys.process.ProcessLogger&quot;&gt;ProcessLogger&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c5b60bcb5145c8cdc27b70b8f90d53269f1a4082" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;fout&quot;&gt;fout: (&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;ferr&quot;&gt;ferr: (&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processlogger&quot; id=&quot;scala.sys.process.ProcessLogger&quot; name=&quot;scala.sys.process.ProcessLogger&quot;&gt;ProcessLogger&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;fout&quot;&gt;fout: ( &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;ferr&quot;&gt;ferr: ( &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;processlogger&quot; id=&quot;scala.sys.process.ProcessLogger&quot; name=&quot;scala.sys.process.ProcessLogger&quot;&gt;ProcessLogger&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3cffa65e3611c74670e27873a5d64c6054be842a" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="697b008625cbe7f4cba4a1000d46328acf19770d" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5bd774cd7acda16196c8d79428c522004bcfe4a2" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="07f1aec01151ceb968b455c85ceb04e8cadf60b6" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21338b89472ede08861a7d46b14ad568f32becf6" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c21fad8f4653e355b48bca1ba50a6ab5428a774a" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="772060f7a706d8af1b246cb5941079d9aa1cb587" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Largo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="65c03660672f7d33df3f1b09b025e80875ebd042" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Corto&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9702c8afcab5f61a072ad0e5597678926abba4d0" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="30051f2aa8d7030c072ae493febc6a2be0a67d9f" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="207341873f4973626947d323784b54e8c3e04f0f" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="58b7d294b501da52a07a579445c0251c4148a558" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3aee48a087265c7f39050f52e61bdd960943e953" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="562fc93e9dd532f13e7ef4d7aa4139021d34ef46" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="06f81e7d87eed777051fa28577644af8a742a9c7" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Largo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9574d3034f7bfbe07e2f34de6f40bb58ba773c92" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dc6a975dee3e24cdaf0221d5803565bac5309dd6" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="063e767141ec589012b0ad7e772ca5ac55a8da8e" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2b3d41cf52600b9ab49cd6f8ca1fc71b8def9f19" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c32bfeb6152a245186253684ef9b60e7a9655277" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4541d92699cf4724123b2848639585ba9e13967b" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2eec87ecb27a52d889020cc7eef3d3b81a02c761" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="66b1a278c6d5de8274783a63f832ba11856ea7f2" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1fca9417acf89a40e08a2877f484a80fda626eb7" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4609bb3f058346afc7163f075069e4a914b06e5e" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d82d8fbbed657557c733297f8626600c66344927" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dbd5ef89b8c431726c6ab6b5c352e40c30276079" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8d2663e240cde51c5e96f58ab85a1ed0510f325d" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0eaf53b84bf8d61b81fa9c8b316bfef3fd8444b5" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a60bd0ec24be60fedf52b2d3e050e86ca85cc41e" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;mc&quot;&gt;mc: &lt;span name=&quot;java.math.MathContext&quot;&gt;MathContext&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;mc&quot;&gt;mc: &lt;span name=&quot;java.math.MathContext&quot;&gt;MathContext&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a378561220f0cae6e5858e1222ab33e499420e56" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cd071246faf465f847bdadd29bd79b340cf1b2ed" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.Array.UnapplySeqWrapper.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.Array.UnapplySeqWrapper.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="da969c23a1e1144ef3fbf682fb5cc09254372062" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6ec96208f74e30a680446cb6359027afb1eaf454" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b1e2f78395457187a892a7912c91520c3c7d0cbc" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1b272a0a7571ca9cf5b7c75ca66042fbc6869ad1" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="01da99e74ef4f923ba78e386f4413b53dd75834b" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="71a1943d30006d3e35dcabd92666007ad4abfde6" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="749b7732f73c2cf43ce8f2ac838c13efeb78b41a" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d3b32ddb1c6648078f6d5aff0d554daaef90f4c8" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="af8a05699061b849d586f85ffd5cc8eb2850ae92" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="87d60f4e27778e818fb1ad5e58c240dd9576480d" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e173b35e496f0d92b4085713d20df5a437378120" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ed605768f0e45bd118234a2446c1c9f4bbea75aa" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="af2228afb836571574e77e5a4b6f00832bbb988b" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5c3724cb0e463a894dd1411b6e9ed209214e2a38" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="47f77a0b0adf3b2809e5283b65bdbc54780df213" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="48335b92d3a96f378319a18a82396332df900d4d" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6bb8d3d3b00e6ebfeffe3a7713252e3abec57a82" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bd8c787be4c6b9e17f06a2a54c526e2763427382" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f14c6f0e17a324091172eeb6e3fe3d7f4e79d541" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="88c0a8c45226d1088f7cb7c0669624b4a8824e4b" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;index&quot;&gt;&amp;iacute;ndice: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="300bc86087a8b91b377935d005cea61802db5d17" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;index&quot;&gt;&amp;iacute;ndice: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8821a5336016a6339159660b26547a25693c0a75" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;index&quot;&gt;&amp;iacute;ndice: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa4cf57f51f669ef49ac2a6349c1c87c73a6334b" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;index&quot;&gt;&amp;iacute;ndice: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="981eadfa43ef241a0de621350966341343616098" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;index&quot;&gt;&amp;iacute;ndice: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="78ab3943a1bb58c81fc2632a0d4e92df9454236b" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;index&quot;&gt;&amp;iacute;ndice: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb4b1ced16b789a64e7a2f4a92e57af587376f51" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;index&quot;&gt;&amp;iacute;ndice: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Largo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c72ec8d1e7fa7e6763ea476e2509d5d3d90ca5b7" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;index&quot;&gt;&amp;iacute;ndice: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Corto&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="df2bd64b671e3320e0c1a08ed450e4863acf39fb" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;index&quot;&gt;&amp;iacute;ndice: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f1fb6e46d3fe1fa8be625a455b69eb5b1b8f732" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;index&quot;&gt;&amp;iacute;ndice: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="edb26743b5d7a7f9304dbb64c01b85ff22efe6d7" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;index&quot;&gt;&amp;iacute;ndice: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0dc09666f5255883fd4284e334e5587413e58fc7" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;ix&quot;&gt;ix: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;ix&quot;&gt;ix: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;largo&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;doble&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="25dea2dcdaafc2b65ba917fefac11b203aef983a" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;ix&quot;&gt;ix: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;ix&quot;&gt;ix: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab44d3eb2be692b29d1ea94b3e0ee53a58172728" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;ix&quot;&gt;ix: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;ix&quot;&gt;ix: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;largo&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;largo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="670499cba483b81e7b99ae650a7dbb883ea8828f" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;ix&quot;&gt;ix: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;ix&quot;&gt;ix: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b997c15a86cbf6a4f97d1a9bb9145dddc7ae4427" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;k&quot;&gt;k: &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;k&quot;&gt;k: &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7fc06b14f75a09ec2c356b351030dce7aaafc35e" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ea1acb6b9731e2ad7fe79c9ab5ffdee29f5c451f" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0ee7de10f839bb1d058127cdb9741f7f370584ca" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;prop&quot; id=&quot;scala.sys.Prop&quot; name=&quot;scala.sys.Prop&quot;&gt;Prop&lt;/a&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;prop&quot; id=&quot;scala.sys.Prop&quot; name=&quot;scala.sys.Prop&quot;&gt;Prop&lt;/a&gt; [ &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="9b80697853f1fd8377058d9be5b5afac470ccf32" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;prop&quot; id=&quot;scala.sys.Prop&quot; name=&quot;scala.sys.Prop&quot;&gt;Prop&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;prop&quot; id=&quot;scala.sys.Prop&quot; name=&quot;scala.sys.Prop&quot;&gt;Prop&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="67b972a7394d71e3c3025303219f8f577705d709" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;prop&quot; id=&quot;scala.sys.Prop&quot; name=&quot;scala.sys.Prop&quot;&gt;Prop&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;prop&quot; id=&quot;scala.sys.Prop&quot; name=&quot;scala.sys.Prop&quot;&gt;Prop&lt;/a&gt; [ &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="6b11b317fc21003a64ac3cc22e10685a79b87af3" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;prop&quot; id=&quot;scala.sys.Prop&quot; name=&quot;scala.sys.Prop&quot;&gt;Prop&lt;/a&gt;[&lt;span name=&quot;java.io.File&quot;&gt;File&lt;/span&gt;]</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;prop&quot; id=&quot;scala.sys.Prop&quot; name=&quot;scala.sys.Prop&quot;&gt;Prop&lt;/a&gt; [ &lt;span name=&quot;java.io.File&quot;&gt;Archivo&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ad025096d077e9ce8d97dc295f3a045b9349ea23" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="81ca6d473fdc6de9efe7e297846276938377d54e" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a72e0348e1d50eef20f20544510b4a2f448ac8d7" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5e3c29255df6282e19184c8ef6c6b0d137c7accc" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3a72afc9f3ace702b66ac382ecaa8c9171ab4cac" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c2b4076085d4b968523607a7edcf68afa71c0f68" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8fe6e48fc9ea0019456d5282ff7a454ca81cf43b" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0e14c8d0babc1ac6955d22166e2b59b15a767e77" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4ec8d1e4caf08a3a1c3cc55d58defee724928b82" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="16ddebbf1e5c219745e5a59537cd9fb6a0c8549d" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="da5f3d6bfca85601a646114988d1dffafbbf71d5" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9419b8c43995e0257328c741e40a500fa2e6e9c5" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c74d3d6b7e5e12f3e4fbd9bd376370869cc0ba88" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fc7eb58f1d81d04517b265c9148a57271732a46a" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5155df3a46e0c36fd2ba73c4138a4dc66bd97eba" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c2beece5a61a0b873d4856df9a8ae0ad3fd1518d" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="35b3bc394dd5efc1868a82498a10a8254d360af7" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="eb9832da905d72a33308aba661f493ccc3d6f58d" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="24cb2f0112259673e6e22abc82bef8882f981734" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7d2d5ad93feecf6dc1b593d655d0cf5e0d6c938d" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3a81268b515a004638310d6685a02cdf6146d38d" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ad65fb6e1182e26757526adb05e968ede1a0a31b" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="63926214b216eecb74a94cc5a16960688d48c97b" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6d89135569b89e8cdb65b25bb060a831458425eb" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="07e3d3355dea4db4d786c5e519b29c31d5398e5e" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="40d2fd6b7247e0898a91bafa43026ba5a1d39ec0" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="08e25e5743ca03d05ca6e425a826aaa7a31b0d50" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="12ac80703471229a5ae4ce81f3feeff796a1c8e0" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7df703d794588e6f96020d05eef5443f34623e14" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e4e888e7592d88da3b432034b6130a92ecd7f516" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="190467c0a4adcfb9bead827cc3da1a8f5ee92def" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f60035e52492a63ef7a07e4283d2117db15e9a74" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b2c61d868e8d4df448878e946f5b69890e433ed7" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f087e2bf98a67b370d50ee60c38b8902b8ebc800" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="32912730c9a1dc52d7545ce636fbc40aeb6b75be" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ca5a73faedbe629512fb993a7eee14f38a68d3c0" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="afe13603ec523dec5d4de730f82057eeda995bf8" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="41ced53eceb925736f1f4881e9c63fc893dae82e" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1c1fc873fbbe85e348230abf715e6f2e229127a4" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="273c463f776188850fc5d80b976d0b08c5557197" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4f3adcdec934e1acbe884fa1b3b103f17a82bb58" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="208cf07fb496dfaa3ed0ac01b0adc98faa44b691" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e2d7ef8041951b206008e7155bc2fc77ac3c6043" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d9eaa031ffc0ceb2850086d8e246610418f05c4d" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7f1057d453abb2fd5d9589e4f2b785aace7d6757" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2ee8de95f769414bcd6f3d8fc51b8e120cf7c253" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a205217d48d6575ab9b93bd0b560c3673dd44c88" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2b7eaef5c7b5dbecd1ae991576c95f678bf75885" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;tecla: &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Establecer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="17baa03303dd079b1e41d1aa1ed761c8bd369cb8" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Clave&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Valor&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a69a5f31c527ece7ffc0a2de2a2db67795129d3b" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="359efafe0a9605754e98b7a51cbd4a504d18e7cd" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b4cdc09d83b8532c313643d27f79e0ba0fa22386" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="55415d3ae0b441edf86041aed6ad4866adbd43ec" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="28c42615952cce2acc3cb907c24b92e383017794" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2ccc51c484976842cb06a37d8aa08ee09631cc33" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;key&quot;&gt;clave: &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="605870bb69dae6c620c77f59b9c05059a20c26f4" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;l&quot;&gt;l: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;l&quot;&gt;l: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b97a4fb8726ec986bc35ec733ece50f6a81cc90d" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;l&quot;&gt;l: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;l&quot;&gt;l: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bb3c8c8b6576e52f51996c84c3cd2baf26537fee" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;l&quot;&gt;l: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;mc&quot;&gt;mc: &lt;span name=&quot;java.math.MathContext&quot;&gt;MathContext&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;l&quot;&gt;l: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;mc&quot;&gt;mc: &lt;span name=&quot;java.math.MathContext&quot;&gt;MathContext&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="03e0643391d74cf1820b45362264032bf0501800" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;length&quot;&gt;length: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;unit&quot;&gt;unit: &lt;a href=&quot;index#TimeUnit=java.util.concurrent.TimeUnit&quot; id=&quot;scala.concurrent.duration.TimeUnit&quot; name=&quot;scala.concurrent.duration.TimeUnit&quot;&gt;TimeUnit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;length&quot;&gt;longitud: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;unit&quot;&gt;unidad: &lt;a href=&quot;index#TimeUnit=java.util.concurrent.TimeUnit&quot; id=&quot;scala.concurrent.duration.TimeUnit&quot; name=&quot;scala.concurrent.duration.TimeUnit&quot;&gt;TimeUnit&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duraci&amp;oacute;n&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f32ea8e7c13f11f57c315a2c0660437f0dfb612b" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;length&quot;&gt;length: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;unit&quot;&gt;unit: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;length&quot;&gt;longitud: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;unit&quot;&gt;unit: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3da0856a456eb9bb6ecbbd2e1e75523a267bd0d3" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;length&quot;&gt;length: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;unit&quot;&gt;unit: &lt;a href=&quot;index#TimeUnit=java.util.concurrent.TimeUnit&quot; id=&quot;scala.concurrent.duration.TimeUnit&quot; name=&quot;scala.concurrent.duration.TimeUnit&quot;&gt;TimeUnit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;length&quot;&gt;longitud: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;unit&quot;&gt;unidad: &lt;a href=&quot;index#TimeUnit=java.util.concurrent.TimeUnit&quot; id=&quot;scala.concurrent.duration.TimeUnit&quot; name=&quot;scala.concurrent.duration.TimeUnit&quot;&gt;TimeUnit&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1ea1b604edec4b14fe436540135438c387898876" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;mc&quot;&gt;mc: &lt;span name=&quot;java.math.MathContext&quot;&gt;MathContext&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;mc&quot;&gt;mc: &lt;span name=&quot;java.math.MathContext&quot;&gt;MathContext&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="74215eedc2360d1d1adfe2de0ff47c839ed523fc" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nada&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b228daeb4cd693b6abbe4719cd2f7a7c648a6bc6" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b6fcc88f0a9c7930c769ba138fc2897cad8da2ad" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0cccf0338fc05454d7c9966ca1b2e6abe95d6e06" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6732c5facf3e2ef1e5ba2b8405d1864ff1bc4f32" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cbde3fd90967d6a1ae0172647ff871f00911fa94" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f28b50046870276f8e40639cce194e4e97eb5e1c" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c4a331cb3c52c4b7975e8770634a425418e9484f" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a0f86956b8c54a702abbbc0e070468828bca596f" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ac514eecc4e4e983f53c32eab58680ba0f0b73de" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bdbca45a3d4bc4ca3c0c5a6ade7c4237a76f58e4" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="092c11072ae42154db5fb950d3bd684339df36d8" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b46d86d298cce15641392b2bfa369c601d511d71" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3a08a53ce4ee8f9d2fdce1caec927571df8919cf" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3a70c5a93b09d968d8e44412f627d733646b40d1" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="696305effd2b2e322f0ce2b433e5d4e1292fe7c0" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;name&quot;&gt;name: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;exitValue&quot;&gt;exitValue: =&amp;gt; &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;name&quot;&gt;nombre: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;exitValue&quot;&gt;exitValue: =&amp;gt; &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf157a27942dc6b3e465ac2c1386c9f0979cb5b7" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;name&quot;&gt;name: &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;name&quot;&gt;nombre: &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Cadena&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;S&amp;iacute;mbolo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4e5275a2b548e378b81c290690d175c189e3fa29" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;numbits&quot;&gt;numbits: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;rnd&quot;&gt;rnd: &lt;a href=&quot;../util/random&quot; id=&quot;scala.util.Random&quot; name=&quot;scala.util.Random&quot;&gt;Random&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;numbits&quot;&gt;n&amp;uacute;meros: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;rnd&quot;&gt;rnd: &lt;a href=&quot;../util/random&quot; id=&quot;scala.util.Random&quot; name=&quot;scala.util.Random&quot;&gt;Random&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c26acf47f4ee64058a143187a1edccdacfb8d1f3" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duraci&amp;oacute;n&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c2582786a8c71f6f36d1b7c061967a518a3c434c" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;signum&quot;&gt;signum: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;magnitude&quot;&gt;magnitude: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;signum&quot;&gt;signum: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;magnitude&quot;&gt;magnitud: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ]&lt;/span&gt; ): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3d0bef42af8f05cf2138af1936bca61b0ef02d08" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../index#BigDecimal=scala.math.BigDecimal&quot; id=&quot;scala.BigDecimal&quot; name=&quot;scala.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../index#BigDecimal=scala.math.BigDecimal&quot; id=&quot;scala.BigDecimal&quot; name=&quot;scala.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;step&quot;&gt;step: &lt;a href=&quot;../../index#BigDecimal=scala.math.BigDecimal&quot; id=&quot;scala.BigDecimal&quot; name=&quot;scala.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numericrange%24%24exclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Exclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Exclusive&quot;&gt;NumericRange.Exclusive&lt;/a&gt;[&lt;a href=&quot;../../index#BigDecimal=scala.math.BigDecimal&quot; id=&quot;scala.BigDecimal&quot; name=&quot;scala.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;]</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;start&quot;&gt;inicio: &lt;a href=&quot;../../index#BigDecimal=scala.math.BigDecimal&quot; id=&quot;scala.BigDecimal&quot; name=&quot;scala.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;end&quot;&gt;final: &lt;a href=&quot;../../index#BigDecimal=scala.math.BigDecimal&quot; id=&quot;scala.BigDecimal&quot; name=&quot;scala.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;step&quot;&gt;paso: &lt;a href=&quot;../../index#BigDecimal=scala.math.BigDecimal&quot; id=&quot;scala.BigDecimal&quot; name=&quot;scala.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;numericrange%24%24exclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Exclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Exclusive&quot;&gt;NumericRange.Exclusive&lt;/a&gt; [ &lt;a href=&quot;../../index#BigDecimal=scala.math.BigDecimal&quot; id=&quot;scala.BigDecimal&quot; name=&quot;scala.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="58d9b6be45b3438cdfa72e21e66010bf1d23210c" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../index#BigInt=scala.math.BigInt&quot; id=&quot;scala.BigInt&quot; name=&quot;scala.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../index#BigInt=scala.math.BigInt&quot; id=&quot;scala.BigInt&quot; name=&quot;scala.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;step&quot;&gt;step: &lt;a href=&quot;../../index#BigInt=scala.math.BigInt&quot; id=&quot;scala.BigInt&quot; name=&quot;scala.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numericrange%24%24exclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Exclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Exclusive&quot;&gt;NumericRange.Exclusive&lt;/a&gt;[&lt;a href=&quot;../../index#BigInt=scala.math.BigInt&quot; id=&quot;scala.BigInt&quot; name=&quot;scala.BigInt&quot;&gt;BigInt&lt;/a&gt;]</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;start&quot;&gt;inicio: &lt;a href=&quot;../../index#BigInt=scala.math.BigInt&quot; id=&quot;scala.BigInt&quot; name=&quot;scala.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;end&quot;&gt;final: &lt;a href=&quot;../../index#BigInt=scala.math.BigInt&quot; id=&quot;scala.BigInt&quot; name=&quot;scala.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;step&quot;&gt;paso: &lt;a href=&quot;../../index#BigInt=scala.math.BigInt&quot; id=&quot;scala.BigInt&quot; name=&quot;scala.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;numericrange%24%24exclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Exclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Exclusive&quot;&gt;NumericRange.Exclusive&lt;/a&gt; [ &lt;a href=&quot;../../index#BigInt=scala.math.BigInt&quot; id=&quot;scala.BigInt&quot; name=&quot;scala.BigInt&quot;&gt;BigInt&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="2a93b45bb61d7a69f191768d762e74cf67295ed2" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;range%24%24exclusive&quot; id=&quot;scala.collection.immutable.Range.Exclusive&quot; name=&quot;scala.collection.immutable.Range.Exclusive&quot;&gt;Exclusive&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;start&quot;&gt;inicio: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;end&quot;&gt;final: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;range%24%24exclusive&quot; id=&quot;scala.collection.immutable.Range.Exclusive&quot; name=&quot;scala.collection.immutable.Range.Exclusive&quot;&gt;Exclusivo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3fb26cf65f23c0b704636101027a861d12024dbc" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;step&quot;&gt;step: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numericrange%24%24exclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Exclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Exclusive&quot;&gt;NumericRange.Exclusive&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;start&quot;&gt;inicio: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;end&quot;&gt;final: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;step&quot;&gt;paso: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;numericrange%24%24exclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Exclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Exclusive&quot;&gt;NumericRange.Exclusive&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="54147dc96c3e46c066aa22e619ab93b3a9c483f7" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;step&quot;&gt;step: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;range%24%24exclusive&quot; id=&quot;scala.collection.immutable.Range.Exclusive&quot; name=&quot;scala.collection.immutable.Range.Exclusive&quot;&gt;Exclusive&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;start&quot;&gt;inicio: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;end&quot;&gt;final: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;step&quot;&gt;paso: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;range%24%24exclusive&quot; id=&quot;scala.collection.immutable.Range.Exclusive&quot; name=&quot;scala.collection.immutable.Range.Exclusive&quot;&gt;Exclusivo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e6e933a7b27f23868c960ad6c14b3ea379df4d4b" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;step&quot;&gt;step: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numericrange%24%24exclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Exclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Exclusive&quot;&gt;NumericRange.Exclusive&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;start&quot;&gt;inicio: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;largo&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;end&quot;&gt;final: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;largo&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;step&quot;&gt;paso: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;largo&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;numericrange%24%24exclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Exclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Exclusive&quot;&gt;NumericRange.Exclusive&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="7b9fa2dbfb4039cf788745a40482efa4c7c4cc3d" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;t&quot;&gt;t: &lt;a href=&quot;../../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;t&quot;&gt;t: &lt;a href=&quot;../../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f28a3e0dc1c0820f209ada058b20ffcd837fa89b" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;unscaledVal&quot;&gt;unscaledVal: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;scale&quot;&gt;scale: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;unscaledVal&quot;&gt;unscaledVal: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;scale&quot;&gt;scale: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8b21ddd235f6bf832b04233ad2415bd112a3fe1e" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;unscaledVal&quot;&gt;unscaledVal: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;scale&quot;&gt;scale: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;mc&quot;&gt;mc: &lt;span name=&quot;java.math.MathContext&quot;&gt;MathContext&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;unscaledVal&quot;&gt;unscaledVal: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;scale&quot;&gt;scale: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;mc&quot;&gt;mc: &lt;span name=&quot;java.math.MathContext&quot;&gt;MathContext&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ed98e06a0f7273b03758d8313b024f2c20000bfd" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;unscaledVal&quot;&gt;unscaledVal: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;scale&quot;&gt;scale: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;unscaledVal&quot;&gt;&lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;unscaledVal&lt;/a&gt;&lt;/span&gt;&lt;span name=&quot;unscaledVal&quot;&gt; : BigInt&lt;/span&gt; , &lt;span name=&quot;scale&quot;&gt;scale: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3800112dc4cb26c6b3bde0a5af979e17b799584a" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;unscaledVal&quot;&gt;unscaledVal: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;scale&quot;&gt;scale: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;mc&quot;&gt;mc: &lt;span name=&quot;java.math.MathContext&quot;&gt;MathContext&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;unscaledVal&quot;&gt;&lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;unscaledVal&lt;/a&gt;&lt;/span&gt;&lt;span name=&quot;unscaledVal&quot;&gt; : BigInt&lt;/span&gt; , &lt;span name=&quot;scale&quot;&gt;scale: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;mc&quot;&gt;mc: &lt;span name=&quot;java.math.MathContext&quot;&gt;MathContext&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="10256a0b42fbbb57cefcbc9543be92efa1c22ae7" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;url&quot;&gt;url: &lt;span name=&quot;scala.sys.process.processInternal.URL&quot;&gt;URL&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;processbuilder%24%24urlbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder.URLBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder.URLBuilder&quot;&gt;URLBuilder&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;url&quot;&gt;url: &lt;span name=&quot;scala.sys.process.processInternal.URL&quot;&gt;URL&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;processbuilder%24%24urlbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder.URLBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder.URLBuilder&quot;&gt;URLBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eaff24d4d6238277b08dc19126b8b82f238427cd" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;value&quot;&gt;value: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;value&quot;&gt;valor: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="88a0dac250142efe0af3b62420f9db6c7470d0a2" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;withIn&quot;&gt;withIn: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;buffer&quot;&gt;buffer: &lt;span name=&quot;java.lang.Appendable&quot;&gt;Appendable&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;log&quot;&gt;log: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;processlogger&quot; id=&quot;scala.sys.process.ProcessLogger&quot; name=&quot;scala.sys.process.ProcessLogger&quot;&gt;ProcessLogger&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;processio&quot; id=&quot;scala.sys.process.ProcessIO&quot; name=&quot;scala.sys.process.ProcessIO&quot;&gt;ProcessIO&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;withIn&quot;&gt;withIn: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;buffer&quot;&gt;buffer: &lt;span name=&quot;java.lang.Appendable&quot;&gt;Appendable&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;log&quot;&gt;log: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;processlogger&quot; id=&quot;scala.sys.process.ProcessLogger&quot; name=&quot;scala.sys.process.ProcessLogger&quot;&gt;ProcessLogger&lt;/a&gt; ]&lt;/span&gt; ): &lt;a href=&quot;processio&quot; id=&quot;scala.sys.process.ProcessIO&quot; name=&quot;scala.sys.process.ProcessIO&quot;&gt;ProcessIO&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9ab5c3ebb0ea654e13b0543befb95dbd52059903" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;withIn&quot;&gt;withIn: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;log&quot;&gt;log: &lt;a href=&quot;processlogger&quot; id=&quot;scala.sys.process.ProcessLogger&quot; name=&quot;scala.sys.process.ProcessLogger&quot;&gt;ProcessLogger&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processio&quot; id=&quot;scala.sys.process.ProcessIO&quot; name=&quot;scala.sys.process.ProcessIO&quot;&gt;ProcessIO&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;withIn&quot;&gt;conIn: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;log&quot;&gt;log: &lt;a href=&quot;processlogger&quot; id=&quot;scala.sys.process.ProcessLogger&quot; name=&quot;scala.sys.process.ProcessLogger&quot;&gt;ProcessLogger&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;processio&quot; id=&quot;scala.sys.process.ProcessIO&quot; name=&quot;scala.sys.process.ProcessIO&quot;&gt;ProcessIO&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b0abef4ecb3e64df226c0f6267186b76cffad105" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;withIn&quot;&gt;withIn: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;output&quot;&gt;output: (&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;log&quot;&gt;log: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;processlogger&quot; id=&quot;scala.sys.process.ProcessLogger&quot; name=&quot;scala.sys.process.ProcessLogger&quot;&gt;ProcessLogger&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;processio&quot; id=&quot;scala.sys.process.ProcessIO&quot; name=&quot;scala.sys.process.ProcessIO&quot;&gt;ProcessIO&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;withIn&quot;&gt;withIn: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;output&quot;&gt;salida: ( &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;log&quot;&gt;log: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;processlogger&quot; id=&quot;scala.sys.process.ProcessLogger&quot; name=&quot;scala.sys.process.ProcessLogger&quot;&gt;ProcessLogger&lt;/a&gt; ]&lt;/span&gt; ): &lt;a href=&quot;processio&quot; id=&quot;scala.sys.process.ProcessIO&quot; name=&quot;scala.sys.process.ProcessIO&quot;&gt;ProcessIO&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3d1e4ae1462723172f7a09288fe6f277c5971542" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ]&lt;/span&gt; ): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="df0304f79cbf97258cdaec4982263844895b69d0" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8cd0ab150717e58ba1256b751ffd057e0d8ff105" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]&lt;/span&gt;, &lt;span name=&quot;mc&quot;&gt;mc: &lt;span name=&quot;java.math.MathContext&quot;&gt;MathContext&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]&lt;/span&gt; , &lt;span name=&quot;mc&quot;&gt;mc: &lt;span name=&quot;java.math.MathContext&quot;&gt;MathContext&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="75abfd4506b6f882a10b09dbce4f5afe1e2a13d0" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5d18630d91dd96a6cb7822fdccb909801cdb1beb" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1dc4db5ff68745c02e49b2752aa324d588edab88" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;mc&quot;&gt;mc: &lt;span name=&quot;java.math.MathContext&quot;&gt;MathContext&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;mc&quot;&gt;mc: &lt;span name=&quot;java.math.MathContext&quot;&gt;MathContext&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a2c38f69f5ee0182d13bdc3c0e169981d8e8f7b9" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;radix&quot;&gt;radix: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;radix&quot;&gt;base: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c112f1f0b31a03d755f240b06e9546495d96878f" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="613a5118b4db557b8cbfd2b7b91e7105b5c4a00f" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;mc&quot;&gt;mc: &lt;span name=&quot;java.math.MathContext&quot;&gt;MathContext&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;mc&quot;&gt;mc: &lt;span name=&quot;java.math.MathContext&quot;&gt;MathContext&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8813fc2eaea36b388d70b57bbf00529fc28faf2c" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;*&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; *&lt;/span&gt; ): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="02c90c6aa97ec48273c350987910e7ff12309f08" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;*&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; *&lt;/span&gt; ): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="5ed4e2ab7eafc7abad9e71a055ced0cdab700d3c" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;*&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; *&lt;/span&gt; ): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="e083132998663f1c3f998cc2f1fb2c5b573b44a6" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;*&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; *&lt;/span&gt; ): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="0acc93dcb678862b3615c34d7b5ef56699ff2975" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;*&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; *&lt;/span&gt; ): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="3a3fbb1b60cf52f4218c36ef093efac833ff84fd" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;*&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; *&lt;/span&gt; ): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="7f02d1d45762da276d868e66b1d25abe38e775de" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;*&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; *&lt;/span&gt; ): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="da1e137a6d720a302b7dca9a5976ef0e23e20012" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;*&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="translated">def apply ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; *&lt;/span&gt; ): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="22ae704ac2915a4d1f6972ffe02001f4179d1844" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;*&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt; *&lt;/span&gt; ): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Matriz&lt;/a&gt; [ &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="9cacb3a7283523d2ccd9da297b8a4a11a105040e" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;java.math.BigInteger&quot;&gt;BigInteger&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;java.math.BigInteger&quot;&gt;BigInteger&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b67dde42a8b018687b1161c43eeae157e2ddef79" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;doble&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c2e1db629bf7e77ae07927fcf0bd6fc7a35e2399" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="457092964fb8571d62136112cc7fef28faf1fb78" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3d56456615871105e31de0c1f775788560c5aa35" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Largo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dc57fbdf6102043efe7b4267deba47621bf9e744" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="79f74b08fe19cc7a69a8af62f765e996a18d8e5e" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleFunction.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleFunction.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c30706de132d7f0547ed6f684d0ac47e625c79ef" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleFunction.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleFunction.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d9e4b20e105919df165dfbea8e3d76275e254cd3" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;x2&quot;&gt;x2: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;x2&quot;&gt;x2: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dc46bb12ac5b9280f9becb4623c10a61374a3c50" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="165e7e4f155e85a5bb99e5948d46afbae8629de7" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1df352415905bf74a589bab9e680966718e9aeae" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7238e961d8ff8c6587021b1771d743d7495fb223" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Largo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f516e215becc132530fbf064e40ead31a087ff44" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="addedff7bb5f6229fcdd44dbb74e16410c9982b6" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaIntFunction.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaIntFunction.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="551d0f35558659fe4ccabbf2837e3ef949f7c423" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaIntFunction.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaIntFunction.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3c1d08555d35195ca2071be5923c0c4a6716a16a" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;x2&quot;&gt;x2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;x2&quot;&gt;x2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8bc78224d3e67c6d5b5785e88e752c15f96b2750" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;largo&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5eb092c4befbbb12fae0859c7a841e0d9873f166" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;largo&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;doble&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3a551326e811440357c1a67bbaf176e7e5b81bd8" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fe943ee9211722841d8081122046d444e6f9fdcf" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;largo&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;largo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a0020062b363c4a3f8a31b1357e2833c5b1bcdc2" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;largo&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d494ef03d1eb3e5ad763feb58fccdc5c10dddc7" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaLongFunction.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;largo&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaLongFunction.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="069ef0b5ec35e6a5f3df66b9ebd8658f9bccccf6" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaLongFunction.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;largo&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaLongFunction.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e80249505881611665331d913c1cb884cf798227" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;x2&quot;&gt;x2: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;largo&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;x2&quot;&gt;x2: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;largo&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;largo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bd3283023bfb992804ea832548ab94964b8ee751" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;x2&quot;&gt;x2: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;x2&quot;&gt;x2: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0ce332584f90bc744b362ec54b9f9639c96be428" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;x2&quot;&gt;x2: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;x2&quot;&gt;x2: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9e9c68370306c41dd9cce10d0b2f6d0a5fa03c6f" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaFunction.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaFunction.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaFunction.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaFunction.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6f2ffb051804ae80da8c74638cb930b2d8f084ac" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="87b7da36ef4ddeeb74712a5f1ea380fe6c37a409" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;x2&quot;&gt;x2: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;x2&quot;&gt;x2: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="50ac232431c183363efbfa886e93555d31024c36" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;x2&quot;&gt;x2: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;x2&quot;&gt;x2: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ee8e52e8b9a0d3b8eacd64081a30db3ca3450284" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;x2&quot;&gt;x2: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;x2&quot;&gt;x2: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="03d5a17119871e582788d5e02acbee4d2f9f723f" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;x2&quot;&gt;x2: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;x2&quot;&gt;x2: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a937b20e489f702160541ee967814cc3054dfe22" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaConsumer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaConsumer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c64f76224dc32900bbb8ae9284b191dd96aa181" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaFunction.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaFunction.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaFunction.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaFunction.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f7f3caee32471175341bed6558be52ba3ee25f9f" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;x2&quot;&gt;x2: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;x2&quot;&gt;x2: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a80ceca0c4e1de99b74bcb3f920567b5d1148974" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjIntConsumer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;x2&quot;&gt;x2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjIntConsumer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;x2&quot;&gt;x2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="713f680e9e9b629a136f922e6cc6634bd3ad154d" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjLongConsumer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;x2&quot;&gt;x2: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjLongConsumer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;x2&quot;&gt;x2: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unidad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a10d0470cb46ff2d45bb3f6a36c709574daf52e7" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaPredicate.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaPredicate.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;booleano&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="421846a0dc3dd246265bd5267877d393fe04aab7" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;x2&quot;&gt;x2: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;x2&quot;&gt;x2: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c13f00da231b7a68d8aebef1813ddb52533356a7" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleFunction.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleFunction.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="15c6cdbcf0fa224acc7cd72ffcd30cb980a78371" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;x2&quot;&gt;x2: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;x2&quot;&gt;x2: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ce9c84c61c8ce6888f09fb53dc0d52846c91a760" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntFunction.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntFunction.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f5c3433c5c9dcd8c5932b863b98096f66805690c" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;x2&quot;&gt;x2: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;x2&quot;&gt;x2: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Largo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="58cf9c5ae331620470b8c548cde12cb714a22545" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongFunction.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongFunction.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Largo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6ea9ed69c93cadc9059bbdb9af8be14ecb89fede" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dc83c34785af9092e572a664c4d269260095df63" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;*&lt;/span&gt;): &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; *&lt;/span&gt; ): &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0c1d514a273075088c8ce2718d5cf956a0e7bb9f" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;*&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; *&lt;/span&gt; ): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0077c8a4340338818cd216ff6297d6bf061d0653" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;*&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; *&lt;/span&gt; ): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d8bb549a95fbd825df4538b89b25958456086c4" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;*&lt;/span&gt;): &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; *&lt;/span&gt; ): &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d402c265ba4052c3567e2390a15bccc62dd8f26b" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;*&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; *&lt;/span&gt; ): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a5aa05586252657ce1a3a36df64f095c299a1e4d" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;*&lt;/span&gt;): &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; *&lt;/span&gt; ): &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="61dc42f1da3d3711a2b56d3c6fc5e109690be61e" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;*&lt;/span&gt;): &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; *&lt;/span&gt; ): &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3b6d326839a2bc61e5ebbeb575ccbec08cf1d8ef" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;*&lt;/span&gt;): &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt; *&lt;/span&gt; ): &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1ad849fe3f998c9a77ac47ee6ebc30792997894f" translate="yes" xml:space="preserve">
          <source>def apply(&lt;span name=&quot;xs&quot;&gt;xs: &lt;span name=&quot;scala.collection.SpecificIterableFactory.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;span name=&quot;scala.collection.SpecificIterableFactory.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def aplicar ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;span name=&quot;scala.collection.SpecificIterableFactory.A&quot;&gt;A&lt;/span&gt; *&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SpecificIterableFactory.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fdc26e188dbda057e1e7c3c81d3b09eab34b08d4" translate="yes" xml:space="preserve">
          <source>def applyAsDouble(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def applyAsDouble ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7c9d1ee78ee174b67fe5e8fcd4eb7fbe844e459b" translate="yes" xml:space="preserve">
          <source>def applyAsDouble(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;x2&quot;&gt;x2: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def applyAsDouble ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;x2&quot;&gt;x2: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f6e2d42bcf3796b85f27e8c82637fd66ad8875b" translate="yes" xml:space="preserve">
          <source>def applyAsDouble(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def applyAsDouble ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a30dec9f08994d38ddf640d216cae13950a61e0" translate="yes" xml:space="preserve">
          <source>def applyAsDouble(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def applyAsDouble ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="720882fe4897508dd1576f9f63402a9e6f61dc14" translate="yes" xml:space="preserve">
          <source>def applyAsDouble(&lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;x2&quot;&gt;x2: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def applyAsDouble ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;x2&quot;&gt;x2: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1640a9bc14bcfd9358c0e3888b51cb7764496ce7" translate="yes" xml:space="preserve">
          <source>def applyAsDouble(&lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleFunction.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def applyAsDouble ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleFunction.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="385cfcea046d6e73a512b7cbb8526e7abb40e0a5" translate="yes" xml:space="preserve">
          <source>def applyAsInt(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def applyAsInt ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8ffaffe605237607fdf3131973ba1b93fae45092" translate="yes" xml:space="preserve">
          <source>def applyAsInt(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def applyAsInt ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dde750c2e0a499dd0dd56ff810339508277859e7" translate="yes" xml:space="preserve">
          <source>def applyAsInt(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;x2&quot;&gt;x2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def applyAsInt ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;x2&quot;&gt;x2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="993bc442ece785ebeb4c51e410ef9a2e34222bc1" translate="yes" xml:space="preserve">
          <source>def applyAsInt(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def applyAsInt ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a3e9eb352fcf9bf3a8a4c10ad8e08001f6b89fd9" translate="yes" xml:space="preserve">
          <source>def applyAsInt(&lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntBiFunction.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;x2&quot;&gt;x2: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntBiFunction.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def applyAsInt ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntBiFunction.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;x2&quot;&gt;x2: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntBiFunction.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="adbfd33a903ef617285a3583f1670f791d846515" translate="yes" xml:space="preserve">
          <source>def applyAsInt(&lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntFunction.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def applyAsInt ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntFunction.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="97c8315bf6a49330304b70ff3d48613621369a7d" translate="yes" xml:space="preserve">
          <source>def applyAsLong(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def applyAsLong ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Doble&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Largo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="61af8824d5547fc366c2dc7f521a7589aeb1972a" translate="yes" xml:space="preserve">
          <source>def applyAsLong(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def applyAsLong ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Largo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0d5785bee92ee84ccf91336191efef82534dd36c" translate="yes" xml:space="preserve">
          <source>def applyAsLong(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def applyAsLong ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fbe0aac6fbeab7b356f8e06473a84607b749adec" translate="yes" xml:space="preserve">
          <source>def applyAsLong(&lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;x2&quot;&gt;x2: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def applyAsLong ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;largo&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;x2&quot;&gt;x2: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;largo&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;largo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ba887b018f31610e3699c0b1b2c0581d3ee2714" translate="yes" xml:space="preserve">
          <source>def applyAsLong(&lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongBiFunction.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;x2&quot;&gt;x2: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongBiFunction.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def applyAsLong ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongBiFunction.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;x2&quot;&gt;x2: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongBiFunction.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Largo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="850065f00cc8d63873fdf1967ecc510764a40ad2" translate="yes" xml:space="preserve">
          <source>def applyAsLong(&lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongFunction.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def applyAsLong ( &lt;span name=&quot;x1&quot;&gt;x1: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongFunction.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Largo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b8b2a591793f2bbf216151348c74a5c540fdb206" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cb923524396630dca133372758c9e581096fa681" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b37e51a5f797fa7bf3be3349ce34eba292f3bdd6" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a784acfe45fcedf2cc803badde341b547268b9cc" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ca712cb48b2adcba76450040a8bb36768a1b94c9" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="71da644c34a85ae0dccf5d0c4221050223780379" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="170067b3d659b382e8abf8a772ab76a9718fdb1a" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0833fcd33588a71611bcf4a8e165b9dd2b73a418" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3e3b0f2c8aab4e1d82ad836962e699e47ca55b31" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="47a9da0278167d54076ea6c7edb7be2c64b6e9a3" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="978b5492b1848e894b6a62a966eea598ff3ffa2d" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ec9735b97ed448cc21977d5a6595dd1ba29a9693" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cfe336bee87f1aef2871c37a40d6e806a1f153a2" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fd292f8e59fa89c26b2a1e250602bad9069f3cba" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bec3e10732dfc45169ff9bce39e36a5ef213920b" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="04c7382585e0d24487b719318d22110855921ed5" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e40540a4de87f47a883bac3d7bb1b755b76df7ae" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bdaef5f30bb4b8d1e6cde13b0685d2d51b66d88d" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3ee8403a53001d4c68b2de7ce8623d0f398bce99" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a4ff0a7728d7b16a7792865efe8198d6b14a5326" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="336007eaa41015b7bb509d59b80cb56fc9c5d0b8" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="823e75744143a72d31c91bb1105218df8212476c" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3f36992b06ebb2034d490fd2e1497ab974cd055a" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0a67a6a2b7c52abaf49182d172d0be64773ceab6" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d98cd1e57ec8ca1a091469c10210ad8484568f93" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="76adf3896030d88540285930d9920500dd1b635a" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6b379e6771e952e78c7b728d11c1ce97df3c6a99" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d6a5367377e549d0dc7fae245fbf866755cb23bd" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b6fea909060692c61b7f96be4a63a7950afd1bac" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="faf957098a8f31a9637677f0539b8813c14a9216" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="78985b339e0d8558f036d91206a2d571dfa23d7e" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1b051ed49d132d74e7ffad87a6d073dce187aee7" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e11a958226dc511057ad12b0122cc3383d97e1d7" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6a9862ca7a70904499eedd6bc064a094c4dec4b5" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6147e157fb86bb938f8a676d79028b4740501091" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="446c112729624f4afe710485fdffff33bd6f9cfb" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="deff12a21f9ef1b95c97dc6c6de253e86fac0386" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="593cdea0d9dc22ea3d34542445350b804ed6bb7c" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f4506c7bcc2a4a87933df63d6b8a0aa499997813" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b907831e30ea94b5afa680bb4795ee8479966eda" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="eab1144d644ca3dba7fc74452c83241c9300c531" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e52e22c44f929439e7d840441df28bfa80c6cb34" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5780521668cecae77a3a69c6be34f434e961540c" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a0054f1ab615b560528ece9d5656bf0233003dc3" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="23d9648cdd12a413f84406b36ff5e5e4a54eaa1a" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2ec0d21999178ee01a8d13309c862473487479ea" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c2c6f8ab83260998f12b36d6a3cf4b33c221eb82" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2b3a42ca4ac1711e0196fedad695b551f7a3e9cc" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5e82775ac64ba0045703cfd53c223bccacd4f4c3" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9e96b5bc2710fe68b8b4e3b901e7e087349b9ef6" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.PartialFunction.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.PartialFunction.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.PartialFunction.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.PartialFunction.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.PartialFunction.applyOrElse.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.PartialFunction.applyOrElse.B1&quot;&gt;B1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c96cb856bd9b70211762b920b0926c797cde1ffa" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;V1&quot;&gt;V1&amp;gt;: &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5dc0cf929654f23bb76efc7dc0f3026920c13b60" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;V1&quot;&gt;V1&amp;gt;: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e751c6f2d760b9b660b44e1ef256ff46b8451945" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;V1&quot;&gt;V1&amp;gt;: &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1a1e2b513483d336e8616a3cb83d7b7aee1b0368" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;V1&quot;&gt;V1&amp;gt;: &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bded5f4368887e9af7e563ecc8ad04feb2d828d0" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;V1&quot;&gt;V1&amp;gt;: &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5bf6e03f60450d7c768889b525057604c74035b0" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;V1&quot;&gt;V1&amp;gt;: &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3cbc6987bf05cf2fd0fe7b10ab4fd77873a84623" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;V1&quot;&gt;V1&amp;gt;: &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="28672da7fff5898cef17811dd0bc07a2fc5fcfbb" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;V1&quot;&gt;V1&amp;gt;: &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a9795671c70d07a9e34096da52f3c52b0c0becac" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;V1&quot;&gt;V1&amp;gt;: &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="13515cefa38081084e5ba45ccb997dac84dc17bf" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;V1&quot;&gt;V1&amp;gt;: &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1d307cac61b09d9dcdd18fe9504db58375eaf8ca" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;V1&quot;&gt;V1&amp;gt;: &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="73f845fb933f45984299c1f22936293d0bb4d8a4" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;V1&quot;&gt;V1&amp;gt;: &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e3ed269311bc14c73ab01a8efa525c53a3cae495" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;V1&quot;&gt;V1&amp;gt;: &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7042cf5b97dc62af563a41bb0971afc1737b2e04" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;V1&quot;&gt;V1&amp;gt;: &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cb68952cfbbac1148fd86bf67f87aaac2d2832d0" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;V1&quot;&gt;V1&amp;gt;: &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c4b79f0da3a65060ded114482bc9382c084b4b0b" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;V1&quot;&gt;V1&amp;gt;: &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4a76a3e0785ede9ef88c20998ba4e98ffa0aefb0" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;V1&quot;&gt;V1&amp;gt;: &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bbc41d06f54460cb67ccace9a776b688fbd5e1c3" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;V1&quot;&gt;V1&amp;gt;: &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2b3f06d4d41157785854fd33bfda6c700d400024" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;V1&quot;&gt;V1&amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5934097e6fb5c377ff632b5a9f99e86031386358" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;V1&quot;&gt;V1&amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ce26e42d72349a6aabd92d2f3c2f9b67a2aba3a9" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;V1&quot;&gt;V1&amp;gt;: &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0df0e9ee8419fb1f6e1d24ac1d061142b0700ee9" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;V1&quot;&gt;V1&amp;gt;: &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8fb718cbe62c9388e8978dfd7662cbd9ff307fda" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;V1&quot;&gt;V1&amp;gt;: &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="43659b31ecc1c6d6cdc28381ecf627499f091ea4" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;V1&quot;&gt;V1&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0f8012c1a7faa899cdf8dc000e0c267b4448fbd1" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;V1&quot;&gt;V1&amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e0f2f95c66f36e76c9ac1740cbb2052c338791a3" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;V1&quot;&gt;V1&amp;gt;: &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f03b3cb30f1ef6662f2b99f7bff5cd8f327f9710" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="translated">def applyOrElse [ &lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;V1&quot;&gt;V1&amp;gt;: &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;default&quot;&gt;predeterminado: ( &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
