<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="scala">
    <body>
      <group id="scala">
        <trans-unit id="73baeca9fe7e60446324daaa73e40cd7a9e8fd8a" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14cf2331ba37666b79667a5a6464270407428697" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38aa5d5838243d7521520dd0a66f2a413a1cbddc" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b79a3bec423c43f364e6cfba00e952c97666f1c9" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="403dddd648c3b29e6c9353278f4b482b64e52d2d" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7c17d3ebe9cfcf3ea9b928ffe06fabd475fc1e9" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50ac2f1e099175cbe2408a9dae5e353efeb3e34d" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc07620b686b049fbf1d27d0879156784e95c157" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca2573f6e912844aef38a5062e4fe12ffcd9049" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28048509697405973aef21b9289246fd184d3bb5" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b01034e5026dd84c1331d15b6296558938da4b" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224a536fc5021278f08b7ee469d975696c67ce24" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df4ed7e3ef2c4623c0cf9b4f1c8f96394c43f04e" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0286be36ce59f1844adf6bd33796be282a2be2f7" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31de97494a18e909df5cecfb7d8cdd5601f68b59" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03026a188bfb51edac2864f1fb0764526a9cbae0" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a36a425f7a2141f5a62c2fa779275472d7c768cf" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91c9c7bd7ed38a2aeae3e2da4c43f3f5392da374" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9d0abc3cdab9ab2d527563035f665c5994a6488" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da8c258047675600276f9863fd9318f11c081f01" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06b3dd022876c92f3d41e64ff9ff5f1c201730f4" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37f783f7773daa90e993ea509381cbbecf960f96" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b0aebb88850d0652572f10b53f9673fa53fb88" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa73054633bf8832d2af3483096160267ca0d5b" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d99563c01cd6309210788cfdfcbd4949615c955" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059498a05477e857a1f65c01401feb75c0aafde7" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="964c20b8bc9035548182e6951cfda59fc0696d43" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="262118ca1941ea6c90a818966aba1faf7af7c3fe" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0b0c8b97fe16ce893767944e454be63513cca6f" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af4de4c81ebc0f27108f8f0f8e6bb5672a8e8278" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65f7ba1fecd49a9a2e8e88ff19097ecec8037447" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0991374bb47e588e0348d868e93fc82bfbce6578" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e0a222c89cc109a0297597212e653368791509" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa85ea5ab2dc2c534ff2bf70ccf5f23a207a6ce" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1d466b1f61924f481b648fb743c25b93db696b2" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a246c870ff764c74bab830f77d3a11a1b2b5c080" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97028b5b70158b2e0fc2f70564d72bc0d49956e6" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd6b092c5b7969487deb64c605b8dfe6d86ee9e0" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e51f8b05edce53598b02a97e91dc0ad4fe37048a" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32ab0c235318603685362d8fd3713f11814ea104" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3398c24e4cec2fffe46ac39212ea7b78658c24a1" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;immutable/vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;immutable.Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e587253c68f4a51bfaccf3349250d1abdc578534" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f334b14e8d0e2448987c2fa667ccf3d57a25b04d" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12ba8cd0a84202305488b45ca25bce4972ddad18" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f7db42cbc5af67bdedd5c7504f736fffca5881f" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b62887f63b8f0f99824b2fa2505fecd78fa9d2bd" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47dacc76742e3508c4e11cf0b47d062b2eb2afb0" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77bec46bac68d9b6b9561135398e6c8ed1643fb2" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a98222100a36e7bc64d89d81a58c5be1596bcfe" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7693ad60f3b76b949e820aa564c13fe2e84a172" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eb5cb380fbe1563c0aae1ce1b2ef9f7220a621c" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c3e966cf5f5518666a25b39ec8bb015fafdb0fb" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="176c83741ff05947defa4f7e76a5761573a19bd9" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58b98bbfc329e88479154ea33901883d1fa632f3" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d80279fbace1759bf94f1819be661226b76def85" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6f8b96f0c57d1d43fd19d19956f6436f3c9c952" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="069b938c71f2c39a2db8c0d8ab19b2a0a0192a92" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="628192758ba70c7e26ab54ac1203255882fe9482" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e55f6af318e687a1f13e7435a1f1457c57ace0" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc8a22f62a175761640fa335cfad878a0172c0a2" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e5ab8f6349b2b6f9d43f7d2cfa24535633b740b" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99f9d570e39f4c311b52ab2d7b362c591a0bb0e0" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b58a3e38e5875b4e8e454be845332a1722cb370d" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca3e9304eeace1309af5fb3dc047dff73226d19d" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2ee53484b3b0d372d20fd589943de9165b78d08" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c4ffebdce8b397f9a0477e993e322fcc06238d" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c022643f7f6b47a09523d2b9c5fb6fc82963fc8" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3dd7d522d8b63e94e5aada76124e792c9522e4" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad91f6688470b7e48f00377660b7b2455c340f51" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1eef282cfc733daca5c6566dae21b6187f92833" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1199da218cbb94b84062555d9ace28aad44721b7" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9efd3fbc451d5d87da07008989b7f007e217a5b" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18654d2370eada9cc518c89fd27bbe1e33928975" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba847f931ae432106acf069fa9445eb5d37cafe" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c2fdd68f003f42e227f94d5717309826a5e8fb" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="166c4be68c4720aba13b974441afb32476ba859e" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f24dad69e7b4afa34e1e26264ba41871a75f4d26" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da86470d45b07fcf6079c62b7532352d97da3fe6" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc229ad854f333b7aee76a9cdc525539029fa76" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a18d340842ad6e844196d9ec2228b8bf5099e6e" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e2a43edf24f45d37b6fa6bf2bbe6be00e1c3a54" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e613ee837d25b23b8d180fef372d6353ea3c491a" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad58410e3101a2724b27ed82c9bd9d5525bff6a7" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad92ceb28c1719520f4c567a671d9f89d13ceb7b" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d03e0e332d4081d336d3373217e421e11592e626" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a7615151273158eb8274d5227c3c79940c6dbca" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f69aa11c0d164e573ccb51a512a0121141b0ca89" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb9d48f9e5d349ee7552a00d5f1e5ea4b3c56c0" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97d40a564274a6750ded3e96b750cc0e3a898fa5" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23743152a2042bcb2da559b0c81b36f145058db4" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ac55719bec4da557a7854dad9ef6f46bf3e738" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e6da59cf8a269456959627f8b92b176071b03eb" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd98e126b0c33e7fce8640d194f49928d603e7db" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754ef4bae89bc756900d86f76f7a12bce993faaf" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="735252e59e1c3b168485ca10bcc59c42389b74b8" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef1fddeae39928e4dfbcd6022c1ee14469dec80" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aafcdf4bc1cf95522fd4918f37257dac46059496" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae555d08b9dd2672bc49aeaa1b5a3a53d43dafdc" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da0df574a921e4009cd9c26c8a7b7d84ea51cb7" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dff0231df99c6e472e2ba1976974566013214d6" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="893650f1ba3ac271d4284fb442922f57491eb032" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="667a161ac7603bfac1c754bb6b1ae320a2064c8c" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b02d039850737b96e9694fcd262479d4ab6ca6" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="384f4f1f4016903b97f041f167e15399deaedd03" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79102c2d4db73f4a1cfa43ed66dd4058e31b6799" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee8fcb5529430468f78cd47de7f0682c271eb3e" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d19bf27f9682d4a7eddebf395ac557fc1d16f5" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd43120028f194b91af4e9ac36dcb78f887c3b95" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da84d458d336786cd75a6e3a43d1624565ea342f" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc654d867fd03fe9f648210a3d83fcd795a63325" translate="yes" xml:space="preserve">
          <source>def toVector: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce4c65cade39e612334df4a4ce7af43f9506605b" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../../collection/factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6693dc2f5dfbbd303fa409594491bd12c36e3108" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../collection/factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="635f02d5d4769b7cdf6650de2073ae5f0de3659e" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../collection/factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48d3037462d5d1269d2ad34689c0b56947e1a7c8" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../collection/factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;span name=&quot;scala.jdk.DoubleAccumulator.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.jdk.DoubleAccumulator.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc533b6ee305b413a1ef12d1620513cf8179ea0" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../collection/factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.jdk.IntAccumulator.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.jdk.IntAccumulator.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5ab802a28f5db867be751dd168b0d693fd6b5b4" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../collection/factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.jdk.LongAccumulator.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.jdk.LongAccumulator.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e424fe4f08ea91bf25040b53dee5f1d80f97cee7" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../collection/factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="003caeb468efeb4e38a1e1370285ffc714e593ac" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../collection/factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f55627f727489fd3cdee7a252750fa829f6263" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../collection/factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.jdk.AnyAccumulator.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.jdk.AnyAccumulator.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96540c6394dd421825ee26dde618bbd3afd04a97" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af700a0db258225f63168d377df5ba7eab305cd9" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="809968b9c383be6148ab524913d8cd1a2ca0aa37" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce2b3a01ae559dba81b05d4dd5200775a490dd55" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f64669676f292d07bfdc825a16a4e9210e156a2" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9071973cad056cdd26f3a54f52905a7328c0bfa4" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a9210294a9a86886bef713a5026835fdf60634" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15e45680f6ad1f228063376f66a1f770a2e13ae4" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4384125608f962af0cfed4efa8d524ad5dfd230e" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75376b2b30aa6f946becc3d97b0b36f00d18f7bb" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="142e5cc6274fbe2bb74c4ee3a87f0f9af10f1f7f" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c0693836e22be9c811f9aa7f3acd9cba19f08fe" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2120995b8ec25e93872f7a3202fcbc526b2571d" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf25161210e3e04c6fcdea679ca0deb2875bab3a" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="301920e52649b453ad59e9ad690af744c8339bcf" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de639c0bf5e30dc4f170b90eff8c26de5df23d23" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5efe0d98d31563aea0ff6f1bf83c139324fdda8" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e765ce373258fe82b85f57c9944de143e09641ad" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a6b6b36ed54f980cbefca12ee37137b53ce972" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c336aed89f4812d592e79edffd555f34109a713d" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90c2f9333d1a567a241cd2dce8945426d33caf78" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b8c87bec2f99a6dedb9b4b041ff805434daee03" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28c5ad2e9d6cb038dd4b0f8d0920142f31580e4b" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c26de01b68df437da67d90844a4e8745c4ff1c5" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8534281cb33603589760b0afbb885774c479b249" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc4cc25a4008456ae34b2437373948600f15394" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf1a848aa59e4edc123a0bf3cf4c0051cb1df3e" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f2a50b35e6041bbff119cfa442c040ee57df687" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52885db24ce15a04632c5c0068932dd897fd116b" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5864b3ede66c3b66f960a3068ec412e0293b8b28" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8071ded4df5e2a13a3cd104afd36eb80ba9d26a5" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b37af759ecaa3d28a3f0d0d744c1975ada349e43" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf5e37d6db1fd4fd606056d7fd48d64946d1e5f" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7da4658235661d9bbe94f09bd0011b40f7eaa0d" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="615d861b6a9a9f5521e611df2e70b65cc4c47e63" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e705dc757bfa3e3b65b2bf64bbcf1fcfb1c62f" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a86cda7c6c97c7d8db7e34bf2f52a73e14989c90" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1015e03c6d086570836d7e60cd5c2f7c262b6a98" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="925a83b2a64768a1236618a5929b9ac07830185f" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="142f44f86622d8d795d18e94e8534b286d8925ad" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e8aab3fb9271c8eac83ed8e526d08a0098f2504" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cfae553dd269012fcab783fb7e8c8d9972b82c8" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbfc6f69ae82ad4ac3ae203b8ed42eb1e517d0c5" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b0543a87aab2be43e71d613dce24c79250fdb4" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e2988ba49c1516cd838ae7fbf572abbc300a84" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d27336ae1f85db9b2887412006d19c50218b87" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36efb63812ea046331b654ce38aa878f843ae916" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff9257bae752b5ed26cc061bc918452989ddbb24" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f337e757198e3b5c3d0e2d13462c0b7ee759159b" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3b35aee6aa576c123fe9b0959a7ad9b55ae0f4" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eb484c672f1c005f798da4199b812c8d829ef76" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a0ad2514ed866bb2b3c3b71653c93ffde04fd80" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86759bb5555a269e8c3d9fb7df8ade2395bc5d1c" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26199cc6d2841c36ba8d6092967959a56bc9071f" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e34fb24d7ad291a0a1444bf4dd927cf9e00ee27" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977ed669a52d3296ead3d12300f889c7eaff2ddb" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae89ab365bc950f1c0619207e2bb004bf542fc8e" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb839daa3a8fc350245f6c50bc30c661c5ff3060" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f2578793a5fc076efafd6340cc76d6e232e42a1" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07b4fef8c66aeb9e143f13d4ff50cbe01051bd5" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da363805c919ec6ff3702b8157f3afcae77549ff" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e0a6bd2f37323a6c151d440342a50289969e14" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ace2805be2f932547990761fbc925f5e25b67ec" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43ae6b11c9f589b276e921981c57b2df38068f11" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cede2855b69f45a5caabaceaac9d75562e45bf53" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2935fab48b2159683abd87cae0c565c09d1b559" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87672e8a3804291cf497579b6b073fe8314c3d40" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573ada031efc87885727d8212865bda7d73b0a42" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf840e04144917f030f8ca09ca51324cfb140a9" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ba46b21f50fd03659a9e675c047cba584aba9f6" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d30f8136b1ddf3c24557a7563721bf5310caff55" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ac8c13ebbf5a2ec6e5c33f15480528eaea416c" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1635deb92d16c0193a9adab42a20c9093ef9ad0b" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e00b99d8133c1a3759c92e7c17268467e172b1" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="564cea33ae005f70f6ca296ef33f463b9c15ac32" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4c4098e173166fb9d34a4d700ae61a4985726ba" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af1843ce4083d922ca5cd15bfe9f1e825804fa3d" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5efea3405561933d25adf300ace55846106cbd" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f82de7a36e5a9efb9a5d703e12cb7cb332d06f66" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="725441c4840f988235b55a358ddf9560362c96cf" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64a96f8d019ba6380f381c997b5e61523c8b07ec" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12ba3393d60d74b45d8bdfb400036cea92eebb9d" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09136feb29ccb03f6b4b93c7dbdf626107a9b1bf" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcd42ddebfa0e5b97f60e937fcc66b21dc2a6849" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73027a017413f676e9d37d79ab7ba576765a6880" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1e8f8fa4edc76a48ac6777b066c91d5ae5d3ccb" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bef402a83f9718be2f4e7da5f3a437d24de11c12" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba54a2926e042c6846a17ba69d66c9ead3647151" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="971e9241ed853b5ba5daed69f1cb5399b9db6dee" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e644f7ea949fee9ae9fe80b624dc6b88a4195a" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="348ee03fea218612f619758f1092a48738890b18" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72ca4ecc8260716f0ff00da258b2e90692ae9b8d" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e39abd6618496486570af4348b65bc19042c822" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d05f90d84ed0376a778193a1d50e3b19624bc877" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b21e04fd031097129b2933b7900cc24942c6d7b" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7100f948c498006572304de7e6e046a3ad2a2d55" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a06833ad676fa4bdd3b6363b980ec50f9d814b2" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="332830f5c4980e88fc9900c67142886206a5a114" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52fec66875ffdb3dbaa1a8a0f73087adc277bed8" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="385de8d63e26c6c1347da8ec9ba90262e2606ccf" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba348a16b35e0e11bd4139507e1d5933aed555a0" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe9b031c01cd7c90202a66930ada219ce54cbbd8" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100e941c1faa77c3e8b42e7537c32085e06f945f" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d49c242db9ec27ba626dd7756944a160820dd979" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab40cc3d78ba837f507a4eb2a494743c9504d49b" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7314ba7f4a0cf13e0b9bddf7e10a2a1ff94df5ba" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a65f382bf18b6a20e0934c144e36961a8bbbd9" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a0be48f3de7b10e9ca2c806bafa5c7d8e66c976" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53e7fc788e9be7145f186f2b589f7e723989cf44" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c09c5d3415d23fc4a1c88ae2c734473169d20b5" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="406326df5daa58787869223d2c3fd4fe71ec566e" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d2650492ac54b11ded2ee6696aa0f3a9f9d352c" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f58f0634eddfd3b7edf5e501cfaee33ac2ec1b2" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1728659dc0fb11d7e66a32829616a9ea55d84b9" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddd1a16564aa8cfb03f8ce11c2032cb61310a461" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6616f6b954f812e14e68a1f52bb60af23a9bd595" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ba4cc7710c80b33ff7409b1d44a7183ae21a7d" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d801a65de4ca6a89117eaa28aa68f37ffd768a57" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de2e636cc9befe57ef85074464c2ccd16d20adf" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="388bc01ef239efb3dd90b18e5027ed1f454197e0" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;collection/factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e7740c1a878ea8c4fa09e220aa625299e9954cc" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;collection/factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c670c197861424ee058d731a5849d021cdd3987" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;collection/factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea3f62354edd45fab21a600b716f24c20a956e3" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;collection/factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d5d2dec65a93788904254201fbded7953836c87" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b5cde3f0a9bf22a465bec6dba15a9dbd0eace95" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10046ac145cf175bfbfad1e37f332896a34d9d2" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff68fc4996a958f0ad00b4e415440e94a42ab04f" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e7394a23f879218886711436d173fd55c6dc4d6" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e6742e9dd4f5d6d10246e893ba71b9987c0dc61" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8860808719fada8870340b1486c4cb2b108d4ed" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68edf8b9d77c033cc25d1c1c2e88a749ce5ec13a" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3494761af6a94e94ec34cde8bf7f4a6c7466ad70" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e9e5ad804c869d86b16f67663ffc8717d84f311" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64bebe51f89eda177f37f662c05cfb6cfad7fe2f" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4454bccddd831fae6cc9a742d09bc48c78e53de" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff4e2949423729056743a4b47b50f92afe523d27" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561619aa57b594a01aabc66199736801089445b8" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4541620c2beefbaac5bc01170ed8b73f13630463" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d9181bb50e8c91102b9951a904f7224cd79e14d" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b1562e34873f477272dab878bd06b187010779" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99bd6a071edb066178acd24c386ab70974e8a211" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5266d0bc54f2dc086f3d3d768cec4b0c7a849998" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9fb5e0ed184a1d50b37aa2b2aeda34ccba4a62e" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ddc566eff66b4c3252ac903497271dc970770b4" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="891e498e58a8d57383383952c11f1901385aa67b" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f88feafc01805e4c9d77ecf19cebf80282de78" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7289a8c28018aef77ee8f01960e9916a8ea38b91" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdcff2a0fc4bbda7c4ac9c09c266d5ca011b207f" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32490a89eb6b9b63e4b7bccd5962a1b4f020768b" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf0e141df6c234cfdbda29165d8abf98665c0ab" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f375c782a8fd8bacf79d883b564942a18ae1df" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;], &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29c7a19ef397171aaba7d8e5fa2c50004943a083" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c2d7b371caa292eef19b1c80cb10f34fa9d4a67" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a7ab8353a4c20dc05ee33745e500208128ee067" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51bebfe539a20d8b50cc102f12d68506cd8c9e21" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e31215b110df4e020e1bbebb30d81325166e0ec4" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d0f9f1ea690a7f4a308bbf5c0b154a469cd74c" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f63696be290e1c4333e53b596ab106186c6eadd6" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c62e156fd70dae3fcda6bf74c0ce9c09adf810b" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5618289aff03abac9c14a7cc6f4ccff6229407e9" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="145b990aa65ffc5fceda8932a4e06fdaab41f5d7" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="338fc4b9f494b85fa5edec05b541fd22d95ab18c" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="710b2d7da8d25b27d5560529acdff3d779c31d80" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05463b73a9ee3f7254ff93f285a753d5ca5c16e6" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb22d72c11996ae665da66109747346640983315" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c4634174bd254b4c6ed9755187551aca2b1b24" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="076fd0277bae5eaab8e61a3be444d5ad0715dd40" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6e8c8b49a3894d855c5ce9d0cf1f5492d09566" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1815ff6707afd63fe0bf8d3b5be63aa95ccff9ab" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0309134e0f780159516cc279d5eea6b9332cfed" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc51d2c57db78b8168224bff9b906c58b721dc2" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2390a542fe52298df27f904a7478e9a6704b7cf2" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a802ac5354472563103af74b496a0c8d6e111e4" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e3fe9d550db5b3b02ca2f0d334c256e14f31986" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a29a650152c0f4726018c0afaff537af5f7e076a" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d95cfda9a762964f3ba6dedfb01b77efbfe8f01" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519392e8cd7c6921445e735fd8080b772d544d4b" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fa406b90f129e060e54ccb63a9ccbc7403c863f" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b70b9d7a2f34e30d2dd512a6b332797ea9164f2e" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="432aadf9cefffb0b7002f0fd54c77802d89925c4" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="369f001f546003cbab820a36b48350a446817908" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="041796b21c2e9518a62b4250bb775383aeff9bfb" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66444d94d57b53e0798f4a2ce4dc078c43b20ada" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b3a0436f2f02932ba8cf5b399822c0444fea0a" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbb9f972f4764ffd5a33685b769c31de765d54ed" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="071f027f2e0f80eb835c1eda3c79de54328acee8" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c77ee4579dee0cfeced5668b3b56c133d011eb" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc3a4a33201f9a2fc7681c87f95afa1eab07b7d" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="264eb0c93048861fcf3792420e577b4920a0b65b" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a5fa1428fe76492206c19d2a7f383216a4792c" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7b1d344e9370477a674c099652e971e715f7fd9" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="159c4f134d60e14a5d4434fcda1971ff2906471a" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d6dc79aa67c62dab47c9d9d451d9c8e7efb63bd" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f673f1159c0e8eb2d9bd9175d5471ed901cefcc" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.Sorted.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.Sorted.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c48ca0dd9decb92838e767bc977d04aa911be99d" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1446a38dfa97a87f330cd9edc074688d0abcca08" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d2ef4538839fa7245636e2cfa209eeb8bc4662d" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc42059f8a704c4818a097195f596163e46025e6" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b09b946457af8e7810f520aa39cb736b63e2a974" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="effc2c2a5bc282cfe5d213c68e308cfb5a9a683f" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5445ab13f6efa62821fa053d81f20eab3c39e146" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de5f4e68eef34fa19e2019a3f0c86f0a2572bbab" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf811741f13ca65c4014fa363af72e341731607" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7102a81a23b094e41f176387a8f70447695f5994" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d1d14ec46a0b7b1b96f47dee87a12d30c4fe0e0" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30acc2c9ede8638e2af1f62686b4f967dc424a3c" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d7efe4c9f8b6a37f6608d6f8e7771ef25a1bbf0" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f6c71bc37ba3c43736c1ec389aed715e1f6661e" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd82b26088324ed609e247b44cb36fcbdda904f9" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8ff8358cc7e80a7f7371f6349bec0ee6a19f4b" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a058706685b3b7f6c53211a7675a4618b495678b" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b464bf9a00c2ce5250b456e691b7ea471e97024f" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2ceab8d83cb4e26b8f9c7b9bb824c291bf68f50" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da72381484846c4825cb216319ab238594c71b5" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="929c7e7e0eed4ffc526f9fe0804626f108a56f34" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="675c3cde66ea461af965e9260d93945550056abf" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20a3848119c818a3abd19f2d9cc2cada9116b072" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cefe6f5149233934781cedd176ee9c544b53203a" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b12b74c838ed8c6bbddb61865e4b2cc655cedd8" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0788e22c5f708fef076236cf6ab7c2e2de753f" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de56859a2320c9d3b81a5def413eed5203ffc84" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d852c90177c25eb5a1df2928e7217f7d0ec82f20" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e619f03a5ff342a46729cb240f0fbe2b4978af3a" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8af32dffb3664c62937cd98d2755e6451cc0416" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf60691a720362258397757d9712031ed6f8fbd6" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8e9751a8d36961b5cf0bbf2c245441432303db8" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0400565771aeb791fcee6d2105c721aae7663fcf" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fe92d36549a274e1f55982ea51ad9eb7c8db4cb" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="898daeeaf517db55ee15d46bac01e31ef5678d31" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4191c50687ec335b78c9e15a11869d093ad0fa20" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2418684d4991b37a3ed11e050728f9339efbe8f" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec71dc710feab785b091142d651c01ed864a2dd3" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20777c21d18e9036bc3a8930b6c904f4005f56df" translate="yes" xml:space="preserve">
          <source>def to[&lt;span name=&quot;C1&quot;&gt;C1&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.to.C1&quot;&gt;C1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b8158e9e9cb704263ff2907ac367b76cc4fdfe" translate="yes" xml:space="preserve">
          <source>def transferFully(&lt;span name=&quot;in&quot;&gt;in: &lt;span name=&quot;scala.sys.process.processInternal.InputStream&quot;&gt;InputStream&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;out&quot;&gt;out: &lt;span name=&quot;scala.sys.process.processInternal.OutputStream&quot;&gt;OutputStream&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5e56f1ce00c4ba7847c3e18b27e7c5a8088495e" translate="yes" xml:space="preserve">
          <source>def transformValuesInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f08025843e477ed46251c0c1cb5b45a9a63f6021" translate="yes" xml:space="preserve">
          <source>def transformValuesInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd03f8efaf446727e28e4af5befa2fb3828f29e" translate="yes" xml:space="preserve">
          <source>def transform[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.IntMap.transform.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.transform.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="578a3d3b714f6d845cb3b14f44a32881aac9cce5" translate="yes" xml:space="preserve">
          <source>def transform[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.LongMap.transform.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.transform.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6380882a00a7e71216284dd69d20b9f8708bc07f" translate="yes" xml:space="preserve">
          <source>def transform[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;s&quot;&gt;s: (&lt;span name=&quot;scala.concurrent.Future.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.concurrent.Future.transform.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;executor&quot;&gt;executor: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.transform.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b5ae04bda4955cbe643066dcb898beefaffd424" translate="yes" xml:space="preserve">
          <source>def transform[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;s&quot;&gt;s: (&lt;span name=&quot;scala.util.Failure.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Failure.transform.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Failure.transform.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Failure.transform.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c36739f2c4e6f8efb0fcba505e670f9b7ffe63e" translate="yes" xml:space="preserve">
          <source>def transform[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;s&quot;&gt;s: (&lt;span name=&quot;scala.util.Success.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Success.transform.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Success.transform.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Success.transform.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdc034c8e1b5b3ac696bb9f6a91a0076b29d396b" translate="yes" xml:space="preserve">
          <source>def transform[&lt;span name=&quot;W&quot;&gt;W&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.MapOps.transform.W&quot;&gt;W&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.transform.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea10ad33039cd60cb93274416c8c853997c115ff" translate="yes" xml:space="preserve">
          <source>def transform[&lt;span name=&quot;W&quot;&gt;W&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.HashMap.transform.W&quot;&gt;W&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.transform.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="521b79ff97a26d370e49c025438f9ed129769171" translate="yes" xml:space="preserve">
          <source>def transform[&lt;span name=&quot;W&quot;&gt;W&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.MapOps.transform.W&quot;&gt;W&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.transform.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0dacb115f6d0666b3e005a20146e0bfc3e45e22" translate="yes" xml:space="preserve">
          <source>def transform[&lt;span name=&quot;W&quot;&gt;W&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.MapOps.transform.W&quot;&gt;W&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.transform.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c445d5eb3980e7cb63f2867fde5fb499c18dc7" translate="yes" xml:space="preserve">
          <source>def transform[&lt;span name=&quot;W&quot;&gt;W&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Map.Map1.transform.W&quot;&gt;W&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.transform.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d604ee58ba0770670726c845904b0b69c811a3ad" translate="yes" xml:space="preserve">
          <source>def transform[&lt;span name=&quot;W&quot;&gt;W&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Map.Map2.transform.W&quot;&gt;W&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.transform.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d659f0423a21e2a3417afe5c3b62073ebe3866a" translate="yes" xml:space="preserve">
          <source>def transform[&lt;span name=&quot;W&quot;&gt;W&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Map.Map3.transform.W&quot;&gt;W&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.transform.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df5b55dfb2229ace85fd001c19e0ea138600d412" translate="yes" xml:space="preserve">
          <source>def transform[&lt;span name=&quot;W&quot;&gt;W&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Map.Map4.transform.W&quot;&gt;W&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.transform.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a64cc94cc062c98984ee06a5fea0f4b7d115952a" translate="yes" xml:space="preserve">
          <source>def transform[&lt;span name=&quot;W&quot;&gt;W&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.MapOps.transform.W&quot;&gt;W&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.transform.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6297c93545e2297bad921c067783aaa838905505" translate="yes" xml:space="preserve">
          <source>def transform[&lt;span name=&quot;W&quot;&gt;W&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.MapOps.transform.W&quot;&gt;W&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.MapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.transform.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bafe3d26d5a02ba8c62b6936419ad566867ce00" translate="yes" xml:space="preserve">
          <source>def transform[&lt;span name=&quot;W&quot;&gt;W&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.MapOps.transform.W&quot;&gt;W&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.transform.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="343a85f093229968c53ee9ac67434522499952fb" translate="yes" xml:space="preserve">
          <source>def transform[&lt;span name=&quot;W&quot;&gt;W&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.SortedMapOps.transform.W&quot;&gt;W&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.transform.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5cf8e8a9f5473e3c2d0b945cd9b3430d92d59a1" translate="yes" xml:space="preserve">
          <source>def transform[&lt;span name=&quot;W&quot;&gt;W&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.SortedMapOps.transform.W&quot;&gt;W&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.transform.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d66e17c59ab9761970afe4617ba7e7b29ea60674" translate="yes" xml:space="preserve">
          <source>def transform[&lt;span name=&quot;W&quot;&gt;W&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.SortedMapOps.transform.W&quot;&gt;W&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SortedMapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.transform.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3dbb8ed9bb885d98188d888dd90470aef65455" translate="yes" xml:space="preserve">
          <source>def transform[&lt;span name=&quot;W&quot;&gt;W&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.MapOps.transform.W&quot;&gt;W&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.transform.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d26cdccbd85f4078402d18b8748968566de64ba" translate="yes" xml:space="preserve">
          <source>def transform[&lt;span name=&quot;W&quot;&gt;W&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.SortedMapOps.transform.W&quot;&gt;W&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.transform.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1de67ed4f2214ae69e050d4ee9936a71a93de1bc" translate="yes" xml:space="preserve">
          <source>def transform[&lt;span name=&quot;W&quot;&gt;W&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.TreeMap.transform.W&quot;&gt;W&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.transform.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d38cb6c1ef47ab9b27cb2ea26c15a73818ed34ef" translate="yes" xml:space="preserve">
          <source>def transform[&lt;span name=&quot;W&quot;&gt;W&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.MapOps.transform.W&quot;&gt;W&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.transform.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c754aaaf39c040da7f8a1fe1e077a747a1c45972" translate="yes" xml:space="preserve">
          <source>def transform[&lt;span name=&quot;W&quot;&gt;W&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.MapOps.transform.W&quot;&gt;W&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.transform.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dd43c4e5f044eef13e57f45c21095a03124a293" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asArray&quot;&gt;asArray: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a4946798960ba3538347ee3ed96e4243f34f235" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asArray&quot;&gt;asArray: (&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba3f0c7a584dddef4fd55773f89e6e8092e901ef" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b74dc9b2e805a0b694bd6043ed04e135346bf5a" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)) =&amp;gt; &lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;collection.mutable.Iterable&lt;/a&gt;[&lt;a href=&quot;../collection/mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;collection.mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adac8568621870d22e4697b172907ef4c7e713f1" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab25cae5aee40bf6bc5dc433da91bb7d4a0f64ea" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af185d013d30f3a54701a7c0c520dcd94542ef6" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2529ba7b82b8f1cd3809d3cfd38c7849185fee5" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="948aa892f7eb53cfca9fdf24ff7896d1b0bb4afe" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bbc0708d3881246350bb3683f28a90da3af016a" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e24c098351cd7ecdc0205599dd95cacfd5d27a42" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add9e00c13a94894d0f98c7f0723eaee384d079d" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6329a1d2014b85cb58e4793b6df35c66aa58cb1d" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03920075114c323ac8e49c9ddcfdc1d9d628093f" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97fcbb730122aa85f6343a6e440687acf8bd3df6" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad34cb14c6986fb3cff153bf1780391db9b727cc" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65cef660e4ba0a1c182b201d183a8f81a32d8c64" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="205d38e80cf28afbcf0123309ecd5a5fa56c234c" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6110c3a4e39a808874b143b67e945f8b9745241" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf0058e68f6fbfc0dfee54cbbd9bbbd582d51aa9" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ba632ba9cf8b48df8e46251ce6644cdf17193b" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f55297d75927d535696717e09cb18adda77600c" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81bbc1663e93ecd0a1c038991c53338013d5a357" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c3ece996b2ccf47167d1dae551b69d5d4c177b4" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="374220f38346786a932f235e3411c7118981fdb3" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9317fa4bde77d344984e5d044691a9acf9063bd" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a064fe92b698fb95b375e09b63ec91056672dcd4" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85af27211d0e3b3f2de1be846cd493ad0b026bff" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8ec3fd0a90d2ea2c2569768e4f341d082d896d9" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[&lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02eebdc84b3ca5ebb48225d205b7e6d635284f32" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[&lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd4b3125249743e33f6f374709e3256710900959" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac9fc97a87ff9f2f3ee92d9deedf3c0c7dc7fad6" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c521a3af39110519a5d448d7ad62a7743333f79" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53bf49042867ce18c23908fb66dae6b225d903d6" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86fdab330780f00023794e1c3915a01bf759ab24" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9613caeb50ad98597630ab9b7067bbb452b0c162" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60cbeb8ac861eab83c06f533f01e55a94aa3bdb6" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f960487ce4d940ac9dfe229939ee5d56923d7ff4" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56ce098875763ca52d18ae17e395860260e2e415" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="004dd613d3979c21f55257298e1c08f3ebb67a7d" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f23becfb7a0d3ff89f91f4765063454057d8d31e" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71381e7fa9fac12ebe0fe490208149916cab696a" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6851c213875be86344dbc70b9a20f0f9bf10a68" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6545d752a0c529f01eac5d05cc9999cf27b07e5e" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d171d9ed21c460db75541f324d3ac7a4da44c96" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cddcfd76844a9513e5b7b8043a7910776740871e" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55345213925256cfed3df35e39f83607d76564ba" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faacf36b918bd161a7cee202b1910a342079caba" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17e4bd407ae8d25c9c56249f9206b3687d65c4de" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7d4f5986b83c9124e5075ca13ea93ca3cd0e66e" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="571161027b40155b1d0724bc900415c9fa770060" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee74397b594129f7c56f60972b6e7824ff25a42c" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba8b2457959d7378b22bdf69dba2096dd5f88ddf" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca6b908e5d82690cc5b6b8ad6032b80c92e09a92" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98cb38d0ee08a8b1f1c1ca4c458264235e9e6f5c" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e7b4eb3955b6452462297382a2eca1849181d83" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fadc4630bb63ccc1fabd61247e2f263816ea83f5" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb4b5801848917160e40a258c78427b011aaa382" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b28c603acac3656acd0a3f1a399bb39557245a1" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebdae5494d6257f9983388556319fd1f37d7264f" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="055573d53091dff8ad6edef25580783f61cd87a0" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;])) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="286988c5e2ae43c04f15ad84f8604c950b5be4f1" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a82db9800ee80f477244cac6caa5839df2d3047" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5461a9fa69fce4e54d704f793e6f335759f0a1af" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33a3714379725553f8b0e438eae01b14a6f3e542" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6602457a21794df6640142f76654344126c4ea6d" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a74469aa7033d0b3fdccd6dae6244c6a8bfcc7" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c87a67d3d672a1350e5c9c7c1f57c489288ee1f" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: ((&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7ad0a2bd5e16321bd22e5e32029bf2253132a54" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80af942341b46222b607a89e1919cbb59ac3b5bc" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b74cbd689f091f9b536e9b69d0a98a569ac48e1f" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c59a302f5efcb74e209eb88701b1a2737821ff53" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d0be6a705787eff69bfba734a50be1671d45e69" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5993f2582f0967f0eaee0c40d0bed2ab6e7f74" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5cf72342aac70018bca72d15670a05b5834e8d2" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b25c74666dd8de04fbd047cdf9f00db15a8d5e20" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="626d8cc8e19519a1cb4244fc6dd9d59657240757" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e40bbf2986547ce7e646448cba1d5708b9e0e34d" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="054ab9cac18d889464d778896345cc8ab151879e" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="437c6706368dcf3e0ffef38bba8b18f374f5071c" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17cc50e4a9243893fb8ecaf2d3e2b849d14b0672" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="099c7dda90fdda147f5f697c7ed9b124dc8889f9" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae9d7c44c139ea2d7a16b27cfbb726383a901251" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c80294e91f60a4ec3f9103dab1d4f15691cd72" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56550ce35d6201fa6b82eb8977cd007412a21c9e" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7ea8f4fc65e9f0e7ce7bc13681ac7acf9a14a3" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c6f370df5f2aa7ee922ee8ecced3cde25695da2" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e2a5d1579bb641516650e6fbf7882977cce609c" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec24a3d9cf6990c586f1153965967899a3c6e806" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eebb7dab7098853ecaeb6dd58dd89c844352f70e" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b5ba133c187e7e88cfa381d35d99b1dc25d4e2" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be44aafdffa4c854b04b633cefe6ec7e58441d18" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="678e0229e8375f554005a2cc460e6c57711b1d05" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78bc1cc5ce3d6e79678fdf5774b4163f0e89c514" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59f644fb7f28b0eff1fbfab0019f9a2763a001f8" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16e03d32a26bd1564e9da8f75876f2d8b4e6053e" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d9375c3e7a41103fec2f01a468fe1e99e43bba" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="767e6efd5fc919eecf938594ca5027e341cdbfe5" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="932d8d3f97d88f40515304a317d70636ff193427" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209c7e0329374a72bcfdb91ad2a25d3dc5962e9b" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/immutable/set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;collection/immutable/set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9030bdaaa315e56634542a48fa842ed26bc1b65d" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3763ccf902c0ecb100befdeee4d4eb4b7b06000e" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f5663824feb868c790db39c79943da60757780a" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c9dbd482f271d6d5b36236725ff35b182895b35" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdcfce3e5a0a642e47a9cd4e0950e77cc0632075" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="247046a4262b3788b9e49c286ed7d87654d39ce2" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3c8b8297f41d388d3dace57c34f243cf5bc4aa6" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10e846356f1b467435ae9786e5ab83e42948cc2b" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7855eacd96ed1ad37f0c1a63527ef41599d38b8a" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="093589fe856c552b8c74cea6b16ccb2477f29365" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb2a9164530ba011c460be52ac2f2464abbd41a" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c98539fde67913d9cc4400e5d022a290e35d33bf" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bf24047c460c43949d928b450c2552a4a9f08c4" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1943bbfe13d0e5ec74aad174cbcdcc616468677d" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd5e9b2cf5f37014824766c4ef58397c667f93af" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c6353ee2406897d1b92425210162573eea7b563" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ec7c73b407b383254f6f878f86abf0ccd1ccdce" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5656078883153b6f793c2e4888d9e1c60520c000" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79307723cb8fbc22872e31ff0dd578239f785666" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd8e36287ddbec433bd3989eec635bbb47edfe04" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ce0530b90563e5a829ff8e649e358839245c658" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d10ba79f0f0840cf9c670057c1b29b77db69abe" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ee2c0e1c3d3897ea1e08c6ea44ea8115becbb4" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a7614818b76685f3430435fe07d94695cdfd005" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca1d9a4b8aa658c6eb50b45ec5c980dab884d841" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="602d8dfe8336f118f22fbb64e101daf3edb6b768" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa28bd9ba8df7d1590196f1e6fb22b8e1336ea5" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d71265898e3d6b5fb1f619f1e6793a506e5cc81" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0823a5134c94d193c70a2f87638eb9a23446a3c8" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0056fc8f90b22d838b0cfacd20d9f837a2e48b2e" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b0b6aa361756c33628b5264f61ac5d78fd83440" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f09acacb156ad327bdcf53a742cc79509f32e2" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c2cc5f51ab29d947f0289eb0b8a18a62ae9705" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77008bda4b2cdd2fc9d565289a45df09508f37ca" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="235f19a72907fb4155da7f67426763da96b10749" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c32665ce7235adac17f55c91c9ef8553f6c6906a" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea8468a05139493a2f237a4f9d3a5e4055181401" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="275b718d9741114bba75300ab6eff3fbdb1566bc" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5099aa869cca2b81bf9f00e40be7a1aee992a015" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c536a3af74656d58bff87ab7e880c707e6bb5cb6" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95435f92156b12589e50e8a5b948468576eaea55" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01e4c2d8244c28e51ba25495c1fbb8a97c1c746b" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6294623dd5e1aa47f481d8b3d274b5660879ea" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2d81f8521e6f42b2a3df8b62d532ff384833c7f" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb6b6d7898d4db5cb3fc8796a517a5da82bb094d" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f923a9c67717cb7ebb61a572f10c5e36c8daa0" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dedd83ce40894917decd50a5f3ca5248b6362f1" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eb925647bf89d62629f5113be2e61578d9b0c93" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff99507ed2e485bc66ddce14c4399fe0622eb78" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09929dcd18df183dc2e3a70ca5b57ccc4f45eb1a" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c107a1dbff1b125f512a976b97ef5636553fb34" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee28a68f76e2f377f782cf74c6fb735ba862480c" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c462723670a98c34c630d0b6c8b944395ab3ceae" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ae271d6bc46c1f314d50882af5fe592ee9f7d42" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa4c90c7337ea728b7fcd9b563365f6a245ff7e" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="488fbf89bac293d66bbe5e85052f05b3a5494257" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9404a506f1a001ce3101c6b6e719ea574774a41f" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919adb13ca73c41e771c7bc76283f0704c7f22e1" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4062312fcb14d63075e94f070b8680fc8ad94df" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcf61647129800050080d4aa3b3832e0b1f32931" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349b58284e5e9279f1bbd6b1969db621a207584a" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d99553798cdf1f53f2794c1a3cb5e43a29ef405" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5bb3d26951aeafae205615e8d7698483f6f946a" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a33e425b271c77a68783e5068a79e8d86c77291" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4efd2f3967dbbe0265cf2ec276b33b735d58e615" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af1a01588f84e87326fe58ff6715dedfbcc2fe3b" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="132af1ba6fb8d0f12042fc01c183f9943ae4c359" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="254f7270f12458e9958f50cabf31b6006bd4513a" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc1f98f3b7478811c9911377b0b036aadb755119" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d474394544def793383660cc1b2bb587ef532ac" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55123100c898caa2f56513c9ec7be56ac074066f" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41fb507a590deff93476377b12643bdf8092c1da" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0549156a1924f3a21536d7be3b6d9a37adadabb" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2b120a6e43d96ab24b99b15747ffddb7b68b499" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaebaab20cfadda537e6fb199ae0fb8c7aa5d2f9" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f168e40f506feec7906716860fc999524e851f9c" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a3f9389dc074c6b0f4a86900e09a09bbed867de" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92e9797f7de6f86ef73985c578fd0bb1ce0d8650" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8cd0110e89e9fea3fea3c9b5935a5e056008db6" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39ffb07461669bbbd9bd04219d77ad99c2b921d" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8637af70775b427a69cdee1271894d52015471d6" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab8d4b5c21a5c2c13fe4facf4e11c113ae463b4" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6283311debbc81ffbfbb4c99fba268b662482a84" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c32f79aef9cc149e7f820eae2e2d2215da819ab" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e711c130f414bf267f5c0133dac854e2de3f7356" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="793b1a94c6e9c31d5921a3818b1957606650d7b6" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="225b03c3558b0951b47ed6b70d1974e97c7c858c" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1164c95bafc3ca50f7cea08e585bbd688cc5ceb1" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d0c8751feb371a775073e8a033d30b416977dd5" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6990ef794cb8191a99e28b0084ddf0736eaf22b" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f9c0903af531f1130cdaf480f46ada3ed6a9a0a" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd786cd95ace90cebad618eb471bde92aac5d7b3" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0941fd7a6a3f8e22332f1cb3bc8f0ba9f12dc900" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dec814aa7cb83f00f475208cfb6ee506af30d5a7" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="862acdf8f77d9916acaddbc2a6da6f7f354e15d0" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17bccb2e86fa67789a7d39e277594692c86ffc45" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2272228c633f80ad858f6e487bb018de0d19b85c" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e35197ba02e1978c0d92a47015aea357f1777ee2" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="733b6092a16329b387b9299eb60516f200eca356" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="920613c7c4876143e4064f66655bb459b8a35ec8" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eb0369a638bc8e1299dd6abe683619918347b89" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcf3c71c2fed1b552e998cd898100892f8cb245a" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af8439340d63f3fa608327057f82156297b9040" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ef295a05e2f1b3bb7088ff287f8b59131afa5d4" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db8c28137bce6b3a214f6d7e2f147c98a97226b8" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27a64e80fa318cd1f525090b40253d8da5308dd1" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183b93609ab9e13396c97068008bfd9798d3ae7e" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad5349e5ca407941d6729f6a38755ff834112565" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.immutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abec50a7dfe0e0b963997d905270bd12af461573" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ad48de4e783118d52c27d99bbed861e63ccbfc8" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="279af175848a8d2e9aaf41126c678fc9d3ba1f4b" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d4ba6abfbb4dfa55308022395cab502bbc6ca06" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d59ac3f505049cc1015527b5643d8b410a70ed4" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb588d613126949f9a43241f234df1760daedd7d" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca29f401a31e6ea4ef7b6ecde247cabf8452c7b5" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e6233fa3563126287070b7c244f08e52972aa4a" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb49376660f6e3a94cf6f26a00eae558310746d" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b0953963b1475f62bb6b0a6f8ba32de5496fd8d" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7fdd94b86c2b59a8a23bbacb87291dcb88fa0ee" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0374cbf923ee44653691de67f7385dce69d6a9" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d8d9a5edaf57ccf5ee291b35bf7da2e6253e7c0" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a26c7b62b109488d49a41610a595e96b3a894765" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13ad5877c5920dfb14c4a080249cee4b4f80a106" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbe4004ca0b15920213e3fd6d056d48cdd0a80b4" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="716113ba7bfd63d0b509f9cad73e01500295b224" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce2c78030aa501f7004609c97a66c9a5f93bb4c" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da691635b174a663e4c3ac0b2f5e1877db7d3834" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="756c32c8f69a171c89bbcb0db62c170eeb7fae00" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8752dfbb7f6a28aaa8efcc18af3cd0c698dd3989" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="239926b00a9cb65cdf102a00fc4e08cdda4284ff" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2acdff00f62d32766584b4c1a8303dc9b3fb4340" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c65d6d782f84b8a9f7255615c745aa7bc0ba6245" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413a2f11ac6965228ebc7c3133eb1e2af33649cc" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a63ca34036b8f0f223617280a609be8691c5ac" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d175b9d9f524002221b76c6a02711ad1a2896cf1" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c782a56311a895fc5e6a2919288a09db9e2438" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff42aa20c71e02ee27e99f2c9acffedd9e6594e" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc2c9d39e1ac8440ce63faae7b4e2702ceed4153" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66df285958634d86af6e4fbaef6416f55e5092a2" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da97abfd5f23fe7563393570e7663d2cb8f8287a" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c61bf533119f11fe9c78484ca77745a5f061aef2" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf6b236e524fabb469f25f0fada6b99fc69a76e" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53dcb917daf66004eb39a9aee880907bdf2833ad" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.mutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f03d3e8a4fca0ac7a6051195d9c5f85bc2afe400" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0e1397401a4f2de4c5b44086a362bda38419368" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b858ee42e48e140a004b366b875eb75af97a9c" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77f166ea028fa1c15d33ac9f5efa13165aff022e" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47885a9825b241febabdf793663d8bfa3e85217" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e67f310e56e83343074a8a7c9126b9cb083571b" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59bac6014b596a629a473ee16aeca29f70c3268b" translate="yes" xml:space="preserve">
          <source>def transpose[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](implicit &lt;span name=&quot;asIterable&quot;&gt;asIterable: (&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.transpose.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f703b5f38968fc7cffb6a071d1b614e4a20137" translate="yes" xml:space="preserve">
          <source>def trimEnd(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10921b995724e41694b61e570aadc68fceaf1526" translate="yes" xml:space="preserve">
          <source>def trimStart(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="257f6b72524aa622c729ed88393525f049df7960" translate="yes" xml:space="preserve">
          <source>def trimToSize(): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="973f9ffe832dbc761ce4ff3c0c92b93317f70211" translate="yes" xml:space="preserve">
          <source>def tryAdvance(&lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;java.util.function.Consumer&quot;&gt;Consumer&lt;/span&gt;[_ &amp;gt;: &lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b375d1f000bf114b74c7f80f0a70a2248fac0e" translate="yes" xml:space="preserve">
          <source>def tryAdvance(&lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;java.util.function.Consumer&quot;&gt;Consumer&lt;/span&gt;[_ &amp;gt;: &lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75a9621110e0edaae703b61efab7da9e8b86794a" translate="yes" xml:space="preserve">
          <source>def tryAdvance(&lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;java.util.function.Consumer&quot;&gt;Consumer&lt;/span&gt;[_ &amp;gt;: &lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1cdfff6138a5035839837c76cb2310a99d3b76a" translate="yes" xml:space="preserve">
          <source>def tryAdvance(&lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;java.util.function.Consumer&quot;&gt;Consumer&lt;/span&gt;[_ &amp;gt;: &lt;span name=&quot;scala.collection.AnyStepper.AnyStepperSpliterator.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec87920f878b899f019ce182dfb0abb33230ed9" translate="yes" xml:space="preserve">
          <source>def tryAdvance(&lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;java.util.function.DoubleConsumer&quot;&gt;DoubleConsumer&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa7c35a5128de77853255f072360fe28c3b0952" translate="yes" xml:space="preserve">
          <source>def tryAdvance(&lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;java.util.function.IntConsumer&quot;&gt;IntConsumer&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c8103da399beb1667f791520da425f336fdc444" translate="yes" xml:space="preserve">
          <source>def tryAdvance(&lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;java.util.function.LongConsumer&quot;&gt;LongConsumer&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af63ecfc8608715872f5435e36fb9023fff2c377" translate="yes" xml:space="preserve">
          <source>def tryBreakable[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;op&quot;&gt;op: =&amp;gt; &lt;span name=&quot;scala.util.control.Breaks.tryBreakable.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;#TryBlock%5BT%5DextendsAnyRef&quot; id=&quot;scala.util.control.Breaks.TryBlock&quot; name=&quot;scala.util.control.Breaks.TryBlock&quot;&gt;TryBlock&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Breaks.tryBreakable.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36dd95cca9fe2497ca31f26c5957baf471b479c9" translate="yes" xml:space="preserve">
          <source>def tryBreakable[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;op&quot;&gt;op: =&amp;gt; &lt;span name=&quot;scala.util.control.Breaks.tryBreakable.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;breaks%24tryblock&quot; id=&quot;scala.util.control.Breaks.TryBlock&quot; name=&quot;scala.util.control.Breaks.TryBlock&quot;&gt;TryBlock&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Breaks.tryBreakable.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca0d6cebe412cc7b24ef748fc077a8740be132c5" translate="yes" xml:space="preserve">
          <source>def tryCompare(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8029c305e718abb7d0a12050860ab47f2aa600b" translate="yes" xml:space="preserve">
          <source>def tryCompare(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36b50837e79dcb31094cfa47f39b1620de61b697" translate="yes" xml:space="preserve">
          <source>def tryCompare(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5da3052f2ec0b4d047424bff3d0194e1e7f7c0fd" translate="yes" xml:space="preserve">
          <source>def tryCompare(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="054e0e19f5ac56bf84db200de306222a60f22ba3" translate="yes" xml:space="preserve">
          <source>def tryCompare(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af7f960102d135e4da5cca923b824e138bf6cd4" translate="yes" xml:space="preserve">
          <source>def tryCompare(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="947671637cab2d8eb8608ca3dcd75fc2f6b64322" translate="yes" xml:space="preserve">
          <source>def tryCompare(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c80b3ed5532852a988e01308815268ca75971c4d" translate="yes" xml:space="preserve">
          <source>def tryCompare(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84557532ce83e714059afb4a5b838929a57aee1c" translate="yes" xml:space="preserve">
          <source>def tryCompare(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e859d8e209b2851527371a2b84c040b7bd3695cc" translate="yes" xml:space="preserve">
          <source>def tryCompare(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8486b85304bbdaac416cfbae80ff3641f2e787e9" translate="yes" xml:space="preserve">
          <source>def tryCompare(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="414be8ccf53b79c486922cf3ac37e80a45c70a93" translate="yes" xml:space="preserve">
          <source>def tryCompare(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2658e0d1dc5155a5ef5cc850c561311f58061f63" translate="yes" xml:space="preserve">
          <source>def tryCompare(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1e20b1cf50f90248758e42a948d6fba04459c22" translate="yes" xml:space="preserve">
          <source>def tryCompare(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199f288afc6f663e4751f42aaa2073bcaf6494b2" translate="yes" xml:space="preserve">
          <source>def tryCompare(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;Deadline&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;Deadline&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03eb87d7dfaa4e9933880b16092e290129c339a5" translate="yes" xml:space="preserve">
          <source>def tryCompare(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d00caca436468914bcf317890beadd9427743a" translate="yes" xml:space="preserve">
          <source>def tryCompare(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt;[&lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde7a156503ecb84592a75d0444c8519337f9346" translate="yes" xml:space="preserve">
          <source>def tryCompare(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc21ab79f3f0284c00b4c3a92bfd83379bc7a46" translate="yes" xml:space="preserve">
          <source>def tryCompare(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e05fe95a6ce7fe7b67d1b73427bf08635d5271ec" translate="yes" xml:space="preserve">
          <source>def tryCompare(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddfcf2302e38d8d27cc433f7f848acfc05a1c7be" translate="yes" xml:space="preserve">
          <source>def tryCompare(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d52370909441d3898059f67c9c01f9f294558c" translate="yes" xml:space="preserve">
          <source>def tryCompare(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79901ca63a5b2873ec79d8254463693677f5e506" translate="yes" xml:space="preserve">
          <source>def tryCompare(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6425b40298b76d118a55d32da1768a1ad8651ed" translate="yes" xml:space="preserve">
          <source>def tryFailure(&lt;span name=&quot;cause&quot;&gt;cause: &lt;a href=&quot;../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6aa5740bc8f6d339111b4dbbaa6a1338d91502b" translate="yes" xml:space="preserve">
          <source>def tryMergeWithNext(): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d3c9267ac339559655ca52c35dd347217e28944" translate="yes" xml:space="preserve">
          <source>def trySplit(): &lt;span name=&quot;java.util.Spliterator&quot;&gt;Spliterator&lt;/span&gt;[&lt;span name=&quot;scala.collection.AnyStepper.AnyStepperSpliterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfac597edb575e5caa1bccfee8c704ac40fc4354" translate="yes" xml:space="preserve">
          <source>def trySplit(): &lt;span name=&quot;java.util.Spliterator.OfDouble&quot;&gt;OfDouble&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a753df30ba4dbe36a00eea3c336a437a6fdc5d58" translate="yes" xml:space="preserve">
          <source>def trySplit(): &lt;span name=&quot;java.util.Spliterator.OfInt&quot;&gt;OfInt&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2850ed29d62780fa102dc22268580637d7e3a86e" translate="yes" xml:space="preserve">
          <source>def trySplit(): &lt;span name=&quot;java.util.Spliterator.OfLong&quot;&gt;OfLong&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7350f705a481c7fba71184e8f2863134e9a92310" translate="yes" xml:space="preserve">
          <source>def trySuccess(&lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.concurrent.Promise.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55a4b0f900638f1a70e18d6e3f35c787cb4cddd6" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;)) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc604d49fdf7602ceac9889f3d5214230a5bc8e8" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a15a322ad20741793767cbc76c4883238836a20" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;)) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcc39213bab0819421b3bba8a65168d97486c9c5" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;span name=&quot;scala.Function10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T10&quot;&gt;T10&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.Function10.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9347a94c7b96e397bd81d67048690ff3ac7f157" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;span name=&quot;scala.Function11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T11&quot;&gt;T11&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.Function11.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f264e958bddd05d5777549c373575b82aa2a5b14" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;span name=&quot;scala.Function12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T12&quot;&gt;T12&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.Function12.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf461cc718334d57a37e9da07175a0ef831dc38" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;span name=&quot;scala.Function13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T13&quot;&gt;T13&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.Function13.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2bc473bd7e81e60c3ee75b574b6818857f5f39e" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;span name=&quot;scala.Function14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T14&quot;&gt;T14&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.Function14.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff27bd557a3f7aafec3384b093e5152db3a93eed" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;span name=&quot;scala.Function15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T15&quot;&gt;T15&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.Function15.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62562c3b7a406f51dc2379c6645ca557f08c0ec6" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;span name=&quot;scala.Function16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T16&quot;&gt;T16&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.Function16.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb43bfed3bf2441fd9d44922f51680f9f40132f" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;span name=&quot;scala.Function17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T17&quot;&gt;T17&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.Function17.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdbbf63156608b8819b95590828e52a062e3e4e8" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;span name=&quot;scala.Function18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T18&quot;&gt;T18&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.Function18.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c665d5a97dc5e8a99b3bb1bd17ca154e6e74516a" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;span name=&quot;scala.Function19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T19&quot;&gt;T19&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.Function19.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ec97ee08d0c87204a7672ecb9381175fcb880d" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;span name=&quot;scala.Function2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function2.T2&quot;&gt;T2&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.Function2.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7a28cc66b174f31c839cf3a6dbedc91e0febe5" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;span name=&quot;scala.Function20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T20&quot;&gt;T20&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.Function20.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="753bdd99b941c67b24607236e0eb67a2b72f582e" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;span name=&quot;scala.Function21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T21&quot;&gt;T21&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.Function21.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd94d59c489f053a057f83d83a20fb435f587017" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;span name=&quot;scala.Function22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T22&quot;&gt;T22&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.Function22.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d3b1adc150ecf944377897b7bca4e05a996833" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;span name=&quot;scala.Function3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function3.T3&quot;&gt;T3&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.Function3.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abfd4f63ebbbdb1897483b737e27fdbd288570ae" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;span name=&quot;scala.Function4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T4&quot;&gt;T4&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.Function4.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="773e4d0e0f228535960929ce2b46eb335b3b92dd" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;span name=&quot;scala.Function5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T5&quot;&gt;T5&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.Function5.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc73e309854541fac8369c638e834b278695808" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;span name=&quot;scala.Function6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T6&quot;&gt;T6&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.Function6.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4092515c6132e8b6ffd4129d042b15220009dfeb" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;span name=&quot;scala.Function7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T7&quot;&gt;T7&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.Function7.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb13a9c160efcf73d84cf732b168fa7efec7079" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;span name=&quot;scala.Function8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T8&quot;&gt;T8&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.Function8.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="560d241d64bae62c11ab7c764b7048c85e1b21f5" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;span name=&quot;scala.Function9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T9&quot;&gt;T9&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.Function9.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cb090ab6690ce8fdd598280ef26b3a666d8d3ee" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer.U&quot;&gt;U&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef1ee9253ac2edeab44532b540b7fd6da3ab44b" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.U&quot;&gt;U&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0f5693d8a4fed172428b1c188a99837861414b" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate.U&quot;&gt;U&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ef2e09e273db9e12fef7960e02f10bce676aaf6" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64e88e3c3ebe6f27b00710a1a3ace0f19897c4bc" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;)) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf9d9b1a75b60a498830997829fae2ee7a8cbd7f" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjIntConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba371de42c754304bee167c4c53e532c0184a67c" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjLongConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;)) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d39579b9a35f64f7c94e493dabc9d316cdd42aff" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7128a0fade623e10927fc4f678610d8da95ed36" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction.U&quot;&gt;U&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2633320f2f737f325cd82427f8a282fceba71b49" translate="yes" xml:space="preserve">
          <source>def tupled: ((&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction.U&quot;&gt;U&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce241af038a637cf72d6c85d906ba394fb84c4a" translate="yes" xml:space="preserve">
          <source>def tupled[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Function.tupled.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function.tupled.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function.tupled.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;): ((&lt;span name=&quot;scala.Function.tupled.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function.tupled.T2&quot;&gt;T2&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.Function.tupled.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32812059b10b713b490bd4dec2b8edfea051cb01" translate="yes" xml:space="preserve">
          <source>def tupled[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Function.tupled.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function.tupled.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function.tupled.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function.tupled.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;): ((&lt;span name=&quot;scala.Function.tupled.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function.tupled.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function.tupled.T3&quot;&gt;T3&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.Function.tupled.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eaccd5a96bce35f638a113cf403e71f9444db48" translate="yes" xml:space="preserve">
          <source>def tupled[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Function.tupled.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function.tupled.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function.tupled.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function.tupled.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function.tupled.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;): ((&lt;span name=&quot;scala.Function.tupled.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function.tupled.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function.tupled.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function.tupled.T4&quot;&gt;T4&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.Function.tupled.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8861396e7168a193562bf775af539ac12bb41fb4" translate="yes" xml:space="preserve">
          <source>def tupled[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Function.tupled.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function.tupled.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function.tupled.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function.tupled.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function.tupled.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function.tupled.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;): ((&lt;span name=&quot;scala.Function.tupled.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function.tupled.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function.tupled.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function.tupled.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function.tupled.T5&quot;&gt;T5&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.Function.tupled.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f1004543f6633e49b767cbf954778c18b1e07f" translate="yes" xml:space="preserve">
          <source>def typeArguments: &lt;a href=&quot;../index#List%5B+A%5D=List%5BA%5D&quot; id=&quot;scala.List&quot; name=&quot;scala.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[_]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7132b688101a7b607af12de7f5040e74a1ae45b5" translate="yes" xml:space="preserve">
          <source>def ulp(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d9d834bd678eba43cd3b9709813130b22b7302" translate="yes" xml:space="preserve">
          <source>def ulp(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a83fe9d02466191ac4cae6eedd785240ba3f2cb" translate="yes" xml:space="preserve">
          <source>def ulp: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d47a59b03558f499b0f92a35895c18a95b6776be" translate="yes" xml:space="preserve">
          <source>def ultimately[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;body&quot;&gt;body: =&amp;gt; &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;Catch&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.ultimately.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4c23e3ec18fc8bd195479c2e73d804a590df710" translate="yes" xml:space="preserve">
          <source>def unanchored: &lt;a href=&quot;unanchoredregex&quot; id=&quot;scala.util.matching.UnanchoredRegex&quot; name=&quot;scala.util.matching.UnanchoredRegex&quot;&gt;UnanchoredRegex&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c9fe5eaf06b52daa8c4a5094da59a9f613233b" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c398c98cd7b2094b8a6d0b95b08b821cbf99b1b" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="038bb1ea457f648925f44a8d924912ec3dc22058" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df987d7dd92eb977d24316eedb6bcf832ebbd648" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8187afc89d61d00b7f4b1ac4b88d2f774a229372" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeb0e8f01c3adfb63476e2cef6a52b449b0d9d54" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37a7dbcd3858afde0b3b157ae9ee3d989d738c74" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349eecfe2d21264d6ae59a10d1f6a93fc579a18a" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d02f7a80c773fdc2bbe6429ea93082b190a734d" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd66bb43941affb798d6e1110d8bd1e8edf3e74e" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0dbcfec1f5a846c94fa1d1f68b20d71201cfdc7" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc5f4edef0b1583b3642011afa1ecbca54de8c3d" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47860a7f33f2048db572923e1e5b6fa6105d2017" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32cfa315780ce279329b6f1bf92cb395737d33c8" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67f55ca4e7240ce6e9043ff85adeef534c8041b9" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6847b5f9383290762f2d0631330cd3f19cf50860" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c4addd9b37b89078445a3ecc37d62c8df298eb" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7086a75785e71ad0c4c594a178663e535907cb16" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f3957bd8d06fa04dbaec58862fc9c101d067a0d" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2abc6b758875e8894c701159c2d20218e71db5d5" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2c42378ae7c8c09adc45b1ecd662b65ed8680f0" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bfef3647c7e3667220b09864044f0457ab2da9a" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="739e94b523582637bf34f3560691fed31fdf89ce" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5818e104152098f4c11788f420ac877f435b3e02" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c95974ca6966e872dd8840a151e4b6ae0dc7cac" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f5804f6da5db64a8a98b85e1387ad18e7f5755c" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab5ec698dc965846cdbe5a44ba460183fff1ebc" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f9ab236c3acc0ea7ee9eeb0e4244e49b9d10b0" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="738a0773f872086fb5cc8c9e1dd82aaf7bc3da37" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="968dd973d74b23b96c8f1d90564d3d66e6bf6b9f" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6d252043393b252b542c0a2a03f057f9229857f" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d2b6b26bb77003c16ece8edca916e41853f32a0" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dcb15687d3657e5599eb599eab21d1004e51ee8" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f7ad7a3e0ff888bcb5f54b5cff3e411f7fd8ae" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="517b7154df9e471ce44b0b1a6facf87e892302ef" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad2fb1968f9f8f7544d020cd8826cc6d4af04e8b" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e63803105830d06e0a376a384a6991b05db7fe4b" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9bfd9be9a1f276ef3b9d2f8048d239abd8f44c" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94d637f7cfe21338514a64671134d8f44971ed35" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4714333b7df9baec16161e72c2484019470490db" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc7d44e453eeafaaa8f3349b7b00f6f91b44e023" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f4c883f53c3e54cc23d9df8850adea3fc7c0c8a" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a327bbd5818f094ac962137306106ce5f2b5c91" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f0367d591dc1e5e94c6063a1ecbb9b82dfa0b55" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="317cf24585db3a8ac12a1993eb7cda0675134a81" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b392b9b698c8145a3e55ea10afd698324ae98de0" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc95fab25e88365b4955e5e306d68e7c8c6483da" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="828db648c6bfd382fe6c5473a365bfc77c37f751" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3fcd677502c7bd107e930bb5de7da2efa135e05" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f0b2ce529dc441b826dbd6e48b29865808623c" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a8ddc4ec4daea0d534d1c567cf63a4fc56cf976" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e84f859669a3450ae1d49abd12b0cb84084fe4" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be439a6afce90f9de773417efa4879f2a16c3e04" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.PartialFunction.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f40c177eb1eba9edc0342306e9295bbffd2634bc" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10616732da30d77e1788b8116ba39240300cfc6d" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="393fbc74850c8b902fe2bfb0ce7d9e9df2b8eda5" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="188fe7bde319cf231d6eb94360d43ca8fedceea9" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca8a50bc420d584569f3220a1d648c5f155287b" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7929501efc9f780a9ca22a9adfd5276524d7d1e3" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc642a8adb90a082a15a1775f4c555581db3f70a" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="042651db51d0955359047b7b40d5b98e375ca8ca" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d3d0b55fc272e6bd5d1f69327ff124b162fc60" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e14368babffb41074a8838a13fd787a136db5d61" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d9788e83dfdcfb262b82a57c5f6edad627796bc" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e20f2d0800c1d012323b231fc5671cef654fdb8" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2170c8a221f383db875bbe2c50e80ce4f319b7d" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af15b0533eb011199115565913f7b281061e9236" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04aa1c610c93467205756cb87b0ac61393bdc93f" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b2810ba3a5c94784c16ef3f54579247d38198e" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2be1d1ead7658531259120d4eb58d31d0730ce1" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd59e559ba85fb0cd7d52aa7fe887fc2be081b8a" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fb777e161cda7269aef526d015cb5519c27f4cd" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae8ba6679fdee2db3c59e472f854aca029b8202c" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a72e9fda5d8370d5661d6b49d0d035d6e8afce9" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e7fb0cc11c36a9a570dac827d9ab4928dd52b97" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c934e79be80b548c2994c776f22a0c879f3e24c" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d22dcab6252082836deaa041f0dab348ab424d" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8d7e2b5b496222bb37d9b6a219b5d5009fb4d37" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c46ddb93bbc7270eb6e78149513cd52a7672a401" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e004728a89c25a8a6939a97c5f2a868b3950fa4" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abb32405ae325e59ab86269f50008afd02b3af7f" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2355d34eecc7c405e45783413c92d46f145ed6d7" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60a7634da971885f7887a08ef1dcbd4cc08c7cbe" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1255a472cd10aa2412592c58090dee48a204065b" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85472988ec659104f03855bb95250375dcf921df" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b72945aae364728b295c5ff5d0cdf8de95ce3dc" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="217c098b3164f134849624a1b259d03bb0ba1880" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df6b369cbd7522ae7ca91f12df587408f5c03b6d" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06d093a64e0adb2f83176c673121eb1a6072afe1" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a91c0a3e6e32f341464426003161a4ea8bbdd68" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d82bdcfe757888b1ece9ea31a3a595667969c798" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75a2370c39213d0a91d6654662bacfb341531102" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e908208de7c4a750d4bc1d7893c11a3bfdb25aa0" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d5d71c0890808941dd6eb1de4355ddedcfb26f5" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57d6f924bea06975e0db8944f1df9f6e6e528c3c" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7afecc1eb06a86a5dd91155b3408a9efaf61500b" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16d915dcfce5ea7972752db1b8c50ee7fb6ce14b" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a066a52ff4c493700afd8ef3dd97963becf45636" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc56968177ff5eedee21a5c82868cf6985845491" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e2a9a2c83a7c9a36be2f4d319c207ee76f32df" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9bc6317e880c15343728a9a86dfe918dffc0fce" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae84a79d3582ae5a1798267d71bcd3db9b4545c" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5609ecf46141e566419b994a4a096af0985da83" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e126237f2e7631df5fcce726f508c3071ee6daa" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="454e7e74494a208be01388a227e8fcbb9c0ea08d" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873a364a90dc798741aaf9a91ae395511e414f3b" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b108fe949e684b4a9f67b59af5b20f1680d29ce3" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8736a34a7aeaf602b2c5bb8908c23245fd65091" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca10a34d2891a89ade61b270bfb95b8b0954335c" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f5ba0a00f1588189d6e24078bcf297d912c6f62" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c18a996ddaa1001b6d131f19f6c4b2b75b0b419" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20fc0f23dc4f42c912d821f4b644ec0942ed9b0a" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;d&quot;&gt;d: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;a href=&quot;index#TimeUnit=java.util.concurrent.TimeUnit&quot; id=&quot;scala.concurrent.duration.TimeUnit&quot; name=&quot;scala.concurrent.duration.TimeUnit&quot;&gt;TimeUnit&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acd7062f4dd533e05699a6d1978a78ca97ec000a" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;regex%24%24match&quot; id=&quot;scala.util.matching.Regex.Match&quot; name=&quot;scala.util.matching.Regex.Match&quot;&gt;Match&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f586be1f269d095d96ada0ed305a51a76e400e" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b05f620db0596c9d31808ccaaa41c51b8e21f4" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;a href=&quot;index#TimeUnit=java.util.concurrent.TimeUnit&quot; id=&quot;scala.concurrent.duration.TimeUnit&quot; name=&quot;scala.concurrent.duration.TimeUnit&quot;&gt;TimeUnit&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b03ebc5503a4fde263459ef3067f0805023bd862" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;t&quot;&gt;t: &lt;a href=&quot;../../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3cf4168d6089e401a2d6d4117f11a15af376671" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.reflect.AnyValManifest.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a944aa589f1a1ff7ebb3bdaf69afd7c0476e89c0" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.reflect.ClassTag.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24ac770283840cab0d64284949c3d78cae344d73" translate="yes" xml:space="preserve">
          <source>def unapply(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.reflect.Manifest.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f3d4d26d8073dca2f2725d116190bdf26023680" translate="yes" xml:space="preserve">
          <source>def unapplySeq(&lt;span name=&quot;c&quot;&gt;c: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../index#List%5B+A%5D=List%5BA%5D&quot; id=&quot;scala.List&quot; name=&quot;scala.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="978caf083017fe637e47f0d45b0e5823ca21dc2b" translate="yes" xml:space="preserve">
          <source>def unapplySeq(&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;regex%24%24match&quot; id=&quot;scala.util.matching.Regex.Match&quot; name=&quot;scala.util.matching.Regex.Match&quot;&gt;Match&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../index#List%5B+A%5D=List%5BA%5D&quot; id=&quot;scala.List&quot; name=&quot;scala.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22a94ea2fbae5eb0e57be6f218e1cb10442af23d" translate="yes" xml:space="preserve">
          <source>def unapplySeq(&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;regex%24%24match&quot; id=&quot;scala.util.matching.Regex.Match&quot; name=&quot;scala.util.matching.Regex.Match&quot;&gt;Match&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../index#Seq%5B+A%5D=Seq%5BA%5D&quot; id=&quot;scala.Seq&quot; name=&quot;scala.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fedc6cef6ef2de9b82d3b365f458dd0bfe44bde" translate="yes" xml:space="preserve">
          <source>def unapplySeq(&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;index#Seq%5B+A%5D=Seq%5BA%5D&quot; id=&quot;scala.Seq&quot; name=&quot;scala.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9731835140af3a1d6af3a2d7fa414cc638f1a180" translate="yes" xml:space="preserve">
          <source>def unapplySeq(&lt;span name=&quot;s&quot;&gt;s: &lt;span name=&quot;java.lang.CharSequence&quot;&gt;CharSequence&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../index#List%5B+A%5D=List%5BA%5D&quot; id=&quot;scala.List&quot; name=&quot;scala.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1951a8655cdc41cdc40da5a7c8b4cdd7db71c3b" translate="yes" xml:space="preserve">
          <source>def unapplySeq(&lt;span name=&quot;seq&quot;&gt;seq: &lt;a href=&quot;index#Seq%5B+A%5D=Seq%5BA%5D&quot; id=&quot;scala.Seq&quot; name=&quot;scala.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.ElementWiseExtractor.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;index#Seq%5B+A%5D=Seq%5BA%5D&quot; id=&quot;scala.Seq&quot; name=&quot;scala.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.ElementWiseExtractor.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="542313823570746e34317bd3f39c1e9070f8b7fc" translate="yes" xml:space="preserve">
          <source>def unapplySeq[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.unapplySeq.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;array%24%24unapplyseqwrapper&quot; id=&quot;scala.Array.UnapplySeqWrapper&quot; name=&quot;scala.Array.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.Array.unapplySeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db852aae6def4881fd3fd627d660553ec3749ab" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;CC&quot;&gt;CC[&lt;span name=&quot;_&quot;&gt;_&lt;/span&gt;] &amp;lt;: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[_]&lt;/span&gt;, &lt;span name=&quot;C&quot;&gt;C &amp;lt;: &lt;a href=&quot;seqops&quot; id=&quot;scala.collection.SeqOps&quot; name=&quot;scala.collection.SeqOps&quot;&gt;SeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.+:.unapply.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.+:.unapply.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.+:.unapply.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;](&lt;span name=&quot;t&quot;&gt;t: &lt;span name=&quot;scala.collection.+:.unapply.C&quot;&gt;C&lt;/span&gt; with &lt;a href=&quot;seqops&quot; id=&quot;scala.collection.SeqOps&quot; name=&quot;scala.collection.SeqOps&quot;&gt;SeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.+:.unapply.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.+:.unapply.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.+:.unapply.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.+:.unapply.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.+:.unapply.C&quot;&gt;C&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b653e849966ac31f242559870df7284b231c407" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;CC&quot;&gt;CC[&lt;span name=&quot;_&quot;&gt;_&lt;/span&gt;] &amp;lt;: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[_]&lt;/span&gt;, &lt;span name=&quot;C&quot;&gt;C &amp;lt;: &lt;a href=&quot;seqops&quot; id=&quot;scala.collection.SeqOps&quot; name=&quot;scala.collection.SeqOps&quot;&gt;SeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.:+.unapply.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.:+.unapply.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.:+.unapply.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;](&lt;span name=&quot;t&quot;&gt;t: &lt;span name=&quot;scala.collection.:+.unapply.C&quot;&gt;C&lt;/span&gt; with &lt;a href=&quot;seqops&quot; id=&quot;scala.collection.SeqOps&quot; name=&quot;scala.collection.SeqOps&quot;&gt;SeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.:+.unapply.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.:+.unapply.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.:+.unapply.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.:+.unapply.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.:+.unapply.A&quot;&gt;A&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a36f42ce35174c252c382ee0f95091349f962a" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;index#LazyList%5B+A%5D=scala.collection.immutable.LazyList%5BA%5D&quot; id=&quot;scala.LazyList&quot; name=&quot;scala.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.#::.unapply.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.#::.unapply.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;index#LazyList%5B+A%5D=scala.collection.immutable.LazyList%5BA%5D&quot; id=&quot;scala.LazyList&quot; name=&quot;scala.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.#::.unapply.A&quot;&gt;A&lt;/span&gt;])]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3da6eff23e290fa9c2df5d0f15107d89f61dcf" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;index#Stream%5B+A%5D=scala.collection.immutable.Stream%5BA%5D&quot; id=&quot;scala.Stream&quot; name=&quot;scala.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.#::.unapply.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.#::.unapply.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;index#Stream%5B+A%5D=scala.collection.immutable.Stream%5BA%5D&quot; id=&quot;scala.Stream&quot; name=&quot;scala.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.#::.unapply.A&quot;&gt;A&lt;/span&gt;])]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7637905a0829842ac71a63fa935865008dd11cf3" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.#::.unapply.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.LazyList.#::.unapply.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.#::.unapply.A&quot;&gt;A&lt;/span&gt;])]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb2f42e6888baa39ffd141f42125c0a3194b453f" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.#::.unapply.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Stream.#::.unapply.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.#::.unapply.A&quot;&gt;A&lt;/span&gt;])]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b85c0d36b281293f0df87dc9ac7f906ce78ac287" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.cons.unapply.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.LazyList.cons.unapply.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.cons.unapply.A&quot;&gt;A&lt;/span&gt;])]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f06ee51f30b94ba6b989f75b758f4cb075c81a3b" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.cons.unapply.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Stream.cons.unapply.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.cons.unapply.A&quot;&gt;A&lt;/span&gt;])]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="312b0635c79c37e8be3f0bad810881f5a654f986" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;T&quot;&gt;T &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;sr&quot;&gt;sr: &lt;a href=&quot;softreference&quot; id=&quot;scala.ref.SoftReference&quot; name=&quot;scala.ref.SoftReference&quot;&gt;SoftReference&lt;/a&gt;[&lt;span name=&quot;scala.ref.SoftReference.unapply.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.ref.SoftReference.unapply.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd496fecdcf663fa5074ed3ef8731434ffca67c" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;T&quot;&gt;T &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;wr&quot;&gt;wr: &lt;a href=&quot;weakreference&quot; id=&quot;scala.ref.WeakReference&quot; name=&quot;scala.ref.WeakReference&quot;&gt;WeakReference&lt;/a&gt;[&lt;span name=&quot;scala.ref.WeakReference.unapply.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.ref.WeakReference.unapply.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a839af0016b350c3392d44db61e964c7de5384ba" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;ctag&quot;&gt;ctag: &lt;a href=&quot;classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.reflect.ClassTag.unapply.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../predef%24#Class%5BT%5D=Class%5BT%5D&quot; id=&quot;scala.Predef.Class&quot; name=&quot;scala.Predef.Class&quot;&gt;Class&lt;/a&gt;[_]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c64e4210746056575724f77cb76c525b00354c98" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;T22&quot;&gt;T22&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;product22&quot; id=&quot;scala.Product22&quot; name=&quot;scala.Product22&quot;&gt;Product22&lt;/a&gt;[&lt;span name=&quot;scala.Product22.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T22&quot;&gt;T22&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;product22&quot; id=&quot;scala.Product22&quot; name=&quot;scala.Product22&quot;&gt;Product22&lt;/a&gt;[&lt;span name=&quot;scala.Product22.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Product22.unapply.T22&quot;&gt;T22&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f774f79fb618598982d149b03a412afa56991a" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;T21&quot;&gt;T21&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;product21&quot; id=&quot;scala.Product21&quot; name=&quot;scala.Product21&quot;&gt;Product21&lt;/a&gt;[&lt;span name=&quot;scala.Product21.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T21&quot;&gt;T21&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;product21&quot; id=&quot;scala.Product21&quot; name=&quot;scala.Product21&quot;&gt;Product21&lt;/a&gt;[&lt;span name=&quot;scala.Product21.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Product21.unapply.T21&quot;&gt;T21&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51d89c1bdc9160a072f2014459bc75ca1d2bf2cf" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;T20&quot;&gt;T20&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;product20&quot; id=&quot;scala.Product20&quot; name=&quot;scala.Product20&quot;&gt;Product20&lt;/a&gt;[&lt;span name=&quot;scala.Product20.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T20&quot;&gt;T20&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;product20&quot; id=&quot;scala.Product20&quot; name=&quot;scala.Product20&quot;&gt;Product20&lt;/a&gt;[&lt;span name=&quot;scala.Product20.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Product20.unapply.T20&quot;&gt;T20&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="927bad8a4416c17783282d41448d956c1498eab4" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;T19&quot;&gt;T19&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;product19&quot; id=&quot;scala.Product19&quot; name=&quot;scala.Product19&quot;&gt;Product19&lt;/a&gt;[&lt;span name=&quot;scala.Product19.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T19&quot;&gt;T19&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;product19&quot; id=&quot;scala.Product19&quot; name=&quot;scala.Product19&quot;&gt;Product19&lt;/a&gt;[&lt;span name=&quot;scala.Product19.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Product19.unapply.T19&quot;&gt;T19&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90b800a87c5c150c817a6d4810a26181a87ddf60" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;T18&quot;&gt;T18&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;product18&quot; id=&quot;scala.Product18&quot; name=&quot;scala.Product18&quot;&gt;Product18&lt;/a&gt;[&lt;span name=&quot;scala.Product18.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T18&quot;&gt;T18&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;product18&quot; id=&quot;scala.Product18&quot; name=&quot;scala.Product18&quot;&gt;Product18&lt;/a&gt;[&lt;span name=&quot;scala.Product18.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product18.unapply.T18&quot;&gt;T18&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe818c45a9ac024b3bc92fe7ca5a6a468478d022" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;T17&quot;&gt;T17&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;product17&quot; id=&quot;scala.Product17&quot; name=&quot;scala.Product17&quot;&gt;Product17&lt;/a&gt;[&lt;span name=&quot;scala.Product17.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product17.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product17.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product17.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product17.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product17.unapply.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product17.unapply.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product17.unapply.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product17.unapply.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product17.unapply.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product17.unapply.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product17.unapply.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product17.unapply.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product17.unapply.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product17.unapply.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product17.unapply.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product17.unapply.T17&quot;&gt;T17&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;product17&quot; id=&quot;scala.Product17&quot; name=&quot;scala.Product17&quot;&gt;Product17&lt;/a&gt;[&lt;span name=&quot;scala.Product17.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product17.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product17.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product17.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product17.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product17.unapply.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product17.unapply.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product17.unapply.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product17.unapply.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product17.unapply.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product17.unapply.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product17.unapply.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product17.unapply.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product17.unapply.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product17.unapply.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product17.unapply.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product17.unapply.T17&quot;&gt;T17&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e879b00178d31373539202d9d46b70370b3af2" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;T16&quot;&gt;T16&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;product16&quot; id=&quot;scala.Product16&quot; name=&quot;scala.Product16&quot;&gt;Product16&lt;/a&gt;[&lt;span name=&quot;scala.Product16.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product16.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product16.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product16.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product16.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product16.unapply.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product16.unapply.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product16.unapply.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product16.unapply.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product16.unapply.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product16.unapply.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product16.unapply.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product16.unapply.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product16.unapply.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product16.unapply.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product16.unapply.T16&quot;&gt;T16&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;product16&quot; id=&quot;scala.Product16&quot; name=&quot;scala.Product16&quot;&gt;Product16&lt;/a&gt;[&lt;span name=&quot;scala.Product16.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product16.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product16.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product16.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product16.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product16.unapply.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product16.unapply.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product16.unapply.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product16.unapply.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product16.unapply.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product16.unapply.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product16.unapply.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product16.unapply.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product16.unapply.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product16.unapply.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product16.unapply.T16&quot;&gt;T16&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05764553f78206201412a6c4face4cac15ea7dd5" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;T15&quot;&gt;T15&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;product15&quot; id=&quot;scala.Product15&quot; name=&quot;scala.Product15&quot;&gt;Product15&lt;/a&gt;[&lt;span name=&quot;scala.Product15.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product15.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product15.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product15.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product15.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product15.unapply.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product15.unapply.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product15.unapply.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product15.unapply.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product15.unapply.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product15.unapply.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product15.unapply.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product15.unapply.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product15.unapply.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product15.unapply.T15&quot;&gt;T15&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;product15&quot; id=&quot;scala.Product15&quot; name=&quot;scala.Product15&quot;&gt;Product15&lt;/a&gt;[&lt;span name=&quot;scala.Product15.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product15.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product15.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product15.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product15.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product15.unapply.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product15.unapply.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product15.unapply.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product15.unapply.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product15.unapply.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product15.unapply.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product15.unapply.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product15.unapply.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product15.unapply.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product15.unapply.T15&quot;&gt;T15&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ffc024eea97e5a24f97e14429573bdf9a26c80" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;T14&quot;&gt;T14&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;product14&quot; id=&quot;scala.Product14&quot; name=&quot;scala.Product14&quot;&gt;Product14&lt;/a&gt;[&lt;span name=&quot;scala.Product14.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product14.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product14.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product14.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product14.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product14.unapply.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product14.unapply.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product14.unapply.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product14.unapply.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product14.unapply.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product14.unapply.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product14.unapply.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product14.unapply.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product14.unapply.T14&quot;&gt;T14&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;product14&quot; id=&quot;scala.Product14&quot; name=&quot;scala.Product14&quot;&gt;Product14&lt;/a&gt;[&lt;span name=&quot;scala.Product14.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product14.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product14.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product14.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product14.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product14.unapply.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product14.unapply.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product14.unapply.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product14.unapply.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product14.unapply.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product14.unapply.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product14.unapply.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product14.unapply.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product14.unapply.T14&quot;&gt;T14&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38fae87c9a2a4ee4228ace023279ce3965d9371e" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;T13&quot;&gt;T13&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;product13&quot; id=&quot;scala.Product13&quot; name=&quot;scala.Product13&quot;&gt;Product13&lt;/a&gt;[&lt;span name=&quot;scala.Product13.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product13.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product13.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product13.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product13.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product13.unapply.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product13.unapply.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product13.unapply.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product13.unapply.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product13.unapply.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product13.unapply.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product13.unapply.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product13.unapply.T13&quot;&gt;T13&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;product13&quot; id=&quot;scala.Product13&quot; name=&quot;scala.Product13&quot;&gt;Product13&lt;/a&gt;[&lt;span name=&quot;scala.Product13.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product13.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product13.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product13.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product13.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product13.unapply.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product13.unapply.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product13.unapply.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product13.unapply.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product13.unapply.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product13.unapply.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product13.unapply.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product13.unapply.T13&quot;&gt;T13&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ecccf6e41d08db6a8fdc7d1e88e755f15fa2333" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;T12&quot;&gt;T12&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;product12&quot; id=&quot;scala.Product12&quot; name=&quot;scala.Product12&quot;&gt;Product12&lt;/a&gt;[&lt;span name=&quot;scala.Product12.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product12.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product12.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product12.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product12.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product12.unapply.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product12.unapply.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product12.unapply.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product12.unapply.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product12.unapply.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product12.unapply.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product12.unapply.T12&quot;&gt;T12&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;product12&quot; id=&quot;scala.Product12&quot; name=&quot;scala.Product12&quot;&gt;Product12&lt;/a&gt;[&lt;span name=&quot;scala.Product12.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product12.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product12.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product12.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product12.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product12.unapply.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product12.unapply.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product12.unapply.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product12.unapply.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product12.unapply.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product12.unapply.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product12.unapply.T12&quot;&gt;T12&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed1012521ddb5427290d5bba9010747ffbd83a45" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;T11&quot;&gt;T11&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;product11&quot; id=&quot;scala.Product11&quot; name=&quot;scala.Product11&quot;&gt;Product11&lt;/a&gt;[&lt;span name=&quot;scala.Product11.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product11.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product11.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product11.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product11.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product11.unapply.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product11.unapply.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product11.unapply.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product11.unapply.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product11.unapply.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product11.unapply.T11&quot;&gt;T11&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;product11&quot; id=&quot;scala.Product11&quot; name=&quot;scala.Product11&quot;&gt;Product11&lt;/a&gt;[&lt;span name=&quot;scala.Product11.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product11.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product11.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product11.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product11.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product11.unapply.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product11.unapply.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product11.unapply.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product11.unapply.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product11.unapply.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product11.unapply.T11&quot;&gt;T11&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24721a752e9c610806f01b4db7fec34e4f59cfcc" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;T10&quot;&gt;T10&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;product10&quot; id=&quot;scala.Product10&quot; name=&quot;scala.Product10&quot;&gt;Product10&lt;/a&gt;[&lt;span name=&quot;scala.Product10.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product10.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product10.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product10.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product10.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product10.unapply.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product10.unapply.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product10.unapply.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product10.unapply.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product10.unapply.T10&quot;&gt;T10&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;product10&quot; id=&quot;scala.Product10&quot; name=&quot;scala.Product10&quot;&gt;Product10&lt;/a&gt;[&lt;span name=&quot;scala.Product10.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product10.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product10.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product10.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product10.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product10.unapply.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product10.unapply.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product10.unapply.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product10.unapply.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product10.unapply.T10&quot;&gt;T10&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1035604bf1eab43359eaee8b86fc7719116cbf6" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;T9&quot;&gt;T9&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;product9&quot; id=&quot;scala.Product9&quot; name=&quot;scala.Product9&quot;&gt;Product9&lt;/a&gt;[&lt;span name=&quot;scala.Product9.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product9.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product9.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product9.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product9.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product9.unapply.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product9.unapply.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product9.unapply.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product9.unapply.T9&quot;&gt;T9&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;product9&quot; id=&quot;scala.Product9&quot; name=&quot;scala.Product9&quot;&gt;Product9&lt;/a&gt;[&lt;span name=&quot;scala.Product9.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product9.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product9.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product9.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product9.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product9.unapply.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product9.unapply.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product9.unapply.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product9.unapply.T9&quot;&gt;T9&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="867032dd2d91a55c4434d3df2742fde7d626bbab" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;T8&quot;&gt;T8&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;product8&quot; id=&quot;scala.Product8&quot; name=&quot;scala.Product8&quot;&gt;Product8&lt;/a&gt;[&lt;span name=&quot;scala.Product8.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product8.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product8.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product8.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product8.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product8.unapply.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product8.unapply.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product8.unapply.T8&quot;&gt;T8&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;product8&quot; id=&quot;scala.Product8&quot; name=&quot;scala.Product8&quot;&gt;Product8&lt;/a&gt;[&lt;span name=&quot;scala.Product8.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product8.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product8.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product8.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product8.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product8.unapply.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product8.unapply.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product8.unapply.T8&quot;&gt;T8&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf3606749fb2b2e04ccf167d67369cdd0c38ba1" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;T7&quot;&gt;T7&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;product7&quot; id=&quot;scala.Product7&quot; name=&quot;scala.Product7&quot;&gt;Product7&lt;/a&gt;[&lt;span name=&quot;scala.Product7.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product7.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product7.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product7.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product7.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product7.unapply.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product7.unapply.T7&quot;&gt;T7&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;product7&quot; id=&quot;scala.Product7&quot; name=&quot;scala.Product7&quot;&gt;Product7&lt;/a&gt;[&lt;span name=&quot;scala.Product7.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product7.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product7.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product7.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product7.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product7.unapply.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product7.unapply.T7&quot;&gt;T7&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e61f1b8b74e2e77cb887dc478ac25ed81c792788" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;T6&quot;&gt;T6&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;product6&quot; id=&quot;scala.Product6&quot; name=&quot;scala.Product6&quot;&gt;Product6&lt;/a&gt;[&lt;span name=&quot;scala.Product6.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product6.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product6.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product6.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product6.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product6.unapply.T6&quot;&gt;T6&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;product6&quot; id=&quot;scala.Product6&quot; name=&quot;scala.Product6&quot;&gt;Product6&lt;/a&gt;[&lt;span name=&quot;scala.Product6.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product6.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product6.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product6.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product6.unapply.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product6.unapply.T6&quot;&gt;T6&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4cb94b16763e676ee8e5d81c5ceeebd410968b" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;T5&quot;&gt;T5&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;product5&quot; id=&quot;scala.Product5&quot; name=&quot;scala.Product5&quot;&gt;Product5&lt;/a&gt;[&lt;span name=&quot;scala.Product5.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product5.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product5.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product5.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product5.unapply.T5&quot;&gt;T5&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;product5&quot; id=&quot;scala.Product5&quot; name=&quot;scala.Product5&quot;&gt;Product5&lt;/a&gt;[&lt;span name=&quot;scala.Product5.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product5.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product5.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product5.unapply.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product5.unapply.T5&quot;&gt;T5&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7507f45737272d80795273da6e515316a488c46" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;product4&quot; id=&quot;scala.Product4&quot; name=&quot;scala.Product4&quot;&gt;Product4&lt;/a&gt;[&lt;span name=&quot;scala.Product4.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product4.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product4.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product4.unapply.T4&quot;&gt;T4&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;product4&quot; id=&quot;scala.Product4&quot; name=&quot;scala.Product4&quot;&gt;Product4&lt;/a&gt;[&lt;span name=&quot;scala.Product4.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product4.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product4.unapply.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product4.unapply.T4&quot;&gt;T4&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4769202657fd790a7d84cfdd94c7ad75a4b8251e" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;product3&quot; id=&quot;scala.Product3&quot; name=&quot;scala.Product3&quot;&gt;Product3&lt;/a&gt;[&lt;span name=&quot;scala.Product3.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product3.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product3.unapply.T3&quot;&gt;T3&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;product3&quot; id=&quot;scala.Product3&quot; name=&quot;scala.Product3&quot;&gt;Product3&lt;/a&gt;[&lt;span name=&quot;scala.Product3.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product3.unapply.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product3.unapply.T3&quot;&gt;T3&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36a4b0d50007143d7d055cfb4b53a45e9257bb9f" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;product2&quot; id=&quot;scala.Product2&quot; name=&quot;scala.Product2&quot;&gt;Product2&lt;/a&gt;[&lt;span name=&quot;scala.Product2.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product2.unapply.T2&quot;&gt;T2&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;product2&quot; id=&quot;scala.Product2&quot; name=&quot;scala.Product2&quot;&gt;Product2&lt;/a&gt;[&lt;span name=&quot;scala.Product2.unapply.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product2.unapply.T2&quot;&gt;T2&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce0222d03ba689f81775db9d6142788e75951a8b" translate="yes" xml:space="preserve">
          <source>def unapply[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;product1&quot; id=&quot;scala.Product1&quot; name=&quot;scala.Product1&quot;&gt;Product1&lt;/a&gt;[&lt;span name=&quot;scala.Product1.unapply.T1&quot;&gt;T1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;product1&quot; id=&quot;scala.Product1&quot; name=&quot;scala.Product1&quot;&gt;Product1&lt;/a&gt;[&lt;span name=&quot;scala.Product1.unapply.T1&quot;&gt;T1&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="566c78b00ec5620443e64b624bd4a8dba113ab0a" translate="yes" xml:space="preserve">
          <source>def unary_!: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f3083661bf7738815f81894c94268b7c8a9d1e1" translate="yes" xml:space="preserve">
          <source>def unary_+: &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f953dbf0aa99a3c8e41c69a9c7463c408364d0f" translate="yes" xml:space="preserve">
          <source>def unary_+: &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87b465c1626593460da7efa0f6ac537a9cd06498" translate="yes" xml:space="preserve">
          <source>def unary_+: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44d5c3a68cb91f9646f13a24d07050a90fff8c8f" translate="yes" xml:space="preserve">
          <source>def unary_+: &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d35729eba4d07fca7a4bd3c891796b77a6ad5e0" translate="yes" xml:space="preserve">
          <source>def unary_-: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c6dd12bd6c10d1eff8df37efaebfb85f6edd06" translate="yes" xml:space="preserve">
          <source>def unary_-: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="738ccfeb355c692c6b842b2aba724c0516695b9f" translate="yes" xml:space="preserve">
          <source>def unary_-: &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="711958665c826e6e1703a959bb9134164bd27f66" translate="yes" xml:space="preserve">
          <source>def unary_-: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c2747edd6b46bb9911813689f5c0b0f5c4fa006" translate="yes" xml:space="preserve">
          <source>def unary_-: &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92318aa83102246748161a47a39a85fe478acef0" translate="yes" xml:space="preserve">
          <source>def unary_-: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ebb4dec6918e0c74ee959622f0a1f1568e9db9c" translate="yes" xml:space="preserve">
          <source>def unary_-: &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fb23a0e13ec6cc802d482062a8ac7507e63b4f6" translate="yes" xml:space="preserve">
          <source>def unary_-: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db56f645aedcea6320b601cfb6a3f0ac82e43e9" translate="yes" xml:space="preserve">
          <source>def unary_-: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94db4364c2bafa548bd67c2c3af7e430ab35dee5" translate="yes" xml:space="preserve">
          <source>def unary_-: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d2f719630bfddb04f2fa7203838c92189938e7e" translate="yes" xml:space="preserve">
          <source>def unary_~: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0efc23be7a96b320e92aa3e73f13e55bc35ec586" translate="yes" xml:space="preserve">
          <source>def unary_~: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c916863046b1e6acbd62073ab4d3384f44b7bb92" translate="yes" xml:space="preserve">
          <source>def unary_~: &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="335cd337bbc8a32f064dcc0a78d2bd73b6027da1" translate="yes" xml:space="preserve">
          <source>def unbox(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29583daf4fd8ab443001e23c47b58741228b5d78" translate="yes" xml:space="preserve">
          <source>def unbox(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab9be2b76e9ea8c71495c5da1c44b027f09f125b" translate="yes" xml:space="preserve">
          <source>def unbox(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a8ab5aadadc5ed91768605f0fcd3602b715968" translate="yes" xml:space="preserve">
          <source>def unbox(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e8d6592abd87dd0f7f26692c36c8f747d388a5c" translate="yes" xml:space="preserve">
          <source>def unbox(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed0f1fc8e662d0b23d764a4d092120f0501854e4" translate="yes" xml:space="preserve">
          <source>def unbox(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e24da0066cd625574dfe9d7003f29c3bfc235f7" translate="yes" xml:space="preserve">
          <source>def unbox(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39de57eaccdfa51342f24e2043e662d04796df79" translate="yes" xml:space="preserve">
          <source>def unbox(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e61f52ef33b14408b95f90203701029445592b" translate="yes" xml:space="preserve">
          <source>def unbox(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16a3a70566bf627a23275c6e6d6bca672a842ab8" translate="yes" xml:space="preserve">
          <source>def unboxedDoubleAdder: &lt;span name=&quot;java.util.function.ObjDoubleConsumer&quot;&gt;ObjDoubleConsumer&lt;/span&gt;[&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1e87a42f2a3919ef2bbcfc477c05c0c23638528" translate="yes" xml:space="preserve">
          <source>def unboxedIntAdder: &lt;span name=&quot;java.util.function.ObjIntConsumer&quot;&gt;ObjIntConsumer&lt;/span&gt;[&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae5341dddb989ba739265f52209eb8a36b32e4a" translate="yes" xml:space="preserve">
          <source>def unboxedLongAdder: &lt;span name=&quot;java.util.function.ObjLongConsumer&quot;&gt;ObjLongConsumer&lt;/span&gt;[&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3337d0ac18b0285df543f110c23be846dea9271" translate="yes" xml:space="preserve">
          <source>def unconstrained: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53843c4b96c309f25dbfc201b72f5c984744e125" translate="yes" xml:space="preserve">
          <source>def unconstrained: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb3c4a0f992853358cdcee5d2a2411392656398" translate="yes" xml:space="preserve">
          <source>def uncurried[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Function.uncurried.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function.uncurried.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function.uncurried.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function.uncurried.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function.uncurried.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function.uncurried.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="303c6eed62980c799d4e38610b7e88216ecec7b1" translate="yes" xml:space="preserve">
          <source>def uncurried[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Function.uncurried.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function.uncurried.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function.uncurried.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function.uncurried.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function.uncurried.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function.uncurried.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function.uncurried.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function.uncurried.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a2d297edf65a49d2c43bfaa8509a68f5fc8019" translate="yes" xml:space="preserve">
          <source>def uncurried[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Function.uncurried.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function.uncurried.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function.uncurried.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function.uncurried.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function.uncurried.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function.uncurried.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function.uncurried.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function.uncurried.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function.uncurried.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function.uncurried.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d086399b2f1d60179d2c0bf76aaba85b77f671cf" translate="yes" xml:space="preserve">
          <source>def uncurried[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Function.uncurried.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function.uncurried.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function.uncurried.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function.uncurried.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function.uncurried.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function.uncurried.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function.uncurried.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function.uncurried.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function.uncurried.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function.uncurried.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function.uncurried.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function.uncurried.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e69218c6e865139aa34adf6209d08bced9902aa" translate="yes" xml:space="preserve">
          <source>def underlying(): &lt;span name=&quot;java.math.BigDecimal&quot;&gt;java.math.BigDecimal&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="084b85c0306678ef7ba82fa43793d1be74588a86" translate="yes" xml:space="preserve">
          <source>def underlying(): &lt;span name=&quot;java.math.BigInteger&quot;&gt;BigInteger&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76eb980f9c2b4e77ba4fa5bd79deab170b55afe8" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;, &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.jdk.Accumulator.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.jdk.Accumulator.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.jdk.Accumulator.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Accumulator.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;canAccumulate&quot;&gt;canAccumulate: &lt;a href=&quot;accumulator%24%24accumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot;&gt;AccumulatorFactoryShape&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Accumulator.unfold.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.jdk.Accumulator.unfold.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="419da903e76669f5d1e0ec489efb638c21f99e80" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c628237abf5aec2bf6d416e1e8f42169ba3e468c" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd51ea37f409012a0344b2b3f7f4a877920efb5f" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab31ef13fb445289161da5ec994ad2e3b815cdb5" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861a4e04d9546fe8e04c2f7f1c9f1b306b1153d6" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62891b30b9c83ee08a7f3b9584c8301b9372271c" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa2ffa2d6e2f7f5dd8fc9e0a90c3b3c6316a012" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6363288f20965c8e2dfd5459bfefdcdcf58fd12e" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5bd34d7cbd0193efdb63be2797452ab908ce758" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e9ed1fd79d47c37bc5214632ab8a42b28cd63b9" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9780277408ceae96540678acd622ab03d8d87f" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb645886c29b360a80659148107bd93ee6b1b0e" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedIterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adac3467c87aad022036e309738b052e5a5fbad8" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac4884021bf39cbdaf398c7f0548fe678ea286f" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a50246cd64285aa08ff938ccab846e96c70675" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="502599593929ae3967ba7bd3fa724fef7e773b9f" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2303b5de555b6751f9ab00cc37d1c9b2fd6b71f" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c2d5b473994a81def720d1620d162d1be5b7e7e" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5238907407206816adcf182d7bbbeedb233cd2f6" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.Ev&quot;&gt;Ev&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a95825f63e7d432b8e1216e24613c2616fc647" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Ev&quot;&gt;Ev&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.EvidenceIterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c065c4e2b106535484e5283429038ce82a6eb1c4" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3468afad4d0838ec8a73398eec9a0e76c4da545" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee8f2bd7da0e1376037ffb32804dcd5675a66458" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71c7b5310117b2a7aaa302675f69991164793645" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8544eefcff0e09bb561ccb83d89314389e7d33d" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bce4b011675f1426af0ba54d9d013ec77daaae00" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="136d283ae9a3da4b1838ac0cd57670761cb93df8" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4284c0a4a3ebffb71b870bf389dd65946a51250" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="301d23da6ca2b693ceb92d78218f1be1aa676b71" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41486b5e434171de193223075a5279e5a1928448" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f50b8fc03ed55399469bc767983fa4bb586e81" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d62c8b86a193974059d536df1ab96d2841f3199a" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad518e6f90655f35fa3eafee41ae4ed57d441fef" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b7c23ba1054e063acd179cc81cd43ad7c42211" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="207fffbc81b93b35c1a435ed05fc2a2a91c2aa28" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44506364b798e06884b9f53264cc86bab1128297" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9474a8ea927af0d6eb7cf616f7c6198dcee35f4e" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2ad50dd00a45fa24fef5c41eb7519b5bec13ecb" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50c2a16e6cc01e8bea9730eb9ca15825e592b2eb" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04aa3d6b4aa481dfa9f53712ba9f550e848f8706" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd4587965694146670f2428eea6bdf01e3a7293f" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c31ab184b0fb9a45ad48d70927853026b4d37dc2" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f88bbca2c069d9a640b35ca882a7d6cf8022a3e7" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c32d6455640e45f63c2ae73e39c74ebb3d48362a" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74ac7a5801091a2736713739422d81b73cd47847" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc3e8b845d0891299b9f907daeb9f0fc0afe2de4" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeabafdd2429751a903b191054d17f174061e63a" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bebbac015b29369c88000d13e5299c23f6d2b985" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dbd3741b7de6ab5dc8974f3dafed17108b10a75" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb5a763b1c6a3ca390776420aa3dbfe2495162b" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb552d7b30794bee5bbace01bcf9b0f99c14d88" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba2d173affe5302faec06a84ceed2b05eda8d8c1" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b46a79e467e77a8abddfe50fb1f764aa5d333a76" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6759b10535d5bba0c35c2c1438fc5682cc2842e" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ede1e7f03360bbf50bf6c403fd444fcb963a120" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10332900206aef283e9c4c23e34c0ba76b1bbb14" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ac4cb3c57b78f2e3da9a423cb34c9d7955d434" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.Iterator.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.Iterator.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.Iterator.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterator.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b797cd6f8ba2a8250508de84ff2e2eb6fd44326d" translate="yes" xml:space="preserve">
          <source>def unfold[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.collection.immutable.LazyList.unfold.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.LazyList.unfold.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.LazyList.unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LazyList.unfold.S&quot;&gt;S&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2805c48d3656f3d1c7e070994a54bca0c15f9953" translate="yes" xml:space="preserve">
          <source>def unifiedPrimitiveEquals(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad25ab9fa5f7329e4995f247a035827b5268f18b" translate="yes" xml:space="preserve">
          <source>def unifiedPrimitiveHashcode: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32cdda6d3fe4a55a1b990ced67dc04e514820baf" translate="yes" xml:space="preserve">
          <source>def unionWith[&lt;span name=&quot;S&quot;&gt;S &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.unionWith.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.unionWith.S&quot;&gt;S&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.unionWith.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.IntMap.unionWith.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.unionWith.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c914a4dd886968235f2ad9338a650ab1862fd1e7" translate="yes" xml:space="preserve">
          <source>def unionWith[&lt;span name=&quot;S&quot;&gt;S &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.unionWith.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.unionWith.S&quot;&gt;S&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.unionWith.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.LongMap.unionWith.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.unionWith.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="090d1c570a3b94f39e2037def36f94331ffb0552" translate="yes" xml:space="preserve">
          <source>def universal[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;]: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.universal.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25247eb2116742dd5008373aa038008641d3e8c8" translate="yes" xml:space="preserve">
          <source>def unless[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;a&quot;&gt;a: =&amp;gt; &lt;span name=&quot;scala.Option.unless.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.unless.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b735db84608f9294ec3fdcbb453f49bb63714e33" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cfa0839c384c1a8f342004da873da16b36bcd23" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb5c1b57423a4355b6044a397380cbc99b0305e3" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c36c7d612a8df4eac89e57c881ba7e2030fe57" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efa3f39c12041a2ccfb5f610452d9f45d5898729" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a86b96e578cbe869e10588f13020517656fed66" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2885cc046da64947bf1ffa58ff251281b1d37110" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b798b01062d96b12675f093395c98fec54c464ef" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2eb44b310c1c036c0f37fd399f9821a0c949b8d" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f56adc07849d843ccbe2550b3c5483b304905d6" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c8d71296e610563ecf885d77ab0153f327c4aeb" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50876b7b5638d2cf54e915eb95a2ed638d12a8a8" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e8c342ce5248dab98ca6b0be97b6cf87b62f450" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd302520e12a475cb13db0455f251da54430366b" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c82abbb993d44bb1f16be095eaaff22a58c7d4e8" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="263597969b510804b370f0a5d82c7fef5301773b" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c7b8fb6ffbf9d801bb2cb6abea4541dcabb7ff" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b8c2516a8d0569dec0480b4da1896b2eef52e5d" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cef951db6cbd229accbcee54f303d6199128051" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efe16190e26d27fd5468fc7ea0d0ee17e7a28d8e" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b6ecee56b6d8fbb8bd3f2ca389f4c201e74d175" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a909a75e91e0690912206ff6717e10a7f50af49" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fad8b79f99c669ad42b0f5ef381884d6cd9c769d" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
